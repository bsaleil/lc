GNU gdb (GDB) 8.0
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-pc-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from gsc...done.
Starting program: /usr/local/Gambit/bin/gsc -i float.o1 utils.o1 ctx.o1 types.o1 core.o1 native.o1 mem.o1 codegen.o1 ast.o1 expand.o1 analyses.o1 main.o1 /home/bapt/Bureau/these/lazy-comp/unit-tests/benchmarks/mazefun.scm --verbose-jit --disable-inlined-call
------------------------------------------------------------------------
ac4008				bits 64
ac4008 e9790f0000		jmp	rtlib_skip
ac400d			heap_limit_handler:
ac400d 4883ed58			sub	rbp,byte 88
ac4011 48894d50			mov	[rbp+80],rcx
ac4015 48895d48			mov	[rbp+72],rbx
ac4019 4c897d40			mov	[rbp+64],r15
ac401d 48897538			mov	[rbp+56],rsi
ac4021 48897d30			mov	[rbp+48],rdi
ac4025 4c895528			mov	[rbp+40],r10
ac4029 4c895d20			mov	[rbp+32],r11
ac402d 4c896518			mov	[rbp+24],r12
ac4031 4c896d10			mov	[rbp+16],r13
ac4035 4c897508			mov	[rbp+8],r14
ac4039 48895500			mov	[rbp],rdx
ac403d 4c890c25b074fc00		mov	[+16544944],r9
ac4045 4889ef			mov	rdi,rbp
ac4048 55			push	rbp
ac4049 51			push	rcx
ac404a 4150			push	r8
ac404c 4151			push	r9
ac404e 4881ec80000000		sub	rsp,128
ac4055 f20f110424		movsd	[rsp],xmm0
ac405a f20f114c2408		movsd	[rsp+8],xmm1
ac4060 f20f11542410		movsd	[rsp+16],xmm2
ac4066 f20f115c2418		movsd	[rsp+24],xmm3
ac406c f20f11642420		movsd	[rsp+32],xmm4
ac4072 f20f116c2428		movsd	[rsp+40],xmm5
ac4078 f20f11742430		movsd	[rsp+48],xmm6
ac407e f20f117c2438		movsd	[rsp+56],xmm7
ac4084 f2440f11442440		movsd	[rsp+64],xmm8
ac408b f2440f114c2448		movsd	[rsp+72],xmm9
ac4092 f2440f11542450		movsd	[rsp+80],xmm10
ac4099 f2440f115c2458		movsd	[rsp+88],xmm11
ac40a0 f2440f11642460		movsd	[rsp+96],xmm12
ac40a7 f2440f116c2468		movsd	[rsp+104],xmm13
ac40ae f2440f11742470		movsd	[rsp+112],xmm14
ac40b5 f2440f117c2478		movsd	[rsp+120],xmm15
ac40bc 4889e0			mov	rax,rsp
ac40bf 4883e4f0			and	rsp,byte -16
ac40c3 4883ec08			sub	rsp,byte 8
ac40c7 50			push	rax
ac40c8 48b84ea349f1ff7f
ac40d0 0000			mov	rax,140737241523022
ac40d2 ffd0			call	rax
ac40d4 5c			pop	rsp
ac40d5 f20f100424		movsd	xmm0,[rsp]
ac40da f20f104c2408		movsd	xmm1,[rsp+8]
ac40e0 f20f10542410		movsd	xmm2,[rsp+16]
ac40e6 f20f105c2418		movsd	xmm3,[rsp+24]
ac40ec f20f10642420		movsd	xmm4,[rsp+32]
ac40f2 f20f106c2428		movsd	xmm5,[rsp+40]
ac40f8 f20f10742430		movsd	xmm6,[rsp+48]
ac40fe f20f107c2438		movsd	xmm7,[rsp+56]
ac4104 f2440f10442440		movsd	xmm8,[rsp+64]
ac410b f2440f104c2448		movsd	xmm9,[rsp+72]
ac4112 f2440f10542450		movsd	xmm10,[rsp+80]
ac4119 f2440f105c2458		movsd	xmm11,[rsp+88]
ac4120 f2440f10642460		movsd	xmm12,[rsp+96]
ac4127 f2440f106c2468		movsd	xmm13,[rsp+104]
ac412e f2440f10742470		movsd	xmm14,[rsp+112]
ac4135 f2440f107c2478		movsd	xmm15,[rsp+120]
ac413c 4881c480000000		add	rsp,128
ac4143 4159			pop	r9
ac4145 4158			pop	r8
ac4147 59			pop	rcx
ac4148 488b0c25a874fc00		mov	rcx,[+16544936]
ac4150 49b90870fff7ff7f
ac4158 0000			mov	r9,140737354100744
ac415a 49894928			mov	[r9+40],rcx
ac415e 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4166 5d			pop	rbp
ac4167 488b5500			mov	rdx,[rbp]
ac416b 4c8b7508			mov	r14,[rbp+8]
ac416f 4c8b6d10			mov	r13,[rbp+16]
ac4173 4c8b6518			mov	r12,[rbp+24]
ac4177 4c8b5d20			mov	r11,[rbp+32]
ac417b 4c8b5528			mov	r10,[rbp+40]
ac417f 488b7d30			mov	rdi,[rbp+48]
ac4183 488b7538			mov	rsi,[rbp+56]
ac4187 4c8b7d40			mov	r15,[rbp+64]
ac418b 488b5d48			mov	rbx,[rbp+72]
ac418f 488b4d50			mov	rcx,[rbp+80]
ac4193 4883c558			add	rbp,byte 88
ac4197 c3			ret
ac4198			alloc_still_handler:
ac4198 4883ed58			sub	rbp,byte 88
ac419c 48894d50			mov	[rbp+80],rcx
ac41a0 48895d48			mov	[rbp+72],rbx
ac41a4 4c897d40			mov	[rbp+64],r15
ac41a8 48897538			mov	[rbp+56],rsi
ac41ac 48897d30			mov	[rbp+48],rdi
ac41b0 4c895528			mov	[rbp+40],r10
ac41b4 4c895d20			mov	[rbp+32],r11
ac41b8 4c896518			mov	[rbp+24],r12
ac41bc 4c896d10			mov	[rbp+16],r13
ac41c0 4c897508			mov	[rbp+8],r14
ac41c4 48895500			mov	[rbp],rdx
ac41c8 4c890c25b074fc00		mov	[+16544944],r9
ac41d0 4889ef			mov	rdi,rbp
ac41d3 55			push	rbp
ac41d4 51			push	rcx
ac41d5 4150			push	r8
ac41d7 4151			push	r9
ac41d9 4881ec80000000		sub	rsp,128
ac41e0 f20f110424		movsd	[rsp],xmm0
ac41e5 f20f114c2408		movsd	[rsp+8],xmm1
ac41eb f20f11542410		movsd	[rsp+16],xmm2
ac41f1 f20f115c2418		movsd	[rsp+24],xmm3
ac41f7 f20f11642420		movsd	[rsp+32],xmm4
ac41fd f20f116c2428		movsd	[rsp+40],xmm5
ac4203 f20f11742430		movsd	[rsp+48],xmm6
ac4209 f20f117c2438		movsd	[rsp+56],xmm7
ac420f f2440f11442440		movsd	[rsp+64],xmm8
ac4216 f2440f114c2448		movsd	[rsp+72],xmm9
ac421d f2440f11542450		movsd	[rsp+80],xmm10
ac4224 f2440f115c2458		movsd	[rsp+88],xmm11
ac422b f2440f11642460		movsd	[rsp+96],xmm12
ac4232 f2440f116c2468		movsd	[rsp+104],xmm13
ac4239 f2440f11742470		movsd	[rsp+112],xmm14
ac4240 f2440f117c2478		movsd	[rsp+120],xmm15
ac4247 488bbc24a8000000		mov	rdi,[rsp+168]
ac424f 488b7560			mov	rsi,[rbp+96]
ac4253 4889e0			mov	rax,rsp
ac4256 4883e4f0			and	rsp,byte -16
ac425a 4883ec08			sub	rsp,byte 8
ac425e 50			push	rax
ac425f 48b81aa349f1ff7f
ac4267 0000			mov	rax,140737241522970
ac4269 ffd0			call	rax
ac426b 5c			pop	rsp
ac426c f20f100424		movsd	xmm0,[rsp]
ac4271 f20f104c2408		movsd	xmm1,[rsp+8]
ac4277 f20f10542410		movsd	xmm2,[rsp+16]
ac427d f20f105c2418		movsd	xmm3,[rsp+24]
ac4283 f20f10642420		movsd	xmm4,[rsp+32]
ac4289 f20f106c2428		movsd	xmm5,[rsp+40]
ac428f f20f10742430		movsd	xmm6,[rsp+48]
ac4295 f20f107c2438		movsd	xmm7,[rsp+56]
ac429b f2440f10442440		movsd	xmm8,[rsp+64]
ac42a2 f2440f104c2448		movsd	xmm9,[rsp+72]
ac42a9 f2440f10542450		movsd	xmm10,[rsp+80]
ac42b0 f2440f105c2458		movsd	xmm11,[rsp+88]
ac42b7 f2440f10642460		movsd	xmm12,[rsp+96]
ac42be f2440f106c2468		movsd	xmm13,[rsp+104]
ac42c5 f2440f10742470		movsd	xmm14,[rsp+112]
ac42cc f2440f107c2478		movsd	xmm15,[rsp+120]
ac42d3 4881c480000000		add	rsp,128
ac42da 4159			pop	r9
ac42dc 4158			pop	r8
ac42de 59			pop	rcx
ac42df 488b0c25a874fc00		mov	rcx,[+16544936]
ac42e7 49b90870fff7ff7f
ac42ef 0000			mov	r9,140737354100744
ac42f1 49894928			mov	[r9+40],rcx
ac42f5 4c8b0c25b074fc00		mov	r9,[+16544944]
ac42fd 5d			pop	rbp
ac42fe 488b5500			mov	rdx,[rbp]
ac4302 4c8b7508			mov	r14,[rbp+8]
ac4306 4c8b6d10			mov	r13,[rbp+16]
ac430a 4c8b6518			mov	r12,[rbp+24]
ac430e 4c8b5d20			mov	r11,[rbp+32]
ac4312 4c8b5528			mov	r10,[rbp+40]
ac4316 488b7d30			mov	rdi,[rbp+48]
ac431a 488b7538			mov	rsi,[rbp+56]
ac431e 4c8b7d40			mov	r15,[rbp+64]
ac4322 488b5d48			mov	rbx,[rbp+72]
ac4326 488b4d50			mov	rcx,[rbp+80]
ac432a 4883c558			add	rbp,byte 88
ac432e c3			ret
ac432f			gambit_call_handler:
ac432f 4883ed58			sub	rbp,byte 88
ac4333 48894d50			mov	[rbp+80],rcx
ac4337 48895d48			mov	[rbp+72],rbx
ac433b 4c897d40			mov	[rbp+64],r15
ac433f 48897538			mov	[rbp+56],rsi
ac4343 48897d30			mov	[rbp+48],rdi
ac4347 4c895528			mov	[rbp+40],r10
ac434b 4c895d20			mov	[rbp+32],r11
ac434f 4c896518			mov	[rbp+24],r12
ac4353 4c896d10			mov	[rbp+16],r13
ac4357 4c897508			mov	[rbp+8],r14
ac435b 48895500			mov	[rbp],rdx
ac435f 4c890c25b074fc00		mov	[+16544944],r9
ac4367 4889ef			mov	rdi,rbp
ac436a 4889e6			mov	rsi,rsp
ac436d 55			push	rbp
ac436e 51			push	rcx
ac436f 4150			push	r8
ac4371 4151			push	r9
ac4373 4881ec80000000		sub	rsp,128
ac437a f20f110424		movsd	[rsp],xmm0
ac437f f20f114c2408		movsd	[rsp+8],xmm1
ac4385 f20f11542410		movsd	[rsp+16],xmm2
ac438b f20f115c2418		movsd	[rsp+24],xmm3
ac4391 f20f11642420		movsd	[rsp+32],xmm4
ac4397 f20f116c2428		movsd	[rsp+40],xmm5
ac439d f20f11742430		movsd	[rsp+48],xmm6
ac43a3 f20f117c2438		movsd	[rsp+56],xmm7
ac43a9 f2440f11442440		movsd	[rsp+64],xmm8
ac43b0 f2440f114c2448		movsd	[rsp+72],xmm9
ac43b7 f2440f11542450		movsd	[rsp+80],xmm10
ac43be f2440f115c2458		movsd	[rsp+88],xmm11
ac43c5 f2440f11642460		movsd	[rsp+96],xmm12
ac43cc f2440f116c2468		movsd	[rsp+104],xmm13
ac43d3 f2440f11742470		movsd	[rsp+112],xmm14
ac43da f2440f117c2478		movsd	[rsp+120],xmm15
ac43e1 4889e0			mov	rax,rsp
ac43e4 4883e4f0			and	rsp,byte -16
ac43e8 4883ec08			sub	rsp,byte 8
ac43ec 50			push	rax
ac43ed e8d023e601		call	gambit_call
ac43f2 5c			pop	rsp
ac43f3 f20f100424		movsd	xmm0,[rsp]
ac43f8 f20f104c2408		movsd	xmm1,[rsp+8]
ac43fe f20f10542410		movsd	xmm2,[rsp+16]
ac4404 f20f105c2418		movsd	xmm3,[rsp+24]
ac440a f20f10642420		movsd	xmm4,[rsp+32]
ac4410 f20f106c2428		movsd	xmm5,[rsp+40]
ac4416 f20f10742430		movsd	xmm6,[rsp+48]
ac441c f20f107c2438		movsd	xmm7,[rsp+56]
ac4422 f2440f10442440		movsd	xmm8,[rsp+64]
ac4429 f2440f104c2448		movsd	xmm9,[rsp+72]
ac4430 f2440f10542450		movsd	xmm10,[rsp+80]
ac4437 f2440f105c2458		movsd	xmm11,[rsp+88]
ac443e f2440f10642460		movsd	xmm12,[rsp+96]
ac4445 f2440f106c2468		movsd	xmm13,[rsp+104]
ac444c f2440f10742470		movsd	xmm14,[rsp+112]
ac4453 f2440f107c2478		movsd	xmm15,[rsp+120]
ac445a 4881c480000000		add	rsp,128
ac4461 4159			pop	r9
ac4463 4158			pop	r8
ac4465 59			pop	rcx
ac4466 488b0c25a874fc00		mov	rcx,[+16544936]
ac446e 49b90870fff7ff7f
ac4476 0000			mov	r9,140737354100744
ac4478 49894928			mov	[r9+40],rcx
ac447c 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4484 5d			pop	rbp
ac4485 488b5500			mov	rdx,[rbp]
ac4489 4c8b7508			mov	r14,[rbp+8]
ac448d 4c8b6d10			mov	r13,[rbp+16]
ac4491 4c8b6518			mov	r12,[rbp+24]
ac4495 4c8b5d20			mov	r11,[rbp+32]
ac4499 4c8b5528			mov	r10,[rbp+40]
ac449d 488b7d30			mov	rdi,[rbp+48]
ac44a1 488b7538			mov	rsi,[rbp+56]
ac44a5 4c8b7d40			mov	r15,[rbp+64]
ac44a9 488b5d48			mov	rbx,[rbp+72]
ac44ad 488b4d50			mov	rcx,[rbp+80]
ac44b1 4883c558			add	rbp,byte 88
ac44b5 c3			ret
ac44b6			do_callback_handler:
ac44b6 4883ed58			sub	rbp,byte 88
ac44ba 48894d50			mov	[rbp+80],rcx
ac44be 48895d48			mov	[rbp+72],rbx
ac44c2 4c897d40			mov	[rbp+64],r15
ac44c6 48897538			mov	[rbp+56],rsi
ac44ca 48897d30			mov	[rbp+48],rdi
ac44ce 4c895528			mov	[rbp+40],r10
ac44d2 4c895d20			mov	[rbp+32],r11
ac44d6 4c896518			mov	[rbp+24],r12
ac44da 4c896d10			mov	[rbp+16],r13
ac44de 4c897508			mov	[rbp+8],r14
ac44e2 48895500			mov	[rbp],rdx
ac44e6 4c890c25b074fc00		mov	[+16544944],r9
ac44ee 4889ef			mov	rdi,rbp
ac44f1 4889e6			mov	rsi,rsp
ac44f4 55			push	rbp
ac44f5 51			push	rcx
ac44f6 4150			push	r8
ac44f8 4151			push	r9
ac44fa 4881ec80000000		sub	rsp,128
ac4501 f20f110424		movsd	[rsp],xmm0
ac4506 f20f114c2408		movsd	[rsp+8],xmm1
ac450c f20f11542410		movsd	[rsp+16],xmm2
ac4512 f20f115c2418		movsd	[rsp+24],xmm3
ac4518 f20f11642420		movsd	[rsp+32],xmm4
ac451e f20f116c2428		movsd	[rsp+40],xmm5
ac4524 f20f11742430		movsd	[rsp+48],xmm6
ac452a f20f117c2438		movsd	[rsp+56],xmm7
ac4530 f2440f11442440		movsd	[rsp+64],xmm8
ac4537 f2440f114c2448		movsd	[rsp+72],xmm9
ac453e f2440f11542450		movsd	[rsp+80],xmm10
ac4545 f2440f115c2458		movsd	[rsp+88],xmm11
ac454c f2440f11642460		movsd	[rsp+96],xmm12
ac4553 f2440f116c2468		movsd	[rsp+104],xmm13
ac455a f2440f11742470		movsd	[rsp+112],xmm14
ac4561 f2440f117c2478		movsd	[rsp+120],xmm15
ac4568 4889e0			mov	rax,rsp
ac456b 4883e4f0			and	rsp,byte -16
ac456f 4883ec08			sub	rsp,byte 8
ac4573 50			push	rax
ac4574 e8ce23e601		call	do_callback
ac4579 5c			pop	rsp
ac457a f20f100424		movsd	xmm0,[rsp]
ac457f f20f104c2408		movsd	xmm1,[rsp+8]
ac4585 f20f10542410		movsd	xmm2,[rsp+16]
ac458b f20f105c2418		movsd	xmm3,[rsp+24]
ac4591 f20f10642420		movsd	xmm4,[rsp+32]
ac4597 f20f106c2428		movsd	xmm5,[rsp+40]
ac459d f20f10742430		movsd	xmm6,[rsp+48]
ac45a3 f20f107c2438		movsd	xmm7,[rsp+56]
ac45a9 f2440f10442440		movsd	xmm8,[rsp+64]
ac45b0 f2440f104c2448		movsd	xmm9,[rsp+72]
ac45b7 f2440f10542450		movsd	xmm10,[rsp+80]
ac45be f2440f105c2458		movsd	xmm11,[rsp+88]
ac45c5 f2440f10642460		movsd	xmm12,[rsp+96]
ac45cc f2440f106c2468		movsd	xmm13,[rsp+104]
ac45d3 f2440f10742470		movsd	xmm14,[rsp+112]
ac45da f2440f107c2478		movsd	xmm15,[rsp+120]
ac45e1 4881c480000000		add	rsp,128
ac45e8 4159			pop	r9
ac45ea 4158			pop	r8
ac45ec 59			pop	rcx
ac45ed 488b0c25a874fc00		mov	rcx,[+16544936]
ac45f5 49b90870fff7ff7f
ac45fd 0000			mov	r9,140737354100744
ac45ff 49894928			mov	[r9+40],rcx
ac4603 4c8b0c25b074fc00		mov	r9,[+16544944]
ac460b 5d			pop	rbp
ac460c 488b5500			mov	rdx,[rbp]
ac4610 4c8b7508			mov	r14,[rbp+8]
ac4614 4c8b6d10			mov	r13,[rbp+16]
ac4618 4c8b6518			mov	r12,[rbp+24]
ac461c 4c8b5d20			mov	r11,[rbp+32]
ac4620 4c8b5528			mov	r10,[rbp+40]
ac4624 488b7d30			mov	rdi,[rbp+48]
ac4628 488b7538			mov	rsi,[rbp+56]
ac462c 4c8b7d40			mov	r15,[rbp+64]
ac4630 488b5d48			mov	rbx,[rbp+72]
ac4634 488b4d50			mov	rcx,[rbp+80]
ac4638 4883c558			add	rbp,byte 88
ac463c c3			ret
ac463d			do_callback_fn_handler:
ac463d 4883ed58			sub	rbp,byte 88
ac4641 48894d50			mov	[rbp+80],rcx
ac4645 48895d48			mov	[rbp+72],rbx
ac4649 4c897d40			mov	[rbp+64],r15
ac464d 48897538			mov	[rbp+56],rsi
ac4651 48897d30			mov	[rbp+48],rdi
ac4655 4c895528			mov	[rbp+40],r10
ac4659 4c895d20			mov	[rbp+32],r11
ac465d 4c896518			mov	[rbp+24],r12
ac4661 4c896d10			mov	[rbp+16],r13
ac4665 4c897508			mov	[rbp+8],r14
ac4669 48895500			mov	[rbp],rdx
ac466d 4c890c25b074fc00		mov	[+16544944],r9
ac4675 4889ef			mov	rdi,rbp
ac4678 4889e6			mov	rsi,rsp
ac467b 55			push	rbp
ac467c 51			push	rcx
ac467d 4150			push	r8
ac467f 4151			push	r9
ac4681 4881ec80000000		sub	rsp,128
ac4688 f20f110424		movsd	[rsp],xmm0
ac468d f20f114c2408		movsd	[rsp+8],xmm1
ac4693 f20f11542410		movsd	[rsp+16],xmm2
ac4699 f20f115c2418		movsd	[rsp+24],xmm3
ac469f f20f11642420		movsd	[rsp+32],xmm4
ac46a5 f20f116c2428		movsd	[rsp+40],xmm5
ac46ab f20f11742430		movsd	[rsp+48],xmm6
ac46b1 f20f117c2438		movsd	[rsp+56],xmm7
ac46b7 f2440f11442440		movsd	[rsp+64],xmm8
ac46be f2440f114c2448		movsd	[rsp+72],xmm9
ac46c5 f2440f11542450		movsd	[rsp+80],xmm10
ac46cc f2440f115c2458		movsd	[rsp+88],xmm11
ac46d3 f2440f11642460		movsd	[rsp+96],xmm12
ac46da f2440f116c2468		movsd	[rsp+104],xmm13
ac46e1 f2440f11742470		movsd	[rsp+112],xmm14
ac46e8 f2440f117c2478		movsd	[rsp+120],xmm15
ac46ef 4889e0			mov	rax,rsp
ac46f2 4883e4f0			and	rsp,byte -16
ac46f6 4883ec08			sub	rsp,byte 8
ac46fa 50			push	rax
ac46fb e8cc23e601		call	do_callback_fn
ac4700 5c			pop	rsp
ac4701 f20f100424		movsd	xmm0,[rsp]
ac4706 f20f104c2408		movsd	xmm1,[rsp+8]
ac470c f20f10542410		movsd	xmm2,[rsp+16]
ac4712 f20f105c2418		movsd	xmm3,[rsp+24]
ac4718 f20f10642420		movsd	xmm4,[rsp+32]
ac471e f20f106c2428		movsd	xmm5,[rsp+40]
ac4724 f20f10742430		movsd	xmm6,[rsp+48]
ac472a f20f107c2438		movsd	xmm7,[rsp+56]
ac4730 f2440f10442440		movsd	xmm8,[rsp+64]
ac4737 f2440f104c2448		movsd	xmm9,[rsp+72]
ac473e f2440f10542450		movsd	xmm10,[rsp+80]
ac4745 f2440f105c2458		movsd	xmm11,[rsp+88]
ac474c f2440f10642460		movsd	xmm12,[rsp+96]
ac4753 f2440f106c2468		movsd	xmm13,[rsp+104]
ac475a f2440f10742470		movsd	xmm14,[rsp+112]
ac4761 f2440f107c2478		movsd	xmm15,[rsp+120]
ac4768 4881c480000000		add	rsp,128
ac476f 4159			pop	r9
ac4771 4158			pop	r8
ac4773 59			pop	rcx
ac4774 488b0c25a874fc00		mov	rcx,[+16544936]
ac477c 49b90870fff7ff7f
ac4784 0000			mov	r9,140737354100744
ac4786 49894928			mov	[r9+40],rcx
ac478a 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4792 5d			pop	rbp
ac4793 488b5500			mov	rdx,[rbp]
ac4797 4c8b7508			mov	r14,[rbp+8]
ac479b 4c8b6d10			mov	r13,[rbp+16]
ac479f 4c8b6518			mov	r12,[rbp+24]
ac47a3 4c8b5d20			mov	r11,[rbp+32]
ac47a7 4c8b5528			mov	r10,[rbp+40]
ac47ab 488b7d30			mov	rdi,[rbp+48]
ac47af 488b7538			mov	rsi,[rbp+56]
ac47b3 4c8b7d40			mov	r15,[rbp+64]
ac47b7 488b5d48			mov	rbx,[rbp+72]
ac47bb 488b4d50			mov	rcx,[rbp+80]
ac47bf 4883c558			add	rbp,byte 88
ac47c3 c3			ret
ac47c4			do_callback_cont_handler:
ac47c4 4883ed58			sub	rbp,byte 88
ac47c8 48894d50			mov	[rbp+80],rcx
ac47cc 48895d48			mov	[rbp+72],rbx
ac47d0 4c897d40			mov	[rbp+64],r15
ac47d4 48897538			mov	[rbp+56],rsi
ac47d8 48897d30			mov	[rbp+48],rdi
ac47dc 4c895528			mov	[rbp+40],r10
ac47e0 4c895d20			mov	[rbp+32],r11
ac47e4 4c896518			mov	[rbp+24],r12
ac47e8 4c896d10			mov	[rbp+16],r13
ac47ec 4c897508			mov	[rbp+8],r14
ac47f0 48895500			mov	[rbp],rdx
ac47f4 4c890c25b074fc00		mov	[+16544944],r9
ac47fc 4889ef			mov	rdi,rbp
ac47ff 4889e6			mov	rsi,rsp
ac4802 55			push	rbp
ac4803 51			push	rcx
ac4804 4150			push	r8
ac4806 4151			push	r9
ac4808 4881ec80000000		sub	rsp,128
ac480f f20f110424		movsd	[rsp],xmm0
ac4814 f20f114c2408		movsd	[rsp+8],xmm1
ac481a f20f11542410		movsd	[rsp+16],xmm2
ac4820 f20f115c2418		movsd	[rsp+24],xmm3
ac4826 f20f11642420		movsd	[rsp+32],xmm4
ac482c f20f116c2428		movsd	[rsp+40],xmm5
ac4832 f20f11742430		movsd	[rsp+48],xmm6
ac4838 f20f117c2438		movsd	[rsp+56],xmm7
ac483e f2440f11442440		movsd	[rsp+64],xmm8
ac4845 f2440f114c2448		movsd	[rsp+72],xmm9
ac484c f2440f11542450		movsd	[rsp+80],xmm10
ac4853 f2440f115c2458		movsd	[rsp+88],xmm11
ac485a f2440f11642460		movsd	[rsp+96],xmm12
ac4861 f2440f116c2468		movsd	[rsp+104],xmm13
ac4868 f2440f11742470		movsd	[rsp+112],xmm14
ac486f f2440f117c2478		movsd	[rsp+120],xmm15
ac4876 4889e0			mov	rax,rsp
ac4879 4883e4f0			and	rsp,byte -16
ac487d 4883ec08			sub	rsp,byte 8
ac4881 50			push	rax
ac4882 e8ca23e601		call	do_callback_cont
ac4887 5c			pop	rsp
ac4888 f20f100424		movsd	xmm0,[rsp]
ac488d f20f104c2408		movsd	xmm1,[rsp+8]
ac4893 f20f10542410		movsd	xmm2,[rsp+16]
ac4899 f20f105c2418		movsd	xmm3,[rsp+24]
ac489f f20f10642420		movsd	xmm4,[rsp+32]
ac48a5 f20f106c2428		movsd	xmm5,[rsp+40]
ac48ab f20f10742430		movsd	xmm6,[rsp+48]
ac48b1 f20f107c2438		movsd	xmm7,[rsp+56]
ac48b7 f2440f10442440		movsd	xmm8,[rsp+64]
ac48be f2440f104c2448		movsd	xmm9,[rsp+72]
ac48c5 f2440f10542450		movsd	xmm10,[rsp+80]
ac48cc f2440f105c2458		movsd	xmm11,[rsp+88]
ac48d3 f2440f10642460		movsd	xmm12,[rsp+96]
ac48da f2440f106c2468		movsd	xmm13,[rsp+104]
ac48e1 f2440f10742470		movsd	xmm14,[rsp+112]
ac48e8 f2440f107c2478		movsd	xmm15,[rsp+120]
ac48ef 4881c480000000		add	rsp,128
ac48f6 4159			pop	r9
ac48f8 4158			pop	r8
ac48fa 59			pop	rcx
ac48fb 488b0c25a874fc00		mov	rcx,[+16544936]
ac4903 49b90870fff7ff7f
ac490b 0000			mov	r9,140737354100744
ac490d 49894928			mov	[r9+40],rcx
ac4911 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4919 5d			pop	rbp
ac491a 488b5500			mov	rdx,[rbp]
ac491e 4c8b7508			mov	r14,[rbp+8]
ac4922 4c8b6d10			mov	r13,[rbp+16]
ac4926 4c8b6518			mov	r12,[rbp+24]
ac492a 4c8b5d20			mov	r11,[rbp+32]
ac492e 4c8b5528			mov	r10,[rbp+40]
ac4932 488b7d30			mov	rdi,[rbp+48]
ac4936 488b7538			mov	rsi,[rbp+56]
ac493a 4c8b7d40			mov	r15,[rbp+64]
ac493e 488b5d48			mov	rbx,[rbp+72]
ac4942 488b4d50			mov	rcx,[rbp+80]
ac4946 4883c558			add	rbp,byte 88
ac494a c3			ret
ac494b			rt_error_handler:
ac494b 4883ed58			sub	rbp,byte 88
ac494f 48894d50			mov	[rbp+80],rcx
ac4953 48895d48			mov	[rbp+72],rbx
ac4957 4c897d40			mov	[rbp+64],r15
ac495b 48897538			mov	[rbp+56],rsi
ac495f 48897d30			mov	[rbp+48],rdi
ac4963 4c895528			mov	[rbp+40],r10
ac4967 4c895d20			mov	[rbp+32],r11
ac496b 4c896518			mov	[rbp+24],r12
ac496f 4c896d10			mov	[rbp+16],r13
ac4973 4c897508			mov	[rbp+8],r14
ac4977 48895500			mov	[rbp],rdx
ac497b 4c890c25b074fc00		mov	[+16544944],r9
ac4983 4889ef			mov	rdi,rbp
ac4986 4889e6			mov	rsi,rsp
ac4989 55			push	rbp
ac498a 51			push	rcx
ac498b 4150			push	r8
ac498d 4151			push	r9
ac498f 4881ec80000000		sub	rsp,128
ac4996 f20f110424		movsd	[rsp],xmm0
ac499b f20f114c2408		movsd	[rsp+8],xmm1
ac49a1 f20f11542410		movsd	[rsp+16],xmm2
ac49a7 f20f115c2418		movsd	[rsp+24],xmm3
ac49ad f20f11642420		movsd	[rsp+32],xmm4
ac49b3 f20f116c2428		movsd	[rsp+40],xmm5
ac49b9 f20f11742430		movsd	[rsp+48],xmm6
ac49bf f20f117c2438		movsd	[rsp+56],xmm7
ac49c5 f2440f11442440		movsd	[rsp+64],xmm8
ac49cc f2440f114c2448		movsd	[rsp+72],xmm9
ac49d3 f2440f11542450		movsd	[rsp+80],xmm10
ac49da f2440f115c2458		movsd	[rsp+88],xmm11
ac49e1 f2440f11642460		movsd	[rsp+96],xmm12
ac49e8 f2440f116c2468		movsd	[rsp+104],xmm13
ac49ef f2440f11742470		movsd	[rsp+112],xmm14
ac49f6 f2440f117c2478		movsd	[rsp+120],xmm15
ac49fd 4889e0			mov	rax,rsp
ac4a00 4883e4f0			and	rsp,byte -16
ac4a04 4883ec08			sub	rsp,byte 8
ac4a08 50			push	rax
ac4a09 e83c18e601		call	rt_error
ac4a0e 5c			pop	rsp
ac4a0f f20f100424		movsd	xmm0,[rsp]
ac4a14 f20f104c2408		movsd	xmm1,[rsp+8]
ac4a1a f20f10542410		movsd	xmm2,[rsp+16]
ac4a20 f20f105c2418		movsd	xmm3,[rsp+24]
ac4a26 f20f10642420		movsd	xmm4,[rsp+32]
ac4a2c f20f106c2428		movsd	xmm5,[rsp+40]
ac4a32 f20f10742430		movsd	xmm6,[rsp+48]
ac4a38 f20f107c2438		movsd	xmm7,[rsp+56]
ac4a3e f2440f10442440		movsd	xmm8,[rsp+64]
ac4a45 f2440f104c2448		movsd	xmm9,[rsp+72]
ac4a4c f2440f10542450		movsd	xmm10,[rsp+80]
ac4a53 f2440f105c2458		movsd	xmm11,[rsp+88]
ac4a5a f2440f10642460		movsd	xmm12,[rsp+96]
ac4a61 f2440f106c2468		movsd	xmm13,[rsp+104]
ac4a68 f2440f10742470		movsd	xmm14,[rsp+112]
ac4a6f f2440f107c2478		movsd	xmm15,[rsp+120]
ac4a76 4881c480000000		add	rsp,128
ac4a7d 4159			pop	r9
ac4a7f 4158			pop	r8
ac4a81 59			pop	rcx
ac4a82 488b0c25a874fc00		mov	rcx,[+16544936]
ac4a8a 49b90870fff7ff7f
ac4a92 0000			mov	r9,140737354100744
ac4a94 49894928			mov	[r9+40],rcx
ac4a98 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4aa0 5d			pop	rbp
ac4aa1 488b5500			mov	rdx,[rbp]
ac4aa5 4c8b7508			mov	r14,[rbp+8]
ac4aa9 4c8b6d10			mov	r13,[rbp+16]
ac4aad 4c8b6518			mov	r12,[rbp+24]
ac4ab1 4c8b5d20			mov	r11,[rbp+32]
ac4ab5 4c8b5528			mov	r10,[rbp+40]
ac4ab9 488b7d30			mov	rdi,[rbp+48]
ac4abd 488b7538			mov	rsi,[rbp+56]
ac4ac1 4c8b7d40			mov	r15,[rbp+64]
ac4ac5 488b5d48			mov	rbx,[rbp+72]
ac4ac9 488b4d50			mov	rcx,[rbp+80]
ac4acd 4883c558			add	rbp,byte 88
ac4ad1 c3			ret
ac4ad2			print_msg_handler:
ac4ad2 4883ed58			sub	rbp,byte 88
ac4ad6 48894d50			mov	[rbp+80],rcx
ac4ada 48895d48			mov	[rbp+72],rbx
ac4ade 4c897d40			mov	[rbp+64],r15
ac4ae2 48897538			mov	[rbp+56],rsi
ac4ae6 48897d30			mov	[rbp+48],rdi
ac4aea 4c895528			mov	[rbp+40],r10
ac4aee 4c895d20			mov	[rbp+32],r11
ac4af2 4c896518			mov	[rbp+24],r12
ac4af6 4c896d10			mov	[rbp+16],r13
ac4afa 4c897508			mov	[rbp+8],r14
ac4afe 48895500			mov	[rbp],rdx
ac4b02 4c890c25b074fc00		mov	[+16544944],r9
ac4b0a 4889ef			mov	rdi,rbp
ac4b0d 4889e6			mov	rsi,rsp
ac4b10 55			push	rbp
ac4b11 51			push	rcx
ac4b12 4150			push	r8
ac4b14 4151			push	r9
ac4b16 4881ec80000000		sub	rsp,128
ac4b1d f20f110424		movsd	[rsp],xmm0
ac4b22 f20f114c2408		movsd	[rsp+8],xmm1
ac4b28 f20f11542410		movsd	[rsp+16],xmm2
ac4b2e f20f115c2418		movsd	[rsp+24],xmm3
ac4b34 f20f11642420		movsd	[rsp+32],xmm4
ac4b3a f20f116c2428		movsd	[rsp+40],xmm5
ac4b40 f20f11742430		movsd	[rsp+48],xmm6
ac4b46 f20f117c2438		movsd	[rsp+56],xmm7
ac4b4c f2440f11442440		movsd	[rsp+64],xmm8
ac4b53 f2440f114c2448		movsd	[rsp+72],xmm9
ac4b5a f2440f11542450		movsd	[rsp+80],xmm10
ac4b61 f2440f115c2458		movsd	[rsp+88],xmm11
ac4b68 f2440f11642460		movsd	[rsp+96],xmm12
ac4b6f f2440f116c2468		movsd	[rsp+104],xmm13
ac4b76 f2440f11742470		movsd	[rsp+112],xmm14
ac4b7d f2440f117c2478		movsd	[rsp+120],xmm15
ac4b84 4889e0			mov	rax,rsp
ac4b87 4883e4f0			and	rsp,byte -16
ac4b8b 4883ec08			sub	rsp,byte 8
ac4b8f 50			push	rax
ac4b90 e87519e601		call	print-msg
ac4b95 5c			pop	rsp
ac4b96 f20f100424		movsd	xmm0,[rsp]
ac4b9b f20f104c2408		movsd	xmm1,[rsp+8]
ac4ba1 f20f10542410		movsd	xmm2,[rsp+16]
ac4ba7 f20f105c2418		movsd	xmm3,[rsp+24]
ac4bad f20f10642420		movsd	xmm4,[rsp+32]
ac4bb3 f20f106c2428		movsd	xmm5,[rsp+40]
ac4bb9 f20f10742430		movsd	xmm6,[rsp+48]
ac4bbf f20f107c2438		movsd	xmm7,[rsp+56]
ac4bc5 f2440f10442440		movsd	xmm8,[rsp+64]
ac4bcc f2440f104c2448		movsd	xmm9,[rsp+72]
ac4bd3 f2440f10542450		movsd	xmm10,[rsp+80]
ac4bda f2440f105c2458		movsd	xmm11,[rsp+88]
ac4be1 f2440f10642460		movsd	xmm12,[rsp+96]
ac4be8 f2440f106c2468		movsd	xmm13,[rsp+104]
ac4bef f2440f10742470		movsd	xmm14,[rsp+112]
ac4bf6 f2440f107c2478		movsd	xmm15,[rsp+120]
ac4bfd 4881c480000000		add	rsp,128
ac4c04 4159			pop	r9
ac4c06 4158			pop	r8
ac4c08 59			pop	rcx
ac4c09 488b0c25a874fc00		mov	rcx,[+16544936]
ac4c11 49b90870fff7ff7f
ac4c19 0000			mov	r9,140737354100744
ac4c1b 49894928			mov	[r9+40],rcx
ac4c1f 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4c27 5d			pop	rbp
ac4c28 488b5500			mov	rdx,[rbp]
ac4c2c 4c8b7508			mov	r14,[rbp+8]
ac4c30 4c8b6d10			mov	r13,[rbp+16]
ac4c34 4c8b6518			mov	r12,[rbp+24]
ac4c38 4c8b5d20			mov	r11,[rbp+32]
ac4c3c 4c8b5528			mov	r10,[rbp+40]
ac4c40 488b7d30			mov	rdi,[rbp+48]
ac4c44 488b7538			mov	rsi,[rbp+56]
ac4c48 4c8b7d40			mov	r15,[rbp+64]
ac4c4c 488b5d48			mov	rbx,[rbp+72]
ac4c50 488b4d50			mov	rcx,[rbp+80]
ac4c54 4883c558			add	rbp,byte 88
ac4c58 c3			ret
ac4c59			print_msg_val_handler:
ac4c59 4883ed58			sub	rbp,byte 88
ac4c5d 48894d50			mov	[rbp+80],rcx
ac4c61 48895d48			mov	[rbp+72],rbx
ac4c65 4c897d40			mov	[rbp+64],r15
ac4c69 48897538			mov	[rbp+56],rsi
ac4c6d 48897d30			mov	[rbp+48],rdi
ac4c71 4c895528			mov	[rbp+40],r10
ac4c75 4c895d20			mov	[rbp+32],r11
ac4c79 4c896518			mov	[rbp+24],r12
ac4c7d 4c896d10			mov	[rbp+16],r13
ac4c81 4c897508			mov	[rbp+8],r14
ac4c85 48895500			mov	[rbp],rdx
ac4c89 4c890c25b074fc00		mov	[+16544944],r9
ac4c91 4889ef			mov	rdi,rbp
ac4c94 4889e6			mov	rsi,rsp
ac4c97 55			push	rbp
ac4c98 51			push	rcx
ac4c99 4150			push	r8
ac4c9b 4151			push	r9
ac4c9d 4881ec80000000		sub	rsp,128
ac4ca4 f20f110424		movsd	[rsp],xmm0
ac4ca9 f20f114c2408		movsd	[rsp+8],xmm1
ac4caf f20f11542410		movsd	[rsp+16],xmm2
ac4cb5 f20f115c2418		movsd	[rsp+24],xmm3
ac4cbb f20f11642420		movsd	[rsp+32],xmm4
ac4cc1 f20f116c2428		movsd	[rsp+40],xmm5
ac4cc7 f20f11742430		movsd	[rsp+48],xmm6
ac4ccd f20f117c2438		movsd	[rsp+56],xmm7
ac4cd3 f2440f11442440		movsd	[rsp+64],xmm8
ac4cda f2440f114c2448		movsd	[rsp+72],xmm9
ac4ce1 f2440f11542450		movsd	[rsp+80],xmm10
ac4ce8 f2440f115c2458		movsd	[rsp+88],xmm11
ac4cef f2440f11642460		movsd	[rsp+96],xmm12
ac4cf6 f2440f116c2468		movsd	[rsp+104],xmm13
ac4cfd f2440f11742470		movsd	[rsp+112],xmm14
ac4d04 f2440f117c2478		movsd	[rsp+120],xmm15
ac4d0b 4889e0			mov	rax,rsp
ac4d0e 4883e4f0			and	rsp,byte -16
ac4d12 4883ec08			sub	rsp,byte 8
ac4d16 50			push	rax
ac4d17 e8b316e601		call	print-msg-val
ac4d1c 5c			pop	rsp
ac4d1d f20f100424		movsd	xmm0,[rsp]
ac4d22 f20f104c2408		movsd	xmm1,[rsp+8]
ac4d28 f20f10542410		movsd	xmm2,[rsp+16]
ac4d2e f20f105c2418		movsd	xmm3,[rsp+24]
ac4d34 f20f10642420		movsd	xmm4,[rsp+32]
ac4d3a f20f106c2428		movsd	xmm5,[rsp+40]
ac4d40 f20f10742430		movsd	xmm6,[rsp+48]
ac4d46 f20f107c2438		movsd	xmm7,[rsp+56]
ac4d4c f2440f10442440		movsd	xmm8,[rsp+64]
ac4d53 f2440f104c2448		movsd	xmm9,[rsp+72]
ac4d5a f2440f10542450		movsd	xmm10,[rsp+80]
ac4d61 f2440f105c2458		movsd	xmm11,[rsp+88]
ac4d68 f2440f10642460		movsd	xmm12,[rsp+96]
ac4d6f f2440f106c2468		movsd	xmm13,[rsp+104]
ac4d76 f2440f10742470		movsd	xmm14,[rsp+112]
ac4d7d f2440f107c2478		movsd	xmm15,[rsp+120]
ac4d84 4881c480000000		add	rsp,128
ac4d8b 4159			pop	r9
ac4d8d 4158			pop	r8
ac4d8f 59			pop	rcx
ac4d90 488b0c25a874fc00		mov	rcx,[+16544936]
ac4d98 49b90870fff7ff7f
ac4da0 0000			mov	r9,140737354100744
ac4da2 49894928			mov	[r9+40],rcx
ac4da6 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4dae 5d			pop	rbp
ac4daf 488b5500			mov	rdx,[rbp]
ac4db3 4c8b7508			mov	r14,[rbp+8]
ac4db7 4c8b6d10			mov	r13,[rbp+16]
ac4dbb 4c8b6518			mov	r12,[rbp+24]
ac4dbf 4c8b5d20			mov	r11,[rbp+32]
ac4dc3 4c8b5528			mov	r10,[rbp+40]
ac4dc7 488b7d30			mov	rdi,[rbp+48]
ac4dcb 488b7538			mov	rsi,[rbp+56]
ac4dcf 4c8b7d40			mov	r15,[rbp+64]
ac4dd3 488b5d48			mov	rbx,[rbp+72]
ac4dd7 488b4d50			mov	rcx,[rbp+80]
ac4ddb 4883c558			add	rbp,byte 88
ac4ddf c3			ret
ac4de0			repl:
ac4de0 4883ed58			sub	rbp,byte 88
ac4de4 48894d50			mov	[rbp+80],rcx
ac4de8 48895d48			mov	[rbp+72],rbx
ac4dec 4c897d40			mov	[rbp+64],r15
ac4df0 48897538			mov	[rbp+56],rsi
ac4df4 48897d30			mov	[rbp+48],rdi
ac4df8 4c895528			mov	[rbp+40],r10
ac4dfc 4c895d20			mov	[rbp+32],r11
ac4e00 4c896518			mov	[rbp+24],r12
ac4e04 4c896d10			mov	[rbp+16],r13
ac4e08 4c897508			mov	[rbp+8],r14
ac4e0c 48895500			mov	[rbp],rdx
ac4e10 4c890c25b074fc00		mov	[+16544944],r9
ac4e18 4889ef			mov	rdi,rbp
ac4e1b 4889e6			mov	rsi,rsp
ac4e1e 55			push	rbp
ac4e1f 51			push	rcx
ac4e20 4150			push	r8
ac4e22 4151			push	r9
ac4e24 4881ec80000000		sub	rsp,128
ac4e2b f20f110424		movsd	[rsp],xmm0
ac4e30 f20f114c2408		movsd	[rsp+8],xmm1
ac4e36 f20f11542410		movsd	[rsp+16],xmm2
ac4e3c f20f115c2418		movsd	[rsp+24],xmm3
ac4e42 f20f11642420		movsd	[rsp+32],xmm4
ac4e48 f20f116c2428		movsd	[rsp+40],xmm5
ac4e4e f20f11742430		movsd	[rsp+48],xmm6
ac4e54 f20f117c2438		movsd	[rsp+56],xmm7
ac4e5a f2440f11442440		movsd	[rsp+64],xmm8
ac4e61 f2440f114c2448		movsd	[rsp+72],xmm9
ac4e68 f2440f11542450		movsd	[rsp+80],xmm10
ac4e6f f2440f115c2458		movsd	[rsp+88],xmm11
ac4e76 f2440f11642460		movsd	[rsp+96],xmm12
ac4e7d f2440f116c2468		movsd	[rsp+104],xmm13
ac4e84 f2440f11742470		movsd	[rsp+112],xmm14
ac4e8b f2440f117c2478		movsd	[rsp+120],xmm15
ac4e92 4889e0			mov	rax,rsp
ac4e95 4883e4f0			and	rsp,byte -16
ac4e99 4883ec08			sub	rsp,byte 8
ac4e9d 50			push	rax
ac4e9e e8a217e601		call	repl
ac4ea3 5c			pop	rsp
ac4ea4 f20f100424		movsd	xmm0,[rsp]
ac4ea9 f20f104c2408		movsd	xmm1,[rsp+8]
ac4eaf f20f10542410		movsd	xmm2,[rsp+16]
ac4eb5 f20f105c2418		movsd	xmm3,[rsp+24]
ac4ebb f20f10642420		movsd	xmm4,[rsp+32]
ac4ec1 f20f106c2428		movsd	xmm5,[rsp+40]
ac4ec7 f20f10742430		movsd	xmm6,[rsp+48]
ac4ecd f20f107c2438		movsd	xmm7,[rsp+56]
ac4ed3 f2440f10442440		movsd	xmm8,[rsp+64]
ac4eda f2440f104c2448		movsd	xmm9,[rsp+72]
ac4ee1 f2440f10542450		movsd	xmm10,[rsp+80]
ac4ee8 f2440f105c2458		movsd	xmm11,[rsp+88]
ac4eef f2440f10642460		movsd	xmm12,[rsp+96]
ac4ef6 f2440f106c2468		movsd	xmm13,[rsp+104]
ac4efd f2440f10742470		movsd	xmm14,[rsp+112]
ac4f04 f2440f107c2478		movsd	xmm15,[rsp+120]
ac4f0b 4881c480000000		add	rsp,128
ac4f12 4159			pop	r9
ac4f14 4158			pop	r8
ac4f16 59			pop	rcx
ac4f17 488b0c25a874fc00		mov	rcx,[+16544936]
ac4f1f 49b90870fff7ff7f
ac4f27 0000			mov	r9,140737354100744
ac4f29 49894928			mov	[r9+40],rcx
ac4f2d 4c8b0c25b074fc00		mov	r9,[+16544944]
ac4f35 5d			pop	rbp
ac4f36 488b5500			mov	rdx,[rbp]
ac4f3a 4c8b7508			mov	r14,[rbp+8]
ac4f3e 4c8b6d10			mov	r13,[rbp+16]
ac4f42 4c8b6518			mov	r12,[rbp+24]
ac4f46 4c8b5d20			mov	r11,[rbp+32]
ac4f4a 4c8b5528			mov	r10,[rbp+40]
ac4f4e 488b7d30			mov	rdi,[rbp+48]
ac4f52 488b7538			mov	rsi,[rbp+56]
ac4f56 4c8b7d40			mov	r15,[rbp+64]
ac4f5a 488b5d48			mov	rbx,[rbp+72]
ac4f5e 488b4d50			mov	rcx,[rbp+80]
ac4f62 4883c558			add	rbp,byte 88
ac4f66 c3			ret
ac4f67			err_wrong_num_args:
ac4f67 4883ed08			sub	rbp,byte 8
ac4f6b 48895d00			mov	[rbp],rbx
ac4f6f 48bb818dc1f1ff7f
ac4f77 0000			mov	rbx,140737249381761
ac4f79 e8cdf9ffff		call	rt_error_handler
ac4f7e 488b5d00			mov	rbx,[rbp]
ac4f82 4883c508			add	rbp,byte 8
ac4f86			rtlib_skip:
ac4f86 4881ec80000000		sub	rsp,128
ac4f8d f20f110424		movsd	[rsp],xmm0
ac4f92 f20f114c2408		movsd	[rsp+8],xmm1
ac4f98 f20f11542410		movsd	[rsp+16],xmm2
ac4f9e f20f115c2418		movsd	[rsp+24],xmm3
ac4fa4 f20f11642420		movsd	[rsp+32],xmm4
ac4faa f20f116c2428		movsd	[rsp+40],xmm5
ac4fb0 f20f11742430		movsd	[rsp+48],xmm6
ac4fb6 f20f117c2438		movsd	[rsp+56],xmm7
ac4fbc f2440f11442440		movsd	[rsp+64],xmm8
ac4fc3 f2440f114c2448		movsd	[rsp+72],xmm9
ac4fca f2440f11542450		movsd	[rsp+80],xmm10
ac4fd1 f2440f115c2458		movsd	[rsp+88],xmm11
ac4fd8 f2440f11642460		movsd	[rsp+96],xmm12
ac4fdf f2440f116c2468		movsd	[rsp+104],xmm13
ac4fe6 f2440f11742470		movsd	[rsp+112],xmm14
ac4fed f2440f117c2478		movsd	[rsp+120],xmm15
ac4ff4 50			push	rax
ac4ff5 53			push	rbx
ac4ff6 51			push	rcx
ac4ff7 52			push	rdx
ac4ff8 55			push	rbp
ac4ff9 56			push	rsi
ac4ffa 57			push	rdi
ac4ffb 4150			push	r8
ac4ffd 4151			push	r9
ac4fff 4152			push	r10
ac5001 4153			push	r11
ac5003 4154			push	r12
ac5005 4155			push	r13
ac5007 4156			push	r14
ac5009 4157			push	r15
ac500b 48bd8832acefff7f
ac5013 0000			mov	rbp,140737214427784
ac5015 48b80870fff7ff7f
ac501d 0000			mov	rax,140737354100744
ac501f 488b0c25a874fc00		mov	rcx,[+16544936]
ac5027 48894828			mov	[rax+40],rcx
ac502b 48c7c100000000		mov	rcx,dword 0
ac5032 4c8b0c25b074fc00		mov	r9,[+16544944]
ac503a 49c7c0781b0b01		mov	r8,dword 17505144
ac5041 48c7c300000000		mov	rbx,dword 0
ac5048 49c7c700000000		mov	r15,dword 0
ac504f 48c7c600000000		mov	rsi,dword 0
ac5056 48c7c700000000		mov	rdi,dword 0
ac505d 49c7c200000000		mov	r10,dword 0
ac5064 49c7c300000000		mov	r11,dword 0
ac506b 49c7c400000000		mov	r12,dword 0
ac5072 49c7c500000000		mov	r13,dword 0
ac5079 49c7c600000000		mov	r14,dword 0
ac5080 48c7c200000000		mov	rdx,dword 0
ac5087			prog_begin1:
------------------------------------------------------------------------
635af0				bits 64
635af0			stub_7ffff0635af0_1:
635af0 83c104			add	ecx,byte 4
635af3 90			nop
635af4			stub_7ffff0635af0_0:
635af4 e844eb48ff		call	do_callback_fn_handler
635af9 71680c0100000000
------------------------------------------------------------------------
635ad8				bits 64
635ad8			stub_7ffff0635ad8_1:
635ad8 83c104			add	ecx,byte 4
635adb 90			nop
635adc			stub_7ffff0635ad8_0:
635adc e85ceb48ff		call	do_callback_fn_handler
635ae1 d1680c0100000000
------------------------------------------------------------------------
635ac0				bits 64
635ac0			stub_7ffff0635ac0_1:
635ac0 83c104			add	ecx,byte 4
635ac3 90			nop
635ac4			stub_7ffff0635ac0_0:
635ac4 e874eb48ff		call	do_callback_fn_handler
635ac9 31690c0100000000
------------------------------------------------------------------------
635aa8				bits 64
635aa8			stub_7ffff0635aa8_1:
635aa8 83c104			add	ecx,byte 4
635aab 90			nop
635aac			stub_7ffff0635aa8_0:
635aac e88ceb48ff		call	do_callback_fn_handler
635ab1 91690c0100000000
------------------------------------------------------------------------
635a90				bits 64
635a90			stub_7ffff0635a90_1:
635a90 83c104			add	ecx,byte 4
635a93 90			nop
635a94			stub_7ffff0635a90_0:
635a94 e8a4eb48ff		call	do_callback_fn_handler
635a99 317d0c0100000000
------------------------------------------------------------------------
635a78				bits 64
635a78			stub_7ffff0635a78_1:
635a78 83c104			add	ecx,byte 4
635a7b 90			nop
635a7c			stub_7ffff0635a78_0:
635a7c e8bceb48ff		call	do_callback_fn_handler
635a81 d1900c0100000000
------------------------------------------------------------------------
635a60				bits 64
635a60			stub_7ffff0635a60_1:
635a60 83c104			add	ecx,byte 4
635a63 90			nop
635a64			stub_7ffff0635a60_0:
635a64 e8d4eb48ff		call	do_callback_fn_handler
635a69 71a40c0100000000
------------------------------------------------------------------------
635a48				bits 64
635a48			stub_7ffff0635a48_1:
635a48 83c104			add	ecx,byte 4
635a4b 90			nop
635a4c			stub_7ffff0635a48_0:
635a4c e8eceb48ff		call	do_callback_fn_handler
635a51 11b80c0100000000
------------------------------------------------------------------------
635a30				bits 64
635a30			stub_7ffff0635a30_1:
635a30 83c104			add	ecx,byte 4
635a33 90			nop
635a34			stub_7ffff0635a30_0:
635a34 e804ec48ff		call	do_callback_fn_handler
635a39 b1cb0c0100000000
------------------------------------------------------------------------
635a18				bits 64
635a18			stub_7ffff0635a18_1:
635a18 83c104			add	ecx,byte 4
635a1b 90			nop
635a1c			stub_7ffff0635a18_0:
635a1c e81cec48ff		call	do_callback_fn_handler
635a21 51df0c0100000000
------------------------------------------------------------------------
635a00				bits 64
635a00			stub_7ffff0635a00_1:
635a00 83c104			add	ecx,byte 4
635a03 90			nop
635a04			stub_7ffff0635a00_0:
635a04 e834ec48ff		call	do_callback_fn_handler
635a09 d15f0d0100000000
------------------------------------------------------------------------
6359e8				bits 64
6359e8			stub_7ffff06359e8_1:
6359e8 83c104			add	ecx,byte 4
6359eb 90			nop
6359ec			stub_7ffff06359e8_0:
6359ec e84cec48ff		call	do_callback_fn_handler
6359f1 31600d0100000000
------------------------------------------------------------------------
6359d0				bits 64
6359d0			stub_7ffff06359d0_1:
6359d0 83c104			add	ecx,byte 4
6359d3 90			nop
6359d4			stub_7ffff06359d0_0:
6359d4 e864ec48ff		call	do_callback_fn_handler
6359d9 91600d0100000000
------------------------------------------------------------------------
6359b8				bits 64
6359b8			stub_7ffff06359b8_1:
6359b8 83c104			add	ecx,byte 4
6359bb 90			nop
6359bc			stub_7ffff06359b8_0:
6359bc e87cec48ff		call	do_callback_fn_handler
6359c1 f1600d0100000000
------------------------------------------------------------------------
6359a0				bits 64
6359a0			stub_7ffff06359a0_1:
6359a0 83c104			add	ecx,byte 4
6359a3 90			nop
6359a4			stub_7ffff06359a0_0:
6359a4 e894ec48ff		call	do_callback_fn_handler
6359a9 51610d0100000000
------------------------------------------------------------------------
635988				bits 64
635988			stub_7ffff0635988_1:
635988 83c104			add	ecx,byte 4
63598b 90			nop
63598c			stub_7ffff0635988_0:
63598c e8acec48ff		call	do_callback_fn_handler
635991 b1610d0100000000
------------------------------------------------------------------------
635970				bits 64
635970			stub_7ffff0635970_1:
635970 83c104			add	ecx,byte 4
635973 90			nop
635974			stub_7ffff0635970_0:
635974 e8c4ec48ff		call	do_callback_fn_handler
635979 51750d0100000000
------------------------------------------------------------------------
635958				bits 64
635958			stub_7ffff0635958_1:
635958 83c104			add	ecx,byte 4
63595b 90			nop
63595c			stub_7ffff0635958_0:
63595c e8dcec48ff		call	do_callback_fn_handler
635961 f1880d0100000000
------------------------------------------------------------------------
635940				bits 64
635940			stub_7ffff0635940_1:
635940 83c104			add	ecx,byte 4
635943 90			nop
635944			stub_7ffff0635940_0:
635944 e8f4ec48ff		call	do_callback_fn_handler
635949 919c0d0100000000
------------------------------------------------------------------------
635928				bits 64
635928			stub_7ffff0635928_1:
635928 83c104			add	ecx,byte 4
63592b 90			nop
63592c			stub_7ffff0635928_0:
63592c e80ced48ff		call	do_callback_fn_handler
635931 31b00d0100000000
------------------------------------------------------------------------
635910				bits 64
635910			stub_7ffff0635910_1:
635910 83c104			add	ecx,byte 4
635913 90			nop
635914			stub_7ffff0635910_0:
635914 e824ed48ff		call	do_callback_fn_handler
635919 d1c30d0100000000
------------------------------------------------------------------------
6358f8				bits 64
6358f8			stub_7ffff06358f8_1:
6358f8 83c104			add	ecx,byte 4
6358fb 90			nop
6358fc			stub_7ffff06358f8_0:
6358fc e83ced48ff		call	do_callback_fn_handler
635901 71d70d0100000000
------------------------------------------------------------------------
6358e0				bits 64
6358e0			stub_7ffff06358e0_1:
6358e0 83c104			add	ecx,byte 4
6358e3 90			nop
6358e4			stub_7ffff06358e0_0:
6358e4 e854ed48ff		call	do_callback_fn_handler
6358e9 11eb0d0100000000
------------------------------------------------------------------------
6358c8				bits 64
6358c8			stub_7ffff06358c8_1:
6358c8 83c104			add	ecx,byte 4
6358cb 90			nop
6358cc			stub_7ffff06358c8_0:
6358cc e86ced48ff		call	do_callback_fn_handler
6358d1 916b0e0100000000
------------------------------------------------------------------------
6358b0				bits 64
6358b0			stub_7ffff06358b0_1:
6358b0 83c104			add	ecx,byte 4
6358b3 90			nop
6358b4			stub_7ffff06358b0_0:
6358b4 e884ed48ff		call	do_callback_fn_handler
6358b9 f16b0e0100000000
------------------------------------------------------------------------
635898				bits 64
635898			stub_7ffff0635898_1:
635898 83c104			add	ecx,byte 4
63589b 90			nop
63589c			stub_7ffff0635898_0:
63589c e89ced48ff		call	do_callback_fn_handler
6358a1 516c0e0100000000
------------------------------------------------------------------------
635880				bits 64
635880			stub_7ffff0635880_1:
635880 83c104			add	ecx,byte 4
635883 90			nop
635884			stub_7ffff0635880_0:
635884 e8b4ed48ff		call	do_callback_fn_handler
635889 b16c0e0100000000
------------------------------------------------------------------------
635868				bits 64
635868			stub_7ffff0635868_1:
635868 83c104			add	ecx,byte 4
63586b 90			nop
63586c			stub_7ffff0635868_0:
63586c e8cced48ff		call	do_callback_fn_handler
635871 116d0e0100000000
------------------------------------------------------------------------
635850				bits 64
635850			stub_7ffff0635850_1:
635850 83c104			add	ecx,byte 4
635853 90			nop
635854			stub_7ffff0635850_0:
635854 e8e4ed48ff		call	do_callback_fn_handler
635859 716d0e0100000000
------------------------------------------------------------------------
635838				bits 64
635838			stub_7ffff0635838_1:
635838 83c104			add	ecx,byte 4
63583b 90			nop
63583c			stub_7ffff0635838_0:
63583c e8fced48ff		call	do_callback_fn_handler
635841 11810e0100000000
------------------------------------------------------------------------
635820				bits 64
635820			stub_7ffff0635820_1:
635820 83c104			add	ecx,byte 4
635823 90			nop
635824			stub_7ffff0635820_0:
635824 e814ee48ff		call	do_callback_fn_handler
635829 b1940e0100000000
------------------------------------------------------------------------
635808				bits 64
635808			stub_7ffff0635808_1:
635808 83c104			add	ecx,byte 4
63580b 90			nop
63580c			stub_7ffff0635808_0:
63580c e82cee48ff		call	do_callback_fn_handler
635811 51a80e0100000000
------------------------------------------------------------------------
6357f0				bits 64
6357f0			stub_7ffff06357f0_1:
6357f0 83c104			add	ecx,byte 4
6357f3 90			nop
6357f4			stub_7ffff06357f0_0:
6357f4 e844ee48ff		call	do_callback_fn_handler
6357f9 f1bb0e0100000000
------------------------------------------------------------------------
6357d8				bits 64
6357d8			stub_7ffff06357d8_1:
6357d8 83c104			add	ecx,byte 4
6357db 90			nop
6357dc			stub_7ffff06357d8_0:
6357dc e85cee48ff		call	do_callback_fn_handler
6357e1 91cf0e0100000000
------------------------------------------------------------------------
6357c0				bits 64
6357c0			stub_7ffff06357c0_1:
6357c0 83c104			add	ecx,byte 4
6357c3 90			nop
6357c4			stub_7ffff06357c0_0:
6357c4 e874ee48ff		call	do_callback_fn_handler
6357c9 31e30e0100000000
------------------------------------------------------------------------
6357a8				bits 64
6357a8			stub_7ffff06357a8_1:
6357a8 83c104			add	ecx,byte 4
6357ab 90			nop
6357ac			stub_7ffff06357a8_0:
6357ac e88cee48ff		call	do_callback_fn_handler
6357b1 d1f60e0100000000
------------------------------------------------------------------------
635790				bits 64
635790			stub_7ffff0635790_1:
635790 83c104			add	ecx,byte 4
635793 90			nop
635794			stub_7ffff0635790_0:
635794 e8a4ee48ff		call	do_callback_fn_handler
635799 51770f0100000000
------------------------------------------------------------------------
635778				bits 64
635778			stub_7ffff0635778_1:
635778 83c104			add	ecx,byte 4
63577b 90			nop
63577c			stub_7ffff0635778_0:
63577c e8bcee48ff		call	do_callback_fn_handler
635781 b1770f0100000000
------------------------------------------------------------------------
635760				bits 64
635760			stub_7ffff0635760_1:
635760 83c104			add	ecx,byte 4
635763 90			nop
635764			stub_7ffff0635760_0:
635764 e8d4ee48ff		call	do_callback_fn_handler
635769 11780f0100000000
------------------------------------------------------------------------
635748				bits 64
635748			stub_7ffff0635748_1:
635748 83c104			add	ecx,byte 4
63574b 90			nop
63574c			stub_7ffff0635748_0:
63574c e8ecee48ff		call	do_callback_fn_handler
635751 71780f0100000000
------------------------------------------------------------------------
635730				bits 64
635730			stub_7ffff0635730_1:
635730 83c104			add	ecx,byte 4
635733 90			nop
635734			stub_7ffff0635730_0:
635734 e804ef48ff		call	do_callback_fn_handler
635739 d1780f0100000000
------------------------------------------------------------------------
635718				bits 64
635718			stub_7ffff0635718_1:
635718 83c104			add	ecx,byte 4
63571b 90			nop
63571c			stub_7ffff0635718_0:
63571c e81cef48ff		call	do_callback_fn_handler
635721 31790f0100000000
------------------------------------------------------------------------
635700				bits 64
635700			stub_7ffff0635700_1:
635700 83c104			add	ecx,byte 4
635703 90			nop
635704			stub_7ffff0635700_0:
635704 e834ef48ff		call	do_callback_fn_handler
635709 d18c0f0100000000
------------------------------------------------------------------------
6356e8				bits 64
6356e8			stub_7ffff06356e8_1:
6356e8 83c104			add	ecx,byte 4
6356eb 90			nop
6356ec			stub_7ffff06356e8_0:
6356ec e84cef48ff		call	do_callback_fn_handler
6356f1 71a00f0100000000
------------------------------------------------------------------------
6356d0				bits 64
6356d0			stub_7ffff06356d0_1:
6356d0 83c104			add	ecx,byte 4
6356d3 90			nop
6356d4			stub_7ffff06356d0_0:
6356d4 e864ef48ff		call	do_callback_fn_handler
6356d9 11b40f0100000000
------------------------------------------------------------------------
6356b8				bits 64
6356b8			stub_7ffff06356b8_1:
6356b8 83c104			add	ecx,byte 4
6356bb 90			nop
6356bc			stub_7ffff06356b8_0:
6356bc e87cef48ff		call	do_callback_fn_handler
6356c1 b1c70f0100000000
------------------------------------------------------------------------
6356a0				bits 64
6356a0			stub_7ffff06356a0_1:
6356a0 83c104			add	ecx,byte 4
6356a3 90			nop
6356a4			stub_7ffff06356a0_0:
6356a4 e894ef48ff		call	do_callback_fn_handler
6356a9 51db0f0100000000
------------------------------------------------------------------------
635688				bits 64
635688			stub_7ffff0635688_1:
635688 83c104			add	ecx,byte 4
63568b 90			nop
63568c			stub_7ffff0635688_0:
63568c e8acef48ff		call	do_callback_fn_handler
635691 f1ee0f0100000000
------------------------------------------------------------------------
635670				bits 64
635670			stub_7ffff0635670_1:
635670 83c104			add	ecx,byte 4
635673 90			nop
635674			stub_7ffff0635670_0:
635674 e8c4ef48ff		call	do_callback_fn_handler
635679 9102100100000000
------------------------------------------------------------------------
635658				bits 64
635658			stub_7ffff0635658_1:
635658 83c104			add	ecx,byte 4
63565b 90			nop
63565c			stub_7ffff0635658_0:
63565c e8dcef48ff		call	do_callback_fn_handler
635661 1183100100000000
------------------------------------------------------------------------
635640				bits 64
635640			stub_7ffff0635640_1:
635640 83c104			add	ecx,byte 4
635643 90			nop
635644			stub_7ffff0635640_0:
635644 e8f4ef48ff		call	do_callback_fn_handler
635649 7183100100000000
------------------------------------------------------------------------
635628				bits 64
635628			stub_7ffff0635628_1:
635628 83c104			add	ecx,byte 4
63562b 90			nop
63562c			stub_7ffff0635628_0:
63562c e80cf048ff		call	do_callback_fn_handler
635631 d183100100000000
------------------------------------------------------------------------
635610				bits 64
635610			stub_7ffff0635610_1:
635610 83c104			add	ecx,byte 4
635613 90			nop
635614			stub_7ffff0635610_0:
635614 e824f048ff		call	do_callback_fn_handler
635619 3184100100000000
------------------------------------------------------------------------
6355f8				bits 64
6355f8			stub_7ffff06355f8_1:
6355f8 83c104			add	ecx,byte 4
6355fb 90			nop
6355fc			stub_7ffff06355f8_0:
6355fc e83cf048ff		call	do_callback_fn_handler
635601 9184100100000000
------------------------------------------------------------------------
6355e0				bits 64
6355e0			stub_7ffff06355e0_1:
6355e0 83c104			add	ecx,byte 4
6355e3 90			nop
6355e4			stub_7ffff06355e0_0:
6355e4 e854f048ff		call	do_callback_fn_handler
6355e9 f184100100000000
------------------------------------------------------------------------
6355c8				bits 64
6355c8			stub_7ffff06355c8_1:
6355c8 83c104			add	ecx,byte 4
6355cb 90			nop
6355cc			stub_7ffff06355c8_0:
6355cc e86cf048ff		call	do_callback_fn_handler
6355d1 9198100100000000
------------------------------------------------------------------------
6355b0				bits 64
6355b0			stub_7ffff06355b0_1:
6355b0 83c104			add	ecx,byte 4
6355b3 90			nop
6355b4			stub_7ffff06355b0_0:
6355b4 e884f048ff		call	do_callback_fn_handler
6355b9 31ac100100000000
------------------------------------------------------------------------
635598				bits 64
635598			stub_7ffff0635598_1:
635598 83c104			add	ecx,byte 4
63559b 90			nop
63559c			stub_7ffff0635598_0:
63559c e89cf048ff		call	do_callback_fn_handler
6355a1 d1bf100100000000
------------------------------------------------------------------------
635580				bits 64
635580			stub_7ffff0635580_1:
635580 83c104			add	ecx,byte 4
635583 90			nop
635584			stub_7ffff0635580_0:
635584 e8b4f048ff		call	do_callback_fn_handler
635589 71d3100100000000
------------------------------------------------------------------------
635568				bits 64
635568			stub_7ffff0635568_1:
635568 83c104			add	ecx,byte 4
63556b 90			nop
63556c			stub_7ffff0635568_0:
63556c e8ccf048ff		call	do_callback_fn_handler
635571 11e7100100000000
------------------------------------------------------------------------
635550				bits 64
635550			stub_7ffff0635550_1:
635550 83c104			add	ecx,byte 4
635553 90			nop
635554			stub_7ffff0635550_0:
635554 e8e4f048ff		call	do_callback_fn_handler
635559 b1fa100100000000
------------------------------------------------------------------------
635538				bits 64
635538			stub_7ffff0635538_1:
635538 83c104			add	ecx,byte 4
63553b 90			nop
63553c			stub_7ffff0635538_0:
63553c e8fcf048ff		call	do_callback_fn_handler
635541 510e110100000000
------------------------------------------------------------------------
635520				bits 64
635520			stub_7ffff0635520_1:
635520 83c104			add	ecx,byte 4
635523 90			nop
635524			stub_7ffff0635520_0:
635524 e814f148ff		call	do_callback_fn_handler
635529 d18e110100000000
------------------------------------------------------------------------
635508				bits 64
635508			stub_7ffff0635508_1:
635508 83c104			add	ecx,byte 4
63550b 90			nop
63550c			stub_7ffff0635508_0:
63550c e82cf148ff		call	do_callback_fn_handler
635511 318f110100000000
------------------------------------------------------------------------
6354f0				bits 64
6354f0			stub_7ffff06354f0_1:
6354f0 83c104			add	ecx,byte 4
6354f3 90			nop
6354f4			stub_7ffff06354f0_0:
6354f4 e844f148ff		call	do_callback_fn_handler
6354f9 918f110100000000
------------------------------------------------------------------------
6354d8				bits 64
6354d8			stub_7ffff06354d8_1:
6354d8 83c104			add	ecx,byte 4
6354db 90			nop
6354dc			stub_7ffff06354d8_0:
6354dc e85cf148ff		call	do_callback_fn_handler
6354e1 f18f110100000000
------------------------------------------------------------------------
6354c0				bits 64
6354c0			stub_7ffff06354c0_1:
6354c0 83c104			add	ecx,byte 4
6354c3 90			nop
6354c4			stub_7ffff06354c0_0:
6354c4 e874f148ff		call	do_callback_fn_handler
6354c9 5190110100000000
------------------------------------------------------------------------
6354a8				bits 64
6354a8			stub_7ffff06354a8_1:
6354a8 83c104			add	ecx,byte 4
6354ab 90			nop
6354ac			stub_7ffff06354a8_0:
6354ac e88cf148ff		call	do_callback_fn_handler
6354b1 b190110100000000
------------------------------------------------------------------------
635490				bits 64
635490			stub_7ffff0635490_1:
635490 83c104			add	ecx,byte 4
635493 90			nop
635494			stub_7ffff0635490_0:
635494 e8a4f148ff		call	do_callback_fn_handler
635499 51a4110100000000
------------------------------------------------------------------------
635478				bits 64
635478			stub_7ffff0635478_1:
635478 83c104			add	ecx,byte 4
63547b 90			nop
63547c			stub_7ffff0635478_0:
63547c e8bcf148ff		call	do_callback_fn_handler
635481 f1b7110100000000
------------------------------------------------------------------------
635460				bits 64
635460			stub_7ffff0635460_1:
635460 83c104			add	ecx,byte 4
635463 90			nop
635464			stub_7ffff0635460_0:
635464 e8d4f148ff		call	do_callback_fn_handler
635469 91cb110100000000
------------------------------------------------------------------------
635448				bits 64
635448			stub_7ffff0635448_1:
635448 83c104			add	ecx,byte 4
63544b 90			nop
63544c			stub_7ffff0635448_0:
63544c e8ecf148ff		call	do_callback_fn_handler
635451 31df110100000000
------------------------------------------------------------------------
635430				bits 64
635430			stub_7ffff0635430_1:
635430 83c104			add	ecx,byte 4
635433 90			nop
635434			stub_7ffff0635430_0:
635434 e804f248ff		call	do_callback_fn_handler
635439 d1f2110100000000
------------------------------------------------------------------------
635418				bits 64
635418			stub_7ffff0635418_1:
635418 83c104			add	ecx,byte 4
63541b 90			nop
63541c			stub_7ffff0635418_0:
63541c e81cf248ff		call	do_callback_fn_handler
635421 7106120100000000
------------------------------------------------------------------------
635400				bits 64
635400			stub_7ffff0635400_1:
635400 83c104			add	ecx,byte 4
635403 90			nop
635404			stub_7ffff0635400_0:
635404 e834f248ff		call	do_callback_fn_handler
635409 111a120100000000
------------------------------------------------------------------------
6353e8				bits 64
6353e8			stub_7ffff06353e8_1:
6353e8 83c104			add	ecx,byte 4
6353eb 90			nop
6353ec			stub_7ffff06353e8_0:
6353ec e84cf248ff		call	do_callback_fn_handler
6353f1 919a120100000000
------------------------------------------------------------------------
6353d0				bits 64
6353d0			stub_7ffff06353d0_1:
6353d0 83c104			add	ecx,byte 4
6353d3 90			nop
6353d4			stub_7ffff06353d0_0:
6353d4 e864f248ff		call	do_callback_fn_handler
6353d9 f19a120100000000
------------------------------------------------------------------------
6353b8				bits 64
6353b8			stub_7ffff06353b8_1:
6353b8 83c104			add	ecx,byte 4
6353bb 90			nop
6353bc			stub_7ffff06353b8_0:
6353bc e87cf248ff		call	do_callback_fn_handler
6353c1 519b120100000000
------------------------------------------------------------------------
6353a0				bits 64
6353a0			stub_7ffff06353a0_1:
6353a0 83c104			add	ecx,byte 4
6353a3 90			nop
6353a4			stub_7ffff06353a0_0:
6353a4 e894f248ff		call	do_callback_fn_handler
6353a9 b19b120100000000
------------------------------------------------------------------------
635388				bits 64
635388			stub_7ffff0635388_1:
635388 83c104			add	ecx,byte 4
63538b 90			nop
63538c			stub_7ffff0635388_0:
63538c e8acf248ff		call	do_callback_fn_handler
635391 119c120100000000
------------------------------------------------------------------------
635370				bits 64
635370			stub_7ffff0635370_1:
635370 83c104			add	ecx,byte 4
635373 90			nop
635374			stub_7ffff0635370_0:
635374 e8c4f248ff		call	do_callback_fn_handler
635379 719c120100000000
------------------------------------------------------------------------
635358				bits 64
635358			stub_7ffff0635358_1:
635358 83c104			add	ecx,byte 4
63535b 90			nop
63535c			stub_7ffff0635358_0:
63535c e8dcf248ff		call	do_callback_fn_handler
635361 11b0120100000000
------------------------------------------------------------------------
635340				bits 64
635340			stub_7ffff0635340_1:
635340 83c104			add	ecx,byte 4
635343 90			nop
635344			stub_7ffff0635340_0:
635344 e8f4f248ff		call	do_callback_fn_handler
635349 b1c3120100000000
------------------------------------------------------------------------
635328				bits 64
635328			stub_7ffff0635328_1:
635328 83c104			add	ecx,byte 4
63532b 90			nop
63532c			stub_7ffff0635328_0:
63532c e80cf348ff		call	do_callback_fn_handler
635331 51d7120100000000
------------------------------------------------------------------------
635310				bits 64
635310			stub_7ffff0635310_1:
635310 83c104			add	ecx,byte 4
635313 90			nop
635314			stub_7ffff0635310_0:
635314 e824f348ff		call	do_callback_fn_handler
635319 f1ea120100000000
------------------------------------------------------------------------
6352f8				bits 64
6352f8			stub_7ffff06352f8_1:
6352f8 83c104			add	ecx,byte 4
6352fb 90			nop
6352fc			stub_7ffff06352f8_0:
6352fc e83cf348ff		call	do_callback_fn_handler
635301 91fe120100000000
------------------------------------------------------------------------
6352e0				bits 64
6352e0			stub_7ffff06352e0_1:
6352e0 83c104			add	ecx,byte 4
6352e3 90			nop
6352e4			stub_7ffff06352e0_0:
6352e4 e854f348ff		call	do_callback_fn_handler
6352e9 3112130100000000
------------------------------------------------------------------------
6352c8				bits 64
6352c8			stub_7ffff06352c8_1:
6352c8 83c104			add	ecx,byte 4
6352cb 90			nop
6352cc			stub_7ffff06352c8_0:
6352cc e86cf348ff		call	do_callback_fn_handler
6352d1 d125130100000000
------------------------------------------------------------------------
6352b0				bits 64
6352b0			stub_7ffff06352b0_1:
6352b0 83c104			add	ecx,byte 4
6352b3 90			nop
6352b4			stub_7ffff06352b0_0:
6352b4 e884f348ff		call	do_callback_fn_handler
6352b9 51a6130100000000
------------------------------------------------------------------------
635298				bits 64
635298			stub_7ffff0635298_1:
635298 83c104			add	ecx,byte 4
63529b 90			nop
63529c			stub_7ffff0635298_0:
63529c e89cf348ff		call	do_callback_fn_handler
6352a1 b1a6130100000000
------------------------------------------------------------------------
635280				bits 64
635280			stub_7ffff0635280_1:
635280 83c104			add	ecx,byte 4
635283 90			nop
635284			stub_7ffff0635280_0:
635284 e8b4f348ff		call	do_callback_fn_handler
635289 11a7130100000000
------------------------------------------------------------------------
635268				bits 64
635268			stub_7ffff0635268_1:
635268 83c104			add	ecx,byte 4
63526b 90			nop
63526c			stub_7ffff0635268_0:
63526c e8ccf348ff		call	do_callback_fn_handler
635271 71a7130100000000
------------------------------------------------------------------------
635250				bits 64
635250			stub_7ffff0635250_1:
635250 83c104			add	ecx,byte 4
635253 90			nop
635254			stub_7ffff0635250_0:
635254 e8e4f348ff		call	do_callback_fn_handler
635259 d1a7130100000000
------------------------------------------------------------------------
635238				bits 64
635238			stub_7ffff0635238_1:
635238 83c104			add	ecx,byte 4
63523b 90			nop
63523c			stub_7ffff0635238_0:
63523c e8fcf348ff		call	do_callback_fn_handler
635241 31a8130100000000
------------------------------------------------------------------------
635220				bits 64
635220			stub_7ffff0635220_1:
635220 83c104			add	ecx,byte 4
635223 90			nop
635224			stub_7ffff0635220_0:
635224 e814f448ff		call	do_callback_fn_handler
635229 d1bb130100000000
------------------------------------------------------------------------
635208				bits 64
635208			stub_7ffff0635208_1:
635208 83c104			add	ecx,byte 4
63520b 90			nop
63520c			stub_7ffff0635208_0:
63520c e82cf448ff		call	do_callback_fn_handler
635211 71cf130100000000
------------------------------------------------------------------------
6351f0				bits 64
6351f0			stub_7ffff06351f0_1:
6351f0 83c104			add	ecx,byte 4
6351f3 90			nop
6351f4			stub_7ffff06351f0_0:
6351f4 e844f448ff		call	do_callback_fn_handler
6351f9 51ed130100000000
------------------------------------------------------------------------
6351d8				bits 64
6351d8			stub_7ffff06351d8_1:
6351d8 83c104			add	ecx,byte 4
6351db 90			nop
6351dc			stub_7ffff06351d8_0:
6351dc e85cf448ff		call	do_callback_fn_handler
6351e1 b11f140100000000
------------------------------------------------------------------------
6351c0				bits 64
6351c0			stub_7ffff06351c0_1:
6351c0 83c104			add	ecx,byte 4
6351c3 90			nop
6351c4			stub_7ffff06351c0_0:
6351c4 e874f448ff		call	do_callback_fn_handler
6351c9 5133140100000000
------------------------------------------------------------------------
6351a8				bits 64
6351a8			stub_7ffff06351a8_1:
6351a8 83c104			add	ecx,byte 4
6351ab 90			nop
6351ac			stub_7ffff06351a8_0:
6351ac e88cf448ff		call	do_callback_fn_handler
6351b1 f146140100000000
------------------------------------------------------------------------
635190				bits 64
635190			stub_7ffff0635190_1:
635190 83c104			add	ecx,byte 4
635193 90			nop
635194			stub_7ffff0635190_0:
635194 e8a4f448ff		call	do_callback_fn_handler
635199 915a140100000000
------------------------------------------------------------------------
635178				bits 64
635178			stub_7ffff0635178_1:
635178 83c104			add	ecx,byte 4
63517b 90			nop
63517c			stub_7ffff0635178_0:
63517c e8bcf448ff		call	do_callback_fn_handler
635181 11db140100000000
------------------------------------------------------------------------
635160				bits 64
635160			stub_7ffff0635160_1:
635160 83c104			add	ecx,byte 4
635163 90			nop
635164			stub_7ffff0635160_0:
635164 e8d4f448ff		call	do_callback_fn_handler
635169 71db140100000000
------------------------------------------------------------------------
635148				bits 64
635148			stub_7ffff0635148_1:
635148 83c104			add	ecx,byte 4
63514b 90			nop
63514c			stub_7ffff0635148_0:
63514c e8ecf448ff		call	do_callback_fn_handler
635151 d1db140100000000
------------------------------------------------------------------------
635130				bits 64
635130			stub_7ffff0635130_1:
635130 83c104			add	ecx,byte 4
635133 90			nop
635134			stub_7ffff0635130_0:
635134 e804f548ff		call	do_callback_fn_handler
635139 31dc140100000000
------------------------------------------------------------------------
635118				bits 64
635118			stub_7ffff0635118_1:
635118 83c104			add	ecx,byte 4
63511b 90			nop
63511c			stub_7ffff0635118_0:
63511c e81cf548ff		call	do_callback_fn_handler
635121 91dc140100000000
------------------------------------------------------------------------
635100				bits 64
635100			stub_7ffff0635100_1:
635100 83c104			add	ecx,byte 4
635103 90			nop
635104			stub_7ffff0635100_0:
635104 e834f548ff		call	do_callback_fn_handler
635109 f1dc140100000000
------------------------------------------------------------------------
6350e8				bits 64
6350e8			stub_7ffff06350e8_1:
6350e8 83c104			add	ecx,byte 4
6350eb 90			nop
6350ec			stub_7ffff06350e8_0:
6350ec e84cf548ff		call	do_callback_fn_handler
6350f1 91f0140100000000
------------------------------------------------------------------------
6350d0				bits 64
6350d0			stub_7ffff06350d0_1:
6350d0 83c104			add	ecx,byte 4
6350d3 90			nop
6350d4			stub_7ffff06350d0_0:
6350d4 e864f548ff		call	do_callback_fn_handler
6350d9 3104150100000000
------------------------------------------------------------------------
6350b8				bits 64
6350b8			stub_7ffff06350b8_1:
6350b8 83c104			add	ecx,byte 4
6350bb 90			nop
6350bc			stub_7ffff06350b8_0:
6350bc e803f748ff		call	do_callback_cont_handler
6350c1 f1da020100000000
------------------------------------------------------------------------
ac5087				bits 64
ac5087 90		version_1:
ac5088			version_2:
ac5088			version_3:
ac5088			version_4:
ac5088			version_5:
ac5088			version_6:
ac5088			version_7:
ac5088			version_8:
ac5088			version_9:
ac5088			version_10:
ac5088			version_11:
ac5088			version_12:
ac5088			version_13:
ac5088			version_14:
ac5088			version_15:
ac5088			version_16:
ac5088			version_17:
ac5088			version_18:
ac5088			version_19:
ac5088			version_20:
ac5088			version_21:
ac5088			version_22:
ac5088			version_23:
ac5088			version_24:
ac5088			version_25:
ac5088			version_26:
ac5088			version_27:
ac5088			version_28:
ac5088			version_29:
ac5088			version_30:
ac5088			version_31:
ac5088			version_32:
ac5088			version_33:
ac5088			version_34:
ac5088			version_35:
ac5088			version_36:
ac5088			version_37:
ac5088			version_38:
ac5088			version_39:
ac5088			version_40:
ac5088			version_41:
ac5088			version_42:
ac5088			version_43:
ac5088			version_44:
ac5088			version_45:
ac5088			version_46:
ac5088			version_47:
ac5088			version_48:
ac5088			version_49:
ac5088			version_50:
ac5088			version_51:
ac5088			version_52:
ac5088			version_53:
ac5088			version_54:
ac5088			version_55:
ac5088			version_56:
ac5088			version_57:
ac5088			version_58:
ac5088			version_59:
ac5088			version_60:
ac5088			version_61:
ac5088			version_62:
ac5088			version_63:
ac5088			version_64:
ac5088			version_65:
ac5088			version_66:
ac5088			version_67:
ac5088			version_68:
ac5088			version_69:
ac5088			version_70:
ac5088			version_71:
ac5088			version_72:
ac5088			version_73:
ac5088			version_74:
ac5088			version_75:
ac5088			version_76:
ac5088			version_77:
ac5088			version_78:
ac5088			version_79:
ac5088			version_80:
ac5088			version_81:
ac5088			version_82:
ac5088			version_83:
ac5088			version_84:
ac5088			version_85:
ac5088			version_86:
ac5088			version_87:
ac5088			version_88:
ac5088			version_89:
ac5088			version_90:
ac5088			version_91:
ac5088			version_92:
ac5088			version_93:
ac5088			version_94:
ac5088			version_95:
ac5088			version_96:
ac5088			version_97:
ac5088			version_98:
ac5088			version_99:
ac5088			version_100:
ac5088			version_101:
ac5088			version_102:
ac5088			version_103:
ac5088			version_104:
ac5088			version_105:
ac5088			version_106:
ac5088			version_107:
ac5088			version_108:
ac5088			version_109:
ac5088			version_110:
ac5088			version_111:
ac5088			version_112:
ac5088			version_113:
ac5088			version_114:
ac5088			version_115:
ac5088			version_116:
ac5088			version_117:
ac5088			version_118:
ac5088			version_119:
ac5088			version_120:
ac5088			version_121:
ac5088			version_122:
ac5088			version_123:
ac5088			version_124:
ac5088			version_125:
ac5088			version_126:
ac5088			version_127:
ac5088			version_128:
ac5088			version_129:
ac5088			version_130:
ac5088			version_131:
ac5088			version_132:
ac5088			version_133:
ac5088			version_134:
ac5088			version_135:
ac5088			version_136:
ac5088			version_137:
ac5088			version_138:
ac5088			version_139:
ac5088			version_140:
ac5088			version_141:
ac5088			version_142:
ac5088			version_143:
ac5088			version_144:
ac5088			version_145:
ac5088			version_146:
ac5088			version_147:
ac5088			version_148:
ac5088			version_149:
ac5088			version_150:
ac5088			version_151:
ac5088			version_152:
ac5088			version_153:
ac5088			version_154:
ac5088			version_155:
ac5088			version_156:
ac5088			version_157:
ac5088			version_158:
ac5088			version_159:
ac5088			version_160:
ac5088			version_161:
ac5088			version_162:
ac5088			version_163:
ac5088			version_164:
ac5088			version_165:
ac5088			version_166:
ac5088			version_167:
ac5088			version_168:
ac5088			version_169:
ac5088			version_170:
ac5088			version_171:
ac5088			version_172:
ac5088			version_173:
ac5088			version_174:
ac5088			version_175:
ac5088			version_176:
ac5088			version_177:
ac5088			version_178:
ac5088			version_179:
ac5088			version_180:
ac5088			version_181:
ac5088			version_182:
ac5088			version_183:
ac5088			version_184:
ac5088			version_185:
ac5088			version_186:
ac5088			version_187:
ac5088			version_188:
ac5088			version_189:
ac5088			version_190:
ac5088			version_191:
ac5088			version_192:
ac5088			version_193:
ac5088			version_194:
ac5088			version_195:
ac5088			version_196:
ac5088			version_197:
ac5088 48c7c000000000		mov	rax,dword 0
ac508f 49898008030000		mov	[r8+776],rax
ac5096 48c7c3eeffffff		mov	rbx,dword -18
ac509d			version_198:
ac509d			version_199:
ac509d			version_200:
ac509d			version_201:
ac509d			version_202:
ac509d			version_203:
ac509d			version_204:
ac509d			version_205:
ac509d			version_206:
ac509d			version_207:
ac509d			version_208:
ac509d			version_209:
ac509d			version_210:
ac509d			version_211:
ac509d			version_212:
ac509d			version_213:
ac509d			version_214:
ac509d			version_215:
ac509d			version_216:
ac509d			version_217:
ac509d			version_218:
ac509d			version_219:
ac509d			version_220:
ac509d			version_221:
ac509d			version_222:
ac509d			version_223:
ac509d			version_224:
ac509d			version_225:
ac509d			version_226:
ac509d			version_227:
ac509d 4883ed08			sub	rbp,byte 8
ac50a1 48c7c050521501		mov	rax,dword 18174544
ac50a8 48894500			mov	[rbp],rax
ac50ac 49c7c72c000000		mov	r15,dword 44
ac50b3 48c7c32c000000		mov	rbx,dword 44
ac50ba			NORM_CALL_1:
ac50ba 49c7c300000000		mov	r11,dword 0
ac50c1 48c7c708000000		mov	rdi,dword 8
ac50c8			stub_load_1:
ac50c8 e96709b700		jmp	dest_7ffff0635a34_1
GEN VERSION FN#<lazy-code #2
                 ast: #f
                 generator: #<procedure #3>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #4
           stack: ((int) (int) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((n0 . #<identifier #5
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (m0 . #<identifier #6
                          kind: local
                          sslots: (3)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 2
           nb-args: 2
           fs: 1
           ffs: 0
           fn-num: 8>
------------------------------------------------------------------------
6350a0				bits 64
6350a0			stub_7ffff06350a0_1:
6350a0 83c104			add	ecx,byte 4
6350a3 90			nop
6350a4			stub_7ffff06350a0_0:
6350a4 e81bf748ff		call	do_callback_cont_handler
6350a9 3162160100000000
------------------------------------------------------------------------
ac50cd				bits 64
ac50cd 909090		fn_entry_1:
ac50d0			version_228:
ac50d0			version_229:
ac50d0 4889df			mov	rdi,rbx
ac50d3			version_230:
ac50d3 4883ed20			sub	rbp,byte 32
ac50d7 4c897d18			mov	[rbp+24],r15
ac50db 48895d10			mov	[rbp+16],rbx
ac50df 48897508			mov	[rbp+8],rsi
ac50e3 48c7c070631501		mov	rax,dword 18178928
ac50ea 48894500			mov	[rbp],rax
ac50ee 4889fb			mov	rbx,rdi
ac50f1			NORM_CALL_2:
ac50f1 49c7c304000000		mov	r11,dword 4
ac50f8 48c7c704000000		mov	rdi,dword 4
ac50ff			stub_load_2:
ac50ff e9a806b700		jmp	dest_7ffff06357ac_1
Patch direct stub jump at 7fffefac50c8
  > now jump to 7fffefac50d0
------------------------------------------------------------------------
ac50c8				bits 64
ac50c8 eb06			jmp	short fn_entry_1
GEN VERSION FN#<lazy-code #7
                 ast: #f
                 generator: #<procedure #8>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #9
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((x0 . #<identifier #10
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 35>
------------------------------------------------------------------------
635088				bits 64
635088			stub_7ffff0635088_0:
635088 e829f448ff		call	do_callback_handler
63508d d162160100000000
------------------------------------------------------------------------
ac5104				bits 64
ac5104			fn_entry_2:
ac5104			version_231:
ac5104 4989df			mov	r15,rbx
ac5107			version_232:
ac5107			version_233:
ac5107			version_234:
ac5107			version_235:
ac5107			version_236:
ac5107			version_237:
ac5107 48c7c108000000		mov	rcx,dword 8
ac510e 52			push	rdx
ac510f 4883f900			cmp	rcx,byte 0
ac5113 0f846fffb600		je	stub_7ffff0635088_0
ac5119 4c89f8			mov	rax,r15
ac511c 48c1f802			sar	rax,2
ac5120 4899			cqo
ac5122 48c1f902			sar	rcx,2
ac5126 48f7f9			idiv	rcx
ac5129 4889d0			mov	rax,rdx
ac512c 4801c8			add	rax,rcx
ac512f 4899			cqo
ac5131 48f7f9			idiv	rcx
ac5134 48c1e202			shl	rdx,2
ac5138 4989d7			mov	r15,rdx
ac513b 5a			pop	rdx
ac513c 4831c9			xor	rcx,rcx
ac513f			version_238:
ac513f			version_239:
ac513f			version_240:
ac513f			version_241:
ac513f			version_242:
ac513f 4983ff04			cmp	r15,byte 4
ac5143 49c7c7faffffff		mov	r15,dword -6
ac514a 7407			je	short label-end1
ac514c 49c7c7feffffff		mov	r15,dword -2
ac5153			label-end1:
ac5153			version_243:
ac5153 4d89fe			mov	r14,r15
ac5156 488b5500			mov	rdx,[rbp]
ac515a 4883c508			add	rbp,byte 8
ac515e 488b4210			mov	rax,[rdx+16]
ac5162 49c7c300000000		mov	r11,dword 0
ac5169 ffe0			jmp	rax
Patch direct stub jump at 7fffefac50ff
  > now jump to 7fffefac5104
------------------------------------------------------------------------
ac50ff				bits 64
ac50ff eb03			jmp	short fn_entry_2
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #11
      stack: ((boo) (int) (int) (clo) (ret))
      slot-loc: ((4 r . 8) (3 m . 1) (2 m . 2) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #12
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (m0 . #<identifier #6
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 4
      ffs: 0
      fn-num: 8>
------------------------------------------------------------------------
635070				bits 64
635070			stub_7ffff0635070_1:
635070 83c104			add	ecx,byte 4
635073 90			nop
635074			stub_7ffff0635070_0:
635074 e83df448ff		call	do_callback_handler
635079 7163160100000000
------------------------------------------------------------------------
ac516b				bits 64
ac516b 90		continuation_1:
ac516c			version_244:
ac516c 4983fefe			cmp	r14,byte -2
ac5170			patchable_jump1:
ac5170 0f84fefeb600		je	stub_7ffff0635070_0
ac5176 e9f5feb600		jmp	stub_7ffff0635070_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #13
                   ast: (($$atom odd?) ($$atom m0))
                   generator: #<procedure #14>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #15
      stack: ((int) (int) (clo) (ret))
      slot-loc: ((3 m . 1) (2 m . 2) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #12
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (m0 . #<identifier #6
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 4
      ffs: 0
      fn-num: 8>
>>> fall-through-optimization
------------------------------------------------------------------------
635058				bits 64
635058			stub_7ffff0635058_1:
635058 83c104			add	ecx,byte 4
63505b 90			nop
63505c			stub_7ffff0635058_0:
63505c e863f748ff		call	do_callback_cont_handler
635061 1164160100000000
------------------------------------------------------------------------
ac5176				bits 64
ac5176 9090		version_245:
ac5178			version_246:
ac5178 4c8b7510			mov	r14,[rbp+16]
ac517c			version_247:
ac517c 4883ed08			sub	rbp,byte 8
ac5180 48c7c0b8761501		mov	rax,dword 18183864
ac5187 48894500			mov	[rbp],rax
ac518b 4c89f3			mov	rbx,r14
ac518e			NORM_CALL_3:
ac518e 49c7c304000000		mov	r11,dword 4
ac5195 48c7c704000000		mov	rdi,dword 4
ac519c			stub_load_3:
ac519c e90b06b700		jmp	dest_7ffff06357ac_2
GEN VERSION FN#<lazy-code #7
                 ast: #f
                 generator: #<procedure #8>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #16
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((x0 . #<identifier #17
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 35>
Patch direct stub jump at 7fffefac519c
  > now jump to 7fffefac5104
------------------------------------------------------------------------
ac519c				bits 64
ac519c e963ffffff		jmp	fn_entry_2
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #18
      stack: ((boo) (int) (int) (clo) (ret))
      slot-loc: ((4 r . 8) (3 m . 1) (2 m . 2) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #12
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (m0 . #<identifier #19
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 4
      ffs: 0
      fn-num: 8>
------------------------------------------------------------------------
635040				bits 64
635040			stub_7ffff0635040_1:
635040 83c104			add	ecx,byte 4
635043 90			nop
635044			stub_7ffff0635040_0:
635044 e86df448ff		call	do_callback_handler
635049 0165160100000000
------------------------------------------------------------------------
ac51a1				bits 64
ac51a1 909090		continuation_2:
ac51a4			version_248:
ac51a4 4983fefe			cmp	r14,byte -2
ac51a8			patchable_jump2:
ac51a8 0f8496feb600		je	stub_7ffff0635040_0
ac51ae e98dfeb600		jmp	stub_7ffff0635040_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #20
                   ast: #f
                   generator: #<procedure #21>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #22
      stack: ((int) (int) (clo) (ret))
      slot-loc: ((3 m . 1) (2 m . 2) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #12
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (m0 . #<identifier #19
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 4
      ffs: 0
      fn-num: 8>
>>> fall-through-optimization
------------------------------------------------------------------------
635028				bits 64
635028			stub_7ffff0635028_1:
635028 83c104			add	ecx,byte 4
63502b 90			nop
63502c			stub_7ffff0635028_0:
63502c e80cf648ff		call	do_callback_fn_handler
635031 c1e5160100000000
------------------------------------------------------------------------
635010				bits 64
635010			stub_7ffff0635010_1:
635010 83c104			add	ecx,byte 4
635013 90			nop
635014			stub_7ffff0635010_0:
635014 e8abf748ff		call	do_callback_cont_handler
635019 21e6160100000000
------------------------------------------------------------------------
ac51ae				bits 64
ac51ae 9090		version_249:
ac51b0			version_250:
ac51b0			version_251:
ac51b0			version_252:
ac51b0			version_253:
ac51b0 4c8b7508			mov	r14,[rbp+8]
ac51b4			version_254:
ac51b4			alloc_begin_1:
ac51b4 4983c118			add	r9,byte 24
ac51b8 48b83070fff7ff7f
ac51c0 0000			mov	rax,140737354100784
ac51c2 4c3b08			cmp	r9,[rax]
ac51c5 7e09			jle	short alloc_end_1
ac51c7 e841eeffff		call	heap_limit_handler
ac51cc 4983c118			add	r9,byte 24
ac51d0			alloc_end_1:
ac51d0 49c741e870100000		mov	qword [r9-24],dword 4208
ac51d8 48c7c080651601		mov	rax,dword 18244992
ac51df 498941f0			mov	[r9-16],rax
ac51e3 488b4510			mov	rax,[rbp+16]
ac51e7 498941f8			mov	[r9-8],rax
ac51eb 498d79e9			lea	rdi,[r9-23]
ac51ef			version_255:
ac51ef 4883ed08			sub	rbp,byte 8
ac51f3 48c7c0c87b1601		mov	rax,dword 18250696
ac51fa 48894500			mov	[rbp],rax
ac51fe 4989fa			mov	r10,rdi
ac5201 4d89f7			mov	r15,r14
ac5204 48c7c300000000		mov	rbx,dword 0
ac520b			NORM_CALL_4:
ac520b 49c7c308000000		mov	r11,dword 8
ac5212 48c7c70c000000		mov	rdi,dword 12
ac5219			stub_load_4:
ac5219 e9c606b700		jmp	dest_7ffff06358e4_1
GEN VERSION FN#<lazy-code #23
                 ast: #f
                 generator: #<procedure #24>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #25
           stack: ((clo) (int) (int) (clo) (ret))
           slot-loc: ((4 r . 4) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lo0 . #<identifier #26
                           kind: local
                           sslots: (2)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (hi0 . #<identifier #27
                           kind: local
                           sslots: (3)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (f0 . #<identifier #28
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 22>
------------------------------------------------------------------------
634ff8				bits 64
634ff8			stub_7ffff0634ff8_1:
634ff8 83c104			add	ecx,byte 4
634ffb 90			nop
634ffc			stub_7ffff0634ff8_0:
634ffc e83cf648ff		call	do_callback_fn_handler
635001 c1e6160100000000
------------------------------------------------------------------------
ac521e				bits 64
ac521e 9090		fn_entry_3:
ac5220			version_256:
ac5220			version_257:
ac5220			version_258:
ac5220			version_259:
ac5220 4c89ff			mov	rdi,r15
ac5223			version_260:
ac5223 4d89d3			mov	r11,r10
ac5226			version_261:
ac5226 4989dc			mov	r12,rbx
ac5229			version_262:
ac5229 4d89e2			mov	r10,r12
ac522c 4d89df			mov	r15,r11
ac522f 4889fb			mov	rbx,rdi
ac5232			NORM_CALL_5:
ac5232			TAIL_CALL_1:
ac5232 49c7c30c000000		mov	r11,dword 12
ac5239 48c7c70c000000		mov	rdi,dword 12
ac5240			stub_load_5:
ac5240 e9b7fdb600		jmp	dest_7ffff0634ffc_1
Patch direct stub jump at 7fffefac5219
  > now jump to 7fffefac5220
------------------------------------------------------------------------
ac5219				bits 64
ac5219 eb05			jmp	short fn_entry_3
GEN VERSION FN#<lazy-code #29
                 ast: #f
                 generator: #<procedure #30>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #31
           stack: ((int) (clo) (int) (cloc 110) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((for-aux0
                  .
                  #<identifier #32
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (hi1 . #<identifier #33
                           kind: local
                           sslots: (3)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (f1 . #<identifier #34
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (lo1 . #<identifier #35
                           kind: local
                           sslots: (5)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 110>
------------------------------------------------------------------------
634fe0				bits 64
634fe0			stub_7ffff0634fe0_1:
634fe0 83c104			add	ecx,byte 4
634fe3 90			nop
634fe4			stub_7ffff0634fe0_0:
634fe4 e8cdf448ff		call	do_callback_handler
634fe9 71e7160100000000
------------------------------------------------------------------------
ac5245				bits 64
ac5245 909090		fn_entry_4:
ac5248			version_263:
ac5248 4c89d7			mov	rdi,r10
ac524b			version_264:
ac524b 4989db			mov	r11,rbx
ac524e			version_265:
ac524e			version_266:
ac524e			version_267:
ac524e			version_268:
ac524e 4c39df			cmp	rdi,r11
ac5251			patchable_jump3:
ac5251 0f8d8dfdb600		jge	stub_7ffff0634fe0_0
ac5257 e984fdb600		jmp	stub_7ffff0634fe0_1
Patch direct stub jump at 7fffefac5240
  > now jump to 7fffefac5248
------------------------------------------------------------------------
ac5240				bits 64
ac5240 eb06			jmp	short fn_entry_4
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #36
                   ast: (($$atom f1) ($$atom lo1))
                   generator: #<procedure #37>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #38
      stack: ((int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc: ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #32
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #39
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #34
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #40
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 1
      ffs: 0
      fn-num: 110>
>>> fall-through-optimization
------------------------------------------------------------------------
634fc8				bits 64
634fc8			stub_7ffff0634fc8_1:
634fc8 83c104			add	ecx,byte 4
634fcb 90			nop
634fcc			stub_7ffff0634fc8_0:
634fcc e8f3f748ff		call	do_callback_cont_handler
634fd1 11e8160100000000
------------------------------------------------------------------------
ac5257				bits 64
ac5257 90		version_269:
ac5258			version_270:
ac5258 4c89ff			mov	rdi,r15
ac525b			version_271:
ac525b			version_272:
ac525b 4d89d3			mov	r11,r10
ac525e			version_273:
ac525e 4883ed28			sub	rbp,byte 40
ac5262 4c895520			mov	[rbp+32],r10
ac5266 4c897d18			mov	[rbp+24],r15
ac526a 48895d10			mov	[rbp+16],rbx
ac526e 48897508			mov	[rbp+8],rsi
ac5272 48c7c098a51601		mov	rax,dword 18261400
ac5279 48894500			mov	[rbp],rax
ac527d 4c89db			mov	rbx,r11
ac5280 4889fe			mov	rsi,rdi
ac5283			NORM_CALL_6:
ac5283 49c7c304000000		mov	r11,dword 4
ac528a 48c7c704000000		mov	rdi,dword 4
ac5291 488b5607			mov	rdx,[rsi+7]
ac5295 ff6218			jmp	[rdx+24]
GEN VERSION FN#<lazy-code #41
                 ast: #f
                 generator: #<procedure #42>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #43
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((m0 . #<identifier #44
                          kind: free
                          sslots: ()
                          flags: ()
                          stype: (int)
                          cloc: (f . 0)
                          cst: #f
                          thisid: #f>)
                 (i0 . #<identifier #45
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 109>
------------------------------------------------------------------------
634fb0				bits 64
634fb0			stub_7ffff0634fb0_1:
634fb0 83c104			add	ecx,byte 4
634fb3 90			nop
634fb4			stub_7ffff0634fb0_0:
634fb4 e884f648ff		call	do_callback_fn_handler
634fb9 b1e8160100000000
------------------------------------------------------------------------
634f98				bits 64
634f98			stub_7ffff0634f98_1:
634f98 83c104			add	ecx,byte 4
634f9b 90			nop
634f9c			stub_7ffff0634f98_0:
634f9c e823f848ff		call	do_callback_cont_handler
634fa1 11e9160100000000
------------------------------------------------------------------------
ac5298				bits 64
ac5298			fn_entry_5:
ac5298			version_274:
ac5298			version_275:
ac5298			version_276:
ac5298			version_277:
ac5298 4c8b7e0f			mov	r15,[rsi+15]
ac529c			version_278:
ac529c			alloc_begin_2:
ac529c 4983c118			add	r9,byte 24
ac52a0 48b83070fff7ff7f
ac52a8 0000			mov	rax,140737354100784
ac52aa 4c3b08			cmp	r9,[rax]
ac52ad 7e09			jle	short alloc_end_2
ac52af e859edffff		call	heap_limit_handler
ac52b4 4983c118			add	r9,byte 24
ac52b8			alloc_end_2:
ac52b8 49c741e870100000		mov	qword [r9-24],dword 4208
ac52c0 48c7c058af1601		mov	rax,dword 18263896
ac52c7 498941f0			mov	[r9-16],rax
ac52cb 498959f8			mov	[r9-8],rbx
ac52cf 498d79e9			lea	rdi,[r9-23]
ac52d3			version_279:
ac52d3 4883ed18			sub	rbp,byte 24
ac52d7 48895d10			mov	[rbp+16],rbx
ac52db 48897508			mov	[rbp+8],rsi
ac52df 48c7c0a0c51601		mov	rax,dword 18269600
ac52e6 48894500			mov	[rbp],rax
ac52ea 4989fa			mov	r10,rdi
ac52ed 48c7c300000000		mov	rbx,dword 0
ac52f4			NORM_CALL_7:
ac52f4 49c7c308000000		mov	r11,dword 8
ac52fb 48c7c70c000000		mov	rdi,dword 12
ac5302			stub_load_6:
ac5302 e9dd05b700		jmp	dest_7ffff06358e4_2
GEN VERSION FN#<lazy-code #23
                 ast: #f
                 generator: #<procedure #24>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #46
           stack: ((clo) (int) (int) (clo) (ret))
           slot-loc: ((4 r . 4) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lo0 . #<identifier #47
                           kind: local
                           sslots: (2)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (hi0 . #<identifier #48
                           kind: local
                           sslots: (3)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (f0 . #<identifier #49
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 22>
Patch direct stub jump at 7fffefac5302
  > now jump to 7fffefac5220
------------------------------------------------------------------------
ac5302				bits 64
ac5302 e919ffffff		jmp	fn_entry_3
GEN VERSION FN#<lazy-code #50
                 ast: #f
                 generator: #<procedure #51>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #52
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((i0 . #<identifier #53
                          kind: free
                          sslots: ()
                          flags: ()
                          stype: (int)
                          cloc: (f . 0)
                          cst: #f
                          thisid: #f>)
                 (j0 . #<identifier #54
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 111>
------------------------------------------------------------------------
634f80				bits 64
634f80			stub_7ffff0634f80_1:
634f80 83c104			add	ecx,byte 4
634f83 90			nop
634f84			stub_7ffff0634f80_0:
634f84 e83bf848ff		call	do_callback_cont_handler
634f89 01ea160100000000
------------------------------------------------------------------------
ac5307				bits 64
ac5307 90		fn_entry_6:
ac5308			version_280:
ac5308			version_281:
ac5308			version_282:
ac5308 4c8b7e0f			mov	r15,[rsi+15]
ac530c			version_283:
ac530c 4883ed18			sub	rbp,byte 24
ac5310 48895d10			mov	[rbp+16],rbx
ac5314 48897508			mov	[rbp+8],rsi
ac5318 48c7c0b8d11601		mov	rax,dword 18272696
ac531f 48894500			mov	[rbp],rax
ac5323 4c89fb			mov	rbx,r15
ac5326			NORM_CALL_8:
ac5326 49c7c304000000		mov	r11,dword 4
ac532d 48c7c704000000		mov	rdi,dword 4
ac5334			stub_load_7:
ac5334 e95b04b700		jmp	dest_7ffff0635794_1
GEN VERSION FN#<lazy-code #55
                 ast: #f
                 generator: #<procedure #56>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #57
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((x0 . #<identifier #58
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 36>
------------------------------------------------------------------------
634f68				bits 64
634f68			stub_7ffff0634f68_0:
634f68 e849f548ff		call	do_callback_handler
634f6d 0109170100000000
------------------------------------------------------------------------
ac5339				bits 64
ac5339 909090		fn_entry_7:
ac533c			version_284:
ac533c 4989df			mov	r15,rbx
ac533f			version_285:
ac533f			version_286:
ac533f			version_287:
ac533f			version_288:
ac533f			version_289:
ac533f			version_290:
ac533f 48c7c108000000		mov	rcx,dword 8
ac5346 52			push	rdx
ac5347 4883f900			cmp	rcx,byte 0
ac534b 0f8417fcb600		je	stub_7ffff0634f68_0
ac5351 4c89f8			mov	rax,r15
ac5354 48c1f802			sar	rax,2
ac5358 4899			cqo
ac535a 48c1f902			sar	rcx,2
ac535e 48f7f9			idiv	rcx
ac5361 4889d0			mov	rax,rdx
ac5364 4801c8			add	rax,rcx
ac5367 4899			cqo
ac5369 48f7f9			idiv	rcx
ac536c 48c1e202			shl	rdx,2
ac5370 4989d7			mov	r15,rdx
ac5373 5a			pop	rdx
ac5374 4831c9			xor	rcx,rcx
ac5377			version_291:
ac5377			version_292:
ac5377			version_293:
ac5377			version_294:
ac5377			version_295:
ac5377 4983ff00			cmp	r15,byte 0
ac537b 49c7c7faffffff		mov	r15,dword -6
ac5382 7407			je	short label-end2
ac5384 49c7c7feffffff		mov	r15,dword -2
ac538b			label-end2:
ac538b			version_296:
ac538b 4d89fe			mov	r14,r15
ac538e 488b5500			mov	rdx,[rbp]
ac5392 4883c508			add	rbp,byte 8
ac5396 488b4210			mov	rax,[rdx+16]
ac539a 49c7c300000000		mov	r11,dword 0
ac53a1 ffe0			jmp	rax
Patch direct stub jump at 7fffefac5334
  > now jump to 7fffefac533c
------------------------------------------------------------------------
ac5334				bits 64
ac5334 eb06			jmp	short fn_entry_7
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #59
      stack: ((boo) (cloc 108) (int) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((i0 . #<identifier #60
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (j0 . #<identifier #54
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 111>
------------------------------------------------------------------------
634f50				bits 64
634f50			stub_7ffff0634f50_1:
634f50 83c104			add	ecx,byte 4
634f53 90			nop
634f54			stub_7ffff0634f50_0:
634f54 e86bf848ff		call	do_callback_cont_handler
634f59 a109170100000000
------------------------------------------------------------------------
ac53a3				bits 64
ac53a3 90		continuation_3:
ac53a4			version_297:
ac53a4			version_298:
ac53a4 4c8b7d08			mov	r15,[rbp+8]
ac53a8			version_299:
ac53a8 4883ed10			sub	rbp,byte 16
ac53ac 4c897508			mov	[rbp+8],r14
ac53b0 48c7c0d0091701		mov	rax,dword 18287056
ac53b7 48894500			mov	[rbp],rax
ac53bb 4c89fb			mov	rbx,r15
ac53be			NORM_CALL_9:
ac53be 49c7c304000000		mov	r11,dword 4
ac53c5 48c7c704000000		mov	rdi,dword 4
ac53cc			stub_load_8:
ac53cc e9c303b700		jmp	dest_7ffff0635794_2
GEN VERSION FN#<lazy-code #55
                 ast: #f
                 generator: #<procedure #56>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #61
           stack: ((int) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((x0 . #<identifier #62
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 36>
Patch direct stub jump at 7fffefac53cc
  > now jump to 7fffefac533c
------------------------------------------------------------------------
ac53cc				bits 64
ac53cc e96bffffff		jmp	fn_entry_7
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #63
      stack: ((boo) (boo) (cloc 108) (int) (clo) (ret))
      slot-loc: ((5 r . 8) (4 m . 3) (3 . #f) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((i0 . #<identifier #60
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (j0 . #<identifier #64
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 111>
------------------------------------------------------------------------
634f38				bits 64
634f38			stub_7ffff0634f38_1:
634f38 83c104			add	ecx,byte 4
634f3b 90			nop
634f3c			stub_7ffff0634f38_0:
634f3c e883f848ff		call	do_callback_cont_handler
634f41 2191170100000000
------------------------------------------------------------------------
ac53d1				bits 64
ac53d1 909090		continuation_4:
ac53d4			version_300:
ac53d4 4883ed08			sub	rbp,byte 8
ac53d8 48c7c0a8121701		mov	rax,dword 18289320
ac53df 48894500			mov	[rbp],rax
ac53e3 4d89f7			mov	r15,r14
ac53e6 488b5d08			mov	rbx,[rbp+8]
ac53ea			NORM_CALL_10:
ac53ea 49c7c310000000		mov	r11,dword 16
ac53f1 48c7c708000000		mov	rdi,dword 8
ac53f8			stub_load_9:
ac53f8 e9d7fcb600		jmp	dest_7ffff06350d4_1
GEN VERSION FN#<lazy-code #65
                 ast: #f
                 generator: #<procedure #66>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #67
           stack: ((boo) (boo) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((x0 . #<identifier #68
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (y0 . #<identifier #69
                          kind: local
                          sslots: (3)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 2
           nb-args: 2
           fs: 1
           ffs: 0
           fn-num: 108>
------------------------------------------------------------------------
634f20				bits 64
634f20			stub_7ffff0634f20_1:
634f20 83c104			add	ecx,byte 4
634f23 90			nop
634f24			stub_7ffff0634f20_0:
634f24 e88df548ff		call	do_callback_handler
634f29 c191170100000000
------------------------------------------------------------------------
ac53fd				bits 64
ac53fd 909090		fn_entry_8:
ac5400			version_301:
ac5400			version_302:
ac5400			version_303:
ac5400			version_304:
ac5400 4889df			mov	rdi,rbx
ac5403			version_305:
ac5403			version_306:
ac5403			version_307:
ac5403			version_308:
ac5403			version_309:
ac5403 48c7c7feffffff		mov	rdi,dword -2
ac540a			version_310:
ac540a 4883fffe			cmp	rdi,byte -2
ac540e			patchable_jump4:
ac540e 0f8410fbb600		je	stub_7ffff0634f20_0
ac5414 e907fbb600		jmp	stub_7ffff0634f20_1
Patch direct stub jump at 7fffefac53f8
  > now jump to 7fffefac5400
------------------------------------------------------------------------
ac53f8				bits 64
ac53f8 eb06			jmp	short fn_entry_8
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac540e -> 7ffff0634f20
GEN VERSION >>> #<lazy-code #70
                   ast: #f
                   generator: #<procedure #71>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #72
      stack: ((boo) (boo) (clo) (ret))
      slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #73
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #69
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 108>
>>> fall-through-optimization
------------------------------------------------------------------------
ac5414				bits 64
ac5414			version_311:
ac5414 4889df			mov	rdi,rbx
ac5417			version_312:
ac5417 4d89fa			mov	r10,r15
ac541a			version_313:
ac541a			version_314:
ac541a			version_315:
ac541a 4c39d7			cmp	rdi,r10
ac541d 48c7c7faffffff		mov	rdi,dword -6
ac5424 7407			je	short eq?_end_1
ac5426 48c7c7feffffff		mov	rdi,dword -2
ac542d			eq?_end_1:
ac542d			version_316:
ac542d 4989fe			mov	r14,rdi
ac5430 488b5500			mov	rdx,[rbp]
ac5434 4883c508			add	rbp,byte 8
ac5438 488b4210			mov	rax,[rdx+16]
ac543c 49c7c300000000		mov	r11,dword 0
ac5443 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #74
      stack: ((boo) (int) (clo) (ret))
      slot-loc: ((3 r . 8) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 3))
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((i0 . #<identifier #60
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (j0 . #<identifier #64
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 111>
------------------------------------------------------------------------
634f08				bits 64
634f08			stub_7ffff0634f08_1:
634f08 83c104			add	ecx,byte 4
634f0b 90			nop
634f0c			stub_7ffff0634f08_0:
634f0c e8a5f548ff		call	do_callback_handler
634f11 b192170100000000
------------------------------------------------------------------------
ac5445				bits 64
ac5445 909090		continuation_5:
ac5448			version_317:
ac5448 4983fefe			cmp	r14,byte -2
ac544c			patchable_jump5:
ac544c 0f84bafab600		je	stub_7ffff0634f08_0
ac5452 e9b1fab600		jmp	stub_7ffff0634f08_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #75
                   ast: #f
                   generator: #<procedure #76>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #77
      stack: ((int) (clo) (ret))
      slot-loc: ((2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 3))
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((i0 . #<identifier #60
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (j0 . #<identifier #64
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 111>
>>> fall-through-optimization
------------------------------------------------------------------------
ac5452				bits 64
ac5452 9090		version_318:
ac5454			version_319:
ac5454 49c7c6f6ffffff		mov	r14,dword -10
ac545b 488b5518			mov	rdx,[rbp+24]
ac545f 4883c520			add	rbp,byte 32
ac5463 488b4218			mov	rax,[rdx+24]
ac5467 49c7c304000000		mov	r11,dword 4
ac546e ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type nul and ctx:
#<ctx #78
      stack: ((nul) (int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc:
       ((6 r . 8) (5 m . 1) (4 m . 2) (3 m . 3) (2 . #f) (1 m . 4) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 5)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #32
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #39
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #79
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #80
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 5
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
634ef0				bits 64
634ef0			stub_7ffff0634ef0_0:
634ef0 e8c1f548ff		call	do_callback_handler
634ef5 a193170100000000
------------------------------------------------------------------------
634ed8				bits 64
634ed8			stub_7ffff0634ed8_1:
634ed8 83c104			add	ecx,byte 4
634edb 90			nop
634edc			stub_7ffff0634ed8_0:
634edc e8e3f848ff		call	do_callback_cont_handler
634ee1 f193170100000000
------------------------------------------------------------------------
ac5470				bits 64
ac5470			continuation_6:
ac5470			version_320:
ac5470			version_321:
ac5470 488b7d08			mov	rdi,[rbp+8]
ac5474			version_322:
ac5474 4c8b5d10			mov	r11,[rbp+16]
ac5478			version_323:
ac5478 488b7518			mov	rsi,[rbp+24]
ac547c			version_324:
ac547c			version_325:
ac547c			version_326:
ac547c			version_327:
ac547c			version_328:
ac547c 4889f3			mov	rbx,rsi
ac547f 4883c304			add	rbx,byte 4
ac5483 0f8067fab600		jo	stub_7ffff0634ef0_0
ac5489			version_329:
ac5489 4883ed10			sub	rbp,byte 16
ac548d 4c897508			mov	[rbp+8],r14
ac5491 48c7c0502c1701		mov	rax,dword 18295888
ac5498 48894500			mov	[rbp],rax
ac549c 4989da			mov	r10,rbx
ac549f 4d89df			mov	r15,r11
ac54a2 4889fb			mov	rbx,rdi
ac54a5			NORM_CALL_11:
ac54a5 49c7c30c000000		mov	r11,dword 12
ac54ac 48c7c70c000000		mov	rdi,dword 12
ac54b3			stub_load_10:
ac54b3 e944fbb600		jmp	dest_7ffff0634ffc_2
GEN VERSION FN#<lazy-code #29
                 ast: #f
                 generator: #<procedure #30>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #81
           stack: ((int) (clo) (int) (cloc 110) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((for-aux0
                  .
                  #<identifier #82
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (hi1 . #<identifier #83
                           kind: local
                           sslots: (3)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (f1 . #<identifier #84
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (lo1 . #<identifier #85
                           kind: local
                           sslots: (5)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 110>
Patch direct stub jump at 7fffefac54b3
  > now jump to 7fffefac5248
------------------------------------------------------------------------
ac54b3				bits 64
ac54b3 e990fdffff		jmp	fn_entry_4
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #86
                   ast: #f
                   generator: #<procedure #87>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #77
      stack: ((int) (clo) (ret))
      slot-loc: ((2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 3))
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((i0 . #<identifier #60
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (j0 . #<identifier #64
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 111>
------------------------------------------------------------------------
ac54b8				bits 64
ac54b8			version_330:
ac54b8 488b4508			mov	rax,[rbp+8]
ac54bc 4c8b700f			mov	r14,[rax+15]
ac54c0			version_331:
ac54c0 4c8b7d10			mov	r15,[rbp+16]
ac54c4			version_332:
ac54c4			version_333:
ac54c4			version_334:
ac54c4			version_335:
ac54c4			alloc_begin_3:
ac54c4 4983c118			add	r9,byte 24
ac54c8 48b83070fff7ff7f
ac54d0 0000			mov	rax,140737354100784
ac54d2 4c3b08			cmp	r9,[rax]
ac54d5 7e09			jle	short alloc_end_3
ac54d7 e831ebffff		call	heap_limit_handler
ac54dc 4983c118			add	r9,byte 24
ac54e0			alloc_end_3:
ac54e0 49c741e808100000		mov	qword [r9-24],dword 4104
ac54e8 4d8971f8			mov	[r9-8],r14
ac54ec 4d8979f0			mov	[r9-16],r15
ac54f0 4d8d71eb			lea	r14,[r9-21]
ac54f4			version_336:
ac54f4			version_337:
ac54f4			version_338:
ac54f4			version_339:
ac54f4			alloc_begin_4:
ac54f4 4983c118			add	r9,byte 24
ac54f8 48b83070fff7ff7f
ac5500 0000			mov	rax,140737354100784
ac5502 4c3b08			cmp	r9,[rax]
ac5505 7e09			jle	short alloc_end_4
ac5507 e801ebffff		call	heap_limit_handler
ac550c 4983c118			add	r9,byte 24
ac5510			alloc_end_4:
ac5510 49c741e808100000		mov	qword [r9-24],dword 4104
ac5518			version_340:
ac5518 49c741e808100000		mov	qword [r9-24],dword 4104
ac5520 49c741f0f6ffffff		mov	qword [r9-16],dword -10
ac5528 4d8971f8			mov	[r9-8],r14
ac552c 4d8d71eb			lea	r14,[r9-21]
ac5530			version_341:
ac5530 488b5518			mov	rdx,[rbp+24]
ac5534 4883c520			add	rbp,byte 32
ac5538 488b4220			mov	rax,[rdx+32]
ac553c 49c7c308000000		mov	r11,dword 8
ac5543 ffe0			jmp	rax
>>> patching jump at 7fffefac544c -> 7fffefac54b8
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #88
      stack: ((pai) (int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc:
       ((6 r . 8) (5 m . 1) (4 m . 2) (3 m . 3) (2 . #f) (1 m . 4) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 5)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #32
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #39
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #89
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #90
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 5
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
634f08				bits 64
634f08			stub_7ffff0634f08_0:
634f08 e8a9f548ff		call	do_callback_handler
634f0d 3195170100000000
------------------------------------------------------------------------
634ec0				bits 64
634ec0			stub_7ffff0634ec0_1:
634ec0 83c104			add	ecx,byte 4
634ec3 90			nop
634ec4			stub_7ffff0634ec0_0:
634ec4 e8fbf848ff		call	do_callback_cont_handler
634ec9 8195170100000000
------------------------------------------------------------------------
ac5545				bits 64
ac5545 909090		continuation_7:
ac5548			version_342:
ac5548			version_343:
ac5548 488b7d08			mov	rdi,[rbp+8]
ac554c			version_344:
ac554c 4c8b5d10			mov	r11,[rbp+16]
ac5550			version_345:
ac5550 488b7518			mov	rsi,[rbp+24]
ac5554			version_346:
ac5554			version_347:
ac5554			version_348:
ac5554			version_349:
ac5554			version_350:
ac5554 4889f3			mov	rbx,rsi
ac5557 4883c304			add	rbx,byte 4
ac555b 0f80a7f9b600		jo	stub_7ffff0634f08_0
ac5561			version_351:
ac5561 4883ed10			sub	rbp,byte 16
ac5565 4c897508			mov	[rbp+8],r14
ac5569 48c7c0f83f1701		mov	rax,dword 18300920
ac5570 48894500			mov	[rbp],rax
ac5574 4989da			mov	r10,rbx
ac5577 4d89df			mov	r15,r11
ac557a 4889fb			mov	rbx,rdi
ac557d			NORM_CALL_12:
ac557d 49c7c30c000000		mov	r11,dword 12
ac5584 48c7c70c000000		mov	rdi,dword 12
ac558b			stub_load_11:
ac558b e96cfab600		jmp	dest_7ffff0634ffc_3
GEN VERSION FN#<lazy-code #29
                 ast: #f
                 generator: #<procedure #30>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #91
           stack: ((int) (clo) (int) (cloc 110) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((for-aux0
                  .
                  #<identifier #92
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (hi1 . #<identifier #93
                           kind: local
                           sslots: (3)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>)
                 (f1 . #<identifier #94
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (lo1 . #<identifier #95
                           kind: local
                           sslots: (5)
                           flags: ()
                           stype: #f
                           cloc: #f
                           cst: #f
                           thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 110>
Patch direct stub jump at 7fffefac558b
  > now jump to 7fffefac5248
------------------------------------------------------------------------
ac558b				bits 64
ac558b e9b8fcffff		jmp	fn_entry_4
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #96
                   ast: #f
                   generator: #<procedure #97>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #38
      stack: ((int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc: ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #32
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #39
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #34
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #40
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 1
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
ac5590				bits 64
ac5590			version_352:
ac5590			version_353:
ac5590 48c7c7f6ffffff		mov	rdi,dword -10
ac5597 4989fe			mov	r14,rdi
ac559a 488b5500			mov	rdx,[rbp]
ac559e 4883c508			add	rbp,byte 8
ac55a2 488b4218			mov	rax,[rdx+24]
ac55a6 49c7c304000000		mov	r11,dword 4
ac55ad ffe0			jmp	rax
>>> patching jump at 7fffefac5251 -> 7fffefac5590
GEN VERSION CONTINUATION (CR) >>> Patch table with type nul and ctx:
#<ctx #98
      stack: ((nul) (nul) (int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc:
       ((7 r . 8)
        (6 m . 5)
        (5 m . 1)
        (4 m . 2)
        (3 m . 3)
        (2 . #f)
        (1 m . 4)
        (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 5)
        (r . 0)
        (r . 2)
        (r . 1)
        (r . 4)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #99
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #100
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #101
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #102
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 6
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
ac55af				bits 64
ac55af 90		continuation_8:
ac55b0			version_354:
ac55b0			version_355:
ac55b0			version_356:
ac55b0			version_357:
ac55b0			alloc_begin_5:
ac55b0 4983c118			add	r9,byte 24
ac55b4 48b83070fff7ff7f
ac55bc 0000			mov	rax,140737354100784
ac55be 4c3b08			cmp	r9,[rax]
ac55c1 7e09			jle	short alloc_end_5
ac55c3 e845eaffff		call	heap_limit_handler
ac55c8 4983c118			add	r9,byte 24
ac55cc			alloc_end_5:
ac55cc 49c741e808100000		mov	qword [r9-24],dword 4104
ac55d4 488b4500			mov	rax,[rbp]
ac55d8 498941f8			mov	[r9-8],rax
ac55dc 4d8971f0			mov	[r9-16],r14
ac55e0 4d8d71eb			lea	r14,[r9-21]
ac55e4			version_358:
ac55e4 488b5528			mov	rdx,[rbp+40]
ac55e8 4883c530			add	rbp,byte 48
ac55ec 488b4220			mov	rax,[rdx+32]
ac55f0 49c7c308000000		mov	r11,dword 8
ac55f7 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #103
      stack: ((pai) (pai) (int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc:
       ((7 r . 8)
        (6 m . 5)
        (5 m . 1)
        (4 m . 2)
        (3 m . 3)
        (2 . #f)
        (1 m . 4)
        (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 5)
        (r . 0)
        (r . 2)
        (r . 1)
        (r . 4)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #104
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #105
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #106
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #107
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 6
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
ac55f9				bits 64
ac55f9 909090		continuation_9:
ac55fc			version_359:
ac55fc			version_360:
ac55fc			version_361:
ac55fc			version_362:
ac55fc			alloc_begin_6:
ac55fc 4983c118			add	r9,byte 24
ac5600 48b83070fff7ff7f
ac5608 0000			mov	rax,140737354100784
ac560a 4c3b08			cmp	r9,[rax]
ac560d 7e09			jle	short alloc_end_6
ac560f e8f9e9ffff		call	heap_limit_handler
ac5614 4983c118			add	r9,byte 24
ac5618			alloc_end_6:
ac5618 49c741e808100000		mov	qword [r9-24],dword 4104
ac5620 488b4500			mov	rax,[rbp]
ac5624 498941f8			mov	[r9-8],rax
ac5628 4d8971f0			mov	[r9-16],r14
ac562c 4d8d71eb			lea	r14,[r9-21]
ac5630 ebb2			jmp	short version_358
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #108
      stack: ((pai) (nul) (int) (clo) (int) (cloc 110) (clo) (ret))
      slot-loc:
       ((7 r . 8)
        (6 m . 5)
        (5 m . 1)
        (4 m . 2)
        (3 m . 3)
        (2 . #f)
        (1 m . 4)
        (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 5)
        (r . 0)
        (r . 2)
        (r . 1)
        (r . 4)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((for-aux0
             .
             #<identifier #109
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (hi1 . #<identifier #110
                      kind: local
                      sslots: (3)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>)
            (f1 . #<identifier #111
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lo1 . #<identifier #102
                      kind: local
                      sslots: (5)
                      flags: ()
                      stype: #f
                      cloc: #f
                      cst: #f
                      thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 6
      ffs: 0
      fn-num: 110>
------------------------------------------------------------------------
ac5632				bits 64
ac5632 9090		continuation_10:
ac5634			version_363:
ac5634			version_364:
ac5634			version_365:
ac5634			version_366:
ac5634			alloc_begin_7:
ac5634 4983c118			add	r9,byte 24
ac5638 48b83070fff7ff7f
ac5640 0000			mov	rax,140737354100784
ac5642 4c3b08			cmp	r9,[rax]
ac5645 7e09			jle	short alloc_end_7
ac5647 e8c1e9ffff		call	heap_limit_handler
ac564c 4983c118			add	r9,byte 24
ac5650			alloc_end_7:
ac5650 49c741e808100000		mov	qword [r9-24],dword 4104
ac5658 488b4500			mov	rax,[rbp]
ac565c 498941f8			mov	[r9-8],rax
ac5660 4d8971f0			mov	[r9-16],r14
ac5664 4d8d71eb			lea	r14,[r9-21]
ac5668 e977ffffff		jmp	version_358
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #112
      stack: ((pai) (cloc 21) (int) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 3)
        (r . 2)
        (r . 0)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((m0 . #<identifier #113
                     kind: free
                     sslots: ()
                     flags: ()
                     stype: (int)
                     cloc: (f . 0)
                     cst: #f
                     thisid: #f>)
            (i0 . #<identifier #45
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 109>
------------------------------------------------------------------------
ac566d				bits 64
ac566d 909090		continuation_11:
ac5670			version_367:
ac5670 4c89f3			mov	rbx,r14
ac5673 4883c510			add	rbp,byte 16
ac5677			NORM_CALL_13:
ac5677			TAIL_CALL_2:
ac5677 49c7c314000000		mov	r11,dword 20
ac567e 48c7c704000000		mov	rdi,dword 4
ac5685			stub_load_12:
ac5685 e97202b700		jmp	dest_7ffff06358fc_1
GEN VERSION FN#<lazy-code #114
                 ast: #f
                 generator: #<procedure #115>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #116
           stack: ((pai) (clo) (ret))
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lists0 . #<identifier #117
                              kind: local
                              sslots: (2)
                              flags: ()
                              stype: #f
                              cloc: #f
                              cst: #f
                              thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 21>
------------------------------------------------------------------------
ac568a				bits 64
ac568a 9090		fn_entry_9:
ac568c			version_368:
ac568c			version_369:
ac568c			version_370:
ac568c			version_371:
ac568c 4989df			mov	r15,rbx
ac568f			version_372:
ac568f 4d89fa			mov	r10,r15
ac5692 49c7c7f6ffffff		mov	r15,dword -10
ac5699 48c7c3a1571701		mov	rbx,dword 18306977
ac56a0			NORM_CALL_14:
ac56a0			TAIL_CALL_3:
ac56a0 49c7c318000000		mov	r11,dword 24
ac56a7 48c7c70c000000		mov	rdi,dword 12
ac56ae			stub_load_13:
ac56ae e90102b700		jmp	dest_7ffff06358b4_1
Patch direct stub jump at 7fffefac5685
  > now jump to 7fffefac568c
------------------------------------------------------------------------
ac5685				bits 64
ac5685 eb05			jmp	short fn_entry_9
GEN VERSION FN#<lazy-code #118
                 ast: #f
                 generator: #<procedure #119>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #120
           stack: ((pai) (nul) (clo) (clo) (ret))
           slot-loc: ((4 r . 4) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((f0 . #<identifier #121
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (base0 . #<identifier #122
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst0 . #<identifier #123
                            kind: local
                            sslots: (4)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 24>
------------------------------------------------------------------------
634fe0				bits 64
634fe0			stub_7ffff0634fe0_1:
634fe0 83c104			add	ecx,byte 4
634fe3 90			nop
634fe4			stub_7ffff0634fe0_0:
634fe4 e854f648ff		call	do_callback_fn_handler
634fe9 d1ac170100000000
------------------------------------------------------------------------
ac56b3				bits 64
ac56b3 90		fn_entry_10:
ac56b4			version_373:
ac56b4			version_374:
ac56b4			version_375:
ac56b4			version_376:
ac56b4 4889df			mov	rdi,rbx
ac56b7			version_377:
ac56b7 4d89fb			mov	r11,r15
ac56ba			version_378:
ac56ba 4d89d4			mov	r12,r10
ac56bd			version_379:
ac56bd 4d89e2			mov	r10,r12
ac56c0 4d89df			mov	r15,r11
ac56c3 4889fb			mov	rbx,rdi
ac56c6			NORM_CALL_15:
ac56c6			TAIL_CALL_4:
ac56c6 49c7c318000000		mov	r11,dword 24
ac56cd 48c7c70c000000		mov	rdi,dword 12
ac56d4			stub_load_14:
ac56d4 e90bf9b600		jmp	dest_7ffff0634fe4_1
Patch direct stub jump at 7fffefac56ae
  > now jump to 7fffefac56b4
------------------------------------------------------------------------
ac56ae				bits 64
ac56ae eb04			jmp	short fn_entry_10
GEN VERSION FN#<lazy-code #124
                 ast: #f
                 generator: #<procedure #125>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #126
           stack: ((pai) (nul) (clo) (cloc 112) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((foldr-aux0
                  .
                  #<identifier #127
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (f1 . #<identifier #128
                          kind: local
                          sslots: (3)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (base1 . #<identifier #129
                             kind: local
                             sslots: (4)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst1 . #<identifier #130
                            kind: local
                            sslots: (5)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 112>
------------------------------------------------------------------------
634ea8				bits 64
634ea8			stub_7ffff0634ea8_1:
634ea8 83c104			add	ecx,byte 4
634eab 90			nop
634eac			stub_7ffff0634ea8_0:
634eac e813f948ff		call	do_callback_cont_handler
634eb1 81ad170100000000
------------------------------------------------------------------------
ac56d9				bits 64
ac56d9 909090		fn_entry_11:
ac56dc			version_380:
ac56dc			version_381:
ac56dc			version_382:
ac56dc 4889df			mov	rdi,rbx
ac56df			version_383:
ac56df			version_384:
ac56df 4d89d3			mov	r11,r10
ac56e2			version_385:
ac56e2			version_386:
ac56e2			version_387:
ac56e2			version_388:
ac56e2 4d8b5b0d			mov	r11,[r11+13]
ac56e6			version_389:
ac56e6			version_390:
ac56e6 4989fc			mov	r12,rdi
ac56e9			version_391:
ac56e9 4d89fd			mov	r13,r15
ac56ec			version_392:
ac56ec 4d89d6			mov	r14,r10
ac56ef			version_393:
ac56ef			version_394:
ac56ef			version_395:
ac56ef			version_396:
ac56ef 4d8b7605			mov	r14,[r14+5]
ac56f3			version_397:
ac56f3 4883ed30			sub	rbp,byte 48
ac56f7 4c895d28			mov	[rbp+40],r11
ac56fb 48897d20			mov	[rbp+32],rdi
ac56ff 4c895518			mov	[rbp+24],r10
ac5703 4c897d10			mov	[rbp+16],r15
ac5707 48897508			mov	[rbp+8],rsi
ac570b 48c7c0e07b1701		mov	rax,dword 18316256
ac5712 48894500			mov	[rbp],rax
ac5716 4d89f2			mov	r10,r14
ac5719 4d89ef			mov	r15,r13
ac571c 4c89e3			mov	rbx,r12
ac571f			NORM_CALL_16:
ac571f 49c7c31c000000		mov	r11,dword 28
ac5726 48c7c70c000000		mov	rdi,dword 12
ac572d			stub_load_15:
ac572d e9b2f8b600		jmp	dest_7ffff0634fe4_2
Patch direct stub jump at 7fffefac56d4
  > now jump to 7fffefac56dc
------------------------------------------------------------------------
ac56d4				bits 64
ac56d4 eb06			jmp	short fn_entry_11
GEN VERSION FN#<lazy-code #124
                 ast: #f
                 generator: #<procedure #125>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #131
           stack: ((unk) (nul) (clo) (cloc 112) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((foldr-aux0
                  .
                  #<identifier #132
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (f1 . #<identifier #133
                          kind: local
                          sslots: (3)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (base1 . #<identifier #134
                             kind: local
                             sslots: (4)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst1 . #<identifier #135
                            kind: local
                            sslots: (5)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 112>
------------------------------------------------------------------------
634e90				bits 64
634e90			stub_7ffff0634e90_1:
634e90 83c104			add	ecx,byte 4
634e93 90			nop
634e94			stub_7ffff0634e90_0:
634e94 e81df648ff		call	do_callback_handler
634e99 21ae170100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5732				bits 64
ac5732 9090		fn_entry_12:
ac5734			version_398:
ac5734			version_399:
ac5734 4c89d7			mov	rdi,r10
ac5737			version_400:
ac5737 48c7c0f6ffffff		mov	rax,dword -10
ac573e 4839f8			cmp	rax,rdi
ac5741			patchable_jump6:
ac5741 0f844df7b600		je	stub_7ffff0634e90_0
ac5747 e944f7b600		jmp	stub_7ffff0634e90_1
Patch direct stub jump at 7fffefac572d
  > now jump to 7fffefac5734
------------------------------------------------------------------------
ac572d				bits 64
ac572d eb05			jmp	short fn_entry_12
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #136
                   ast: #f
                   generator: #<procedure #137>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #138
      stack: ((unk) (unk) (nul) (clo) (cloc 112) (clo) (ret))
      slot-loc:
       ((6 r . 3) (5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((foldr-aux0
             .
             #<identifier #132
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (f1 . #<identifier #133
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (base1 . #<identifier #134
                        kind: local
                        sslots: (4)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst1 . #<identifier #139
                       kind: local
                       sslots: (6 5)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 1
      ffs: 0
      fn-num: 112>
>>> fall-through-optimization
------------------------------------------------------------------------
634e78				bits 64
634e78			stub_7ffff0634e78_1:
634e78 83c104			add	ecx,byte 4
634e7b 90			nop
634e7c			stub_7ffff0634e78_0:
634e7c e835f648ff		call	do_callback_handler
634e81 c1ae170100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5747				bits 64
ac5747 90		version_401:
ac5748			version_402:
ac5748			version_403:
ac5748 4889df			mov	rdi,rbx
ac574b			version_404:
ac574b			version_405:
ac574b 4d89d3			mov	r11,r10
ac574e			version_406:
ac574e 48c7c003000000		mov	rax,dword 3
ac5755 4c21d8			and	rax,r11
ac5758 4883f803			cmp	rax,byte 3
ac575c			patchable_jump7:
ac575c 0f841af7b600		je	stub_7ffff0634e78_0
ac5762 e911f7b600		jmp	stub_7ffff0634e78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac575c -> 7ffff0634e78
GEN VERSION >>> #<lazy-code #140
                   ast: #f
                   generator: #<procedure #141>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #142
      stack: ((pai) (clo) (pai) (nul) (clo) (cloc 112) (clo) (ret))
      slot-loc:
       ((7 r . 5)
        (6 r . 3)
        (5 r . 4)
        (4 r . 1)
        (3 r . 0)
        (2 . #f)
        (1 r . 2)
        (0 m . 0))
      free-regs: ((r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((foldr-aux0
             .
             #<identifier #132
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (f1 . #<identifier #143
                     kind: local
                     sslots: (6 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (base1 . #<identifier #134
                        kind: local
                        sslots: (4)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst1 . #<identifier #144
                       kind: local
                       sslots: (7 5)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 1
      ffs: 0
      fn-num: 112>
>>> fall-through-optimization
------------------------------------------------------------------------
634e60				bits 64
634e60			stub_7ffff0634e60_1:
634e60 83c104			add	ecx,byte 4
634e63 90			nop
634e64			stub_7ffff0634e60_0:
634e64 e85bf948ff		call	do_callback_cont_handler
634e69 a1cc170100000000
------------------------------------------------------------------------
ac5762				bits 64
ac5762 9090		version_407:
ac5764			version_408:
ac5764			version_409:
ac5764 4d8b5b0d			mov	r11,[r11+13]
ac5768			version_410:
ac5768			version_411:
ac5768 4989fc			mov	r12,rdi
ac576b			version_412:
ac576b 4d89fd			mov	r13,r15
ac576e			version_413:
ac576e 4d89d6			mov	r14,r10
ac5771			version_414:
ac5771			version_415:
ac5771			version_416:
ac5771			version_417:
ac5771 4d8b7605			mov	r14,[r14+5]
ac5775			version_418:
ac5775 4883ed30			sub	rbp,byte 48
ac5779 4c895d28			mov	[rbp+40],r11
ac577d 48897d20			mov	[rbp+32],rdi
ac5781 4c895518			mov	[rbp+24],r10
ac5785 4c897d10			mov	[rbp+16],r15
ac5789 48897508			mov	[rbp+8],rsi
ac578d 48c7c0e07b1701		mov	rax,dword 18316256
ac5794 48894500			mov	[rbp],rax
ac5798 4d89f2			mov	r10,r14
ac579b 4d89ef			mov	r15,r13
ac579e 4c89e3			mov	rbx,r12
ac57a1			NORM_CALL_17:
ac57a1 49c7c31c000000		mov	r11,dword 28
ac57a8 48c7c70c000000		mov	rdi,dword 12
ac57af			stub_load_16:
ac57af e930f8b600		jmp	dest_7ffff0634fe4_3
GEN VERSION FN#<lazy-code #124
                 ast: #f
                 generator: #<procedure #125>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #145
           stack: ((unk) (nul) (clo) (cloc 112) (clo) (ret))
           slot-loc:
            ((5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((foldr-aux0
                  .
                  #<identifier #146
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #t
                     thisid: #f>)
                 (f1 . #<identifier #147
                          kind: local
                          sslots: (3)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
                 (base1 . #<identifier #148
                             kind: local
                             sslots: (4)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst1 . #<identifier #149
                            kind: local
                            sslots: (5)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>))
           nb-actual: 3
           nb-args: 3
           fs: 1
           ffs: 0
           fn-num: 112>
Patch direct stub jump at 7fffefac57af
  > now jump to 7fffefac5734
------------------------------------------------------------------------
ac57af				bits 64
ac57af eb83			jmp	short fn_entry_12
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #150
                   ast: #f
                   generator: #<procedure #151>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #152
      stack: ((nul) (nul) (nul) (clo) (cloc 112) (clo) (ret))
      slot-loc:
       ((6 r . 3) (5 r . 4) (4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((foldr-aux0
             .
             #<identifier #132
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (f1 . #<identifier #133
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (base1 . #<identifier #134
                        kind: local
                        sslots: (4)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst1 . #<identifier #139
                       kind: local
                       sslots: (6 5)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 1
      ffs: 0
      fn-num: 112>
------------------------------------------------------------------------
ac57b4				bits 64
ac57b4			version_419:
ac57b4			version_420:
ac57b4 4d89fe			mov	r14,r15
ac57b7			version_421:
ac57b7 488b5500			mov	rdx,[rbp]
ac57bb 4883c508			add	rbp,byte 8
ac57bf 488b4218			mov	rax,[rdx+24]
ac57c3 49c7c304000000		mov	r11,dword 4
ac57ca ffe0			jmp	rax
>>> patching jump at 7fffefac5741 -> 7fffefac57b4
GEN VERSION CONTINUATION (CR) >>> Patch table with type nul and ctx:
#<ctx #153
      stack: ((nul) (unk) (clo) (pai) (nul) (clo) (cloc 112) (clo) (ret))
      slot-loc:
       ((8 r . 8)
        (7 m . 1)
        (6 m . 2)
        (5 m . 3)
        (4 m . 4)
        (3 m . 2)
        (2 . #f)
        (1 m . 5)
        (0 m . 0))
      free-regs:
       ((r . 6)
        (r . 7)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 3)
        (r . 5)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((foldr-aux0
             .
             #<identifier #154
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (f1 . #<identifier #155
                     kind: local
                     sslots: (6 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (base1 . #<identifier #156
                        kind: local
                        sslots: (4)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst1 . #<identifier #157
                       kind: local
                       sslots: (5)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 6
      ffs: 0
      fn-num: 112>
------------------------------------------------------------------------
ac57cc				bits 64
ac57cc			continuation_12:
ac57cc			version_422:
ac57cc 4d89f7			mov	r15,r14
ac57cf 488b5d20			mov	rbx,[rbp+32]
ac57d3 488b7518			mov	rsi,[rbp+24]
ac57d7 4883c528			add	rbp,byte 40
ac57db			NORM_CALL_18:
ac57db			TAIL_CALL_5:
ac57db 49c7c320000000		mov	r11,dword 32
ac57e2 48c7c708000000		mov	rdi,dword 8
ac57e9 488b5607			mov	rdx,[rsi+7]
ac57ed ff6250			jmp	[rdx+80]
------------------------------------------------------------------------
ac57f0				bits 64
ac57f0			rest_block_19:
ac57f0 48c7c1f6ffffff		mov	rcx,dword -10
ac57f7			alloc_begin_8:
ac57f7 4983c118			add	r9,byte 24
ac57fb 48b83070fff7ff7f
ac5803 0000			mov	rax,140737354100784
ac5805 4c3b08			cmp	r9,[rax]
ac5808 7e09			jle	short alloc_end_8
ac580a e8fee7ffff		call	heap_limit_handler
ac580f 4983c118			add	r9,byte 24
ac5813			alloc_end_8:
ac5813 49c741e808100000		mov	qword [r9-24],dword 4104
ac581b 4d8979f8			mov	[r9-8],r15
ac581f 498949f0			mov	[r9-16],rcx
ac5823 498d49eb			lea	rcx,[r9-21]
ac5827			alloc_begin_9:
ac5827 4983c118			add	r9,byte 24
ac582b 48b83070fff7ff7f
ac5833 0000			mov	rax,140737354100784
ac5835 4c3b08			cmp	r9,[rax]
ac5838 7e09			jle	short alloc_end_9
ac583a e8cee7ffff		call	heap_limit_handler
ac583f 4983c118			add	r9,byte 24
ac5843			alloc_end_9:
ac5843 49c741e808100000		mov	qword [r9-24],dword 4104
ac584b 498959f8			mov	[r9-8],rbx
ac584f 498949f0			mov	[r9-16],rcx
ac5853 498d49eb			lea	rcx,[r9-21]
ac5857 4889cb			mov	rbx,rcx
ac585a 48c7c100000000		mov	rcx,dword 0
ac5861			block_to_version19:
GEN VERSION FN#<lazy-code #158
                 ast: #f
                 generator: #<procedure #159>
                 flags: (rest entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #160
           stack: ((nul) (unk) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lsts0 . #<identifier #161
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 2
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 53>
------------------------------------------------------------------------
634e90				bits 64
634e90			stub_7ffff0634e90_1:
634e90 83c104			add	ecx,byte 4
634e93 90			nop
634e94			stub_7ffff0634e90_0:
634e94 e8a4f748ff		call	do_callback_fn_handler
634e99 7179180100000000
------------------------------------------------------------------------
ac5861				bits 64
ac5861 909090		fn_entry_13:
ac5864			version_423:
ac5864			version_424:
ac5864			version_425:
ac5864			version_426:
ac5864 4989df			mov	r15,rbx
ac5867			version_427:
ac5867 4c89fb			mov	rbx,r15
ac586a			NORM_CALL_19:
ac586a			TAIL_CALL_6:
ac586a 49c7c314000000		mov	r11,dword 20
ac5871 48c7c704000000		mov	rdi,dword 4
ac5878			stub_load_17:
ac5878 e917f6b600		jmp	dest_7ffff0634e94_1
------------------------------------------------------------------------
ac5861				bits 64
ac5861 eb01			jmp	short version_428
GEN VERSION FN#<lazy-code #162
                 ast: #f
                 generator: #<procedure #163>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #164
           stack: ((pai) (cloc 113) (clo) (ret))
           slot-loc: ((3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((loop0 . #<identifier #165
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #t
                             thisid: #f>)
                 (lsts1 . #<identifier #166
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 113>
------------------------------------------------------------------------
634e48				bits 64
634e48			stub_7ffff0634e48_1:
634e48 83c104			add	ecx,byte 4
634e4b 90			nop
634e4c			stub_7ffff0634e48_0:
634e4c e873f948ff		call	do_callback_cont_handler
634e51 217a180100000000
------------------------------------------------------------------------
ac587d				bits 64
ac587d 909090		fn_entry_14:
ac5880			version_429:
ac5880			version_430:
ac5880			version_431:
ac5880 4989df			mov	r15,rbx
ac5883			version_432:
ac5883			version_433:
ac5883			version_434:
ac5883			version_435:
ac5883 4d8b7f0d			mov	r15,[r15+13]
ac5887			version_436:
ac5887			version_437:
ac5887 4889df			mov	rdi,rbx
ac588a			version_438:
ac588a			version_439:
ac588a			version_440:
ac588a			version_441:
ac588a 488b7f05			mov	rdi,[rdi+5]
ac588e			version_442:
ac588e 4883ed20			sub	rbp,byte 32
ac5892 4c897d18			mov	[rbp+24],r15
ac5896 48895d10			mov	[rbp+16],rbx
ac589a 48897508			mov	[rbp+8],rsi
ac589e 48c7c008f31701		mov	rax,dword 18346760
ac58a5 48894500			mov	[rbp],rax
ac58a9 4889fb			mov	rbx,rdi
ac58ac			NORM_CALL_20:
ac58ac 49c7c324000000		mov	r11,dword 36
ac58b3 48c7c704000000		mov	rdi,dword 4
ac58ba			stub_load_18:
ac58ba e9d5f5b600		jmp	dest_7ffff0634e94_2
Patch direct stub jump at 7fffefac5878
  > now jump to 7fffefac5880
------------------------------------------------------------------------
ac5878				bits 64
ac5878 eb06			jmp	short fn_entry_14
GEN VERSION FN#<lazy-code #162
                 ast: #f
                 generator: #<procedure #163>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #167
           stack: ((unk) (cloc 113) (clo) (ret))
           slot-loc: ((3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((loop0 . #<identifier #168
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #t
                             thisid: #f>)
                 (lsts1 . #<identifier #169
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 113>
------------------------------------------------------------------------
634e30				bits 64
634e30			stub_7ffff0634e30_1:
634e30 83c104			add	ecx,byte 4
634e33 90			nop
634e34			stub_7ffff0634e30_0:
634e34 e87df648ff		call	do_callback_handler
634e39 c17a180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac58bf				bits 64
ac58bf 90		fn_entry_15:
ac58c0			version_443:
ac58c0			version_444:
ac58c0 4989df			mov	r15,rbx
ac58c3			version_445:
ac58c3 48c7c0f6ffffff		mov	rax,dword -10
ac58ca 4c39f8			cmp	rax,r15
ac58cd			patchable_jump8:
ac58cd 0f8461f5b600		je	stub_7ffff0634e30_0
ac58d3 e958f5b600		jmp	stub_7ffff0634e30_1
Patch direct stub jump at 7fffefac58ba
  > now jump to 7fffefac58c0
------------------------------------------------------------------------
ac58ba				bits 64
ac58ba eb04			jmp	short fn_entry_15
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #170
                   ast: #f
                   generator: #<procedure #171>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #172
      stack: ((unk) (unk) (cloc 113) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #168
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lsts1 . #<identifier #173
                        kind: local
                        sslots: (4 3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 113>
>>> fall-through-optimization
------------------------------------------------------------------------
634e18				bits 64
634e18			stub_7ffff0634e18_1:
634e18 83c104			add	ecx,byte 4
634e1b 90			nop
634e1c			stub_7ffff0634e18_0:
634e1c e895f648ff		call	do_callback_handler
634e21 617b180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac58d3				bits 64
ac58d3 90		version_446:
ac58d4			version_447:
ac58d4			version_448:
ac58d4 4989df			mov	r15,rbx
ac58d7			version_449:
ac58d7 48c7c003000000		mov	rax,dword 3
ac58de 4c21f8			and	rax,r15
ac58e1 4883f803			cmp	rax,byte 3
ac58e5			patchable_jump9:
ac58e5 0f8431f5b600		je	stub_7ffff0634e18_0
ac58eb e928f5b600		jmp	stub_7ffff0634e18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac58e5 -> 7ffff0634e18
GEN VERSION >>> #<lazy-code #174
                   ast: #f
                   generator: #<procedure #175>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #176
      stack: ((pai) (cloc 54) (pai) (cloc 113) (clo) (ret))
      slot-loc: ((5 r . 1) (4 . #f) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #168
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lsts1 . #<identifier #177
                        kind: local
                        sslots: (5 3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 113>
>>> fall-through-optimization
------------------------------------------------------------------------
634e00				bits 64
634e00			stub_7ffff0634e00_1:
634e00 83c104			add	ecx,byte 4
634e03 90			nop
634e04			stub_7ffff0634e00_0:
634e04 e8bbf948ff		call	do_callback_cont_handler
634e09 017c180100000000
------------------------------------------------------------------------
ac58eb				bits 64
ac58eb 90		version_450:
ac58ec			version_451:
ac58ec			version_452:
ac58ec 4d8b7f0d			mov	r15,[r15+13]
ac58f0			version_453:
ac58f0			version_454:
ac58f0 4889df			mov	rdi,rbx
ac58f3			version_455:
ac58f3			version_456:
ac58f3			version_457:
ac58f3			version_458:
ac58f3 488b7f05			mov	rdi,[rdi+5]
ac58f7			version_459:
ac58f7 4883ed20			sub	rbp,byte 32
ac58fb 4c897d18			mov	[rbp+24],r15
ac58ff 48895d10			mov	[rbp+16],rbx
ac5903 48897508			mov	[rbp+8],rsi
ac5907 48c7c008f31701		mov	rax,dword 18346760
ac590e 48894500			mov	[rbp],rax
ac5912 4889fb			mov	rbx,rdi
ac5915			NORM_CALL_21:
ac5915 49c7c324000000		mov	r11,dword 36
ac591c 48c7c704000000		mov	rdi,dword 4
ac5923			stub_load_19:
ac5923 e96cf5b600		jmp	dest_7ffff0634e94_3
GEN VERSION FN#<lazy-code #162
                 ast: #f
                 generator: #<procedure #163>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #178
           stack: ((unk) (cloc 113) (clo) (ret))
           slot-loc: ((3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((loop0 . #<identifier #179
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #t
                             thisid: #f>)
                 (lsts1 . #<identifier #180
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 113>
Patch direct stub jump at 7fffefac5923
  > now jump to 7fffefac58c0
------------------------------------------------------------------------
ac5923				bits 64
ac5923 eb9b			jmp	short fn_entry_15
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #181
                   ast: #f
                   generator: #<procedure #182>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #183
      stack: ((nul) (nul) (cloc 113) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 . #f) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #168
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lsts1 . #<identifier #173
                        kind: local
                        sslots: (4 3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 113>
------------------------------------------------------------------------
ac5928				bits 64
ac5928			version_460:
ac5928			version_461:
ac5928			version_462:
ac5928 49c7c7f6ffffff		mov	r15,dword -10
ac592f 4d89fe			mov	r14,r15
ac5932 488b5500			mov	rdx,[rbp]
ac5936 4883c508			add	rbp,byte 8
ac593a 488b4218			mov	rax,[rdx+24]
ac593e 49c7c304000000		mov	r11,dword 4
ac5945 ffe0			jmp	rax
>>> patching jump at 7fffefac58cd -> 7fffefac5928
GEN VERSION CONTINUATION (CR) >>> Patch table with type nul and ctx:
#<ctx #184
      stack: ((nul) (unk) (cloc 54) (pai) (cloc 113) (clo) (ret))
      slot-loc:
       ((6 r . 8) (5 m . 1) (4 . #f) (3 m . 2) (2 . #f) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #185
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lsts1 . #<identifier #186
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 113>
------------------------------------------------------------------------
ac5947				bits 64
ac5947 90		continuation_13:
ac5948			version_463:
ac5948 4d89f7			mov	r15,r14
ac594b 488b5d10			mov	rbx,[rbp+16]
ac594f 4883c518			add	rbp,byte 24
ac5953			NORM_CALL_22:
ac5953			TAIL_CALL_7:
ac5953 49c7c320000000		mov	r11,dword 32
ac595a 48c7c708000000		mov	rdi,dword 8
ac5961			stub_load_20:
ac5961 e97efcb600		jmp	dest_7ffff06355e4_1
GEN VERSION FN#<lazy-code #187
                 ast: #f
                 generator: #<procedure #188>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #189
           stack: ((nul) (unk) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lst10 . #<identifier #190
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst20 . #<identifier #191
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 2
           nb-args: 2
           fs: 1
           ffs: 0
           fn-num: 54>
------------------------------------------------------------------------
634e30				bits 64
634e30			stub_7ffff0634e30_1:
634e30 83c104			add	ecx,byte 4
634e33 90			nop
634e34			stub_7ffff0634e30_0:
634e34 e87df648ff		call	do_callback_handler
634e39 917d180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5966				bits 64
ac5966 9090		fn_entry_16:
ac5968			version_464:
ac5968			version_465:
ac5968 4889df			mov	rdi,rbx
ac596b			version_466:
ac596b 48c7c0f6ffffff		mov	rax,dword -10
ac5972 4839f8			cmp	rax,rdi
ac5975			patchable_jump10:
ac5975 0f84b9f4b600		je	stub_7ffff0634e30_0
ac597b e9b0f4b600		jmp	stub_7ffff0634e30_1
Patch direct stub jump at 7fffefac5961
  > now jump to 7fffefac5968
------------------------------------------------------------------------
ac5961				bits 64
ac5961 eb05			jmp	short fn_entry_16
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac5975 -> 7ffff0634e30
GEN VERSION >>> #<lazy-code #192
                   ast: #f
                   generator: #<procedure #193>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #194
      stack: ((nul) (nul) (nul) (clo) (ret))
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((lst10 . #<identifier #195
                        kind: local
                        sslots: (4 2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst20 . #<identifier #191
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 54>
>>> fall-through-optimization
------------------------------------------------------------------------
ac597b				bits 64
ac597b 90		version_467:
ac597c			version_468:
ac597c 4d89fe			mov	r14,r15
ac597f			version_469:
ac597f 488b5500			mov	rdx,[rbp]
ac5983 4883c508			add	rbp,byte 8
ac5987 488b4218			mov	rax,[rdx+24]
ac598b 49c7c304000000		mov	r11,dword 4
ac5992 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #196
                   ast: #f
                   generator: #<procedure #197>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #198
      stack: ((unk) (nul) (unk) (clo) (ret))
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((lst10 . #<identifier #195
                        kind: local
                        sslots: (4 2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst20 . #<identifier #191
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 54>
------------------------------------------------------------------------
634e30				bits 64
634e30			stub_7ffff0634e30_1:
634e30 83c104			add	ecx,byte 4
634e33 90			nop
634e34			stub_7ffff0634e30_0:
634e34 e87df648ff		call	do_callback_handler
634e39 817e180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5994				bits 64
ac5994			version_470:
ac5994			version_471:
ac5994			version_472:
ac5994 4889df			mov	rdi,rbx
ac5997			version_473:
ac5997 48c7c003000000		mov	rax,dword 3
ac599e 4821f8			and	rax,rdi
ac59a1 4883f803			cmp	rax,byte 3
ac59a5			patchable_jump11:
ac59a5 0f8489f4b600		je	stub_7ffff0634e30_0
ac59ab e980f4b600		jmp	stub_7ffff0634e30_1
>>> patching jump at 7fffefac5975 -> 7fffefac5994
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac59a5 -> 7ffff0634e30
GEN VERSION >>> #<lazy-code #199
                   ast: #f
                   generator: #<procedure #200>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #201
      stack: ((pai) (nul) (pai) (clo) (ret))
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((lst10 . #<identifier #202
                        kind: local
                        sslots: (4 2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst20 . #<identifier #191
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 54>
>>> fall-through-optimization
------------------------------------------------------------------------
634de8				bits 64
634de8			stub_7ffff0634de8_1:
634de8 83c104			add	ecx,byte 4
634deb 90			nop
634dec			stub_7ffff0634de8_0:
634dec e84cf848ff		call	do_callback_fn_handler
634df1 217f180100000000
------------------------------------------------------------------------
ac59ab				bits 64
ac59ab 90		version_474:
ac59ac			version_475:
ac59ac			version_476:
ac59ac 488b7f0d			mov	rdi,[rdi+13]
ac59b0			version_477:
ac59b0			version_478:
ac59b0			version_479:
ac59b0			version_480:
ac59b0			version_481:
ac59b0			alloc_begin_10:
ac59b0 4983c118			add	r9,byte 24
ac59b4 48b83070fff7ff7f
ac59bc 0000			mov	rax,140737354100784
ac59be 4c3b08			cmp	r9,[rax]
ac59c1 7e09			jle	short alloc_end_10
ac59c3 e845e6ffff		call	heap_limit_handler
ac59c8 4983c118			add	r9,byte 24
ac59cc			alloc_end_10:
ac59cc 49c741e808100000		mov	qword [r9-24],dword 4104
ac59d4 498979f8			mov	[r9-8],rdi
ac59d8 49c741f0f6ffffff		mov	qword [r9-16],dword -10
ac59e0 498d79eb			lea	rdi,[r9-21]
ac59e4			version_482:
ac59e4			version_483:
ac59e4			version_484:
ac59e4			version_485:
ac59e4			version_486:
ac59e4 4d89fa			mov	r10,r15
ac59e7			version_487:
ac59e7 4989fb			mov	r11,rdi
ac59ea			version_488:
ac59ea 4d89dc			mov	r12,r11
ac59ed			version_489:
ac59ed 4989dd			mov	r13,rbx
ac59f0			version_490:
ac59f0			version_491:
ac59f0			version_492:
ac59f0			version_493:
ac59f0 4d8b6d05			mov	r13,[r13+5]
ac59f4			version_494:
ac59f4 4c89d3			mov	rbx,r10
ac59f7 4d89e2			mov	r10,r12
ac59fa 4d89ec			mov	r12,r13
ac59fd 4d89df			mov	r15,r11
ac5a00			NORM_CALL_23:
ac5a00			TAIL_CALL_8:
ac5a00 49c7c328000000		mov	r11,dword 40
ac5a07 48c7c710000000		mov	rdi,dword 16
ac5a0e			stub_load_21:
ac5a0e e9d9f3b600		jmp	dest_7ffff0634dec_1
GEN VERSION FN#<lazy-code #203
                 ast: #f
                 generator: #<procedure #204>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #205
           stack: ((unk) (pai) (pai) (nul) (cloc 114) (clo) (ret))
           slot-loc:
            ((6 r . 6)
             (5 r . 4)
             (4 r . 1)
             (3 r . 0)
             (2 . #f)
             (1 r . 2)
             (0 m . 0))
           free-regs: ((r . 3) (r . 5) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((loop0 . #<identifier #206
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #t
                             thisid: #f>)
                 (lst21 . #<identifier #207
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (result1 . #<identifier #208
                               kind: local
                               sslots: (4)
                               flags: ()
                               stype: #f
                               cloc: #f
                               cst: #f
                               thisid: #f>)
                 (sentinel0
                  .
                  #<identifier #209
                     kind: local
                     sslots: (5)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
                 (src0 . #<identifier #210
                            kind: local
                            sslots: (6)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>))
           nb-actual: 4
           nb-args: 4
           fs: 1
           ffs: 0
           fn-num: 114>
------------------------------------------------------------------------
634dd0				bits 64
634dd0			stub_7ffff0634dd0_1:
634dd0 83c104			add	ecx,byte 4
634dd3 90			nop
634dd4			stub_7ffff0634dd0_0:
634dd4 e8ddf648ff		call	do_callback_handler
634dd9 11aa180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5a13				bits 64
ac5a13 90		fn_entry_17:
ac5a14			version_495:
ac5a14			version_496:
ac5a14 4c89e7			mov	rdi,r12
ac5a17			version_497:
ac5a17 48c7c0f6ffffff		mov	rax,dword -10
ac5a1e 4839f8			cmp	rax,rdi
ac5a21			patchable_jump12:
ac5a21 0f84adf3b600		je	stub_7ffff0634dd0_0
ac5a27 e9a4f3b600		jmp	stub_7ffff0634dd0_1
Patch direct stub jump at 7fffefac5a0e
  > now jump to 7fffefac5a14
------------------------------------------------------------------------
ac5a0e				bits 64
ac5a0e eb04			jmp	short fn_entry_17
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac5a21 -> 7ffff0634dd0
GEN VERSION >>> #<lazy-code #211
                   ast: #f
                   generator: #<procedure #212>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #213
      stack: ((nul) (nul) (pai) (pai) (nul) (cloc 114) (clo) (ret))
      slot-loc:
       ((7 r . 3)
        (6 r . 6)
        (5 r . 4)
        (4 r . 1)
        (3 r . 0)
        (2 . #f)
        (1 r . 2)
        (0 m . 0))
      free-regs: ((r . 5) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #206
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lst21 . #<identifier #207
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (result1 . #<identifier #208
                          kind: local
                          sslots: (4)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>)
            (sentinel0
             .
             #<identifier #209
                kind: local
                sslots: (5)
                flags: ()
                stype: #f
                cloc: #f
                cst: #f
                thisid: #f>)
            (src0 . #<identifier #214
                       kind: local
                       sslots: (7 6)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 4
      nb-args: 4
      fs: 1
      ffs: 0
      fn-num: 114>
>>> fall-through-optimization
------------------------------------------------------------------------
ac5a27				bits 64
ac5a27 90		version_498:
ac5a28			version_499:
ac5a28 4c89d7			mov	rdi,r10
ac5a2b			version_500:
ac5a2b			version_501:
ac5a2b 4989db			mov	r11,rbx
ac5a2e			version_502:
ac5a2e			version_503:
ac5a2e			version_504:
ac5a2e			version_505:
ac5a2e 4c895f05			mov	[rdi+5],r11
ac5a32 48c7c7eeffffff		mov	rdi,dword -18
ac5a39			version_506:
ac5a39			version_507:
ac5a39 4d89fe			mov	r14,r15
ac5a3c			version_508:
ac5a3c 488b5500			mov	rdx,[rbp]
ac5a40 4883c508			add	rbp,byte 8
ac5a44 488b4220			mov	rax,[rdx+32]
ac5a48 49c7c308000000		mov	r11,dword 8
ac5a4f ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #215
      stack: ((pai) (unk) (clo) (pai) (nul) (clo) (cloc 112) (clo) (ret))
      slot-loc:
       ((8 r . 8)
        (7 m . 1)
        (6 m . 2)
        (5 m . 3)
        (4 m . 4)
        (3 m . 2)
        (2 . #f)
        (1 m . 5)
        (0 m . 0))
      free-regs:
       ((r . 6)
        (r . 7)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 3)
        (r . 5)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((foldr-aux0
             .
             #<identifier #216
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (f1 . #<identifier #217
                     kind: local
                     sslots: (6 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (base1 . #<identifier #218
                        kind: local
                        sslots: (4)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst1 . #<identifier #157
                       kind: local
                       sslots: (5)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 3
      nb-args: 3
      fs: 6
      ffs: 0
      fn-num: 112>
------------------------------------------------------------------------
ac5a51				bits 64
ac5a51 909090		continuation_14:
ac5a54			version_509:
ac5a54 4d89f7			mov	r15,r14
ac5a57 488b5d20			mov	rbx,[rbp+32]
ac5a5b 488b7518			mov	rsi,[rbp+24]
ac5a5f 4883c528			add	rbp,byte 40
ac5a63			NORM_CALL_24:
ac5a63			TAIL_CALL_9:
ac5a63 49c7c32c000000		mov	r11,dword 44
ac5a6a 48c7c708000000		mov	rdi,dword 8
ac5a71 488b5607			mov	rdx,[rsi+7]
ac5a75 ff6268			jmp	[rdx+104]
------------------------------------------------------------------------
ac5a78				bits 64
ac5a78			rest_block_25:
ac5a78 48c7c1f6ffffff		mov	rcx,dword -10
ac5a7f			alloc_begin_11:
ac5a7f 4983c118			add	r9,byte 24
ac5a83 48b83070fff7ff7f
ac5a8b 0000			mov	rax,140737354100784
ac5a8d 4c3b08			cmp	r9,[rax]
ac5a90 7e09			jle	short alloc_end_11
ac5a92 e876e5ffff		call	heap_limit_handler
ac5a97 4983c118			add	r9,byte 24
ac5a9b			alloc_end_11:
ac5a9b 49c741e808100000		mov	qword [r9-24],dword 4104
ac5aa3 4d8979f8			mov	[r9-8],r15
ac5aa7 498949f0			mov	[r9-16],rcx
ac5aab 498d49eb			lea	rcx,[r9-21]
ac5aaf			alloc_begin_12:
ac5aaf 4983c118			add	r9,byte 24
ac5ab3 48b83070fff7ff7f
ac5abb 0000			mov	rax,140737354100784
ac5abd 4c3b08			cmp	r9,[rax]
ac5ac0 7e09			jle	short alloc_end_12
ac5ac2 e846e5ffff		call	heap_limit_handler
ac5ac7 4983c118			add	r9,byte 24
ac5acb			alloc_end_12:
ac5acb 49c741e808100000		mov	qword [r9-24],dword 4104
ac5ad3 498959f8			mov	[r9-8],rbx
ac5ad7 498949f0			mov	[r9-16],rcx
ac5adb 498d49eb			lea	rcx,[r9-21]
ac5adf 4889cb			mov	rbx,rcx
ac5ae2 48c7c100000000		mov	rcx,dword 0
ac5ae9			block_to_version25:
GEN VERSION FN#<lazy-code #158
                 ast: #f
                 generator: #<procedure #159>
                 flags: (rest entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #219
           stack: ((pai) (unk) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lsts0 . #<identifier #220
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 2
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 53>
------------------------------------------------------------------------
ac5ae9				bits 64
ac5ae9 e976fdffff		jmp	version_510
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #221
      stack: ((pai) (unk) (cloc 54) (pai) (cloc 113) (clo) (ret))
      slot-loc:
       ((6 r . 8) (5 m . 1) (4 . #f) (3 m . 2) (2 . #f) (1 m . 3) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((loop0 . #<identifier #222
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #t
                        thisid: #f>)
            (lsts1 . #<identifier #186
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 113>
------------------------------------------------------------------------
ac5ae9				bits 64
ac5ae9 909090		continuation_15:
ac5aec			version_511:
ac5aec 4d89f7			mov	r15,r14
ac5aef 488b5d10			mov	rbx,[rbp+16]
ac5af3 4883c518			add	rbp,byte 24
ac5af7			NORM_CALL_25:
ac5af7			TAIL_CALL_10:
ac5af7 49c7c32c000000		mov	r11,dword 44
ac5afe 48c7c708000000		mov	rdi,dword 8
ac5b05			stub_load_22:
ac5b05 e9dafab600		jmp	dest_7ffff06355e4_2
GEN VERSION FN#<lazy-code #187
                 ast: #f
                 generator: #<procedure #188>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #223
           stack: ((pai) (unk) (clo) (ret))
           slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
           free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((lst10 . #<identifier #224
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>)
                 (lst20 . #<identifier #225
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 2
           nb-args: 2
           fs: 1
           ffs: 0
           fn-num: 54>
------------------------------------------------------------------------
634db8				bits 64
634db8			stub_7ffff0634db8_1:
634db8 83c104			add	ecx,byte 4
634dbb 90			nop
634dbc			stub_7ffff0634db8_0:
634dbc e8f5f648ff		call	do_callback_handler
634dc1 f1ab180100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ac5b0a				bits 64
ac5b0a 9090		fn_entry_18:
ac5b0c			version_512:
ac5b0c			version_513:
ac5b0c 4889df			mov	rdi,rbx
ac5b0f			version_514:
ac5b0f 48c7c0f6ffffff		mov	rax,dword -10
ac5b16 4839f8			cmp	rax,rdi
ac5b19			patchable_jump13:
ac5b19 0f849df2b600		je	stub_7ffff0634db8_0
ac5b1f e994f2b600		jmp	stub_7ffff0634db8_1
Patch direct stub jump at 7fffefac5b05
  > now jump to 7fffefac5b0c
------------------------------------------------------------------------
ac5b05				bits 64
ac5b05 eb05			jmp	short fn_entry_18
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fffefac5b19 -> 7ffff0634db8
GEN VERSION >>> #<lazy-code #192
                   ast: #f
                   generator: #<procedure #193>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #226
      stack: ((nul) (pai) (nul) (clo) (ret))
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((lst10 . #<identifier #227
                        kind: local
                        sslots: (4 2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>)
            (lst20 . #<identifier #225
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 54>
>>> fall-through-optimization
------------------------------------------------------------------------
ac5b1f				bits 64
ac5b1f 90		version_515:
ac5b20			version_516:
ac5b20 4d89fe			mov	r14,r15
ac5b23			version_517:
ac5b23 488b5500			mov	rdx,[rbp]
ac5b27 4883c508			add	rbp,byte 8
ac5b2b 488b4220			mov	rax,[rdx+32]
ac5b2f 49c7c308000000		mov	r11,dword 8
ac5b36 ffe0			jmp	rax

Program received signal SIGSEGV, Segmentation fault.
0x00007fffefac5b36 in ?? ()
(gdb) quit
A debugging session is active.

	Inferior 1 [process 27372] will be killed.

Quit anyway? (y or n) y
