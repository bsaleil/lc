------------------------------------------------------------------------
718008				bits 64
718008 e9790f0000		jmp	rtlib_skip
71800d			heap_limit_handler:
71800d 4883ed58			sub	rbp,byte 88
718011 48894d50			mov	[rbp+80],rcx
718015 48895d48			mov	[rbp+72],rbx
718019 4c897d40			mov	[rbp+64],r15
71801d 48897538			mov	[rbp+56],rsi
718021 48897d30			mov	[rbp+48],rdi
718025 4c895528			mov	[rbp+40],r10
718029 4c895d20			mov	[rbp+32],r11
71802d 4c896518			mov	[rbp+24],r12
718031 4c896d10			mov	[rbp+16],r13
718035 4c897508			mov	[rbp+8],r14
718039 48895500			mov	[rbp],rdx
71803d 4c890c25b074fc00		mov	[+16544944],r9
718045 4889ef			mov	rdi,rbp
718048 55			push	rbp
718049 51			push	rcx
71804a 4150			push	r8
71804c 4151			push	r9
71804e 4881ec80000000		sub	rsp,128
718055 f20f110424		movsd	[rsp],xmm0
71805a f20f114c2408		movsd	[rsp+8],xmm1
718060 f20f11542410		movsd	[rsp+16],xmm2
718066 f20f115c2418		movsd	[rsp+24],xmm3
71806c f20f11642420		movsd	[rsp+32],xmm4
718072 f20f116c2428		movsd	[rsp+40],xmm5
718078 f20f11742430		movsd	[rsp+48],xmm6
71807e f20f117c2438		movsd	[rsp+56],xmm7
718084 f2440f11442440		movsd	[rsp+64],xmm8
71808b f2440f114c2448		movsd	[rsp+72],xmm9
718092 f2440f11542450		movsd	[rsp+80],xmm10
718099 f2440f115c2458		movsd	[rsp+88],xmm11
7180a0 f2440f11642460		movsd	[rsp+96],xmm12
7180a7 f2440f116c2468		movsd	[rsp+104],xmm13
7180ae f2440f11742470		movsd	[rsp+112],xmm14
7180b5 f2440f117c2478		movsd	[rsp+120],xmm15
7180bc 4889e0			mov	rax,rsp
7180bf 4883e4f0			and	rsp,byte -16
7180c3 4883ec08			sub	rsp,byte 8
7180c7 50			push	rax
7180c8 48b80e27e11ed37f
7180d0 0000			mov	rax,140544732899086
7180d2 ffd0			call	rax
7180d4 5c			pop	rsp
7180d5 f20f100424		movsd	xmm0,[rsp]
7180da f20f104c2408		movsd	xmm1,[rsp+8]
7180e0 f20f10542410		movsd	xmm2,[rsp+16]
7180e6 f20f105c2418		movsd	xmm3,[rsp+24]
7180ec f20f10642420		movsd	xmm4,[rsp+32]
7180f2 f20f106c2428		movsd	xmm5,[rsp+40]
7180f8 f20f10742430		movsd	xmm6,[rsp+48]
7180fe f20f107c2438		movsd	xmm7,[rsp+56]
718104 f2440f10442440		movsd	xmm8,[rsp+64]
71810b f2440f104c2448		movsd	xmm9,[rsp+72]
718112 f2440f10542450		movsd	xmm10,[rsp+80]
718119 f2440f105c2458		movsd	xmm11,[rsp+88]
718120 f2440f10642460		movsd	xmm12,[rsp+96]
718127 f2440f106c2468		movsd	xmm13,[rsp+104]
71812e f2440f10742470		movsd	xmm14,[rsp+112]
718135 f2440f107c2478		movsd	xmm15,[rsp+120]
71813c 4881c480000000		add	rsp,128
718143 4159			pop	r9
718145 4158			pop	r8
718147 59			pop	rcx
718148 488b0c25a874fc00		mov	rcx,[+16544936]
718150 49b908109544d37f
718158 0000			mov	r9,140545365446664
71815a 49894928			mov	[r9+40],rcx
71815e 4c8b0c25b074fc00		mov	r9,[+16544944]
718166 5d			pop	rbp
718167 488b5500			mov	rdx,[rbp]
71816b 4c8b7508			mov	r14,[rbp+8]
71816f 4c8b6d10			mov	r13,[rbp+16]
718173 4c8b6518			mov	r12,[rbp+24]
718177 4c8b5d20			mov	r11,[rbp+32]
71817b 4c8b5528			mov	r10,[rbp+40]
71817f 488b7d30			mov	rdi,[rbp+48]
718183 488b7538			mov	rsi,[rbp+56]
718187 4c8b7d40			mov	r15,[rbp+64]
71818b 488b5d48			mov	rbx,[rbp+72]
71818f 488b4d50			mov	rcx,[rbp+80]
718193 4883c558			add	rbp,byte 88
718197 c3			ret
718198			alloc_still_handler:
718198 4883ed58			sub	rbp,byte 88
71819c 48894d50			mov	[rbp+80],rcx
7181a0 48895d48			mov	[rbp+72],rbx
7181a4 4c897d40			mov	[rbp+64],r15
7181a8 48897538			mov	[rbp+56],rsi
7181ac 48897d30			mov	[rbp+48],rdi
7181b0 4c895528			mov	[rbp+40],r10
7181b4 4c895d20			mov	[rbp+32],r11
7181b8 4c896518			mov	[rbp+24],r12
7181bc 4c896d10			mov	[rbp+16],r13
7181c0 4c897508			mov	[rbp+8],r14
7181c4 48895500			mov	[rbp],rdx
7181c8 4c890c25b074fc00		mov	[+16544944],r9
7181d0 4889ef			mov	rdi,rbp
7181d3 55			push	rbp
7181d4 51			push	rcx
7181d5 4150			push	r8
7181d7 4151			push	r9
7181d9 4881ec80000000		sub	rsp,128
7181e0 f20f110424		movsd	[rsp],xmm0
7181e5 f20f114c2408		movsd	[rsp+8],xmm1
7181eb f20f11542410		movsd	[rsp+16],xmm2
7181f1 f20f115c2418		movsd	[rsp+24],xmm3
7181f7 f20f11642420		movsd	[rsp+32],xmm4
7181fd f20f116c2428		movsd	[rsp+40],xmm5
718203 f20f11742430		movsd	[rsp+48],xmm6
718209 f20f117c2438		movsd	[rsp+56],xmm7
71820f f2440f11442440		movsd	[rsp+64],xmm8
718216 f2440f114c2448		movsd	[rsp+72],xmm9
71821d f2440f11542450		movsd	[rsp+80],xmm10
718224 f2440f115c2458		movsd	[rsp+88],xmm11
71822b f2440f11642460		movsd	[rsp+96],xmm12
718232 f2440f116c2468		movsd	[rsp+104],xmm13
718239 f2440f11742470		movsd	[rsp+112],xmm14
718240 f2440f117c2478		movsd	[rsp+120],xmm15
718247 488bbc24a8000000		mov	rdi,[rsp+168]
71824f 488b7560			mov	rsi,[rbp+96]
718253 4889e0			mov	rax,rsp
718256 4883e4f0			and	rsp,byte -16
71825a 4883ec08			sub	rsp,byte 8
71825e 50			push	rax
71825f 48b8da26e11ed37f
718267 0000			mov	rax,140544732899034
718269 ffd0			call	rax
71826b 5c			pop	rsp
71826c f20f100424		movsd	xmm0,[rsp]
718271 f20f104c2408		movsd	xmm1,[rsp+8]
718277 f20f10542410		movsd	xmm2,[rsp+16]
71827d f20f105c2418		movsd	xmm3,[rsp+24]
718283 f20f10642420		movsd	xmm4,[rsp+32]
718289 f20f106c2428		movsd	xmm5,[rsp+40]
71828f f20f10742430		movsd	xmm6,[rsp+48]
718295 f20f107c2438		movsd	xmm7,[rsp+56]
71829b f2440f10442440		movsd	xmm8,[rsp+64]
7182a2 f2440f104c2448		movsd	xmm9,[rsp+72]
7182a9 f2440f10542450		movsd	xmm10,[rsp+80]
7182b0 f2440f105c2458		movsd	xmm11,[rsp+88]
7182b7 f2440f10642460		movsd	xmm12,[rsp+96]
7182be f2440f106c2468		movsd	xmm13,[rsp+104]
7182c5 f2440f10742470		movsd	xmm14,[rsp+112]
7182cc f2440f107c2478		movsd	xmm15,[rsp+120]
7182d3 4881c480000000		add	rsp,128
7182da 4159			pop	r9
7182dc 4158			pop	r8
7182de 59			pop	rcx
7182df 488b0c25a874fc00		mov	rcx,[+16544936]
7182e7 49b908109544d37f
7182ef 0000			mov	r9,140545365446664
7182f1 49894928			mov	[r9+40],rcx
7182f5 4c8b0c25b074fc00		mov	r9,[+16544944]
7182fd 5d			pop	rbp
7182fe 488b5500			mov	rdx,[rbp]
718302 4c8b7508			mov	r14,[rbp+8]
718306 4c8b6d10			mov	r13,[rbp+16]
71830a 4c8b6518			mov	r12,[rbp+24]
71830e 4c8b5d20			mov	r11,[rbp+32]
718312 4c8b5528			mov	r10,[rbp+40]
718316 488b7d30			mov	rdi,[rbp+48]
71831a 488b7538			mov	rsi,[rbp+56]
71831e 4c8b7d40			mov	r15,[rbp+64]
718322 488b5d48			mov	rbx,[rbp+72]
718326 488b4d50			mov	rcx,[rbp+80]
71832a 4883c558			add	rbp,byte 88
71832e c3			ret
71832f			gambit_call_handler:
71832f 4883ed58			sub	rbp,byte 88
718333 48894d50			mov	[rbp+80],rcx
718337 48895d48			mov	[rbp+72],rbx
71833b 4c897d40			mov	[rbp+64],r15
71833f 48897538			mov	[rbp+56],rsi
718343 48897d30			mov	[rbp+48],rdi
718347 4c895528			mov	[rbp+40],r10
71834b 4c895d20			mov	[rbp+32],r11
71834f 4c896518			mov	[rbp+24],r12
718353 4c896d10			mov	[rbp+16],r13
718357 4c897508			mov	[rbp+8],r14
71835b 48895500			mov	[rbp],rdx
71835f 4c890c25b074fc00		mov	[+16544944],r9
718367 4889ef			mov	rdi,rbp
71836a 4889e6			mov	rsi,rsp
71836d 55			push	rbp
71836e 51			push	rcx
71836f 4150			push	r8
718371 4151			push	r9
718373 4881ec80000000		sub	rsp,128
71837a f20f110424		movsd	[rsp],xmm0
71837f f20f114c2408		movsd	[rsp+8],xmm1
718385 f20f11542410		movsd	[rsp+16],xmm2
71838b f20f115c2418		movsd	[rsp+24],xmm3
718391 f20f11642420		movsd	[rsp+32],xmm4
718397 f20f116c2428		movsd	[rsp+40],xmm5
71839d f20f11742430		movsd	[rsp+48],xmm6
7183a3 f20f117c2438		movsd	[rsp+56],xmm7
7183a9 f2440f11442440		movsd	[rsp+64],xmm8
7183b0 f2440f114c2448		movsd	[rsp+72],xmm9
7183b7 f2440f11542450		movsd	[rsp+80],xmm10
7183be f2440f115c2458		movsd	[rsp+88],xmm11
7183c5 f2440f11642460		movsd	[rsp+96],xmm12
7183cc f2440f116c2468		movsd	[rsp+104],xmm13
7183d3 f2440f11742470		movsd	[rsp+112],xmm14
7183da f2440f117c2478		movsd	[rsp+120],xmm15
7183e1 4889e0			mov	rax,rsp
7183e4 4883e4f0			and	rsp,byte -16
7183e8 4883ec08			sub	rsp,byte 8
7183ec 50			push	rax
7183ed e8103cb201		call	gambit_call
7183f2 5c			pop	rsp
7183f3 f20f100424		movsd	xmm0,[rsp]
7183f8 f20f104c2408		movsd	xmm1,[rsp+8]
7183fe f20f10542410		movsd	xmm2,[rsp+16]
718404 f20f105c2418		movsd	xmm3,[rsp+24]
71840a f20f10642420		movsd	xmm4,[rsp+32]
718410 f20f106c2428		movsd	xmm5,[rsp+40]
718416 f20f10742430		movsd	xmm6,[rsp+48]
71841c f20f107c2438		movsd	xmm7,[rsp+56]
718422 f2440f10442440		movsd	xmm8,[rsp+64]
718429 f2440f104c2448		movsd	xmm9,[rsp+72]
718430 f2440f10542450		movsd	xmm10,[rsp+80]
718437 f2440f105c2458		movsd	xmm11,[rsp+88]
71843e f2440f10642460		movsd	xmm12,[rsp+96]
718445 f2440f106c2468		movsd	xmm13,[rsp+104]
71844c f2440f10742470		movsd	xmm14,[rsp+112]
718453 f2440f107c2478		movsd	xmm15,[rsp+120]
71845a 4881c480000000		add	rsp,128
718461 4159			pop	r9
718463 4158			pop	r8
718465 59			pop	rcx
718466 488b0c25a874fc00		mov	rcx,[+16544936]
71846e 49b908109544d37f
718476 0000			mov	r9,140545365446664
718478 49894928			mov	[r9+40],rcx
71847c 4c8b0c25b074fc00		mov	r9,[+16544944]
718484 5d			pop	rbp
718485 488b5500			mov	rdx,[rbp]
718489 4c8b7508			mov	r14,[rbp+8]
71848d 4c8b6d10			mov	r13,[rbp+16]
718491 4c8b6518			mov	r12,[rbp+24]
718495 4c8b5d20			mov	r11,[rbp+32]
718499 4c8b5528			mov	r10,[rbp+40]
71849d 488b7d30			mov	rdi,[rbp+48]
7184a1 488b7538			mov	rsi,[rbp+56]
7184a5 4c8b7d40			mov	r15,[rbp+64]
7184a9 488b5d48			mov	rbx,[rbp+72]
7184ad 488b4d50			mov	rcx,[rbp+80]
7184b1 4883c558			add	rbp,byte 88
7184b5 c3			ret
7184b6			do_callback_handler:
7184b6 4883ed58			sub	rbp,byte 88
7184ba 48894d50			mov	[rbp+80],rcx
7184be 48895d48			mov	[rbp+72],rbx
7184c2 4c897d40			mov	[rbp+64],r15
7184c6 48897538			mov	[rbp+56],rsi
7184ca 48897d30			mov	[rbp+48],rdi
7184ce 4c895528			mov	[rbp+40],r10
7184d2 4c895d20			mov	[rbp+32],r11
7184d6 4c896518			mov	[rbp+24],r12
7184da 4c896d10			mov	[rbp+16],r13
7184de 4c897508			mov	[rbp+8],r14
7184e2 48895500			mov	[rbp],rdx
7184e6 4c890c25b074fc00		mov	[+16544944],r9
7184ee 4889ef			mov	rdi,rbp
7184f1 4889e6			mov	rsi,rsp
7184f4 55			push	rbp
7184f5 51			push	rcx
7184f6 4150			push	r8
7184f8 4151			push	r9
7184fa 4881ec80000000		sub	rsp,128
718501 f20f110424		movsd	[rsp],xmm0
718506 f20f114c2408		movsd	[rsp+8],xmm1
71850c f20f11542410		movsd	[rsp+16],xmm2
718512 f20f115c2418		movsd	[rsp+24],xmm3
718518 f20f11642420		movsd	[rsp+32],xmm4
71851e f20f116c2428		movsd	[rsp+40],xmm5
718524 f20f11742430		movsd	[rsp+48],xmm6
71852a f20f117c2438		movsd	[rsp+56],xmm7
718530 f2440f11442440		movsd	[rsp+64],xmm8
718537 f2440f114c2448		movsd	[rsp+72],xmm9
71853e f2440f11542450		movsd	[rsp+80],xmm10
718545 f2440f115c2458		movsd	[rsp+88],xmm11
71854c f2440f11642460		movsd	[rsp+96],xmm12
718553 f2440f116c2468		movsd	[rsp+104],xmm13
71855a f2440f11742470		movsd	[rsp+112],xmm14
718561 f2440f117c2478		movsd	[rsp+120],xmm15
718568 4889e0			mov	rax,rsp
71856b 4883e4f0			and	rsp,byte -16
71856f 4883ec08			sub	rsp,byte 8
718573 50			push	rax
718574 e80e3cb201		call	do_callback
718579 5c			pop	rsp
71857a f20f100424		movsd	xmm0,[rsp]
71857f f20f104c2408		movsd	xmm1,[rsp+8]
718585 f20f10542410		movsd	xmm2,[rsp+16]
71858b f20f105c2418		movsd	xmm3,[rsp+24]
718591 f20f10642420		movsd	xmm4,[rsp+32]
718597 f20f106c2428		movsd	xmm5,[rsp+40]
71859d f20f10742430		movsd	xmm6,[rsp+48]
7185a3 f20f107c2438		movsd	xmm7,[rsp+56]
7185a9 f2440f10442440		movsd	xmm8,[rsp+64]
7185b0 f2440f104c2448		movsd	xmm9,[rsp+72]
7185b7 f2440f10542450		movsd	xmm10,[rsp+80]
7185be f2440f105c2458		movsd	xmm11,[rsp+88]
7185c5 f2440f10642460		movsd	xmm12,[rsp+96]
7185cc f2440f106c2468		movsd	xmm13,[rsp+104]
7185d3 f2440f10742470		movsd	xmm14,[rsp+112]
7185da f2440f107c2478		movsd	xmm15,[rsp+120]
7185e1 4881c480000000		add	rsp,128
7185e8 4159			pop	r9
7185ea 4158			pop	r8
7185ec 59			pop	rcx
7185ed 488b0c25a874fc00		mov	rcx,[+16544936]
7185f5 49b908109544d37f
7185fd 0000			mov	r9,140545365446664
7185ff 49894928			mov	[r9+40],rcx
718603 4c8b0c25b074fc00		mov	r9,[+16544944]
71860b 5d			pop	rbp
71860c 488b5500			mov	rdx,[rbp]
718610 4c8b7508			mov	r14,[rbp+8]
718614 4c8b6d10			mov	r13,[rbp+16]
718618 4c8b6518			mov	r12,[rbp+24]
71861c 4c8b5d20			mov	r11,[rbp+32]
718620 4c8b5528			mov	r10,[rbp+40]
718624 488b7d30			mov	rdi,[rbp+48]
718628 488b7538			mov	rsi,[rbp+56]
71862c 4c8b7d40			mov	r15,[rbp+64]
718630 488b5d48			mov	rbx,[rbp+72]
718634 488b4d50			mov	rcx,[rbp+80]
718638 4883c558			add	rbp,byte 88
71863c c3			ret
71863d			do_callback_fn_handler:
71863d 4883ed58			sub	rbp,byte 88
718641 48894d50			mov	[rbp+80],rcx
718645 48895d48			mov	[rbp+72],rbx
718649 4c897d40			mov	[rbp+64],r15
71864d 48897538			mov	[rbp+56],rsi
718651 48897d30			mov	[rbp+48],rdi
718655 4c895528			mov	[rbp+40],r10
718659 4c895d20			mov	[rbp+32],r11
71865d 4c896518			mov	[rbp+24],r12
718661 4c896d10			mov	[rbp+16],r13
718665 4c897508			mov	[rbp+8],r14
718669 48895500			mov	[rbp],rdx
71866d 4c890c25b074fc00		mov	[+16544944],r9
718675 4889ef			mov	rdi,rbp
718678 4889e6			mov	rsi,rsp
71867b 55			push	rbp
71867c 51			push	rcx
71867d 4150			push	r8
71867f 4151			push	r9
718681 4881ec80000000		sub	rsp,128
718688 f20f110424		movsd	[rsp],xmm0
71868d f20f114c2408		movsd	[rsp+8],xmm1
718693 f20f11542410		movsd	[rsp+16],xmm2
718699 f20f115c2418		movsd	[rsp+24],xmm3
71869f f20f11642420		movsd	[rsp+32],xmm4
7186a5 f20f116c2428		movsd	[rsp+40],xmm5
7186ab f20f11742430		movsd	[rsp+48],xmm6
7186b1 f20f117c2438		movsd	[rsp+56],xmm7
7186b7 f2440f11442440		movsd	[rsp+64],xmm8
7186be f2440f114c2448		movsd	[rsp+72],xmm9
7186c5 f2440f11542450		movsd	[rsp+80],xmm10
7186cc f2440f115c2458		movsd	[rsp+88],xmm11
7186d3 f2440f11642460		movsd	[rsp+96],xmm12
7186da f2440f116c2468		movsd	[rsp+104],xmm13
7186e1 f2440f11742470		movsd	[rsp+112],xmm14
7186e8 f2440f117c2478		movsd	[rsp+120],xmm15
7186ef 4889e0			mov	rax,rsp
7186f2 4883e4f0			and	rsp,byte -16
7186f6 4883ec08			sub	rsp,byte 8
7186fa 50			push	rax
7186fb e80c3cb201		call	do_callback_fn
718700 5c			pop	rsp
718701 f20f100424		movsd	xmm0,[rsp]
718706 f20f104c2408		movsd	xmm1,[rsp+8]
71870c f20f10542410		movsd	xmm2,[rsp+16]
718712 f20f105c2418		movsd	xmm3,[rsp+24]
718718 f20f10642420		movsd	xmm4,[rsp+32]
71871e f20f106c2428		movsd	xmm5,[rsp+40]
718724 f20f10742430		movsd	xmm6,[rsp+48]
71872a f20f107c2438		movsd	xmm7,[rsp+56]
718730 f2440f10442440		movsd	xmm8,[rsp+64]
718737 f2440f104c2448		movsd	xmm9,[rsp+72]
71873e f2440f10542450		movsd	xmm10,[rsp+80]
718745 f2440f105c2458		movsd	xmm11,[rsp+88]
71874c f2440f10642460		movsd	xmm12,[rsp+96]
718753 f2440f106c2468		movsd	xmm13,[rsp+104]
71875a f2440f10742470		movsd	xmm14,[rsp+112]
718761 f2440f107c2478		movsd	xmm15,[rsp+120]
718768 4881c480000000		add	rsp,128
71876f 4159			pop	r9
718771 4158			pop	r8
718773 59			pop	rcx
718774 488b0c25a874fc00		mov	rcx,[+16544936]
71877c 49b908109544d37f
718784 0000			mov	r9,140545365446664
718786 49894928			mov	[r9+40],rcx
71878a 4c8b0c25b074fc00		mov	r9,[+16544944]
718792 5d			pop	rbp
718793 488b5500			mov	rdx,[rbp]
718797 4c8b7508			mov	r14,[rbp+8]
71879b 4c8b6d10			mov	r13,[rbp+16]
71879f 4c8b6518			mov	r12,[rbp+24]
7187a3 4c8b5d20			mov	r11,[rbp+32]
7187a7 4c8b5528			mov	r10,[rbp+40]
7187ab 488b7d30			mov	rdi,[rbp+48]
7187af 488b7538			mov	rsi,[rbp+56]
7187b3 4c8b7d40			mov	r15,[rbp+64]
7187b7 488b5d48			mov	rbx,[rbp+72]
7187bb 488b4d50			mov	rcx,[rbp+80]
7187bf 4883c558			add	rbp,byte 88
7187c3 c3			ret
7187c4			do_callback_cont_handler:
7187c4 4883ed58			sub	rbp,byte 88
7187c8 48894d50			mov	[rbp+80],rcx
7187cc 48895d48			mov	[rbp+72],rbx
7187d0 4c897d40			mov	[rbp+64],r15
7187d4 48897538			mov	[rbp+56],rsi
7187d8 48897d30			mov	[rbp+48],rdi
7187dc 4c895528			mov	[rbp+40],r10
7187e0 4c895d20			mov	[rbp+32],r11
7187e4 4c896518			mov	[rbp+24],r12
7187e8 4c896d10			mov	[rbp+16],r13
7187ec 4c897508			mov	[rbp+8],r14
7187f0 48895500			mov	[rbp],rdx
7187f4 4c890c25b074fc00		mov	[+16544944],r9
7187fc 4889ef			mov	rdi,rbp
7187ff 4889e6			mov	rsi,rsp
718802 55			push	rbp
718803 51			push	rcx
718804 4150			push	r8
718806 4151			push	r9
718808 4881ec80000000		sub	rsp,128
71880f f20f110424		movsd	[rsp],xmm0
718814 f20f114c2408		movsd	[rsp+8],xmm1
71881a f20f11542410		movsd	[rsp+16],xmm2
718820 f20f115c2418		movsd	[rsp+24],xmm3
718826 f20f11642420		movsd	[rsp+32],xmm4
71882c f20f116c2428		movsd	[rsp+40],xmm5
718832 f20f11742430		movsd	[rsp+48],xmm6
718838 f20f117c2438		movsd	[rsp+56],xmm7
71883e f2440f11442440		movsd	[rsp+64],xmm8
718845 f2440f114c2448		movsd	[rsp+72],xmm9
71884c f2440f11542450		movsd	[rsp+80],xmm10
718853 f2440f115c2458		movsd	[rsp+88],xmm11
71885a f2440f11642460		movsd	[rsp+96],xmm12
718861 f2440f116c2468		movsd	[rsp+104],xmm13
718868 f2440f11742470		movsd	[rsp+112],xmm14
71886f f2440f117c2478		movsd	[rsp+120],xmm15
718876 4889e0			mov	rax,rsp
718879 4883e4f0			and	rsp,byte -16
71887d 4883ec08			sub	rsp,byte 8
718881 50			push	rax
718882 e80a3cb201		call	do_callback_cont
718887 5c			pop	rsp
718888 f20f100424		movsd	xmm0,[rsp]
71888d f20f104c2408		movsd	xmm1,[rsp+8]
718893 f20f10542410		movsd	xmm2,[rsp+16]
718899 f20f105c2418		movsd	xmm3,[rsp+24]
71889f f20f10642420		movsd	xmm4,[rsp+32]
7188a5 f20f106c2428		movsd	xmm5,[rsp+40]
7188ab f20f10742430		movsd	xmm6,[rsp+48]
7188b1 f20f107c2438		movsd	xmm7,[rsp+56]
7188b7 f2440f10442440		movsd	xmm8,[rsp+64]
7188be f2440f104c2448		movsd	xmm9,[rsp+72]
7188c5 f2440f10542450		movsd	xmm10,[rsp+80]
7188cc f2440f105c2458		movsd	xmm11,[rsp+88]
7188d3 f2440f10642460		movsd	xmm12,[rsp+96]
7188da f2440f106c2468		movsd	xmm13,[rsp+104]
7188e1 f2440f10742470		movsd	xmm14,[rsp+112]
7188e8 f2440f107c2478		movsd	xmm15,[rsp+120]
7188ef 4881c480000000		add	rsp,128
7188f6 4159			pop	r9
7188f8 4158			pop	r8
7188fa 59			pop	rcx
7188fb 488b0c25a874fc00		mov	rcx,[+16544936]
718903 49b908109544d37f
71890b 0000			mov	r9,140545365446664
71890d 49894928			mov	[r9+40],rcx
718911 4c8b0c25b074fc00		mov	r9,[+16544944]
718919 5d			pop	rbp
71891a 488b5500			mov	rdx,[rbp]
71891e 4c8b7508			mov	r14,[rbp+8]
718922 4c8b6d10			mov	r13,[rbp+16]
718926 4c8b6518			mov	r12,[rbp+24]
71892a 4c8b5d20			mov	r11,[rbp+32]
71892e 4c8b5528			mov	r10,[rbp+40]
718932 488b7d30			mov	rdi,[rbp+48]
718936 488b7538			mov	rsi,[rbp+56]
71893a 4c8b7d40			mov	r15,[rbp+64]
71893e 488b5d48			mov	rbx,[rbp+72]
718942 488b4d50			mov	rcx,[rbp+80]
718946 4883c558			add	rbp,byte 88
71894a c3			ret
71894b			rt_error_handler:
71894b 4883ed58			sub	rbp,byte 88
71894f 48894d50			mov	[rbp+80],rcx
718953 48895d48			mov	[rbp+72],rbx
718957 4c897d40			mov	[rbp+64],r15
71895b 48897538			mov	[rbp+56],rsi
71895f 48897d30			mov	[rbp+48],rdi
718963 4c895528			mov	[rbp+40],r10
718967 4c895d20			mov	[rbp+32],r11
71896b 4c896518			mov	[rbp+24],r12
71896f 4c896d10			mov	[rbp+16],r13
718973 4c897508			mov	[rbp+8],r14
718977 48895500			mov	[rbp],rdx
71897b 4c890c25b074fc00		mov	[+16544944],r9
718983 4889ef			mov	rdi,rbp
718986 4889e6			mov	rsi,rsp
718989 55			push	rbp
71898a 51			push	rcx
71898b 4150			push	r8
71898d 4151			push	r9
71898f 4881ec80000000		sub	rsp,128
718996 f20f110424		movsd	[rsp],xmm0
71899b f20f114c2408		movsd	[rsp+8],xmm1
7189a1 f20f11542410		movsd	[rsp+16],xmm2
7189a7 f20f115c2418		movsd	[rsp+24],xmm3
7189ad f20f11642420		movsd	[rsp+32],xmm4
7189b3 f20f116c2428		movsd	[rsp+40],xmm5
7189b9 f20f11742430		movsd	[rsp+48],xmm6
7189bf f20f117c2438		movsd	[rsp+56],xmm7
7189c5 f2440f11442440		movsd	[rsp+64],xmm8
7189cc f2440f114c2448		movsd	[rsp+72],xmm9
7189d3 f2440f11542450		movsd	[rsp+80],xmm10
7189da f2440f115c2458		movsd	[rsp+88],xmm11
7189e1 f2440f11642460		movsd	[rsp+96],xmm12
7189e8 f2440f116c2468		movsd	[rsp+104],xmm13
7189ef f2440f11742470		movsd	[rsp+112],xmm14
7189f6 f2440f117c2478		movsd	[rsp+120],xmm15
7189fd 4889e0			mov	rax,rsp
718a00 4883e4f0			and	rsp,byte -16
718a04 4883ec08			sub	rsp,byte 8
718a08 50			push	rax
718a09 e87c30b201		call	rt_error
718a0e 5c			pop	rsp
718a0f f20f100424		movsd	xmm0,[rsp]
718a14 f20f104c2408		movsd	xmm1,[rsp+8]
718a1a f20f10542410		movsd	xmm2,[rsp+16]
718a20 f20f105c2418		movsd	xmm3,[rsp+24]
718a26 f20f10642420		movsd	xmm4,[rsp+32]
718a2c f20f106c2428		movsd	xmm5,[rsp+40]
718a32 f20f10742430		movsd	xmm6,[rsp+48]
718a38 f20f107c2438		movsd	xmm7,[rsp+56]
718a3e f2440f10442440		movsd	xmm8,[rsp+64]
718a45 f2440f104c2448		movsd	xmm9,[rsp+72]
718a4c f2440f10542450		movsd	xmm10,[rsp+80]
718a53 f2440f105c2458		movsd	xmm11,[rsp+88]
718a5a f2440f10642460		movsd	xmm12,[rsp+96]
718a61 f2440f106c2468		movsd	xmm13,[rsp+104]
718a68 f2440f10742470		movsd	xmm14,[rsp+112]
718a6f f2440f107c2478		movsd	xmm15,[rsp+120]
718a76 4881c480000000		add	rsp,128
718a7d 4159			pop	r9
718a7f 4158			pop	r8
718a81 59			pop	rcx
718a82 488b0c25a874fc00		mov	rcx,[+16544936]
718a8a 49b908109544d37f
718a92 0000			mov	r9,140545365446664
718a94 49894928			mov	[r9+40],rcx
718a98 4c8b0c25b074fc00		mov	r9,[+16544944]
718aa0 5d			pop	rbp
718aa1 488b5500			mov	rdx,[rbp]
718aa5 4c8b7508			mov	r14,[rbp+8]
718aa9 4c8b6d10			mov	r13,[rbp+16]
718aad 4c8b6518			mov	r12,[rbp+24]
718ab1 4c8b5d20			mov	r11,[rbp+32]
718ab5 4c8b5528			mov	r10,[rbp+40]
718ab9 488b7d30			mov	rdi,[rbp+48]
718abd 488b7538			mov	rsi,[rbp+56]
718ac1 4c8b7d40			mov	r15,[rbp+64]
718ac5 488b5d48			mov	rbx,[rbp+72]
718ac9 488b4d50			mov	rcx,[rbp+80]
718acd 4883c558			add	rbp,byte 88
718ad1 c3			ret
718ad2			print_msg_handler:
718ad2 4883ed58			sub	rbp,byte 88
718ad6 48894d50			mov	[rbp+80],rcx
718ada 48895d48			mov	[rbp+72],rbx
718ade 4c897d40			mov	[rbp+64],r15
718ae2 48897538			mov	[rbp+56],rsi
718ae6 48897d30			mov	[rbp+48],rdi
718aea 4c895528			mov	[rbp+40],r10
718aee 4c895d20			mov	[rbp+32],r11
718af2 4c896518			mov	[rbp+24],r12
718af6 4c896d10			mov	[rbp+16],r13
718afa 4c897508			mov	[rbp+8],r14
718afe 48895500			mov	[rbp],rdx
718b02 4c890c25b074fc00		mov	[+16544944],r9
718b0a 4889ef			mov	rdi,rbp
718b0d 4889e6			mov	rsi,rsp
718b10 55			push	rbp
718b11 51			push	rcx
718b12 4150			push	r8
718b14 4151			push	r9
718b16 4881ec80000000		sub	rsp,128
718b1d f20f110424		movsd	[rsp],xmm0
718b22 f20f114c2408		movsd	[rsp+8],xmm1
718b28 f20f11542410		movsd	[rsp+16],xmm2
718b2e f20f115c2418		movsd	[rsp+24],xmm3
718b34 f20f11642420		movsd	[rsp+32],xmm4
718b3a f20f116c2428		movsd	[rsp+40],xmm5
718b40 f20f11742430		movsd	[rsp+48],xmm6
718b46 f20f117c2438		movsd	[rsp+56],xmm7
718b4c f2440f11442440		movsd	[rsp+64],xmm8
718b53 f2440f114c2448		movsd	[rsp+72],xmm9
718b5a f2440f11542450		movsd	[rsp+80],xmm10
718b61 f2440f115c2458		movsd	[rsp+88],xmm11
718b68 f2440f11642460		movsd	[rsp+96],xmm12
718b6f f2440f116c2468		movsd	[rsp+104],xmm13
718b76 f2440f11742470		movsd	[rsp+112],xmm14
718b7d f2440f117c2478		movsd	[rsp+120],xmm15
718b84 4889e0			mov	rax,rsp
718b87 4883e4f0			and	rsp,byte -16
718b8b 4883ec08			sub	rsp,byte 8
718b8f 50			push	rax
718b90 e8b531b201		call	print-msg
718b95 5c			pop	rsp
718b96 f20f100424		movsd	xmm0,[rsp]
718b9b f20f104c2408		movsd	xmm1,[rsp+8]
718ba1 f20f10542410		movsd	xmm2,[rsp+16]
718ba7 f20f105c2418		movsd	xmm3,[rsp+24]
718bad f20f10642420		movsd	xmm4,[rsp+32]
718bb3 f20f106c2428		movsd	xmm5,[rsp+40]
718bb9 f20f10742430		movsd	xmm6,[rsp+48]
718bbf f20f107c2438		movsd	xmm7,[rsp+56]
718bc5 f2440f10442440		movsd	xmm8,[rsp+64]
718bcc f2440f104c2448		movsd	xmm9,[rsp+72]
718bd3 f2440f10542450		movsd	xmm10,[rsp+80]
718bda f2440f105c2458		movsd	xmm11,[rsp+88]
718be1 f2440f10642460		movsd	xmm12,[rsp+96]
718be8 f2440f106c2468		movsd	xmm13,[rsp+104]
718bef f2440f10742470		movsd	xmm14,[rsp+112]
718bf6 f2440f107c2478		movsd	xmm15,[rsp+120]
718bfd 4881c480000000		add	rsp,128
718c04 4159			pop	r9
718c06 4158			pop	r8
718c08 59			pop	rcx
718c09 488b0c25a874fc00		mov	rcx,[+16544936]
718c11 49b908109544d37f
718c19 0000			mov	r9,140545365446664
718c1b 49894928			mov	[r9+40],rcx
718c1f 4c8b0c25b074fc00		mov	r9,[+16544944]
718c27 5d			pop	rbp
718c28 488b5500			mov	rdx,[rbp]
718c2c 4c8b7508			mov	r14,[rbp+8]
718c30 4c8b6d10			mov	r13,[rbp+16]
718c34 4c8b6518			mov	r12,[rbp+24]
718c38 4c8b5d20			mov	r11,[rbp+32]
718c3c 4c8b5528			mov	r10,[rbp+40]
718c40 488b7d30			mov	rdi,[rbp+48]
718c44 488b7538			mov	rsi,[rbp+56]
718c48 4c8b7d40			mov	r15,[rbp+64]
718c4c 488b5d48			mov	rbx,[rbp+72]
718c50 488b4d50			mov	rcx,[rbp+80]
718c54 4883c558			add	rbp,byte 88
718c58 c3			ret
718c59			print_msg_val_handler:
718c59 4883ed58			sub	rbp,byte 88
718c5d 48894d50			mov	[rbp+80],rcx
718c61 48895d48			mov	[rbp+72],rbx
718c65 4c897d40			mov	[rbp+64],r15
718c69 48897538			mov	[rbp+56],rsi
718c6d 48897d30			mov	[rbp+48],rdi
718c71 4c895528			mov	[rbp+40],r10
718c75 4c895d20			mov	[rbp+32],r11
718c79 4c896518			mov	[rbp+24],r12
718c7d 4c896d10			mov	[rbp+16],r13
718c81 4c897508			mov	[rbp+8],r14
718c85 48895500			mov	[rbp],rdx
718c89 4c890c25b074fc00		mov	[+16544944],r9
718c91 4889ef			mov	rdi,rbp
718c94 4889e6			mov	rsi,rsp
718c97 55			push	rbp
718c98 51			push	rcx
718c99 4150			push	r8
718c9b 4151			push	r9
718c9d 4881ec80000000		sub	rsp,128
718ca4 f20f110424		movsd	[rsp],xmm0
718ca9 f20f114c2408		movsd	[rsp+8],xmm1
718caf f20f11542410		movsd	[rsp+16],xmm2
718cb5 f20f115c2418		movsd	[rsp+24],xmm3
718cbb f20f11642420		movsd	[rsp+32],xmm4
718cc1 f20f116c2428		movsd	[rsp+40],xmm5
718cc7 f20f11742430		movsd	[rsp+48],xmm6
718ccd f20f117c2438		movsd	[rsp+56],xmm7
718cd3 f2440f11442440		movsd	[rsp+64],xmm8
718cda f2440f114c2448		movsd	[rsp+72],xmm9
718ce1 f2440f11542450		movsd	[rsp+80],xmm10
718ce8 f2440f115c2458		movsd	[rsp+88],xmm11
718cef f2440f11642460		movsd	[rsp+96],xmm12
718cf6 f2440f116c2468		movsd	[rsp+104],xmm13
718cfd f2440f11742470		movsd	[rsp+112],xmm14
718d04 f2440f117c2478		movsd	[rsp+120],xmm15
718d0b 4889e0			mov	rax,rsp
718d0e 4883e4f0			and	rsp,byte -16
718d12 4883ec08			sub	rsp,byte 8
718d16 50			push	rax
718d17 e8f32eb201		call	print-msg-val
718d1c 5c			pop	rsp
718d1d f20f100424		movsd	xmm0,[rsp]
718d22 f20f104c2408		movsd	xmm1,[rsp+8]
718d28 f20f10542410		movsd	xmm2,[rsp+16]
718d2e f20f105c2418		movsd	xmm3,[rsp+24]
718d34 f20f10642420		movsd	xmm4,[rsp+32]
718d3a f20f106c2428		movsd	xmm5,[rsp+40]
718d40 f20f10742430		movsd	xmm6,[rsp+48]
718d46 f20f107c2438		movsd	xmm7,[rsp+56]
718d4c f2440f10442440		movsd	xmm8,[rsp+64]
718d53 f2440f104c2448		movsd	xmm9,[rsp+72]
718d5a f2440f10542450		movsd	xmm10,[rsp+80]
718d61 f2440f105c2458		movsd	xmm11,[rsp+88]
718d68 f2440f10642460		movsd	xmm12,[rsp+96]
718d6f f2440f106c2468		movsd	xmm13,[rsp+104]
718d76 f2440f10742470		movsd	xmm14,[rsp+112]
718d7d f2440f107c2478		movsd	xmm15,[rsp+120]
718d84 4881c480000000		add	rsp,128
718d8b 4159			pop	r9
718d8d 4158			pop	r8
718d8f 59			pop	rcx
718d90 488b0c25a874fc00		mov	rcx,[+16544936]
718d98 49b908109544d37f
718da0 0000			mov	r9,140545365446664
718da2 49894928			mov	[r9+40],rcx
718da6 4c8b0c25b074fc00		mov	r9,[+16544944]
718dae 5d			pop	rbp
718daf 488b5500			mov	rdx,[rbp]
718db3 4c8b7508			mov	r14,[rbp+8]
718db7 4c8b6d10			mov	r13,[rbp+16]
718dbb 4c8b6518			mov	r12,[rbp+24]
718dbf 4c8b5d20			mov	r11,[rbp+32]
718dc3 4c8b5528			mov	r10,[rbp+40]
718dc7 488b7d30			mov	rdi,[rbp+48]
718dcb 488b7538			mov	rsi,[rbp+56]
718dcf 4c8b7d40			mov	r15,[rbp+64]
718dd3 488b5d48			mov	rbx,[rbp+72]
718dd7 488b4d50			mov	rcx,[rbp+80]
718ddb 4883c558			add	rbp,byte 88
718ddf c3			ret
718de0			repl:
718de0 4883ed58			sub	rbp,byte 88
718de4 48894d50			mov	[rbp+80],rcx
718de8 48895d48			mov	[rbp+72],rbx
718dec 4c897d40			mov	[rbp+64],r15
718df0 48897538			mov	[rbp+56],rsi
718df4 48897d30			mov	[rbp+48],rdi
718df8 4c895528			mov	[rbp+40],r10
718dfc 4c895d20			mov	[rbp+32],r11
718e00 4c896518			mov	[rbp+24],r12
718e04 4c896d10			mov	[rbp+16],r13
718e08 4c897508			mov	[rbp+8],r14
718e0c 48895500			mov	[rbp],rdx
718e10 4c890c25b074fc00		mov	[+16544944],r9
718e18 4889ef			mov	rdi,rbp
718e1b 4889e6			mov	rsi,rsp
718e1e 55			push	rbp
718e1f 51			push	rcx
718e20 4150			push	r8
718e22 4151			push	r9
718e24 4881ec80000000		sub	rsp,128
718e2b f20f110424		movsd	[rsp],xmm0
718e30 f20f114c2408		movsd	[rsp+8],xmm1
718e36 f20f11542410		movsd	[rsp+16],xmm2
718e3c f20f115c2418		movsd	[rsp+24],xmm3
718e42 f20f11642420		movsd	[rsp+32],xmm4
718e48 f20f116c2428		movsd	[rsp+40],xmm5
718e4e f20f11742430		movsd	[rsp+48],xmm6
718e54 f20f117c2438		movsd	[rsp+56],xmm7
718e5a f2440f11442440		movsd	[rsp+64],xmm8
718e61 f2440f114c2448		movsd	[rsp+72],xmm9
718e68 f2440f11542450		movsd	[rsp+80],xmm10
718e6f f2440f115c2458		movsd	[rsp+88],xmm11
718e76 f2440f11642460		movsd	[rsp+96],xmm12
718e7d f2440f116c2468		movsd	[rsp+104],xmm13
718e84 f2440f11742470		movsd	[rsp+112],xmm14
718e8b f2440f117c2478		movsd	[rsp+120],xmm15
718e92 4889e0			mov	rax,rsp
718e95 4883e4f0			and	rsp,byte -16
718e99 4883ec08			sub	rsp,byte 8
718e9d 50			push	rax
718e9e e8e22fb201		call	repl
718ea3 5c			pop	rsp
718ea4 f20f100424		movsd	xmm0,[rsp]
718ea9 f20f104c2408		movsd	xmm1,[rsp+8]
718eaf f20f10542410		movsd	xmm2,[rsp+16]
718eb5 f20f105c2418		movsd	xmm3,[rsp+24]
718ebb f20f10642420		movsd	xmm4,[rsp+32]
718ec1 f20f106c2428		movsd	xmm5,[rsp+40]
718ec7 f20f10742430		movsd	xmm6,[rsp+48]
718ecd f20f107c2438		movsd	xmm7,[rsp+56]
718ed3 f2440f10442440		movsd	xmm8,[rsp+64]
718eda f2440f104c2448		movsd	xmm9,[rsp+72]
718ee1 f2440f10542450		movsd	xmm10,[rsp+80]
718ee8 f2440f105c2458		movsd	xmm11,[rsp+88]
718eef f2440f10642460		movsd	xmm12,[rsp+96]
718ef6 f2440f106c2468		movsd	xmm13,[rsp+104]
718efd f2440f10742470		movsd	xmm14,[rsp+112]
718f04 f2440f107c2478		movsd	xmm15,[rsp+120]
718f0b 4881c480000000		add	rsp,128
718f12 4159			pop	r9
718f14 4158			pop	r8
718f16 59			pop	rcx
718f17 488b0c25a874fc00		mov	rcx,[+16544936]
718f1f 49b908109544d37f
718f27 0000			mov	r9,140545365446664
718f29 49894928			mov	[r9+40],rcx
718f2d 4c8b0c25b074fc00		mov	r9,[+16544944]
718f35 5d			pop	rbp
718f36 488b5500			mov	rdx,[rbp]
718f3a 4c8b7508			mov	r14,[rbp+8]
718f3e 4c8b6d10			mov	r13,[rbp+16]
718f42 4c8b6518			mov	r12,[rbp+24]
718f46 4c8b5d20			mov	r11,[rbp+32]
718f4a 4c8b5528			mov	r10,[rbp+40]
718f4e 488b7d30			mov	rdi,[rbp+48]
718f52 488b7538			mov	rsi,[rbp+56]
718f56 4c8b7d40			mov	r15,[rbp+64]
718f5a 488b5d48			mov	rbx,[rbp+72]
718f5e 488b4d50			mov	rcx,[rbp+80]
718f62 4883c558			add	rbp,byte 88
718f66 c3			ret
718f67			err_wrong_num_args:
718f67 4883ed08			sub	rbp,byte 8
718f6b 48895d00			mov	[rbp],rbx
718f6f 48bba1ab461fd37f
718f77 0000			mov	rbx,140544739552161
718f79 e8cdf9ffff		call	rt_error_handler
718f7e 488b5d00			mov	rbx,[rbp]
718f82 4883c508			add	rbp,byte 8
718f86			rtlib_skip:
718f86 4881ec80000000		sub	rsp,128
718f8d f20f110424		movsd	[rsp],xmm0
718f92 f20f114c2408		movsd	[rsp+8],xmm1
718f98 f20f11542410		movsd	[rsp+16],xmm2
718f9e f20f115c2418		movsd	[rsp+24],xmm3
718fa4 f20f11642420		movsd	[rsp+32],xmm4
718faa f20f116c2428		movsd	[rsp+40],xmm5
718fb0 f20f11742430		movsd	[rsp+48],xmm6
718fb6 f20f117c2438		movsd	[rsp+56],xmm7
718fbc f2440f11442440		movsd	[rsp+64],xmm8
718fc3 f2440f114c2448		movsd	[rsp+72],xmm9
718fca f2440f11542450		movsd	[rsp+80],xmm10
718fd1 f2440f115c2458		movsd	[rsp+88],xmm11
718fd8 f2440f11642460		movsd	[rsp+96],xmm12
718fdf f2440f116c2468		movsd	[rsp+104],xmm13
718fe6 f2440f11742470		movsd	[rsp+112],xmm14
718fed f2440f117c2478		movsd	[rsp+120],xmm15
718ff4 50			push	rax
718ff5 53			push	rbx
718ff6 51			push	rcx
718ff7 52			push	rdx
718ff8 55			push	rbp
718ff9 56			push	rsi
718ffa 57			push	rdi
718ffb 4150			push	r8
718ffd 4151			push	r9
718fff 4152			push	r10
719001 4153			push	r11
719003 4154			push	r12
719005 4155			push	r13
719007 4156			push	r14
719009 4157			push	r15
71900b 48bd8872711dd37f
719013 0000			mov	rbp,140544708801160
719015 48b808109544d37f
71901d 0000			mov	rax,140545365446664
71901f 488b0c25a874fc00		mov	rcx,[+16544936]
719027 48894828			mov	[rax+40],rcx
71902b 48c7c100000000		mov	rcx,dword 0
719032 4c8b0c25b074fc00		mov	r9,[+16544944]
71903a 49c7c058af2402		mov	r8,dword 35958616
719041 48c7c300000000		mov	rbx,dword 0
719048 49c7c700000000		mov	r15,dword 0
71904f 48c7c600000000		mov	rsi,dword 0
719056 48c7c700000000		mov	rdi,dword 0
71905d 49c7c200000000		mov	r10,dword 0
719064 49c7c300000000		mov	r11,dword 0
71906b 49c7c400000000		mov	r12,dword 0
719072 49c7c500000000		mov	r13,dword 0
719079 49c7c600000000		mov	r14,dword 0
719080 48c7c200000000		mov	rdx,dword 0
719087			prog_begin1:
------------------------------------------------------------------------
289af0				bits 64
289af0			stub_7fd31e289af0_1:
289af0 83c104			add	ecx,byte 4
289af3 90			nop
289af4			stub_7fd31e289af0_0:
289af4 e844eb48ff		call	do_callback_fn_handler
289af9 51fc250200000000
------------------------------------------------------------------------
289ad8				bits 64
289ad8			stub_7fd31e289ad8_1:
289ad8 83c104			add	ecx,byte 4
289adb 90			nop
289adc			stub_7fd31e289ad8_0:
289adc e8e3ec48ff		call	do_callback_cont_handler
289ae1 8181200200000000
------------------------------------------------------------------------
289ac0				bits 64
289ac0			stub_7fd31e289ac0_1:
289ac0 83c104			add	ecx,byte 4
289ac3 90			nop
289ac4			stub_7fd31e289ac0_0:
289ac4 e8ede948ff		call	do_callback_handler
289ac9 b1fc250200000000
------------------------------------------------------------------------
719087				bits 64
719087 90		version_1:
719088			version_2:
719088			version_3:
719088			version_4:
719088			version_5:
719088 4883ed08			sub	rbp,byte 8
71908c 48c7c048442402		mov	rax,dword 35931208
719093 48894500			mov	[rbp],rax
719097 48c7c3a0000000		mov	rbx,dword 160
71909e			inlined_call_1:
71909e			version_6:
71909e			version_7:
71909e 4989df			mov	r15,rbx
7190a1			version_8:
7190a1			version_9:
7190a1			version_10:
7190a1			version_11:
7190a1			version_12:
7190a1 4983ff08			cmp	r15,byte 8
7190a5			patchable_jump1:
7190a5 0f8d190ab700		jge	stub_7fd31e289ac0_0
7190ab e9100ab700		jmp	stub_7fd31e289ac0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7190a5 -> 7fd31e289ac0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #4
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #5
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289aa8				bits 64
289aa8			stub_7fd31e289aa8_0:
289aa8 e809ea48ff		call	do_callback_handler
289aad 51fd250200000000
------------------------------------------------------------------------
289a90				bits 64
289a90			stub_7fd31e289a90_1:
289a90 83c104			add	ecx,byte 4
289a93 90			nop
289a94			stub_7fd31e289a90_0:
289a94 e82bed48ff		call	do_callback_cont_handler
289a99 a1fd250200000000
------------------------------------------------------------------------
289a78				bits 64
289a78			stub_7fd31e289a78_1:
289a78 83c104			add	ecx,byte 4
289a7b 90			nop
289a7c			stub_7fd31e289a78_0:
289a7c e835ea48ff		call	do_callback_handler
289a81 f1fd250200000000
------------------------------------------------------------------------
7190ab				bits 64
7190ab 90		version_13:
7190ac			version_14:
7190ac 4989df			mov	r15,rbx
7190af			version_15:
7190af			version_16:
7190af			version_17:
7190af			version_18:
7190af			version_19:
7190af 4c89ff			mov	rdi,r15
7190b2 4883ef04			sub	rdi,byte 4
7190b6 0f80ec09b700		jo	stub_7fd31e289aa8_0
7190bc			version_20:
7190bc 4883ed18			sub	rbp,byte 24
7190c0 48895d10			mov	[rbp+16],rbx
7190c4 48897508			mov	[rbp+8],rsi
7190c8 48c7c0e0582402		mov	rax,dword 35936480
7190cf 48894500			mov	[rbp],rax
7190d3 4889fb			mov	rbx,rdi
7190d6			inlined_call_2:
7190d6			version_21:
7190d6			version_22:
7190d6 4989df			mov	r15,rbx
7190d9			version_23:
7190d9			version_24:
7190d9			version_25:
7190d9			version_26:
7190d9			version_27:
7190d9 4983ff08			cmp	r15,byte 8
7190dd			patchable_jump2:
7190dd 0f8d9909b700		jge	stub_7fd31e289a78_0
7190e3 e99009b700		jmp	stub_7fd31e289a78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7190dd -> 7fd31e289a78
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #6
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #7
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289a60				bits 64
289a60			stub_7fd31e289a60_0:
289a60 e851ea48ff		call	do_callback_handler
289a65 91fe250200000000
------------------------------------------------------------------------
289a48				bits 64
289a48			stub_7fd31e289a48_1:
289a48 83c104			add	ecx,byte 4
289a4b 90			nop
289a4c			stub_7fd31e289a48_0:
289a4c e873ed48ff		call	do_callback_cont_handler
289a51 e1fe250200000000
------------------------------------------------------------------------
289a30				bits 64
289a30			stub_7fd31e289a30_1:
289a30 83c104			add	ecx,byte 4
289a33 90			nop
289a34			stub_7fd31e289a30_0:
289a34 e87dea48ff		call	do_callback_handler
289a39 31ff250200000000
------------------------------------------------------------------------
7190e3				bits 64
7190e3 90		version_28:
7190e4			version_29:
7190e4 4989df			mov	r15,rbx
7190e7			version_30:
7190e7			version_31:
7190e7			version_32:
7190e7			version_33:
7190e7			version_34:
7190e7 4c89ff			mov	rdi,r15
7190ea 4883ef04			sub	rdi,byte 4
7190ee 0f806c09b700		jo	stub_7fd31e289a60_0
7190f4			version_35:
7190f4 4883ed18			sub	rbp,byte 24
7190f8 48895d10			mov	[rbp+16],rbx
7190fc 48897508			mov	[rbp+8],rsi
719100 48c7c0e0582402		mov	rax,dword 35936480
719107 48894500			mov	[rbp],rax
71910b 4889fb			mov	rbx,rdi
71910e			inlined_call_3:
71910e			version_36:
71910e			version_37:
71910e 4989df			mov	r15,rbx
719111			version_38:
719111			version_39:
719111			version_40:
719111			version_41:
719111			version_42:
719111 4983ff08			cmp	r15,byte 8
719115			patchable_jump3:
719115 0f8d1909b700		jge	stub_7fd31e289a30_0
71911b e91009b700		jmp	stub_7fd31e289a30_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719115 -> 7fd31e289a30
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #8
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #9
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289a18				bits 64
289a18			stub_7fd31e289a18_0:
289a18 e899ea48ff		call	do_callback_handler
289a1d d1ff250200000000
------------------------------------------------------------------------
289a00				bits 64
289a00			stub_7fd31e289a00_1:
289a00 83c104			add	ecx,byte 4
289a03 90			nop
289a04			stub_7fd31e289a00_0:
289a04 e8bbed48ff		call	do_callback_cont_handler
289a09 2100260200000000
------------------------------------------------------------------------
2899e8				bits 64
2899e8			stub_7fd31e2899e8_1:
2899e8 83c104			add	ecx,byte 4
2899eb 90			nop
2899ec			stub_7fd31e2899e8_0:
2899ec e8c5ea48ff		call	do_callback_handler
2899f1 7100260200000000
------------------------------------------------------------------------
71911b				bits 64
71911b 90		version_43:
71911c			version_44:
71911c 4989df			mov	r15,rbx
71911f			version_45:
71911f			version_46:
71911f			version_47:
71911f			version_48:
71911f			version_49:
71911f 4c89ff			mov	rdi,r15
719122 4883ef04			sub	rdi,byte 4
719126 0f80ec08b700		jo	stub_7fd31e289a18_0
71912c			version_50:
71912c 4883ed18			sub	rbp,byte 24
719130 48895d10			mov	[rbp+16],rbx
719134 48897508			mov	[rbp+8],rsi
719138 48c7c0e0582402		mov	rax,dword 35936480
71913f 48894500			mov	[rbp],rax
719143 4889fb			mov	rbx,rdi
719146			inlined_call_4:
719146			version_51:
719146			version_52:
719146 4989df			mov	r15,rbx
719149			version_53:
719149			version_54:
719149			version_55:
719149			version_56:
719149			version_57:
719149 4983ff08			cmp	r15,byte 8
71914d			patchable_jump4:
71914d 0f8d9908b700		jge	stub_7fd31e2899e8_0
719153 e99008b700		jmp	stub_7fd31e2899e8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71914d -> 7fd31e2899e8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #10
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #11
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2899d0				bits 64
2899d0			stub_7fd31e2899d0_0:
2899d0 e8e1ea48ff		call	do_callback_handler
2899d5 1101260200000000
------------------------------------------------------------------------
2899b8				bits 64
2899b8			stub_7fd31e2899b8_1:
2899b8 83c104			add	ecx,byte 4
2899bb 90			nop
2899bc			stub_7fd31e2899b8_0:
2899bc e803ee48ff		call	do_callback_cont_handler
2899c1 6101260200000000
------------------------------------------------------------------------
2899a0				bits 64
2899a0			stub_7fd31e2899a0_1:
2899a0 83c104			add	ecx,byte 4
2899a3 90			nop
2899a4			stub_7fd31e2899a0_0:
2899a4 e80deb48ff		call	do_callback_handler
2899a9 b101260200000000
------------------------------------------------------------------------
719153				bits 64
719153 90		version_58:
719154			version_59:
719154 4989df			mov	r15,rbx
719157			version_60:
719157			version_61:
719157			version_62:
719157			version_63:
719157			version_64:
719157 4c89ff			mov	rdi,r15
71915a 4883ef04			sub	rdi,byte 4
71915e 0f806c08b700		jo	stub_7fd31e2899d0_0
719164			version_65:
719164 4883ed18			sub	rbp,byte 24
719168 48895d10			mov	[rbp+16],rbx
71916c 48897508			mov	[rbp+8],rsi
719170 48c7c0e0582402		mov	rax,dword 35936480
719177 48894500			mov	[rbp],rax
71917b 4889fb			mov	rbx,rdi
71917e			inlined_call_5:
71917e			version_66:
71917e			version_67:
71917e 4989df			mov	r15,rbx
719181			version_68:
719181			version_69:
719181			version_70:
719181			version_71:
719181			version_72:
719181 4983ff08			cmp	r15,byte 8
719185			patchable_jump5:
719185 0f8d1908b700		jge	stub_7fd31e2899a0_0
71918b e91008b700		jmp	stub_7fd31e2899a0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719185 -> 7fd31e2899a0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #12
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #13
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289988				bits 64
289988			stub_7fd31e289988_0:
289988 e829eb48ff		call	do_callback_handler
28998d 5102260200000000
------------------------------------------------------------------------
289970				bits 64
289970			stub_7fd31e289970_1:
289970 83c104			add	ecx,byte 4
289973 90			nop
289974			stub_7fd31e289970_0:
289974 e84bee48ff		call	do_callback_cont_handler
289979 a102260200000000
------------------------------------------------------------------------
289958				bits 64
289958			stub_7fd31e289958_1:
289958 83c104			add	ecx,byte 4
28995b 90			nop
28995c			stub_7fd31e289958_0:
28995c e855eb48ff		call	do_callback_handler
289961 f102260200000000
------------------------------------------------------------------------
71918b				bits 64
71918b 90		version_73:
71918c			version_74:
71918c 4989df			mov	r15,rbx
71918f			version_75:
71918f			version_76:
71918f			version_77:
71918f			version_78:
71918f			version_79:
71918f 4c89ff			mov	rdi,r15
719192 4883ef04			sub	rdi,byte 4
719196 0f80ec07b700		jo	stub_7fd31e289988_0
71919c			version_80:
71919c 4883ed18			sub	rbp,byte 24
7191a0 48895d10			mov	[rbp+16],rbx
7191a4 48897508			mov	[rbp+8],rsi
7191a8 48c7c0e0582402		mov	rax,dword 35936480
7191af 48894500			mov	[rbp],rax
7191b3 4889fb			mov	rbx,rdi
7191b6			inlined_call_6:
7191b6			version_81:
7191b6			version_82:
7191b6 4989df			mov	r15,rbx
7191b9			version_83:
7191b9			version_84:
7191b9			version_85:
7191b9			version_86:
7191b9			version_87:
7191b9 4983ff08			cmp	r15,byte 8
7191bd			patchable_jump6:
7191bd 0f8d9907b700		jge	stub_7fd31e289958_0
7191c3 e99007b700		jmp	stub_7fd31e289958_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7191bd -> 7fd31e289958
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #14
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #15
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289940				bits 64
289940			stub_7fd31e289940_0:
289940 e871eb48ff		call	do_callback_handler
289945 9103260200000000
------------------------------------------------------------------------
289928				bits 64
289928			stub_7fd31e289928_1:
289928 83c104			add	ecx,byte 4
28992b 90			nop
28992c			stub_7fd31e289928_0:
28992c e893ee48ff		call	do_callback_cont_handler
289931 e103260200000000
------------------------------------------------------------------------
289910				bits 64
289910			stub_7fd31e289910_1:
289910 83c104			add	ecx,byte 4
289913 90			nop
289914			stub_7fd31e289910_0:
289914 e89deb48ff		call	do_callback_handler
289919 3104260200000000
------------------------------------------------------------------------
7191c3				bits 64
7191c3 90		version_88:
7191c4			version_89:
7191c4 4989df			mov	r15,rbx
7191c7			version_90:
7191c7			version_91:
7191c7			version_92:
7191c7			version_93:
7191c7			version_94:
7191c7 4c89ff			mov	rdi,r15
7191ca 4883ef04			sub	rdi,byte 4
7191ce 0f806c07b700		jo	stub_7fd31e289940_0
7191d4			version_95:
7191d4 4883ed18			sub	rbp,byte 24
7191d8 48895d10			mov	[rbp+16],rbx
7191dc 48897508			mov	[rbp+8],rsi
7191e0 48c7c0e0582402		mov	rax,dword 35936480
7191e7 48894500			mov	[rbp],rax
7191eb 4889fb			mov	rbx,rdi
7191ee			inlined_call_7:
7191ee			version_96:
7191ee			version_97:
7191ee 4989df			mov	r15,rbx
7191f1			version_98:
7191f1			version_99:
7191f1			version_100:
7191f1			version_101:
7191f1			version_102:
7191f1 4983ff08			cmp	r15,byte 8
7191f5			patchable_jump7:
7191f5 0f8d1907b700		jge	stub_7fd31e289910_0
7191fb e91007b700		jmp	stub_7fd31e289910_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7191f5 -> 7fd31e289910
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #16
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #17
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2898f8				bits 64
2898f8			stub_7fd31e2898f8_0:
2898f8 e8b9eb48ff		call	do_callback_handler
2898fd f184260200000000
------------------------------------------------------------------------
2898e0				bits 64
2898e0			stub_7fd31e2898e0_1:
2898e0 83c104			add	ecx,byte 4
2898e3 90			nop
2898e4			stub_7fd31e2898e0_0:
2898e4 e8dbee48ff		call	do_callback_cont_handler
2898e9 4185260200000000
------------------------------------------------------------------------
2898c8				bits 64
2898c8			stub_7fd31e2898c8_1:
2898c8 83c104			add	ecx,byte 4
2898cb 90			nop
2898cc			stub_7fd31e2898c8_0:
2898cc e8e5eb48ff		call	do_callback_handler
2898d1 9185260200000000
------------------------------------------------------------------------
7191fb				bits 64
7191fb 90		version_103:
7191fc			version_104:
7191fc 4989df			mov	r15,rbx
7191ff			version_105:
7191ff			version_106:
7191ff			version_107:
7191ff			version_108:
7191ff			version_109:
7191ff 4c89ff			mov	rdi,r15
719202 4883ef04			sub	rdi,byte 4
719206 0f80ec06b700		jo	stub_7fd31e2898f8_0
71920c			version_110:
71920c 4883ed18			sub	rbp,byte 24
719210 48895d10			mov	[rbp+16],rbx
719214 48897508			mov	[rbp+8],rsi
719218 48c7c0e0582402		mov	rax,dword 35936480
71921f 48894500			mov	[rbp],rax
719223 4889fb			mov	rbx,rdi
719226			inlined_call_8:
719226			version_111:
719226			version_112:
719226 4989df			mov	r15,rbx
719229			version_113:
719229			version_114:
719229			version_115:
719229			version_116:
719229			version_117:
719229 4983ff08			cmp	r15,byte 8
71922d			patchable_jump8:
71922d 0f8d9906b700		jge	stub_7fd31e2898c8_0
719233 e99006b700		jmp	stub_7fd31e2898c8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71922d -> 7fd31e2898c8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #18
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #19
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2898b0				bits 64
2898b0			stub_7fd31e2898b0_0:
2898b0 e801ec48ff		call	do_callback_handler
2898b5 3186260200000000
------------------------------------------------------------------------
289898				bits 64
289898			stub_7fd31e289898_1:
289898 83c104			add	ecx,byte 4
28989b 90			nop
28989c			stub_7fd31e289898_0:
28989c e823ef48ff		call	do_callback_cont_handler
2898a1 8186260200000000
------------------------------------------------------------------------
289880				bits 64
289880			stub_7fd31e289880_1:
289880 83c104			add	ecx,byte 4
289883 90			nop
289884			stub_7fd31e289880_0:
289884 e82dec48ff		call	do_callback_handler
289889 d186260200000000
------------------------------------------------------------------------
719233				bits 64
719233 90		version_118:
719234			version_119:
719234 4989df			mov	r15,rbx
719237			version_120:
719237			version_121:
719237			version_122:
719237			version_123:
719237			version_124:
719237 4c89ff			mov	rdi,r15
71923a 4883ef04			sub	rdi,byte 4
71923e 0f806c06b700		jo	stub_7fd31e2898b0_0
719244			version_125:
719244 4883ed18			sub	rbp,byte 24
719248 48895d10			mov	[rbp+16],rbx
71924c 48897508			mov	[rbp+8],rsi
719250 48c7c0e0582402		mov	rax,dword 35936480
719257 48894500			mov	[rbp],rax
71925b 4889fb			mov	rbx,rdi
71925e			inlined_call_9:
71925e			version_126:
71925e			version_127:
71925e 4989df			mov	r15,rbx
719261			version_128:
719261			version_129:
719261			version_130:
719261			version_131:
719261			version_132:
719261 4983ff08			cmp	r15,byte 8
719265			patchable_jump9:
719265 0f8d1906b700		jge	stub_7fd31e289880_0
71926b e91006b700		jmp	stub_7fd31e289880_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719265 -> 7fd31e289880
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #20
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289868				bits 64
289868			stub_7fd31e289868_0:
289868 e849ec48ff		call	do_callback_handler
28986d 7187260200000000
------------------------------------------------------------------------
289850				bits 64
289850			stub_7fd31e289850_1:
289850 83c104			add	ecx,byte 4
289853 90			nop
289854			stub_7fd31e289850_0:
289854 e86bef48ff		call	do_callback_cont_handler
289859 c187260200000000
------------------------------------------------------------------------
289838				bits 64
289838			stub_7fd31e289838_1:
289838 83c104			add	ecx,byte 4
28983b 90			nop
28983c			stub_7fd31e289838_0:
28983c e875ec48ff		call	do_callback_handler
289841 1188260200000000
------------------------------------------------------------------------
71926b				bits 64
71926b 90		version_133:
71926c			version_134:
71926c 4989df			mov	r15,rbx
71926f			version_135:
71926f			version_136:
71926f			version_137:
71926f			version_138:
71926f			version_139:
71926f 4c89ff			mov	rdi,r15
719272 4883ef04			sub	rdi,byte 4
719276 0f80ec05b700		jo	stub_7fd31e289868_0
71927c			version_140:
71927c 4883ed18			sub	rbp,byte 24
719280 48895d10			mov	[rbp+16],rbx
719284 48897508			mov	[rbp+8],rsi
719288 48c7c0e0582402		mov	rax,dword 35936480
71928f 48894500			mov	[rbp],rax
719293 4889fb			mov	rbx,rdi
719296			inlined_call_10:
719296			version_141:
719296			version_142:
719296 4989df			mov	r15,rbx
719299			version_143:
719299			version_144:
719299			version_145:
719299			version_146:
719299			version_147:
719299 4983ff08			cmp	r15,byte 8
71929d			patchable_jump10:
71929d 0f8d9905b700		jge	stub_7fd31e289838_0
7192a3 e99005b700		jmp	stub_7fd31e289838_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71929d -> 7fd31e289838
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #22
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #23
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289820				bits 64
289820			stub_7fd31e289820_0:
289820 e891ec48ff		call	do_callback_handler
289825 f192260200000000
------------------------------------------------------------------------
289808				bits 64
289808			stub_7fd31e289808_1:
289808 83c104			add	ecx,byte 4
28980b 90			nop
28980c			stub_7fd31e289808_0:
28980c e8b3ef48ff		call	do_callback_cont_handler
289811 4193260200000000
------------------------------------------------------------------------
2897f0				bits 64
2897f0			stub_7fd31e2897f0_1:
2897f0 83c104			add	ecx,byte 4
2897f3 90			nop
2897f4			stub_7fd31e2897f0_0:
2897f4 e8bdec48ff		call	do_callback_handler
2897f9 9193260200000000
------------------------------------------------------------------------
7192a3				bits 64
7192a3 90		version_148:
7192a4			version_149:
7192a4 4989df			mov	r15,rbx
7192a7			version_150:
7192a7			version_151:
7192a7			version_152:
7192a7			version_153:
7192a7			version_154:
7192a7 4c89ff			mov	rdi,r15
7192aa 4883ef04			sub	rdi,byte 4
7192ae 0f806c05b700		jo	stub_7fd31e289820_0
7192b4			version_155:
7192b4 4883ed18			sub	rbp,byte 24
7192b8 48895d10			mov	[rbp+16],rbx
7192bc 48897508			mov	[rbp+8],rsi
7192c0 48c7c0e0582402		mov	rax,dword 35936480
7192c7 48894500			mov	[rbp],rax
7192cb 4889fb			mov	rbx,rdi
7192ce			inlined_call_11:
7192ce			version_156:
7192ce			version_157:
7192ce 4989df			mov	r15,rbx
7192d1			version_158:
7192d1			version_159:
7192d1			version_160:
7192d1			version_161:
7192d1			version_162:
7192d1 4983ff08			cmp	r15,byte 8
7192d5			patchable_jump11:
7192d5 0f8d1905b700		jge	stub_7fd31e2897f0_0
7192db e91005b700		jmp	stub_7fd31e2897f0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7192d5 -> 7fd31e2897f0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #24
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #25
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2897d8				bits 64
2897d8			stub_7fd31e2897d8_0:
2897d8 e8d9ec48ff		call	do_callback_handler
2897dd 3194260200000000
------------------------------------------------------------------------
2897c0				bits 64
2897c0			stub_7fd31e2897c0_1:
2897c0 83c104			add	ecx,byte 4
2897c3 90			nop
2897c4			stub_7fd31e2897c0_0:
2897c4 e8fbef48ff		call	do_callback_cont_handler
2897c9 8194260200000000
------------------------------------------------------------------------
2897a8				bits 64
2897a8			stub_7fd31e2897a8_1:
2897a8 83c104			add	ecx,byte 4
2897ab 90			nop
2897ac			stub_7fd31e2897a8_0:
2897ac e805ed48ff		call	do_callback_handler
2897b1 d194260200000000
------------------------------------------------------------------------
7192db				bits 64
7192db 90		version_163:
7192dc			version_164:
7192dc 4989df			mov	r15,rbx
7192df			version_165:
7192df			version_166:
7192df			version_167:
7192df			version_168:
7192df			version_169:
7192df 4c89ff			mov	rdi,r15
7192e2 4883ef04			sub	rdi,byte 4
7192e6 0f80ec04b700		jo	stub_7fd31e2897d8_0
7192ec			version_170:
7192ec 4883ed18			sub	rbp,byte 24
7192f0 48895d10			mov	[rbp+16],rbx
7192f4 48897508			mov	[rbp+8],rsi
7192f8 48c7c0e0582402		mov	rax,dword 35936480
7192ff 48894500			mov	[rbp],rax
719303 4889fb			mov	rbx,rdi
719306			inlined_call_12:
719306			version_171:
719306			version_172:
719306 4989df			mov	r15,rbx
719309			version_173:
719309			version_174:
719309			version_175:
719309			version_176:
719309			version_177:
719309 4983ff08			cmp	r15,byte 8
71930d			patchable_jump12:
71930d 0f8d9904b700		jge	stub_7fd31e2897a8_0
719313 e99004b700		jmp	stub_7fd31e2897a8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71930d -> 7fd31e2897a8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #26
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #27
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289790				bits 64
289790			stub_7fd31e289790_0:
289790 e821ed48ff		call	do_callback_handler
289795 7195260200000000
------------------------------------------------------------------------
289778				bits 64
289778			stub_7fd31e289778_1:
289778 83c104			add	ecx,byte 4
28977b 90			nop
28977c			stub_7fd31e289778_0:
28977c e843f048ff		call	do_callback_cont_handler
289781 c195260200000000
------------------------------------------------------------------------
289760				bits 64
289760			stub_7fd31e289760_1:
289760 83c104			add	ecx,byte 4
289763 90			nop
289764			stub_7fd31e289760_0:
289764 e84ded48ff		call	do_callback_handler
289769 1196260200000000
------------------------------------------------------------------------
719313				bits 64
719313 90		version_178:
719314			version_179:
719314 4989df			mov	r15,rbx
719317			version_180:
719317			version_181:
719317			version_182:
719317			version_183:
719317			version_184:
719317 4c89ff			mov	rdi,r15
71931a 4883ef04			sub	rdi,byte 4
71931e 0f806c04b700		jo	stub_7fd31e289790_0
719324			version_185:
719324 4883ed18			sub	rbp,byte 24
719328 48895d10			mov	[rbp+16],rbx
71932c 48897508			mov	[rbp+8],rsi
719330 48c7c0e0582402		mov	rax,dword 35936480
719337 48894500			mov	[rbp],rax
71933b 4889fb			mov	rbx,rdi
71933e			inlined_call_13:
71933e			version_186:
71933e			version_187:
71933e 4989df			mov	r15,rbx
719341			version_188:
719341			version_189:
719341			version_190:
719341			version_191:
719341			version_192:
719341 4983ff08			cmp	r15,byte 8
719345			patchable_jump13:
719345 0f8d1904b700		jge	stub_7fd31e289760_0
71934b e91004b700		jmp	stub_7fd31e289760_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719345 -> 7fd31e289760
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #28
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #29
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289748				bits 64
289748			stub_7fd31e289748_0:
289748 e869ed48ff		call	do_callback_handler
28974d b196260200000000
------------------------------------------------------------------------
289730				bits 64
289730			stub_7fd31e289730_1:
289730 83c104			add	ecx,byte 4
289733 90			nop
289734			stub_7fd31e289730_0:
289734 e88bf048ff		call	do_callback_cont_handler
289739 0197260200000000
------------------------------------------------------------------------
289718				bits 64
289718			stub_7fd31e289718_1:
289718 83c104			add	ecx,byte 4
28971b 90			nop
28971c			stub_7fd31e289718_0:
28971c e895ed48ff		call	do_callback_handler
289721 5197260200000000
------------------------------------------------------------------------
71934b				bits 64
71934b 90		version_193:
71934c			version_194:
71934c 4989df			mov	r15,rbx
71934f			version_195:
71934f			version_196:
71934f			version_197:
71934f			version_198:
71934f			version_199:
71934f 4c89ff			mov	rdi,r15
719352 4883ef04			sub	rdi,byte 4
719356 0f80ec03b700		jo	stub_7fd31e289748_0
71935c			version_200:
71935c 4883ed18			sub	rbp,byte 24
719360 48895d10			mov	[rbp+16],rbx
719364 48897508			mov	[rbp+8],rsi
719368 48c7c0e0582402		mov	rax,dword 35936480
71936f 48894500			mov	[rbp],rax
719373 4889fb			mov	rbx,rdi
719376			inlined_call_14:
719376			version_201:
719376			version_202:
719376 4989df			mov	r15,rbx
719379			version_203:
719379			version_204:
719379			version_205:
719379			version_206:
719379			version_207:
719379 4983ff08			cmp	r15,byte 8
71937d			patchable_jump14:
71937d 0f8d9903b700		jge	stub_7fd31e289718_0
719383 e99003b700		jmp	stub_7fd31e289718_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71937d -> 7fd31e289718
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #30
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #31
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289700				bits 64
289700			stub_7fd31e289700_0:
289700 e8b1ed48ff		call	do_callback_handler
289705 f197260200000000
------------------------------------------------------------------------
2896e8				bits 64
2896e8			stub_7fd31e2896e8_1:
2896e8 83c104			add	ecx,byte 4
2896eb 90			nop
2896ec			stub_7fd31e2896e8_0:
2896ec e8d3f048ff		call	do_callback_cont_handler
2896f1 4198260200000000
------------------------------------------------------------------------
2896d0				bits 64
2896d0			stub_7fd31e2896d0_1:
2896d0 83c104			add	ecx,byte 4
2896d3 90			nop
2896d4			stub_7fd31e2896d0_0:
2896d4 e8dded48ff		call	do_callback_handler
2896d9 9198260200000000
------------------------------------------------------------------------
719383				bits 64
719383 90		version_208:
719384			version_209:
719384 4989df			mov	r15,rbx
719387			version_210:
719387			version_211:
719387			version_212:
719387			version_213:
719387			version_214:
719387 4c89ff			mov	rdi,r15
71938a 4883ef04			sub	rdi,byte 4
71938e 0f806c03b700		jo	stub_7fd31e289700_0
719394			version_215:
719394 4883ed18			sub	rbp,byte 24
719398 48895d10			mov	[rbp+16],rbx
71939c 48897508			mov	[rbp+8],rsi
7193a0 48c7c0e0582402		mov	rax,dword 35936480
7193a7 48894500			mov	[rbp],rax
7193ab 4889fb			mov	rbx,rdi
7193ae			inlined_call_15:
7193ae			version_216:
7193ae			version_217:
7193ae 4989df			mov	r15,rbx
7193b1			version_218:
7193b1			version_219:
7193b1			version_220:
7193b1			version_221:
7193b1			version_222:
7193b1 4983ff08			cmp	r15,byte 8
7193b5			patchable_jump15:
7193b5 0f8d1903b700		jge	stub_7fd31e2896d0_0
7193bb e91003b700		jmp	stub_7fd31e2896d0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7193b5 -> 7fd31e2896d0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #32
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #33
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2896b8				bits 64
2896b8			stub_7fd31e2896b8_0:
2896b8 e8f9ed48ff		call	do_callback_handler
2896bd d1a7260200000000
------------------------------------------------------------------------
2896a0				bits 64
2896a0			stub_7fd31e2896a0_1:
2896a0 83c104			add	ecx,byte 4
2896a3 90			nop
2896a4			stub_7fd31e2896a0_0:
2896a4 e81bf148ff		call	do_callback_cont_handler
2896a9 21a8260200000000
------------------------------------------------------------------------
289688				bits 64
289688			stub_7fd31e289688_1:
289688 83c104			add	ecx,byte 4
28968b 90			nop
28968c			stub_7fd31e289688_0:
28968c e825ee48ff		call	do_callback_handler
289691 71a8260200000000
------------------------------------------------------------------------
7193bb				bits 64
7193bb 90		version_223:
7193bc			version_224:
7193bc 4989df			mov	r15,rbx
7193bf			version_225:
7193bf			version_226:
7193bf			version_227:
7193bf			version_228:
7193bf			version_229:
7193bf 4c89ff			mov	rdi,r15
7193c2 4883ef04			sub	rdi,byte 4
7193c6 0f80ec02b700		jo	stub_7fd31e2896b8_0
7193cc			version_230:
7193cc 4883ed18			sub	rbp,byte 24
7193d0 48895d10			mov	[rbp+16],rbx
7193d4 48897508			mov	[rbp+8],rsi
7193d8 48c7c0e0582402		mov	rax,dword 35936480
7193df 48894500			mov	[rbp],rax
7193e3 4889fb			mov	rbx,rdi
7193e6			inlined_call_16:
7193e6			version_231:
7193e6			version_232:
7193e6 4989df			mov	r15,rbx
7193e9			version_233:
7193e9			version_234:
7193e9			version_235:
7193e9			version_236:
7193e9			version_237:
7193e9 4983ff08			cmp	r15,byte 8
7193ed			patchable_jump16:
7193ed 0f8d9902b700		jge	stub_7fd31e289688_0
7193f3 e99002b700		jmp	stub_7fd31e289688_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7193ed -> 7fd31e289688
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #34
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #35
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289670				bits 64
289670			stub_7fd31e289670_0:
289670 e841ee48ff		call	do_callback_handler
289675 11a9260200000000
------------------------------------------------------------------------
289658				bits 64
289658			stub_7fd31e289658_1:
289658 83c104			add	ecx,byte 4
28965b 90			nop
28965c			stub_7fd31e289658_0:
28965c e863f148ff		call	do_callback_cont_handler
289661 61a9260200000000
------------------------------------------------------------------------
289640				bits 64
289640			stub_7fd31e289640_1:
289640 83c104			add	ecx,byte 4
289643 90			nop
289644			stub_7fd31e289640_0:
289644 e86dee48ff		call	do_callback_handler
289649 b1a9260200000000
------------------------------------------------------------------------
7193f3				bits 64
7193f3 90		version_238:
7193f4			version_239:
7193f4 4989df			mov	r15,rbx
7193f7			version_240:
7193f7			version_241:
7193f7			version_242:
7193f7			version_243:
7193f7			version_244:
7193f7 4c89ff			mov	rdi,r15
7193fa 4883ef04			sub	rdi,byte 4
7193fe 0f806c02b700		jo	stub_7fd31e289670_0
719404			version_245:
719404 4883ed18			sub	rbp,byte 24
719408 48895d10			mov	[rbp+16],rbx
71940c 48897508			mov	[rbp+8],rsi
719410 48c7c0e0582402		mov	rax,dword 35936480
719417 48894500			mov	[rbp],rax
71941b 4889fb			mov	rbx,rdi
71941e			inlined_call_17:
71941e			version_246:
71941e			version_247:
71941e 4989df			mov	r15,rbx
719421			version_248:
719421			version_249:
719421			version_250:
719421			version_251:
719421			version_252:
719421 4983ff08			cmp	r15,byte 8
719425			patchable_jump17:
719425 0f8d1902b700		jge	stub_7fd31e289640_0
71942b e91002b700		jmp	stub_7fd31e289640_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719425 -> 7fd31e289640
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #36
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #37
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289628				bits 64
289628			stub_7fd31e289628_0:
289628 e889ee48ff		call	do_callback_handler
28962d 51aa260200000000
------------------------------------------------------------------------
289610				bits 64
289610			stub_7fd31e289610_1:
289610 83c104			add	ecx,byte 4
289613 90			nop
289614			stub_7fd31e289610_0:
289614 e8abf148ff		call	do_callback_cont_handler
289619 a1aa260200000000
------------------------------------------------------------------------
2895f8				bits 64
2895f8			stub_7fd31e2895f8_1:
2895f8 83c104			add	ecx,byte 4
2895fb 90			nop
2895fc			stub_7fd31e2895f8_0:
2895fc e8b5ee48ff		call	do_callback_handler
289601 f1aa260200000000
------------------------------------------------------------------------
71942b				bits 64
71942b 90		version_253:
71942c			version_254:
71942c 4989df			mov	r15,rbx
71942f			version_255:
71942f			version_256:
71942f			version_257:
71942f			version_258:
71942f			version_259:
71942f 4c89ff			mov	rdi,r15
719432 4883ef04			sub	rdi,byte 4
719436 0f80ec01b700		jo	stub_7fd31e289628_0
71943c			version_260:
71943c 4883ed18			sub	rbp,byte 24
719440 48895d10			mov	[rbp+16],rbx
719444 48897508			mov	[rbp+8],rsi
719448 48c7c0e0582402		mov	rax,dword 35936480
71944f 48894500			mov	[rbp],rax
719453 4889fb			mov	rbx,rdi
719456			inlined_call_18:
719456			version_261:
719456			version_262:
719456 4989df			mov	r15,rbx
719459			version_263:
719459			version_264:
719459			version_265:
719459			version_266:
719459			version_267:
719459 4983ff08			cmp	r15,byte 8
71945d			patchable_jump18:
71945d 0f8d9901b700		jge	stub_7fd31e2895f8_0
719463 e99001b700		jmp	stub_7fd31e2895f8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71945d -> 7fd31e2895f8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #38
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #39
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2895e0				bits 64
2895e0			stub_7fd31e2895e0_0:
2895e0 e8d1ee48ff		call	do_callback_handler
2895e5 91ab260200000000
------------------------------------------------------------------------
2895c8				bits 64
2895c8			stub_7fd31e2895c8_1:
2895c8 83c104			add	ecx,byte 4
2895cb 90			nop
2895cc			stub_7fd31e2895c8_0:
2895cc e8f3f148ff		call	do_callback_cont_handler
2895d1 e1ab260200000000
------------------------------------------------------------------------
2895b0				bits 64
2895b0			stub_7fd31e2895b0_1:
2895b0 83c104			add	ecx,byte 4
2895b3 90			nop
2895b4			stub_7fd31e2895b0_0:
2895b4 e8fdee48ff		call	do_callback_handler
2895b9 31ac260200000000
------------------------------------------------------------------------
719463				bits 64
719463 90		version_268:
719464			version_269:
719464 4989df			mov	r15,rbx
719467			version_270:
719467			version_271:
719467			version_272:
719467			version_273:
719467			version_274:
719467 4c89ff			mov	rdi,r15
71946a 4883ef04			sub	rdi,byte 4
71946e 0f806c01b700		jo	stub_7fd31e2895e0_0
719474			version_275:
719474 4883ed18			sub	rbp,byte 24
719478 48895d10			mov	[rbp+16],rbx
71947c 48897508			mov	[rbp+8],rsi
719480 48c7c0e0582402		mov	rax,dword 35936480
719487 48894500			mov	[rbp],rax
71948b 4889fb			mov	rbx,rdi
71948e			inlined_call_19:
71948e			version_276:
71948e			version_277:
71948e 4989df			mov	r15,rbx
719491			version_278:
719491			version_279:
719491			version_280:
719491			version_281:
719491			version_282:
719491 4983ff08			cmp	r15,byte 8
719495			patchable_jump19:
719495 0f8d1901b700		jge	stub_7fd31e2895b0_0
71949b e91001b700		jmp	stub_7fd31e2895b0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719495 -> 7fd31e2895b0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #40
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #41
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289598				bits 64
289598			stub_7fd31e289598_0:
289598 e819ef48ff		call	do_callback_handler
28959d d1ac260200000000
------------------------------------------------------------------------
289580				bits 64
289580			stub_7fd31e289580_1:
289580 83c104			add	ecx,byte 4
289583 90			nop
289584			stub_7fd31e289580_0:
289584 e83bf248ff		call	do_callback_cont_handler
289589 21ad260200000000
------------------------------------------------------------------------
289568				bits 64
289568			stub_7fd31e289568_1:
289568 83c104			add	ecx,byte 4
28956b 90			nop
28956c			stub_7fd31e289568_0:
28956c e845ef48ff		call	do_callback_handler
289571 71ad260200000000
------------------------------------------------------------------------
71949b				bits 64
71949b 90		version_283:
71949c			version_284:
71949c 4989df			mov	r15,rbx
71949f			version_285:
71949f			version_286:
71949f			version_287:
71949f			version_288:
71949f			version_289:
71949f 4c89ff			mov	rdi,r15
7194a2 4883ef04			sub	rdi,byte 4
7194a6 0f80ec00b700		jo	stub_7fd31e289598_0
7194ac			version_290:
7194ac 4883ed18			sub	rbp,byte 24
7194b0 48895d10			mov	[rbp+16],rbx
7194b4 48897508			mov	[rbp+8],rsi
7194b8 48c7c0e0582402		mov	rax,dword 35936480
7194bf 48894500			mov	[rbp],rax
7194c3 4889fb			mov	rbx,rdi
7194c6			inlined_call_20:
7194c6			version_291:
7194c6			version_292:
7194c6 4989df			mov	r15,rbx
7194c9			version_293:
7194c9			version_294:
7194c9			version_295:
7194c9			version_296:
7194c9			version_297:
7194c9 4983ff08			cmp	r15,byte 8
7194cd			patchable_jump20:
7194cd 0f8d9900b700		jge	stub_7fd31e289568_0
7194d3 e99000b700		jmp	stub_7fd31e289568_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7194cd -> 7fd31e289568
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #42
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #43
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289550				bits 64
289550			stub_7fd31e289550_0:
289550 e861ef48ff		call	do_callback_handler
289555 11ae260200000000
------------------------------------------------------------------------
289538				bits 64
289538			stub_7fd31e289538_1:
289538 83c104			add	ecx,byte 4
28953b 90			nop
28953c			stub_7fd31e289538_0:
28953c e883f248ff		call	do_callback_cont_handler
289541 61ae260200000000
------------------------------------------------------------------------
289520				bits 64
289520			stub_7fd31e289520_1:
289520 83c104			add	ecx,byte 4
289523 90			nop
289524			stub_7fd31e289520_0:
289524 e88def48ff		call	do_callback_handler
289529 b1ae260200000000
------------------------------------------------------------------------
7194d3				bits 64
7194d3 90		version_298:
7194d4			version_299:
7194d4 4989df			mov	r15,rbx
7194d7			version_300:
7194d7			version_301:
7194d7			version_302:
7194d7			version_303:
7194d7			version_304:
7194d7 4c89ff			mov	rdi,r15
7194da 4883ef04			sub	rdi,byte 4
7194de 0f806c00b700		jo	stub_7fd31e289550_0
7194e4			version_305:
7194e4 4883ed18			sub	rbp,byte 24
7194e8 48895d10			mov	[rbp+16],rbx
7194ec 48897508			mov	[rbp+8],rsi
7194f0 48c7c0e0582402		mov	rax,dword 35936480
7194f7 48894500			mov	[rbp],rax
7194fb 4889fb			mov	rbx,rdi
7194fe			inlined_call_21:
7194fe			version_306:
7194fe			version_307:
7194fe 4989df			mov	r15,rbx
719501			version_308:
719501			version_309:
719501			version_310:
719501			version_311:
719501			version_312:
719501 4983ff08			cmp	r15,byte 8
719505			patchable_jump21:
719505 0f8d1900b700		jge	stub_7fd31e289520_0
71950b e91000b700		jmp	stub_7fd31e289520_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719505 -> 7fd31e289520
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #44
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #45
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289508				bits 64
289508			stub_7fd31e289508_0:
289508 e8a9ef48ff		call	do_callback_handler
28950d 712f270200000000
------------------------------------------------------------------------
2894f0				bits 64
2894f0			stub_7fd31e2894f0_1:
2894f0 83c104			add	ecx,byte 4
2894f3 90			nop
2894f4			stub_7fd31e2894f0_0:
2894f4 e8cbf248ff		call	do_callback_cont_handler
2894f9 c12f270200000000
------------------------------------------------------------------------
2894d8				bits 64
2894d8			stub_7fd31e2894d8_1:
2894d8 83c104			add	ecx,byte 4
2894db 90			nop
2894dc			stub_7fd31e2894d8_0:
2894dc e8d5ef48ff		call	do_callback_handler
2894e1 1130270200000000
------------------------------------------------------------------------
71950b				bits 64
71950b 90		version_313:
71950c			version_314:
71950c 4989df			mov	r15,rbx
71950f			version_315:
71950f			version_316:
71950f			version_317:
71950f			version_318:
71950f			version_319:
71950f 4c89ff			mov	rdi,r15
719512 4883ef04			sub	rdi,byte 4
719516 0f80ecffb600		jo	stub_7fd31e289508_0
71951c			version_320:
71951c 4883ed18			sub	rbp,byte 24
719520 48895d10			mov	[rbp+16],rbx
719524 48897508			mov	[rbp+8],rsi
719528 48c7c0e0582402		mov	rax,dword 35936480
71952f 48894500			mov	[rbp],rax
719533 4889fb			mov	rbx,rdi
719536			inlined_call_22:
719536			version_321:
719536			version_322:
719536 4989df			mov	r15,rbx
719539			version_323:
719539			version_324:
719539			version_325:
719539			version_326:
719539			version_327:
719539 4983ff08			cmp	r15,byte 8
71953d			patchable_jump22:
71953d 0f8d99ffb600		jge	stub_7fd31e2894d8_0
719543 e990ffb600		jmp	stub_7fd31e2894d8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71953d -> 7fd31e2894d8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #46
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #47
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2894c0				bits 64
2894c0			stub_7fd31e2894c0_0:
2894c0 e8f1ef48ff		call	do_callback_handler
2894c5 d145270200000000
------------------------------------------------------------------------
2894a8				bits 64
2894a8			stub_7fd31e2894a8_1:
2894a8 83c104			add	ecx,byte 4
2894ab 90			nop
2894ac			stub_7fd31e2894a8_0:
2894ac e813f348ff		call	do_callback_cont_handler
2894b1 2146270200000000
------------------------------------------------------------------------
289490				bits 64
289490			stub_7fd31e289490_1:
289490 83c104			add	ecx,byte 4
289493 90			nop
289494			stub_7fd31e289490_0:
289494 e81df048ff		call	do_callback_handler
289499 7146270200000000
------------------------------------------------------------------------
719543				bits 64
719543 90		version_328:
719544			version_329:
719544 4989df			mov	r15,rbx
719547			version_330:
719547			version_331:
719547			version_332:
719547			version_333:
719547			version_334:
719547 4c89ff			mov	rdi,r15
71954a 4883ef04			sub	rdi,byte 4
71954e 0f806cffb600		jo	stub_7fd31e2894c0_0
719554			version_335:
719554 4883ed18			sub	rbp,byte 24
719558 48895d10			mov	[rbp+16],rbx
71955c 48897508			mov	[rbp+8],rsi
719560 48c7c0e0582402		mov	rax,dword 35936480
719567 48894500			mov	[rbp],rax
71956b 4889fb			mov	rbx,rdi
71956e			inlined_call_23:
71956e			version_336:
71956e			version_337:
71956e 4989df			mov	r15,rbx
719571			version_338:
719571			version_339:
719571			version_340:
719571			version_341:
719571			version_342:
719571 4983ff08			cmp	r15,byte 8
719575			patchable_jump23:
719575 0f8d19ffb600		jge	stub_7fd31e289490_0
71957b e910ffb600		jmp	stub_7fd31e289490_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719575 -> 7fd31e289490
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #48
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #49
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289478				bits 64
289478			stub_7fd31e289478_0:
289478 e839f048ff		call	do_callback_handler
28947d 1147270200000000
------------------------------------------------------------------------
289460				bits 64
289460			stub_7fd31e289460_1:
289460 83c104			add	ecx,byte 4
289463 90			nop
289464			stub_7fd31e289460_0:
289464 e85bf348ff		call	do_callback_cont_handler
289469 6147270200000000
------------------------------------------------------------------------
289448				bits 64
289448			stub_7fd31e289448_1:
289448 83c104			add	ecx,byte 4
28944b 90			nop
28944c			stub_7fd31e289448_0:
28944c e865f048ff		call	do_callback_handler
289451 b147270200000000
------------------------------------------------------------------------
71957b				bits 64
71957b 90		version_343:
71957c			version_344:
71957c 4989df			mov	r15,rbx
71957f			version_345:
71957f			version_346:
71957f			version_347:
71957f			version_348:
71957f			version_349:
71957f 4c89ff			mov	rdi,r15
719582 4883ef04			sub	rdi,byte 4
719586 0f80ecfeb600		jo	stub_7fd31e289478_0
71958c			version_350:
71958c 4883ed18			sub	rbp,byte 24
719590 48895d10			mov	[rbp+16],rbx
719594 48897508			mov	[rbp+8],rsi
719598 48c7c0e0582402		mov	rax,dword 35936480
71959f 48894500			mov	[rbp],rax
7195a3 4889fb			mov	rbx,rdi
7195a6			inlined_call_24:
7195a6			version_351:
7195a6			version_352:
7195a6 4989df			mov	r15,rbx
7195a9			version_353:
7195a9			version_354:
7195a9			version_355:
7195a9			version_356:
7195a9			version_357:
7195a9 4983ff08			cmp	r15,byte 8
7195ad			patchable_jump24:
7195ad 0f8d99feb600		jge	stub_7fd31e289448_0
7195b3 e990feb600		jmp	stub_7fd31e289448_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7195ad -> 7fd31e289448
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #50
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #51
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289430				bits 64
289430			stub_7fd31e289430_0:
289430 e881f048ff		call	do_callback_handler
289435 5148270200000000
------------------------------------------------------------------------
289418				bits 64
289418			stub_7fd31e289418_1:
289418 83c104			add	ecx,byte 4
28941b 90			nop
28941c			stub_7fd31e289418_0:
28941c e8a3f348ff		call	do_callback_cont_handler
289421 a148270200000000
------------------------------------------------------------------------
289400				bits 64
289400			stub_7fd31e289400_1:
289400 83c104			add	ecx,byte 4
289403 90			nop
289404			stub_7fd31e289400_0:
289404 e8adf048ff		call	do_callback_handler
289409 f148270200000000
------------------------------------------------------------------------
7195b3				bits 64
7195b3 90		version_358:
7195b4			version_359:
7195b4 4989df			mov	r15,rbx
7195b7			version_360:
7195b7			version_361:
7195b7			version_362:
7195b7			version_363:
7195b7			version_364:
7195b7 4c89ff			mov	rdi,r15
7195ba 4883ef04			sub	rdi,byte 4
7195be 0f806cfeb600		jo	stub_7fd31e289430_0
7195c4			version_365:
7195c4 4883ed18			sub	rbp,byte 24
7195c8 48895d10			mov	[rbp+16],rbx
7195cc 48897508			mov	[rbp+8],rsi
7195d0 48c7c0e0582402		mov	rax,dword 35936480
7195d7 48894500			mov	[rbp],rax
7195db 4889fb			mov	rbx,rdi
7195de			inlined_call_25:
7195de			version_366:
7195de			version_367:
7195de 4989df			mov	r15,rbx
7195e1			version_368:
7195e1			version_369:
7195e1			version_370:
7195e1			version_371:
7195e1			version_372:
7195e1 4983ff08			cmp	r15,byte 8
7195e5			patchable_jump25:
7195e5 0f8d19feb600		jge	stub_7fd31e289400_0
7195eb e910feb600		jmp	stub_7fd31e289400_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7195e5 -> 7fd31e289400
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #52
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #53
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2893e8				bits 64
2893e8			stub_7fd31e2893e8_0:
2893e8 e8c9f048ff		call	do_callback_handler
2893ed 9149270200000000
------------------------------------------------------------------------
2893d0				bits 64
2893d0			stub_7fd31e2893d0_1:
2893d0 83c104			add	ecx,byte 4
2893d3 90			nop
2893d4			stub_7fd31e2893d0_0:
2893d4 e8ebf348ff		call	do_callback_cont_handler
2893d9 e149270200000000
------------------------------------------------------------------------
2893b8				bits 64
2893b8			stub_7fd31e2893b8_1:
2893b8 83c104			add	ecx,byte 4
2893bb 90			nop
2893bc			stub_7fd31e2893b8_0:
2893bc e8f5f048ff		call	do_callback_handler
2893c1 314a270200000000
------------------------------------------------------------------------
7195eb				bits 64
7195eb 90		version_373:
7195ec			version_374:
7195ec 4989df			mov	r15,rbx
7195ef			version_375:
7195ef			version_376:
7195ef			version_377:
7195ef			version_378:
7195ef			version_379:
7195ef 4c89ff			mov	rdi,r15
7195f2 4883ef04			sub	rdi,byte 4
7195f6 0f80ecfdb600		jo	stub_7fd31e2893e8_0
7195fc			version_380:
7195fc 4883ed18			sub	rbp,byte 24
719600 48895d10			mov	[rbp+16],rbx
719604 48897508			mov	[rbp+8],rsi
719608 48c7c0e0582402		mov	rax,dword 35936480
71960f 48894500			mov	[rbp],rax
719613 4889fb			mov	rbx,rdi
719616			inlined_call_26:
719616			version_381:
719616			version_382:
719616 4989df			mov	r15,rbx
719619			version_383:
719619			version_384:
719619			version_385:
719619			version_386:
719619			version_387:
719619 4983ff08			cmp	r15,byte 8
71961d			patchable_jump26:
71961d 0f8d99fdb600		jge	stub_7fd31e2893b8_0
719623 e990fdb600		jmp	stub_7fd31e2893b8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71961d -> 7fd31e2893b8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #54
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #55
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2893a0				bits 64
2893a0			stub_7fd31e2893a0_0:
2893a0 e811f148ff		call	do_callback_handler
2893a5 d14a270200000000
------------------------------------------------------------------------
289388				bits 64
289388			stub_7fd31e289388_1:
289388 83c104			add	ecx,byte 4
28938b 90			nop
28938c			stub_7fd31e289388_0:
28938c e833f448ff		call	do_callback_cont_handler
289391 214b270200000000
------------------------------------------------------------------------
289370				bits 64
289370			stub_7fd31e289370_1:
289370 83c104			add	ecx,byte 4
289373 90			nop
289374			stub_7fd31e289370_0:
289374 e83df148ff		call	do_callback_handler
289379 714b270200000000
------------------------------------------------------------------------
719623				bits 64
719623 90		version_388:
719624			version_389:
719624 4989df			mov	r15,rbx
719627			version_390:
719627			version_391:
719627			version_392:
719627			version_393:
719627			version_394:
719627 4c89ff			mov	rdi,r15
71962a 4883ef04			sub	rdi,byte 4
71962e 0f806cfdb600		jo	stub_7fd31e2893a0_0
719634			version_395:
719634 4883ed18			sub	rbp,byte 24
719638 48895d10			mov	[rbp+16],rbx
71963c 48897508			mov	[rbp+8],rsi
719640 48c7c0e0582402		mov	rax,dword 35936480
719647 48894500			mov	[rbp],rax
71964b 4889fb			mov	rbx,rdi
71964e			inlined_call_27:
71964e			version_396:
71964e			version_397:
71964e 4989df			mov	r15,rbx
719651			version_398:
719651			version_399:
719651			version_400:
719651			version_401:
719651			version_402:
719651 4983ff08			cmp	r15,byte 8
719655			patchable_jump27:
719655 0f8d19fdb600		jge	stub_7fd31e289370_0
71965b e910fdb600		jmp	stub_7fd31e289370_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719655 -> 7fd31e289370
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #56
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #57
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289358				bits 64
289358			stub_7fd31e289358_0:
289358 e859f148ff		call	do_callback_handler
28935d 114c270200000000
------------------------------------------------------------------------
289340				bits 64
289340			stub_7fd31e289340_1:
289340 83c104			add	ecx,byte 4
289343 90			nop
289344			stub_7fd31e289340_0:
289344 e87bf448ff		call	do_callback_cont_handler
289349 614c270200000000
------------------------------------------------------------------------
289328				bits 64
289328			stub_7fd31e289328_1:
289328 83c104			add	ecx,byte 4
28932b 90			nop
28932c			stub_7fd31e289328_0:
28932c e885f148ff		call	do_callback_handler
289331 b14c270200000000
------------------------------------------------------------------------
71965b				bits 64
71965b 90		version_403:
71965c			version_404:
71965c 4989df			mov	r15,rbx
71965f			version_405:
71965f			version_406:
71965f			version_407:
71965f			version_408:
71965f			version_409:
71965f 4c89ff			mov	rdi,r15
719662 4883ef04			sub	rdi,byte 4
719666 0f80ecfcb600		jo	stub_7fd31e289358_0
71966c			version_410:
71966c 4883ed18			sub	rbp,byte 24
719670 48895d10			mov	[rbp+16],rbx
719674 48897508			mov	[rbp+8],rsi
719678 48c7c0e0582402		mov	rax,dword 35936480
71967f 48894500			mov	[rbp],rax
719683 4889fb			mov	rbx,rdi
719686			inlined_call_28:
719686			version_411:
719686			version_412:
719686 4989df			mov	r15,rbx
719689			version_413:
719689			version_414:
719689			version_415:
719689			version_416:
719689			version_417:
719689 4983ff08			cmp	r15,byte 8
71968d			patchable_jump28:
71968d 0f8d99fcb600		jge	stub_7fd31e289328_0
719693 e990fcb600		jmp	stub_7fd31e289328_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71968d -> 7fd31e289328
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #58
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #59
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289310				bits 64
289310			stub_7fd31e289310_0:
289310 e8a1f148ff		call	do_callback_handler
289315 514d270200000000
------------------------------------------------------------------------
2892f8				bits 64
2892f8			stub_7fd31e2892f8_1:
2892f8 83c104			add	ecx,byte 4
2892fb 90			nop
2892fc			stub_7fd31e2892f8_0:
2892fc e8c3f448ff		call	do_callback_cont_handler
289301 a14d270200000000
------------------------------------------------------------------------
2892e0				bits 64
2892e0			stub_7fd31e2892e0_1:
2892e0 83c104			add	ecx,byte 4
2892e3 90			nop
2892e4			stub_7fd31e2892e0_0:
2892e4 e8cdf148ff		call	do_callback_handler
2892e9 f14d270200000000
------------------------------------------------------------------------
719693				bits 64
719693 90		version_418:
719694			version_419:
719694 4989df			mov	r15,rbx
719697			version_420:
719697			version_421:
719697			version_422:
719697			version_423:
719697			version_424:
719697 4c89ff			mov	rdi,r15
71969a 4883ef04			sub	rdi,byte 4
71969e 0f806cfcb600		jo	stub_7fd31e289310_0
7196a4			version_425:
7196a4 4883ed18			sub	rbp,byte 24
7196a8 48895d10			mov	[rbp+16],rbx
7196ac 48897508			mov	[rbp+8],rsi
7196b0 48c7c0e0582402		mov	rax,dword 35936480
7196b7 48894500			mov	[rbp],rax
7196bb 4889fb			mov	rbx,rdi
7196be			inlined_call_29:
7196be			version_426:
7196be			version_427:
7196be 4989df			mov	r15,rbx
7196c1			version_428:
7196c1			version_429:
7196c1			version_430:
7196c1			version_431:
7196c1			version_432:
7196c1 4983ff08			cmp	r15,byte 8
7196c5			patchable_jump29:
7196c5 0f8d19fcb600		jge	stub_7fd31e2892e0_0
7196cb e910fcb600		jmp	stub_7fd31e2892e0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7196c5 -> 7fd31e2892e0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #60
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #61
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2892c8				bits 64
2892c8			stub_7fd31e2892c8_0:
2892c8 e8e9f148ff		call	do_callback_handler
2892cd 914e270200000000
------------------------------------------------------------------------
2892b0				bits 64
2892b0			stub_7fd31e2892b0_1:
2892b0 83c104			add	ecx,byte 4
2892b3 90			nop
2892b4			stub_7fd31e2892b0_0:
2892b4 e80bf548ff		call	do_callback_cont_handler
2892b9 e14e270200000000
------------------------------------------------------------------------
289298				bits 64
289298			stub_7fd31e289298_1:
289298 83c104			add	ecx,byte 4
28929b 90			nop
28929c			stub_7fd31e289298_0:
28929c e815f248ff		call	do_callback_handler
2892a1 314f270200000000
------------------------------------------------------------------------
7196cb				bits 64
7196cb 90		version_433:
7196cc			version_434:
7196cc 4989df			mov	r15,rbx
7196cf			version_435:
7196cf			version_436:
7196cf			version_437:
7196cf			version_438:
7196cf			version_439:
7196cf 4c89ff			mov	rdi,r15
7196d2 4883ef04			sub	rdi,byte 4
7196d6 0f80ecfbb600		jo	stub_7fd31e2892c8_0
7196dc			version_440:
7196dc 4883ed18			sub	rbp,byte 24
7196e0 48895d10			mov	[rbp+16],rbx
7196e4 48897508			mov	[rbp+8],rsi
7196e8 48c7c0e0582402		mov	rax,dword 35936480
7196ef 48894500			mov	[rbp],rax
7196f3 4889fb			mov	rbx,rdi
7196f6			inlined_call_30:
7196f6			version_441:
7196f6			version_442:
7196f6 4989df			mov	r15,rbx
7196f9			version_443:
7196f9			version_444:
7196f9			version_445:
7196f9			version_446:
7196f9			version_447:
7196f9 4983ff08			cmp	r15,byte 8
7196fd			patchable_jump30:
7196fd 0f8d99fbb600		jge	stub_7fd31e289298_0
719703 e990fbb600		jmp	stub_7fd31e289298_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7196fd -> 7fd31e289298
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #62
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #63
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289280				bits 64
289280			stub_7fd31e289280_0:
289280 e831f248ff		call	do_callback_handler
289285 d14f270200000000
------------------------------------------------------------------------
289268				bits 64
289268			stub_7fd31e289268_1:
289268 83c104			add	ecx,byte 4
28926b 90			nop
28926c			stub_7fd31e289268_0:
28926c e853f548ff		call	do_callback_cont_handler
289271 2150270200000000
------------------------------------------------------------------------
289250				bits 64
289250			stub_7fd31e289250_1:
289250 83c104			add	ecx,byte 4
289253 90			nop
289254			stub_7fd31e289250_0:
289254 e85df248ff		call	do_callback_handler
289259 7150270200000000
------------------------------------------------------------------------
719703				bits 64
719703 90		version_448:
719704			version_449:
719704 4989df			mov	r15,rbx
719707			version_450:
719707			version_451:
719707			version_452:
719707			version_453:
719707			version_454:
719707 4c89ff			mov	rdi,r15
71970a 4883ef04			sub	rdi,byte 4
71970e 0f806cfbb600		jo	stub_7fd31e289280_0
719714			version_455:
719714 4883ed18			sub	rbp,byte 24
719718 48895d10			mov	[rbp+16],rbx
71971c 48897508			mov	[rbp+8],rsi
719720 48c7c0e0582402		mov	rax,dword 35936480
719727 48894500			mov	[rbp],rax
71972b 4889fb			mov	rbx,rdi
71972e			inlined_call_31:
71972e			version_456:
71972e			version_457:
71972e 4989df			mov	r15,rbx
719731			version_458:
719731			version_459:
719731			version_460:
719731			version_461:
719731			version_462:
719731 4983ff08			cmp	r15,byte 8
719735			patchable_jump31:
719735 0f8d19fbb600		jge	stub_7fd31e289250_0
71973b e910fbb600		jmp	stub_7fd31e289250_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719735 -> 7fd31e289250
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #64
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #65
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289238				bits 64
289238			stub_7fd31e289238_0:
289238 e879f248ff		call	do_callback_handler
28923d 1151270200000000
------------------------------------------------------------------------
289220				bits 64
289220			stub_7fd31e289220_1:
289220 83c104			add	ecx,byte 4
289223 90			nop
289224			stub_7fd31e289220_0:
289224 e89bf548ff		call	do_callback_cont_handler
289229 6151270200000000
------------------------------------------------------------------------
289208				bits 64
289208			stub_7fd31e289208_1:
289208 83c104			add	ecx,byte 4
28920b 90			nop
28920c			stub_7fd31e289208_0:
28920c e8a5f248ff		call	do_callback_handler
289211 b151270200000000
------------------------------------------------------------------------
71973b				bits 64
71973b 90		version_463:
71973c			version_464:
71973c 4989df			mov	r15,rbx
71973f			version_465:
71973f			version_466:
71973f			version_467:
71973f			version_468:
71973f			version_469:
71973f 4c89ff			mov	rdi,r15
719742 4883ef04			sub	rdi,byte 4
719746 0f80ecfab600		jo	stub_7fd31e289238_0
71974c			version_470:
71974c 4883ed18			sub	rbp,byte 24
719750 48895d10			mov	[rbp+16],rbx
719754 48897508			mov	[rbp+8],rsi
719758 48c7c0e0582402		mov	rax,dword 35936480
71975f 48894500			mov	[rbp],rax
719763 4889fb			mov	rbx,rdi
719766			inlined_call_32:
719766			version_471:
719766			version_472:
719766 4989df			mov	r15,rbx
719769			version_473:
719769			version_474:
719769			version_475:
719769			version_476:
719769			version_477:
719769 4983ff08			cmp	r15,byte 8
71976d			patchable_jump32:
71976d 0f8d99fab600		jge	stub_7fd31e289208_0
719773 e990fab600		jmp	stub_7fd31e289208_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71976d -> 7fd31e289208
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #66
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #67
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2891f0				bits 64
2891f0			stub_7fd31e2891f0_0:
2891f0 e8c1f248ff		call	do_callback_handler
2891f5 b170270200000000
------------------------------------------------------------------------
2891d8				bits 64
2891d8			stub_7fd31e2891d8_1:
2891d8 83c104			add	ecx,byte 4
2891db 90			nop
2891dc			stub_7fd31e2891d8_0:
2891dc e8e3f548ff		call	do_callback_cont_handler
2891e1 0171270200000000
------------------------------------------------------------------------
2891c0				bits 64
2891c0			stub_7fd31e2891c0_1:
2891c0 83c104			add	ecx,byte 4
2891c3 90			nop
2891c4			stub_7fd31e2891c0_0:
2891c4 e8edf248ff		call	do_callback_handler
2891c9 5171270200000000
------------------------------------------------------------------------
719773				bits 64
719773 90		version_478:
719774			version_479:
719774 4989df			mov	r15,rbx
719777			version_480:
719777			version_481:
719777			version_482:
719777			version_483:
719777			version_484:
719777 4c89ff			mov	rdi,r15
71977a 4883ef04			sub	rdi,byte 4
71977e 0f806cfab600		jo	stub_7fd31e2891f0_0
719784			version_485:
719784 4883ed18			sub	rbp,byte 24
719788 48895d10			mov	[rbp+16],rbx
71978c 48897508			mov	[rbp+8],rsi
719790 48c7c0e0582402		mov	rax,dword 35936480
719797 48894500			mov	[rbp],rax
71979b 4889fb			mov	rbx,rdi
71979e			inlined_call_33:
71979e			version_486:
71979e			version_487:
71979e 4989df			mov	r15,rbx
7197a1			version_488:
7197a1			version_489:
7197a1			version_490:
7197a1			version_491:
7197a1			version_492:
7197a1 4983ff08			cmp	r15,byte 8
7197a5			patchable_jump33:
7197a5 0f8d19fab600		jge	stub_7fd31e2891c0_0
7197ab e910fab600		jmp	stub_7fd31e2891c0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7197a5 -> 7fd31e2891c0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #68
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #69
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2891a8				bits 64
2891a8			stub_7fd31e2891a8_0:
2891a8 e809f348ff		call	do_callback_handler
2891ad f171270200000000
------------------------------------------------------------------------
289190				bits 64
289190			stub_7fd31e289190_1:
289190 83c104			add	ecx,byte 4
289193 90			nop
289194			stub_7fd31e289190_0:
289194 e82bf648ff		call	do_callback_cont_handler
289199 4172270200000000
------------------------------------------------------------------------
289178				bits 64
289178			stub_7fd31e289178_1:
289178 83c104			add	ecx,byte 4
28917b 90			nop
28917c			stub_7fd31e289178_0:
28917c e835f348ff		call	do_callback_handler
289181 9172270200000000
------------------------------------------------------------------------
7197ab				bits 64
7197ab 90		version_493:
7197ac			version_494:
7197ac 4989df			mov	r15,rbx
7197af			version_495:
7197af			version_496:
7197af			version_497:
7197af			version_498:
7197af			version_499:
7197af 4c89ff			mov	rdi,r15
7197b2 4883ef04			sub	rdi,byte 4
7197b6 0f80ecf9b600		jo	stub_7fd31e2891a8_0
7197bc			version_500:
7197bc 4883ed18			sub	rbp,byte 24
7197c0 48895d10			mov	[rbp+16],rbx
7197c4 48897508			mov	[rbp+8],rsi
7197c8 48c7c0e0582402		mov	rax,dword 35936480
7197cf 48894500			mov	[rbp],rax
7197d3 4889fb			mov	rbx,rdi
7197d6			inlined_call_34:
7197d6			version_501:
7197d6			version_502:
7197d6 4989df			mov	r15,rbx
7197d9			version_503:
7197d9			version_504:
7197d9			version_505:
7197d9			version_506:
7197d9			version_507:
7197d9 4983ff08			cmp	r15,byte 8
7197dd			patchable_jump34:
7197dd 0f8d99f9b600		jge	stub_7fd31e289178_0
7197e3 e990f9b600		jmp	stub_7fd31e289178_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7197dd -> 7fd31e289178
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #70
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #71
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289160				bits 64
289160			stub_7fd31e289160_0:
289160 e851f348ff		call	do_callback_handler
289165 3173270200000000
------------------------------------------------------------------------
289148				bits 64
289148			stub_7fd31e289148_1:
289148 83c104			add	ecx,byte 4
28914b 90			nop
28914c			stub_7fd31e289148_0:
28914c e873f648ff		call	do_callback_cont_handler
289151 8173270200000000
------------------------------------------------------------------------
289130				bits 64
289130			stub_7fd31e289130_1:
289130 83c104			add	ecx,byte 4
289133 90			nop
289134			stub_7fd31e289130_0:
289134 e87df348ff		call	do_callback_handler
289139 d173270200000000
------------------------------------------------------------------------
7197e3				bits 64
7197e3 90		version_508:
7197e4			version_509:
7197e4 4989df			mov	r15,rbx
7197e7			version_510:
7197e7			version_511:
7197e7			version_512:
7197e7			version_513:
7197e7			version_514:
7197e7 4c89ff			mov	rdi,r15
7197ea 4883ef04			sub	rdi,byte 4
7197ee 0f806cf9b600		jo	stub_7fd31e289160_0
7197f4			version_515:
7197f4 4883ed18			sub	rbp,byte 24
7197f8 48895d10			mov	[rbp+16],rbx
7197fc 48897508			mov	[rbp+8],rsi
719800 48c7c0e0582402		mov	rax,dword 35936480
719807 48894500			mov	[rbp],rax
71980b 4889fb			mov	rbx,rdi
71980e			inlined_call_35:
71980e			version_516:
71980e			version_517:
71980e 4989df			mov	r15,rbx
719811			version_518:
719811			version_519:
719811			version_520:
719811			version_521:
719811			version_522:
719811 4983ff08			cmp	r15,byte 8
719815			patchable_jump35:
719815 0f8d19f9b600		jge	stub_7fd31e289130_0
71981b e910f9b600		jmp	stub_7fd31e289130_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719815 -> 7fd31e289130
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #72
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #73
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289118				bits 64
289118			stub_7fd31e289118_0:
289118 e899f348ff		call	do_callback_handler
28911d 7174270200000000
------------------------------------------------------------------------
289100				bits 64
289100			stub_7fd31e289100_1:
289100 83c104			add	ecx,byte 4
289103 90			nop
289104			stub_7fd31e289100_0:
289104 e8bbf648ff		call	do_callback_cont_handler
289109 c174270200000000
------------------------------------------------------------------------
2890e8				bits 64
2890e8			stub_7fd31e2890e8_1:
2890e8 83c104			add	ecx,byte 4
2890eb 90			nop
2890ec			stub_7fd31e2890e8_0:
2890ec e8c5f348ff		call	do_callback_handler
2890f1 31f5270200000000
------------------------------------------------------------------------
71981b				bits 64
71981b 90		version_523:
71981c			version_524:
71981c 4989df			mov	r15,rbx
71981f			version_525:
71981f			version_526:
71981f			version_527:
71981f			version_528:
71981f			version_529:
71981f 4c89ff			mov	rdi,r15
719822 4883ef04			sub	rdi,byte 4
719826 0f80ecf8b600		jo	stub_7fd31e289118_0
71982c			version_530:
71982c 4883ed18			sub	rbp,byte 24
719830 48895d10			mov	[rbp+16],rbx
719834 48897508			mov	[rbp+8],rsi
719838 48c7c0e0582402		mov	rax,dword 35936480
71983f 48894500			mov	[rbp],rax
719843 4889fb			mov	rbx,rdi
719846			inlined_call_36:
719846			version_531:
719846			version_532:
719846 4989df			mov	r15,rbx
719849			version_533:
719849			version_534:
719849			version_535:
719849			version_536:
719849			version_537:
719849 4983ff08			cmp	r15,byte 8
71984d			patchable_jump36:
71984d 0f8d99f8b600		jge	stub_7fd31e2890e8_0
719853 e990f8b600		jmp	stub_7fd31e2890e8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d71984d -> 7fd31e2890e8
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #74
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #75
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
2890d0				bits 64
2890d0			stub_7fd31e2890d0_0:
2890d0 e8e1f348ff		call	do_callback_handler
2890d5 d1f5270200000000
------------------------------------------------------------------------
2890b8				bits 64
2890b8			stub_7fd31e2890b8_1:
2890b8 83c104			add	ecx,byte 4
2890bb 90			nop
2890bc			stub_7fd31e2890b8_0:
2890bc e803f748ff		call	do_callback_cont_handler
2890c1 21f6270200000000
------------------------------------------------------------------------
2890a0				bits 64
2890a0			stub_7fd31e2890a0_1:
2890a0 83c104			add	ecx,byte 4
2890a3 90			nop
2890a4			stub_7fd31e2890a0_0:
2890a4 e80df448ff		call	do_callback_handler
2890a9 71f6270200000000
------------------------------------------------------------------------
719853				bits 64
719853 90		version_538:
719854			version_539:
719854 4989df			mov	r15,rbx
719857			version_540:
719857			version_541:
719857			version_542:
719857			version_543:
719857			version_544:
719857 4c89ff			mov	rdi,r15
71985a 4883ef04			sub	rdi,byte 4
71985e 0f806cf8b600		jo	stub_7fd31e2890d0_0
719864			version_545:
719864 4883ed18			sub	rbp,byte 24
719868 48895d10			mov	[rbp+16],rbx
71986c 48897508			mov	[rbp+8],rsi
719870 48c7c0e0582402		mov	rax,dword 35936480
719877 48894500			mov	[rbp],rax
71987b 4889fb			mov	rbx,rdi
71987e			inlined_call_37:
71987e			version_546:
71987e			version_547:
71987e 4989df			mov	r15,rbx
719881			version_548:
719881			version_549:
719881			version_550:
719881			version_551:
719881			version_552:
719881 4983ff08			cmp	r15,byte 8
719885			patchable_jump37:
719885 0f8d19f8b600		jge	stub_7fd31e2890a0_0
71988b e910f8b600		jmp	stub_7fd31e2890a0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d719885 -> 7fd31e2890a0
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #76
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #77
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289088				bits 64
289088			stub_7fd31e289088_0:
289088 e829f448ff		call	do_callback_handler
28908d 11f7270200000000
------------------------------------------------------------------------
289070				bits 64
289070			stub_7fd31e289070_1:
289070 83c104			add	ecx,byte 4
289073 90			nop
289074			stub_7fd31e289070_0:
289074 e84bf748ff		call	do_callback_cont_handler
289079 61f7270200000000
------------------------------------------------------------------------
289058				bits 64
289058			stub_7fd31e289058_1:
289058 83c104			add	ecx,byte 4
28905b 90			nop
28905c			stub_7fd31e289058_0:
28905c e855f448ff		call	do_callback_handler
289061 b1f7270200000000
------------------------------------------------------------------------
71988b				bits 64
71988b 90		version_553:
71988c			version_554:
71988c 4989df			mov	r15,rbx
71988f			version_555:
71988f			version_556:
71988f			version_557:
71988f			version_558:
71988f			version_559:
71988f 4c89ff			mov	rdi,r15
719892 4883ef04			sub	rdi,byte 4
719896 0f80ecf7b600		jo	stub_7fd31e289088_0
71989c			version_560:
71989c 4883ed18			sub	rbp,byte 24
7198a0 48895d10			mov	[rbp+16],rbx
7198a4 48897508			mov	[rbp+8],rsi
7198a8 48c7c0e0582402		mov	rax,dword 35936480
7198af 48894500			mov	[rbp],rax
7198b3 4889fb			mov	rbx,rdi
7198b6			inlined_call_38:
7198b6			version_561:
7198b6			version_562:
7198b6 4989df			mov	r15,rbx
7198b9			version_563:
7198b9			version_564:
7198b9			version_565:
7198b9			version_566:
7198b9			version_567:
7198b9 4983ff08			cmp	r15,byte 8
7198bd			patchable_jump38:
7198bd 0f8d99f7b600		jge	stub_7fd31e289058_0
7198c3 e990f7b600		jmp	stub_7fd31e289058_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7198bd -> 7fd31e289058
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #78
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #79
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
289040				bits 64
289040			stub_7fd31e289040_0:
289040 e871f448ff		call	do_callback_handler
289045 51f8270200000000
------------------------------------------------------------------------
289028				bits 64
289028			stub_7fd31e289028_1:
289028 83c104			add	ecx,byte 4
28902b 90			nop
28902c			stub_7fd31e289028_0:
28902c e893f748ff		call	do_callback_cont_handler
289031 a1f8270200000000
------------------------------------------------------------------------
289010				bits 64
289010			stub_7fd31e289010_1:
289010 83c104			add	ecx,byte 4
289013 90			nop
289014			stub_7fd31e289010_0:
289014 e89df448ff		call	do_callback_handler
289019 f1f8270200000000
------------------------------------------------------------------------
7198c3				bits 64
7198c3 90		version_568:
7198c4			version_569:
7198c4 4989df			mov	r15,rbx
7198c7			version_570:
7198c7			version_571:
7198c7			version_572:
7198c7			version_573:
7198c7			version_574:
7198c7 4c89ff			mov	rdi,r15
7198ca 4883ef04			sub	rdi,byte 4
7198ce 0f806cf7b600		jo	stub_7fd31e289040_0
7198d4			version_575:
7198d4 4883ed18			sub	rbp,byte 24
7198d8 48895d10			mov	[rbp+16],rbx
7198dc 48897508			mov	[rbp+8],rsi
7198e0 48c7c0e0582402		mov	rax,dword 35936480
7198e7 48894500			mov	[rbp],rax
7198eb 4889fb			mov	rbx,rdi
7198ee			inlined_call_39:
7198ee			version_576:
7198ee			version_577:
7198ee 4989df			mov	r15,rbx
7198f1			version_578:
7198f1			version_579:
7198f1			version_580:
7198f1			version_581:
7198f1			version_582:
7198f1 4983ff08			cmp	r15,byte 8
7198f5			patchable_jump39:
7198f5 0f8d19f7b600		jge	stub_7fd31e289010_0
7198fb e910f7b600		jmp	stub_7fd31e289010_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fd31d7198f5 -> 7fd31e289010
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #80
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #81
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
288ff8				bits 64
288ff8			stub_7fd31e288ff8_0:
288ff8 e8b9f448ff		call	do_callback_handler
288ffd 91f9270200000000
------------------------------------------------------------------------
288fe0				bits 64
288fe0			stub_7fd31e288fe0_1:
288fe0 83c104			add	ecx,byte 4
288fe3 90			nop
288fe4			stub_7fd31e288fe0_0:
288fe4 e8dbf748ff		call	do_callback_cont_handler
288fe9 e1f9270200000000
------------------------------------------------------------------------
288fc8				bits 64
288fc8			stub_7fd31e288fc8_1:
288fc8 83c104			add	ecx,byte 4
288fcb 90			nop
288fcc			stub_7fd31e288fc8_0:
288fcc e8e5f448ff		call	do_callback_handler
288fd1 31fa270200000000
------------------------------------------------------------------------
7198fb				bits 64
7198fb 90		version_583:
7198fc			version_584:
7198fc 4989df			mov	r15,rbx
7198ff			version_585:
7198ff			version_586:
7198ff			version_587:
7198ff			version_588:
7198ff			version_589:
7198ff 4c89ff			mov	rdi,r15
719902 4883ef04			sub	rdi,byte 4
719906 0f80ecf6b600		jo	stub_7fd31e288ff8_0
71990c			version_590:
71990c 4883ed18			sub	rbp,byte 24
719910 48895d10			mov	[rbp+16],rbx
719914 48897508			mov	[rbp+8],rsi
719918 48c7c0e0582402		mov	rax,dword 35936480
71991f 48894500			mov	[rbp],rax
719923 4889fb			mov	rbx,rdi
719926			inlined_call_40:
719926			version_591:
719926			version_592:
719926 4989df			mov	r15,rbx
719929			version_593:
719929			version_594:
719929			version_595:
719929			version_596:
719929			version_597:
719929 4983ff08			cmp	r15,byte 8
71992d			patchable_jump40:
71992d 0f8d99f6b600		jge	stub_7fd31e288fc8_0
719933 e990f6b600		jmp	stub_7fd31e288fc8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #84
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #85
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719933				bits 64
719933 90		version_598:
719934			version_599:
719934 49c7c704000000		mov	r15,dword 4
71993b 4d89fe			mov	r14,r15
71993e 488b5500			mov	rdx,[rbp]
719942 4883c508			add	rbp,byte 8
719946 488b4210			mov	rax,[rdx+16]
71994a 49c7c300000000		mov	r11,dword 0
719951 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type int and ctx:
#<ctx #86
      stack: ((int) (int) (clo) (ret))
      slot-loc: ((3 r . 8) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #87
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288fb0				bits 64
288fb0			stub_7fd31e288fb0_0:
288fb0 e801f548ff		call	do_callback_handler
288fb5 21fb270200000000
------------------------------------------------------------------------
288f98				bits 64
288f98			stub_7fd31e288f98_1:
288f98 83c104			add	ecx,byte 4
288f9b 90			nop
288f9c			stub_7fd31e288f98_0:
288f9c e823f848ff		call	do_callback_cont_handler
288fa1 71fb270200000000
------------------------------------------------------------------------
288f80				bits 64
288f80			stub_7fd31e288f80_1:
288f80 83c104			add	ecx,byte 4
288f83 90			nop
288f84			stub_7fd31e288f80_0:
288f84 e82df548ff		call	do_callback_handler
288f89 c1fb270200000000
------------------------------------------------------------------------
719953				bits 64
719953 90		continuation_1:
719954			version_600:
719954			version_601:
719954 488b7d08			mov	rdi,[rbp+8]
719958			version_602:
719958			version_603:
719958			version_604:
719958			version_605:
719958			version_606:
719958 4889fe			mov	rsi,rdi
71995b 4883ee08			sub	rsi,byte 8
71995f 0f804bf6b600		jo	stub_7fd31e288fb0_0
719965			version_607:
719965 4883ed10			sub	rbp,byte 16
719969 4c897508			mov	[rbp+8],r14
71996d 48c7c098a32702		mov	rax,dword 36152216
719974 48894500			mov	[rbp],rax
719978 4889f3			mov	rbx,rsi
71997b			inlined_call_41:
71997b			version_608:
71997b			version_609:
71997b 4989df			mov	r15,rbx
71997e			version_610:
71997e			version_611:
71997e			version_612:
71997e			version_613:
71997e			version_614:
71997e 4983ff08			cmp	r15,byte 8
719982			patchable_jump41:
719982 0f8dfcf5b600		jge	stub_7fd31e288f80_0
719988 e9f3f5b600		jmp	stub_7fd31e288f80_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #88
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #89
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719988				bits 64
719988			version_615:
719988			version_616:
719988 49c7c704000000		mov	r15,dword 4
71998f 4d89fe			mov	r14,r15
719992 488b5500			mov	rdx,[rbp]
719996 4883c508			add	rbp,byte 8
71999a 488b4210			mov	rax,[rdx+16]
71999e 49c7c300000000		mov	r11,dword 0
7199a5 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type int and ctx:
#<ctx #90
      stack: ((int) (int) (int) (clo) (ret))
      slot-loc: ((4 r . 8) (3 m . 3) (2 m . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #91
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288f68				bits 64
288f68			stub_7fd31e288f68_0:
288f68 e849f548ff		call	do_callback_handler
288f6d b1fc270200000000
------------------------------------------------------------------------
7199a7				bits 64
7199a7 90		continuation_2:
7199a8			version_617:
7199a8			version_618:
7199a8			version_619:
7199a8			version_620:
7199a8 488b7500			mov	rsi,[rbp]
7199ac 4c01f6			add	rsi,r14
7199af 0f80b3f5b600		jo	stub_7fd31e288f68_0
7199b5			version_621:
7199b5 4989f6			mov	r14,rsi
7199b8 488b5518			mov	rdx,[rbp+24]
7199bc 4883c520			add	rbp,byte 32
7199c0 488b4210			mov	rax,[rdx+16]
7199c4 49c7c300000000		mov	r11,dword 0
7199cb ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #88
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #89
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288f80				bits 64
288f80			stub_7fd31e288f80_0:
288f80 e831f548ff		call	do_callback_handler
288f85 51fd270200000000
------------------------------------------------------------------------
288f50				bits 64
288f50			stub_7fd31e288f50_1:
288f50 83c104			add	ecx,byte 4
288f53 90			nop
288f54			stub_7fd31e288f50_0:
288f54 e86bf848ff		call	do_callback_cont_handler
288f59 a1fd270200000000
------------------------------------------------------------------------
288f38				bits 64
288f38			stub_7fd31e288f38_1:
288f38 83c104			add	ecx,byte 4
288f3b 90			nop
288f3c			stub_7fd31e288f38_0:
288f3c e875f548ff		call	do_callback_handler
288f41 f1fd270200000000
------------------------------------------------------------------------
7199cd				bits 64
7199cd 909090		version_622:
7199d0			version_623:
7199d0 4989df			mov	r15,rbx
7199d3			version_624:
7199d3			version_625:
7199d3			version_626:
7199d3			version_627:
7199d3			version_628:
7199d3 4c89ff			mov	rdi,r15
7199d6 4883ef04			sub	rdi,byte 4
7199da 0f80a0f5b600		jo	stub_7fd31e288f80_0
7199e0			version_629:
7199e0 4883ed18			sub	rbp,byte 24
7199e4 48895d10			mov	[rbp+16],rbx
7199e8 48897508			mov	[rbp+8],rsi
7199ec 48c7c0e0582402		mov	rax,dword 35936480
7199f3 48894500			mov	[rbp],rax
7199f7 4889fb			mov	rbx,rdi
7199fa			inlined_call_42:
7199fa			version_630:
7199fa			version_631:
7199fa 4989df			mov	r15,rbx
7199fd			version_632:
7199fd			version_633:
7199fd			version_634:
7199fd			version_635:
7199fd			version_636:
7199fd 4983ff08			cmp	r15,byte 8
719a01			patchable_jump42:
719a01 0f8d35f5b600		jge	stub_7fd31e288f38_0
719a07 e92cf5b600		jmp	stub_7fd31e288f38_1
>>> patching jump at 7fd31d719982 -> 7fd31d7199d0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #92
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #93
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719a07				bits 64
719a07 90		version_637:
719a08			version_638:
719a08 49c7c704000000		mov	r15,dword 4
719a0f 4d89fe			mov	r14,r15
719a12 488b5500			mov	rdx,[rbp]
719a16 4883c508			add	rbp,byte 8
719a1a 488b4210			mov	rax,[rdx+16]
719a1e 49c7c300000000		mov	r11,dword 0
719a25 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #92
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #93
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288f38				bits 64
288f38			stub_7fd31e288f38_0:
288f38 e879f548ff		call	do_callback_handler
288f3d e1fe270200000000
------------------------------------------------------------------------
288f20				bits 64
288f20			stub_7fd31e288f20_1:
288f20 83c104			add	ecx,byte 4
288f23 90			nop
288f24			stub_7fd31e288f20_0:
288f24 e89bf848ff		call	do_callback_cont_handler
288f29 31ff270200000000
------------------------------------------------------------------------
288f08				bits 64
288f08			stub_7fd31e288f08_1:
288f08 83c104			add	ecx,byte 4
288f0b 90			nop
288f0c			stub_7fd31e288f08_0:
288f0c e8a5f548ff		call	do_callback_handler
288f11 81ff270200000000
------------------------------------------------------------------------
719a27				bits 64
719a27 90		version_639:
719a28			version_640:
719a28 4989df			mov	r15,rbx
719a2b			version_641:
719a2b			version_642:
719a2b			version_643:
719a2b			version_644:
719a2b			version_645:
719a2b 4c89ff			mov	rdi,r15
719a2e 4883ef04			sub	rdi,byte 4
719a32 0f8000f5b600		jo	stub_7fd31e288f38_0
719a38			version_646:
719a38 4883ed18			sub	rbp,byte 24
719a3c 48895d10			mov	[rbp+16],rbx
719a40 48897508			mov	[rbp+8],rsi
719a44 48c7c0e0582402		mov	rax,dword 35936480
719a4b 48894500			mov	[rbp],rax
719a4f 4889fb			mov	rbx,rdi
719a52			inlined_call_43:
719a52			version_647:
719a52			version_648:
719a52 4989df			mov	r15,rbx
719a55			version_649:
719a55			version_650:
719a55			version_651:
719a55			version_652:
719a55			version_653:
719a55 4983ff08			cmp	r15,byte 8
719a59			patchable_jump43:
719a59 0f8dadf4b600		jge	stub_7fd31e288f08_0
719a5f e9a4f4b600		jmp	stub_7fd31e288f08_1
>>> patching jump at 7fd31d719a01 -> 7fd31d719a28
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #94
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #95
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719a5f				bits 64
719a5f 90		version_654:
719a60			version_655:
719a60 49c7c704000000		mov	r15,dword 4
719a67 4d89fe			mov	r14,r15
719a6a 488b5500			mov	rdx,[rbp]
719a6e 4883c508			add	rbp,byte 8
719a72 488b4210			mov	rax,[rdx+16]
719a76 49c7c300000000		mov	r11,dword 0
719a7d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #94
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #95
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288f08				bits 64
288f08			stub_7fd31e288f08_0:
288f08 e8a9f548ff		call	do_callback_handler
288f0d 7100280200000000
------------------------------------------------------------------------
288ef0				bits 64
288ef0			stub_7fd31e288ef0_1:
288ef0 83c104			add	ecx,byte 4
288ef3 90			nop
288ef4			stub_7fd31e288ef0_0:
288ef4 e8cbf848ff		call	do_callback_cont_handler
288ef9 c100280200000000
------------------------------------------------------------------------
288ed8				bits 64
288ed8			stub_7fd31e288ed8_1:
288ed8 83c104			add	ecx,byte 4
288edb 90			nop
288edc			stub_7fd31e288ed8_0:
288edc e8d5f548ff		call	do_callback_handler
288ee1 1101280200000000
------------------------------------------------------------------------
719a7f				bits 64
719a7f 90		version_656:
719a80			version_657:
719a80 4989df			mov	r15,rbx
719a83			version_658:
719a83			version_659:
719a83			version_660:
719a83			version_661:
719a83			version_662:
719a83 4c89ff			mov	rdi,r15
719a86 4883ef04			sub	rdi,byte 4
719a8a 0f8078f4b600		jo	stub_7fd31e288f08_0
719a90			version_663:
719a90 4883ed18			sub	rbp,byte 24
719a94 48895d10			mov	[rbp+16],rbx
719a98 48897508			mov	[rbp+8],rsi
719a9c 48c7c0e0582402		mov	rax,dword 35936480
719aa3 48894500			mov	[rbp],rax
719aa7 4889fb			mov	rbx,rdi
719aaa			inlined_call_44:
719aaa			version_664:
719aaa			version_665:
719aaa 4989df			mov	r15,rbx
719aad			version_666:
719aad			version_667:
719aad			version_668:
719aad			version_669:
719aad			version_670:
719aad 4983ff08			cmp	r15,byte 8
719ab1			patchable_jump44:
719ab1 0f8d25f4b600		jge	stub_7fd31e288ed8_0
719ab7 e91cf4b600		jmp	stub_7fd31e288ed8_1
>>> patching jump at 7fd31d719a59 -> 7fd31d719a80
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #96
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #97
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719ab7				bits 64
719ab7 90		version_671:
719ab8			version_672:
719ab8 49c7c704000000		mov	r15,dword 4
719abf 4d89fe			mov	r14,r15
719ac2 488b5500			mov	rdx,[rbp]
719ac6 4883c508			add	rbp,byte 8
719aca 488b4210			mov	rax,[rdx+16]
719ace 49c7c300000000		mov	r11,dword 0
719ad5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #96
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #97
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288ed8				bits 64
288ed8			stub_7fd31e288ed8_0:
288ed8 e8d9f548ff		call	do_callback_handler
288edd 8116280200000000
------------------------------------------------------------------------
288ec0				bits 64
288ec0			stub_7fd31e288ec0_1:
288ec0 83c104			add	ecx,byte 4
288ec3 90			nop
288ec4			stub_7fd31e288ec0_0:
288ec4 e8fbf848ff		call	do_callback_cont_handler
288ec9 d116280200000000
------------------------------------------------------------------------
288ea8				bits 64
288ea8			stub_7fd31e288ea8_1:
288ea8 83c104			add	ecx,byte 4
288eab 90			nop
288eac			stub_7fd31e288ea8_0:
288eac e805f648ff		call	do_callback_handler
288eb1 2117280200000000
------------------------------------------------------------------------
719ad7				bits 64
719ad7 90		version_673:
719ad8			version_674:
719ad8 4989df			mov	r15,rbx
719adb			version_675:
719adb			version_676:
719adb			version_677:
719adb			version_678:
719adb			version_679:
719adb 4c89ff			mov	rdi,r15
719ade 4883ef04			sub	rdi,byte 4
719ae2 0f80f0f3b600		jo	stub_7fd31e288ed8_0
719ae8			version_680:
719ae8 4883ed18			sub	rbp,byte 24
719aec 48895d10			mov	[rbp+16],rbx
719af0 48897508			mov	[rbp+8],rsi
719af4 48c7c0e0582402		mov	rax,dword 35936480
719afb 48894500			mov	[rbp],rax
719aff 4889fb			mov	rbx,rdi
719b02			inlined_call_45:
719b02			version_681:
719b02			version_682:
719b02 4989df			mov	r15,rbx
719b05			version_683:
719b05			version_684:
719b05			version_685:
719b05			version_686:
719b05			version_687:
719b05 4983ff08			cmp	r15,byte 8
719b09			patchable_jump45:
719b09 0f8d9df3b600		jge	stub_7fd31e288ea8_0
719b0f e994f3b600		jmp	stub_7fd31e288ea8_1
>>> patching jump at 7fd31d719ab1 -> 7fd31d719ad8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #98
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #99
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719b0f				bits 64
719b0f 90		version_688:
719b10			version_689:
719b10 49c7c704000000		mov	r15,dword 4
719b17 4d89fe			mov	r14,r15
719b1a 488b5500			mov	rdx,[rbp]
719b1e 4883c508			add	rbp,byte 8
719b22 488b4210			mov	rax,[rdx+16]
719b26 49c7c300000000		mov	r11,dword 0
719b2d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #98
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #99
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288ea8				bits 64
288ea8			stub_7fd31e288ea8_0:
288ea8 e809f648ff		call	do_callback_handler
288ead 1118280200000000
------------------------------------------------------------------------
288e90				bits 64
288e90			stub_7fd31e288e90_1:
288e90 83c104			add	ecx,byte 4
288e93 90			nop
288e94			stub_7fd31e288e90_0:
288e94 e82bf948ff		call	do_callback_cont_handler
288e99 6118280200000000
------------------------------------------------------------------------
288e78				bits 64
288e78			stub_7fd31e288e78_1:
288e78 83c104			add	ecx,byte 4
288e7b 90			nop
288e7c			stub_7fd31e288e78_0:
288e7c e835f648ff		call	do_callback_handler
288e81 b118280200000000
------------------------------------------------------------------------
719b2f				bits 64
719b2f 90		version_690:
719b30			version_691:
719b30 4989df			mov	r15,rbx
719b33			version_692:
719b33			version_693:
719b33			version_694:
719b33			version_695:
719b33			version_696:
719b33 4c89ff			mov	rdi,r15
719b36 4883ef04			sub	rdi,byte 4
719b3a 0f8068f3b600		jo	stub_7fd31e288ea8_0
719b40			version_697:
719b40 4883ed18			sub	rbp,byte 24
719b44 48895d10			mov	[rbp+16],rbx
719b48 48897508			mov	[rbp+8],rsi
719b4c 48c7c0e0582402		mov	rax,dword 35936480
719b53 48894500			mov	[rbp],rax
719b57 4889fb			mov	rbx,rdi
719b5a			inlined_call_46:
719b5a			version_698:
719b5a			version_699:
719b5a 4989df			mov	r15,rbx
719b5d			version_700:
719b5d			version_701:
719b5d			version_702:
719b5d			version_703:
719b5d			version_704:
719b5d 4983ff08			cmp	r15,byte 8
719b61			patchable_jump46:
719b61 0f8d15f3b600		jge	stub_7fd31e288e78_0
719b67 e90cf3b600		jmp	stub_7fd31e288e78_1
>>> patching jump at 7fd31d719b09 -> 7fd31d719b30
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #100
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #101
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719b67				bits 64
719b67 90		version_705:
719b68			version_706:
719b68 49c7c704000000		mov	r15,dword 4
719b6f 4d89fe			mov	r14,r15
719b72 488b5500			mov	rdx,[rbp]
719b76 4883c508			add	rbp,byte 8
719b7a 488b4210			mov	rax,[rdx+16]
719b7e 49c7c300000000		mov	r11,dword 0
719b85 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #100
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #101
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288e78				bits 64
288e78			stub_7fd31e288e78_0:
288e78 e839f648ff		call	do_callback_handler
288e7d c144280200000000
------------------------------------------------------------------------
288e60				bits 64
288e60			stub_7fd31e288e60_1:
288e60 83c104			add	ecx,byte 4
288e63 90			nop
288e64			stub_7fd31e288e60_0:
288e64 e85bf948ff		call	do_callback_cont_handler
288e69 1145280200000000
------------------------------------------------------------------------
288e48				bits 64
288e48			stub_7fd31e288e48_1:
288e48 83c104			add	ecx,byte 4
288e4b 90			nop
288e4c			stub_7fd31e288e48_0:
288e4c e865f648ff		call	do_callback_handler
288e51 6145280200000000
------------------------------------------------------------------------
719b87				bits 64
719b87 90		version_707:
719b88			version_708:
719b88 4989df			mov	r15,rbx
719b8b			version_709:
719b8b			version_710:
719b8b			version_711:
719b8b			version_712:
719b8b			version_713:
719b8b 4c89ff			mov	rdi,r15
719b8e 4883ef04			sub	rdi,byte 4
719b92 0f80e0f2b600		jo	stub_7fd31e288e78_0
719b98			version_714:
719b98 4883ed18			sub	rbp,byte 24
719b9c 48895d10			mov	[rbp+16],rbx
719ba0 48897508			mov	[rbp+8],rsi
719ba4 48c7c0e0582402		mov	rax,dword 35936480
719bab 48894500			mov	[rbp],rax
719baf 4889fb			mov	rbx,rdi
719bb2			inlined_call_47:
719bb2			version_715:
719bb2			version_716:
719bb2 4989df			mov	r15,rbx
719bb5			version_717:
719bb5			version_718:
719bb5			version_719:
719bb5			version_720:
719bb5			version_721:
719bb5 4983ff08			cmp	r15,byte 8
719bb9			patchable_jump47:
719bb9 0f8d8df2b600		jge	stub_7fd31e288e48_0
719bbf e984f2b600		jmp	stub_7fd31e288e48_1
>>> patching jump at 7fd31d719b61 -> 7fd31d719b88
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #102
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #103
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719bbf				bits 64
719bbf 90		version_722:
719bc0			version_723:
719bc0 49c7c704000000		mov	r15,dword 4
719bc7 4d89fe			mov	r14,r15
719bca 488b5500			mov	rdx,[rbp]
719bce 4883c508			add	rbp,byte 8
719bd2 488b4210			mov	rax,[rdx+16]
719bd6 49c7c300000000		mov	r11,dword 0
719bdd ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #102
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #103
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288e48				bits 64
288e48			stub_7fd31e288e48_0:
288e48 e869f648ff		call	do_callback_handler
288e4d 5146280200000000
------------------------------------------------------------------------
288e30				bits 64
288e30			stub_7fd31e288e30_1:
288e30 83c104			add	ecx,byte 4
288e33 90			nop
288e34			stub_7fd31e288e30_0:
288e34 e88bf948ff		call	do_callback_cont_handler
288e39 a146280200000000
------------------------------------------------------------------------
288e18				bits 64
288e18			stub_7fd31e288e18_1:
288e18 83c104			add	ecx,byte 4
288e1b 90			nop
288e1c			stub_7fd31e288e18_0:
288e1c e895f648ff		call	do_callback_handler
288e21 f146280200000000
------------------------------------------------------------------------
719bdf				bits 64
719bdf 90		version_724:
719be0			version_725:
719be0 4989df			mov	r15,rbx
719be3			version_726:
719be3			version_727:
719be3			version_728:
719be3			version_729:
719be3			version_730:
719be3 4c89ff			mov	rdi,r15
719be6 4883ef04			sub	rdi,byte 4
719bea 0f8058f2b600		jo	stub_7fd31e288e48_0
719bf0			version_731:
719bf0 4883ed18			sub	rbp,byte 24
719bf4 48895d10			mov	[rbp+16],rbx
719bf8 48897508			mov	[rbp+8],rsi
719bfc 48c7c0e0582402		mov	rax,dword 35936480
719c03 48894500			mov	[rbp],rax
719c07 4889fb			mov	rbx,rdi
719c0a			inlined_call_48:
719c0a			version_732:
719c0a			version_733:
719c0a 4989df			mov	r15,rbx
719c0d			version_734:
719c0d			version_735:
719c0d			version_736:
719c0d			version_737:
719c0d			version_738:
719c0d 4983ff08			cmp	r15,byte 8
719c11			patchable_jump48:
719c11 0f8d05f2b600		jge	stub_7fd31e288e18_0
719c17 e9fcf1b600		jmp	stub_7fd31e288e18_1
>>> patching jump at 7fd31d719bb9 -> 7fd31d719be0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #104
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #105
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719c17				bits 64
719c17 90		version_739:
719c18			version_740:
719c18 49c7c704000000		mov	r15,dword 4
719c1f 4d89fe			mov	r14,r15
719c22 488b5500			mov	rdx,[rbp]
719c26 4883c508			add	rbp,byte 8
719c2a 488b4210			mov	rax,[rdx+16]
719c2e 49c7c300000000		mov	r11,dword 0
719c35 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #104
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #105
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288e18				bits 64
288e18			stub_7fd31e288e18_0:
288e18 e899f648ff		call	do_callback_handler
288e1d 01c8280200000000
------------------------------------------------------------------------
288e00				bits 64
288e00			stub_7fd31e288e00_1:
288e00 83c104			add	ecx,byte 4
288e03 90			nop
288e04			stub_7fd31e288e00_0:
288e04 e8bbf948ff		call	do_callback_cont_handler
288e09 51c8280200000000
------------------------------------------------------------------------
288de8				bits 64
288de8			stub_7fd31e288de8_1:
288de8 83c104			add	ecx,byte 4
288deb 90			nop
288dec			stub_7fd31e288de8_0:
288dec e8c5f648ff		call	do_callback_handler
288df1 a1c8280200000000
------------------------------------------------------------------------
719c37				bits 64
719c37 90		version_741:
719c38			version_742:
719c38 4989df			mov	r15,rbx
719c3b			version_743:
719c3b			version_744:
719c3b			version_745:
719c3b			version_746:
719c3b			version_747:
719c3b 4c89ff			mov	rdi,r15
719c3e 4883ef04			sub	rdi,byte 4
719c42 0f80d0f1b600		jo	stub_7fd31e288e18_0
719c48			version_748:
719c48 4883ed18			sub	rbp,byte 24
719c4c 48895d10			mov	[rbp+16],rbx
719c50 48897508			mov	[rbp+8],rsi
719c54 48c7c0e0582402		mov	rax,dword 35936480
719c5b 48894500			mov	[rbp],rax
719c5f 4889fb			mov	rbx,rdi
719c62			inlined_call_49:
719c62			version_749:
719c62			version_750:
719c62 4989df			mov	r15,rbx
719c65			version_751:
719c65			version_752:
719c65			version_753:
719c65			version_754:
719c65			version_755:
719c65 4983ff08			cmp	r15,byte 8
719c69			patchable_jump49:
719c69 0f8d7df1b600		jge	stub_7fd31e288de8_0
719c6f e974f1b600		jmp	stub_7fd31e288de8_1
>>> patching jump at 7fd31d719c11 -> 7fd31d719c38
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #106
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #107
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719c6f				bits 64
719c6f 90		version_756:
719c70			version_757:
719c70 49c7c704000000		mov	r15,dword 4
719c77 4d89fe			mov	r14,r15
719c7a 488b5500			mov	rdx,[rbp]
719c7e 4883c508			add	rbp,byte 8
719c82 488b4210			mov	rax,[rdx+16]
719c86 49c7c300000000		mov	r11,dword 0
719c8d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #106
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #107
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288de8				bits 64
288de8			stub_7fd31e288de8_0:
288de8 e8c9f648ff		call	do_callback_handler
288ded 91c9280200000000
------------------------------------------------------------------------
288dd0				bits 64
288dd0			stub_7fd31e288dd0_1:
288dd0 83c104			add	ecx,byte 4
288dd3 90			nop
288dd4			stub_7fd31e288dd0_0:
288dd4 e8ebf948ff		call	do_callback_cont_handler
288dd9 e1c9280200000000
------------------------------------------------------------------------
288db8				bits 64
288db8			stub_7fd31e288db8_1:
288db8 83c104			add	ecx,byte 4
288dbb 90			nop
288dbc			stub_7fd31e288db8_0:
288dbc e8f5f648ff		call	do_callback_handler
288dc1 31ca280200000000
------------------------------------------------------------------------
719c8f				bits 64
719c8f 90		version_758:
719c90			version_759:
719c90 4989df			mov	r15,rbx
719c93			version_760:
719c93			version_761:
719c93			version_762:
719c93			version_763:
719c93			version_764:
719c93 4c89ff			mov	rdi,r15
719c96 4883ef04			sub	rdi,byte 4
719c9a 0f8048f1b600		jo	stub_7fd31e288de8_0
719ca0			version_765:
719ca0 4883ed18			sub	rbp,byte 24
719ca4 48895d10			mov	[rbp+16],rbx
719ca8 48897508			mov	[rbp+8],rsi
719cac 48c7c0e0582402		mov	rax,dword 35936480
719cb3 48894500			mov	[rbp],rax
719cb7 4889fb			mov	rbx,rdi
719cba			inlined_call_50:
719cba			version_766:
719cba			version_767:
719cba 4989df			mov	r15,rbx
719cbd			version_768:
719cbd			version_769:
719cbd			version_770:
719cbd			version_771:
719cbd			version_772:
719cbd 4983ff08			cmp	r15,byte 8
719cc1			patchable_jump50:
719cc1 0f8df5f0b600		jge	stub_7fd31e288db8_0
719cc7 e9ecf0b600		jmp	stub_7fd31e288db8_1
>>> patching jump at 7fd31d719c69 -> 7fd31d719c90
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #108
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #109
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719cc7				bits 64
719cc7 90		version_773:
719cc8			version_774:
719cc8 49c7c704000000		mov	r15,dword 4
719ccf 4d89fe			mov	r14,r15
719cd2 488b5500			mov	rdx,[rbp]
719cd6 4883c508			add	rbp,byte 8
719cda 488b4210			mov	rax,[rdx+16]
719cde 49c7c300000000		mov	r11,dword 0
719ce5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #108
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #109
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288db8				bits 64
288db8			stub_7fd31e288db8_0:
288db8 e8f9f648ff		call	do_callback_handler
288dbd 21cb280200000000
------------------------------------------------------------------------
288da0				bits 64
288da0			stub_7fd31e288da0_1:
288da0 83c104			add	ecx,byte 4
288da3 90			nop
288da4			stub_7fd31e288da0_0:
288da4 e81bfa48ff		call	do_callback_cont_handler
288da9 71cb280200000000
------------------------------------------------------------------------
288d88				bits 64
288d88			stub_7fd31e288d88_1:
288d88 83c104			add	ecx,byte 4
288d8b 90			nop
288d8c			stub_7fd31e288d88_0:
288d8c e825f748ff		call	do_callback_handler
288d91 c1cb280200000000
------------------------------------------------------------------------
719ce7				bits 64
719ce7 90		version_775:
719ce8			version_776:
719ce8 4989df			mov	r15,rbx
719ceb			version_777:
719ceb			version_778:
719ceb			version_779:
719ceb			version_780:
719ceb			version_781:
719ceb 4c89ff			mov	rdi,r15
719cee 4883ef04			sub	rdi,byte 4
719cf2 0f80c0f0b600		jo	stub_7fd31e288db8_0
719cf8			version_782:
719cf8 4883ed18			sub	rbp,byte 24
719cfc 48895d10			mov	[rbp+16],rbx
719d00 48897508			mov	[rbp+8],rsi
719d04 48c7c0e0582402		mov	rax,dword 35936480
719d0b 48894500			mov	[rbp],rax
719d0f 4889fb			mov	rbx,rdi
719d12			inlined_call_51:
719d12			version_783:
719d12			version_784:
719d12 4989df			mov	r15,rbx
719d15			version_785:
719d15			version_786:
719d15			version_787:
719d15			version_788:
719d15			version_789:
719d15 4983ff08			cmp	r15,byte 8
719d19			patchable_jump51:
719d19 0f8d6df0b600		jge	stub_7fd31e288d88_0
719d1f e964f0b600		jmp	stub_7fd31e288d88_1
>>> patching jump at 7fd31d719cc1 -> 7fd31d719ce8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #110
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #111
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719d1f				bits 64
719d1f 90		version_790:
719d20			version_791:
719d20 49c7c704000000		mov	r15,dword 4
719d27 4d89fe			mov	r14,r15
719d2a 488b5500			mov	rdx,[rbp]
719d2e 4883c508			add	rbp,byte 8
719d32 488b4210			mov	rax,[rdx+16]
719d36 49c7c300000000		mov	r11,dword 0
719d3d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #110
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #111
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288d88				bits 64
288d88			stub_7fd31e288d88_0:
288d88 e829f748ff		call	do_callback_handler
288d8d b1cc280200000000
------------------------------------------------------------------------
288d70				bits 64
288d70			stub_7fd31e288d70_1:
288d70 83c104			add	ecx,byte 4
288d73 90			nop
288d74			stub_7fd31e288d70_0:
288d74 e84bfa48ff		call	do_callback_cont_handler
288d79 01cd280200000000
------------------------------------------------------------------------
288d58				bits 64
288d58			stub_7fd31e288d58_1:
288d58 83c104			add	ecx,byte 4
288d5b 90			nop
288d5c			stub_7fd31e288d58_0:
288d5c e855f748ff		call	do_callback_handler
288d61 51cd280200000000
------------------------------------------------------------------------
719d3f				bits 64
719d3f 90		version_792:
719d40			version_793:
719d40 4989df			mov	r15,rbx
719d43			version_794:
719d43			version_795:
719d43			version_796:
719d43			version_797:
719d43			version_798:
719d43 4c89ff			mov	rdi,r15
719d46 4883ef04			sub	rdi,byte 4
719d4a 0f8038f0b600		jo	stub_7fd31e288d88_0
719d50			version_799:
719d50 4883ed18			sub	rbp,byte 24
719d54 48895d10			mov	[rbp+16],rbx
719d58 48897508			mov	[rbp+8],rsi
719d5c 48c7c0e0582402		mov	rax,dword 35936480
719d63 48894500			mov	[rbp],rax
719d67 4889fb			mov	rbx,rdi
719d6a			inlined_call_52:
719d6a			version_800:
719d6a			version_801:
719d6a 4989df			mov	r15,rbx
719d6d			version_802:
719d6d			version_803:
719d6d			version_804:
719d6d			version_805:
719d6d			version_806:
719d6d 4983ff08			cmp	r15,byte 8
719d71			patchable_jump52:
719d71 0f8de5efb600		jge	stub_7fd31e288d58_0
719d77 e9dcefb600		jmp	stub_7fd31e288d58_1
>>> patching jump at 7fd31d719d19 -> 7fd31d719d40
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #112
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #113
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719d77				bits 64
719d77 90		version_807:
719d78			version_808:
719d78 49c7c704000000		mov	r15,dword 4
719d7f 4d89fe			mov	r14,r15
719d82 488b5500			mov	rdx,[rbp]
719d86 4883c508			add	rbp,byte 8
719d8a 488b4210			mov	rax,[rdx+16]
719d8e 49c7c300000000		mov	r11,dword 0
719d95 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #112
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #113
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288d58				bits 64
288d58			stub_7fd31e288d58_0:
288d58 e859f748ff		call	do_callback_handler
288d5d 41ce280200000000
------------------------------------------------------------------------
288d40				bits 64
288d40			stub_7fd31e288d40_1:
288d40 83c104			add	ecx,byte 4
288d43 90			nop
288d44			stub_7fd31e288d40_0:
288d44 e87bfa48ff		call	do_callback_cont_handler
288d49 91ce280200000000
------------------------------------------------------------------------
288d28				bits 64
288d28			stub_7fd31e288d28_1:
288d28 83c104			add	ecx,byte 4
288d2b 90			nop
288d2c			stub_7fd31e288d28_0:
288d2c e885f748ff		call	do_callback_handler
288d31 e1ce280200000000
------------------------------------------------------------------------
719d97				bits 64
719d97 90		version_809:
719d98			version_810:
719d98 4989df			mov	r15,rbx
719d9b			version_811:
719d9b			version_812:
719d9b			version_813:
719d9b			version_814:
719d9b			version_815:
719d9b 4c89ff			mov	rdi,r15
719d9e 4883ef04			sub	rdi,byte 4
719da2 0f80b0efb600		jo	stub_7fd31e288d58_0
719da8			version_816:
719da8 4883ed18			sub	rbp,byte 24
719dac 48895d10			mov	[rbp+16],rbx
719db0 48897508			mov	[rbp+8],rsi
719db4 48c7c0e0582402		mov	rax,dword 35936480
719dbb 48894500			mov	[rbp],rax
719dbf 4889fb			mov	rbx,rdi
719dc2			inlined_call_53:
719dc2			version_817:
719dc2			version_818:
719dc2 4989df			mov	r15,rbx
719dc5			version_819:
719dc5			version_820:
719dc5			version_821:
719dc5			version_822:
719dc5			version_823:
719dc5 4983ff08			cmp	r15,byte 8
719dc9			patchable_jump53:
719dc9 0f8d5defb600		jge	stub_7fd31e288d28_0
719dcf e954efb600		jmp	stub_7fd31e288d28_1
>>> patching jump at 7fd31d719d71 -> 7fd31d719d98
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #114
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #115
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719dcf				bits 64
719dcf 90		version_824:
719dd0			version_825:
719dd0 49c7c704000000		mov	r15,dword 4
719dd7 4d89fe			mov	r14,r15
719dda 488b5500			mov	rdx,[rbp]
719dde 4883c508			add	rbp,byte 8
719de2 488b4210			mov	rax,[rdx+16]
719de6 49c7c300000000		mov	r11,dword 0
719ded ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #114
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #115
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288d28				bits 64
288d28			stub_7fd31e288d28_0:
288d28 e889f748ff		call	do_callback_handler
288d2d d1cf280200000000
------------------------------------------------------------------------
288d10				bits 64
288d10			stub_7fd31e288d10_1:
288d10 83c104			add	ecx,byte 4
288d13 90			nop
288d14			stub_7fd31e288d10_0:
288d14 e8abfa48ff		call	do_callback_cont_handler
288d19 21d0280200000000
------------------------------------------------------------------------
288cf8				bits 64
288cf8			stub_7fd31e288cf8_1:
288cf8 83c104			add	ecx,byte 4
288cfb 90			nop
288cfc			stub_7fd31e288cf8_0:
288cfc e8b5f748ff		call	do_callback_handler
288d01 71d0280200000000
------------------------------------------------------------------------
719def				bits 64
719def 90		version_826:
719df0			version_827:
719df0 4989df			mov	r15,rbx
719df3			version_828:
719df3			version_829:
719df3			version_830:
719df3			version_831:
719df3			version_832:
719df3 4c89ff			mov	rdi,r15
719df6 4883ef04			sub	rdi,byte 4
719dfa 0f8028efb600		jo	stub_7fd31e288d28_0
719e00			version_833:
719e00 4883ed18			sub	rbp,byte 24
719e04 48895d10			mov	[rbp+16],rbx
719e08 48897508			mov	[rbp+8],rsi
719e0c 48c7c0e0582402		mov	rax,dword 35936480
719e13 48894500			mov	[rbp],rax
719e17 4889fb			mov	rbx,rdi
719e1a			inlined_call_54:
719e1a			version_834:
719e1a			version_835:
719e1a 4989df			mov	r15,rbx
719e1d			version_836:
719e1d			version_837:
719e1d			version_838:
719e1d			version_839:
719e1d			version_840:
719e1d 4983ff08			cmp	r15,byte 8
719e21			patchable_jump54:
719e21 0f8dd5eeb600		jge	stub_7fd31e288cf8_0
719e27 e9cceeb600		jmp	stub_7fd31e288cf8_1
>>> patching jump at 7fd31d719dc9 -> 7fd31d719df0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #116
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #117
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719e27				bits 64
719e27 90		version_841:
719e28			version_842:
719e28 49c7c704000000		mov	r15,dword 4
719e2f 4d89fe			mov	r14,r15
719e32 488b5500			mov	rdx,[rbp]
719e36 4883c508			add	rbp,byte 8
719e3a 488b4210			mov	rax,[rdx+16]
719e3e 49c7c300000000		mov	r11,dword 0
719e45 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #116
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #117
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288cf8				bits 64
288cf8			stub_7fd31e288cf8_0:
288cf8 e8b9f748ff		call	do_callback_handler
288cfd 61d1280200000000
------------------------------------------------------------------------
288ce0				bits 64
288ce0			stub_7fd31e288ce0_1:
288ce0 83c104			add	ecx,byte 4
288ce3 90			nop
288ce4			stub_7fd31e288ce0_0:
288ce4 e8dbfa48ff		call	do_callback_cont_handler
288ce9 b1d1280200000000
------------------------------------------------------------------------
288cc8				bits 64
288cc8			stub_7fd31e288cc8_1:
288cc8 83c104			add	ecx,byte 4
288ccb 90			nop
288ccc			stub_7fd31e288cc8_0:
288ccc e8e5f748ff		call	do_callback_handler
288cd1 01d2280200000000
------------------------------------------------------------------------
719e47				bits 64
719e47 90		version_843:
719e48			version_844:
719e48 4989df			mov	r15,rbx
719e4b			version_845:
719e4b			version_846:
719e4b			version_847:
719e4b			version_848:
719e4b			version_849:
719e4b 4c89ff			mov	rdi,r15
719e4e 4883ef04			sub	rdi,byte 4
719e52 0f80a0eeb600		jo	stub_7fd31e288cf8_0
719e58			version_850:
719e58 4883ed18			sub	rbp,byte 24
719e5c 48895d10			mov	[rbp+16],rbx
719e60 48897508			mov	[rbp+8],rsi
719e64 48c7c0e0582402		mov	rax,dword 35936480
719e6b 48894500			mov	[rbp],rax
719e6f 4889fb			mov	rbx,rdi
719e72			inlined_call_55:
719e72			version_851:
719e72			version_852:
719e72 4989df			mov	r15,rbx
719e75			version_853:
719e75			version_854:
719e75			version_855:
719e75			version_856:
719e75			version_857:
719e75 4983ff08			cmp	r15,byte 8
719e79			patchable_jump55:
719e79 0f8d4deeb600		jge	stub_7fd31e288cc8_0
719e7f e944eeb600		jmp	stub_7fd31e288cc8_1
>>> patching jump at 7fd31d719e21 -> 7fd31d719e48
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #118
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #119
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719e7f				bits 64
719e7f 90		version_858:
719e80			version_859:
719e80 49c7c704000000		mov	r15,dword 4
719e87 4d89fe			mov	r14,r15
719e8a 488b5500			mov	rdx,[rbp]
719e8e 4883c508			add	rbp,byte 8
719e92 488b4210			mov	rax,[rdx+16]
719e96 49c7c300000000		mov	r11,dword 0
719e9d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #118
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #119
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288cc8				bits 64
288cc8			stub_7fd31e288cc8_0:
288cc8 e8e9f748ff		call	do_callback_handler
288ccd f1d2280200000000
------------------------------------------------------------------------
288cb0				bits 64
288cb0			stub_7fd31e288cb0_1:
288cb0 83c104			add	ecx,byte 4
288cb3 90			nop
288cb4			stub_7fd31e288cb0_0:
288cb4 e80bfb48ff		call	do_callback_cont_handler
288cb9 41d3280200000000
------------------------------------------------------------------------
288c98				bits 64
288c98			stub_7fd31e288c98_1:
288c98 83c104			add	ecx,byte 4
288c9b 90			nop
288c9c			stub_7fd31e288c98_0:
288c9c e815f848ff		call	do_callback_handler
288ca1 91d3280200000000
------------------------------------------------------------------------
719e9f				bits 64
719e9f 90		version_860:
719ea0			version_861:
719ea0 4989df			mov	r15,rbx
719ea3			version_862:
719ea3			version_863:
719ea3			version_864:
719ea3			version_865:
719ea3			version_866:
719ea3 4c89ff			mov	rdi,r15
719ea6 4883ef04			sub	rdi,byte 4
719eaa 0f8018eeb600		jo	stub_7fd31e288cc8_0
719eb0			version_867:
719eb0 4883ed18			sub	rbp,byte 24
719eb4 48895d10			mov	[rbp+16],rbx
719eb8 48897508			mov	[rbp+8],rsi
719ebc 48c7c0e0582402		mov	rax,dword 35936480
719ec3 48894500			mov	[rbp],rax
719ec7 4889fb			mov	rbx,rdi
719eca			inlined_call_56:
719eca			version_868:
719eca			version_869:
719eca 4989df			mov	r15,rbx
719ecd			version_870:
719ecd			version_871:
719ecd			version_872:
719ecd			version_873:
719ecd			version_874:
719ecd 4983ff08			cmp	r15,byte 8
719ed1			patchable_jump56:
719ed1 0f8dc5edb600		jge	stub_7fd31e288c98_0
719ed7 e9bcedb600		jmp	stub_7fd31e288c98_1
>>> patching jump at 7fd31d719e79 -> 7fd31d719ea0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #120
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #121
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719ed7				bits 64
719ed7 90		version_875:
719ed8			version_876:
719ed8 49c7c704000000		mov	r15,dword 4
719edf 4d89fe			mov	r14,r15
719ee2 488b5500			mov	rdx,[rbp]
719ee6 4883c508			add	rbp,byte 8
719eea 488b4210			mov	rax,[rdx+16]
719eee 49c7c300000000		mov	r11,dword 0
719ef5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #120
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #121
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288c98				bits 64
288c98			stub_7fd31e288c98_0:
288c98 e819f848ff		call	do_callback_handler
288c9d 81d4280200000000
------------------------------------------------------------------------
288c80				bits 64
288c80			stub_7fd31e288c80_1:
288c80 83c104			add	ecx,byte 4
288c83 90			nop
288c84			stub_7fd31e288c80_0:
288c84 e83bfb48ff		call	do_callback_cont_handler
288c89 d1d4280200000000
------------------------------------------------------------------------
288c68				bits 64
288c68			stub_7fd31e288c68_1:
288c68 83c104			add	ecx,byte 4
288c6b 90			nop
288c6c			stub_7fd31e288c68_0:
288c6c e845f848ff		call	do_callback_handler
288c71 21d5280200000000
------------------------------------------------------------------------
719ef7				bits 64
719ef7 90		version_877:
719ef8			version_878:
719ef8 4989df			mov	r15,rbx
719efb			version_879:
719efb			version_880:
719efb			version_881:
719efb			version_882:
719efb			version_883:
719efb 4c89ff			mov	rdi,r15
719efe 4883ef04			sub	rdi,byte 4
719f02 0f8090edb600		jo	stub_7fd31e288c98_0
719f08			version_884:
719f08 4883ed18			sub	rbp,byte 24
719f0c 48895d10			mov	[rbp+16],rbx
719f10 48897508			mov	[rbp+8],rsi
719f14 48c7c0e0582402		mov	rax,dword 35936480
719f1b 48894500			mov	[rbp],rax
719f1f 4889fb			mov	rbx,rdi
719f22			inlined_call_57:
719f22			version_885:
719f22			version_886:
719f22 4989df			mov	r15,rbx
719f25			version_887:
719f25			version_888:
719f25			version_889:
719f25			version_890:
719f25			version_891:
719f25 4983ff08			cmp	r15,byte 8
719f29			patchable_jump57:
719f29 0f8d3dedb600		jge	stub_7fd31e288c68_0
719f2f e934edb600		jmp	stub_7fd31e288c68_1
>>> patching jump at 7fd31d719ed1 -> 7fd31d719ef8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #122
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #123
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719f2f				bits 64
719f2f 90		version_892:
719f30			version_893:
719f30 49c7c704000000		mov	r15,dword 4
719f37 4d89fe			mov	r14,r15
719f3a 488b5500			mov	rdx,[rbp]
719f3e 4883c508			add	rbp,byte 8
719f42 488b4210			mov	rax,[rdx+16]
719f46 49c7c300000000		mov	r11,dword 0
719f4d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #122
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #123
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288c68				bits 64
288c68			stub_7fd31e288c68_0:
288c68 e849f848ff		call	do_callback_handler
288c6d 11d6280200000000
------------------------------------------------------------------------
288c50				bits 64
288c50			stub_7fd31e288c50_1:
288c50 83c104			add	ecx,byte 4
288c53 90			nop
288c54			stub_7fd31e288c50_0:
288c54 e86bfb48ff		call	do_callback_cont_handler
288c59 61d6280200000000
------------------------------------------------------------------------
288c38				bits 64
288c38			stub_7fd31e288c38_1:
288c38 83c104			add	ecx,byte 4
288c3b 90			nop
288c3c			stub_7fd31e288c38_0:
288c3c e875f848ff		call	do_callback_handler
288c41 b1d6280200000000
------------------------------------------------------------------------
719f4f				bits 64
719f4f 90		version_894:
719f50			version_895:
719f50 4989df			mov	r15,rbx
719f53			version_896:
719f53			version_897:
719f53			version_898:
719f53			version_899:
719f53			version_900:
719f53 4c89ff			mov	rdi,r15
719f56 4883ef04			sub	rdi,byte 4
719f5a 0f8008edb600		jo	stub_7fd31e288c68_0
719f60			version_901:
719f60 4883ed18			sub	rbp,byte 24
719f64 48895d10			mov	[rbp+16],rbx
719f68 48897508			mov	[rbp+8],rsi
719f6c 48c7c0e0582402		mov	rax,dword 35936480
719f73 48894500			mov	[rbp],rax
719f77 4889fb			mov	rbx,rdi
719f7a			inlined_call_58:
719f7a			version_902:
719f7a			version_903:
719f7a 4989df			mov	r15,rbx
719f7d			version_904:
719f7d			version_905:
719f7d			version_906:
719f7d			version_907:
719f7d			version_908:
719f7d 4983ff08			cmp	r15,byte 8
719f81			patchable_jump58:
719f81 0f8db5ecb600		jge	stub_7fd31e288c38_0
719f87 e9acecb600		jmp	stub_7fd31e288c38_1
>>> patching jump at 7fd31d719f29 -> 7fd31d719f50
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #124
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #125
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719f87				bits 64
719f87 90		version_909:
719f88			version_910:
719f88 49c7c704000000		mov	r15,dword 4
719f8f 4d89fe			mov	r14,r15
719f92 488b5500			mov	rdx,[rbp]
719f96 4883c508			add	rbp,byte 8
719f9a 488b4210			mov	rax,[rdx+16]
719f9e 49c7c300000000		mov	r11,dword 0
719fa5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #124
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #125
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288c38				bits 64
288c38			stub_7fd31e288c38_0:
288c38 e879f848ff		call	do_callback_handler
288c3d a1d7280200000000
------------------------------------------------------------------------
288c20				bits 64
288c20			stub_7fd31e288c20_1:
288c20 83c104			add	ecx,byte 4
288c23 90			nop
288c24			stub_7fd31e288c20_0:
288c24 e89bfb48ff		call	do_callback_cont_handler
288c29 f1d7280200000000
------------------------------------------------------------------------
288c08				bits 64
288c08			stub_7fd31e288c08_1:
288c08 83c104			add	ecx,byte 4
288c0b 90			nop
288c0c			stub_7fd31e288c08_0:
288c0c e8a5f848ff		call	do_callback_handler
288c11 41d8280200000000
------------------------------------------------------------------------
719fa7				bits 64
719fa7 90		version_911:
719fa8			version_912:
719fa8 4989df			mov	r15,rbx
719fab			version_913:
719fab			version_914:
719fab			version_915:
719fab			version_916:
719fab			version_917:
719fab 4c89ff			mov	rdi,r15
719fae 4883ef04			sub	rdi,byte 4
719fb2 0f8080ecb600		jo	stub_7fd31e288c38_0
719fb8			version_918:
719fb8 4883ed18			sub	rbp,byte 24
719fbc 48895d10			mov	[rbp+16],rbx
719fc0 48897508			mov	[rbp+8],rsi
719fc4 48c7c0e0582402		mov	rax,dword 35936480
719fcb 48894500			mov	[rbp],rax
719fcf 4889fb			mov	rbx,rdi
719fd2			inlined_call_59:
719fd2			version_919:
719fd2			version_920:
719fd2 4989df			mov	r15,rbx
719fd5			version_921:
719fd5			version_922:
719fd5			version_923:
719fd5			version_924:
719fd5			version_925:
719fd5 4983ff08			cmp	r15,byte 8
719fd9			patchable_jump59:
719fd9 0f8d2decb600		jge	stub_7fd31e288c08_0
719fdf e924ecb600		jmp	stub_7fd31e288c08_1
>>> patching jump at 7fd31d719f81 -> 7fd31d719fa8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #126
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #127
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
719fdf				bits 64
719fdf 90		version_926:
719fe0			version_927:
719fe0 49c7c704000000		mov	r15,dword 4
719fe7 4d89fe			mov	r14,r15
719fea 488b5500			mov	rdx,[rbp]
719fee 4883c508			add	rbp,byte 8
719ff2 488b4210			mov	rax,[rdx+16]
719ff6 49c7c300000000		mov	r11,dword 0
719ffd ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #126
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #127
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288c08				bits 64
288c08			stub_7fd31e288c08_0:
288c08 e8a9f848ff		call	do_callback_handler
288c0d 31d9280200000000
------------------------------------------------------------------------
288bf0				bits 64
288bf0			stub_7fd31e288bf0_1:
288bf0 83c104			add	ecx,byte 4
288bf3 90			nop
288bf4			stub_7fd31e288bf0_0:
288bf4 e8cbfb48ff		call	do_callback_cont_handler
288bf9 81d9280200000000
------------------------------------------------------------------------
288bd8				bits 64
288bd8			stub_7fd31e288bd8_1:
288bd8 83c104			add	ecx,byte 4
288bdb 90			nop
288bdc			stub_7fd31e288bd8_0:
288bdc e8d5f848ff		call	do_callback_handler
288be1 d1d9280200000000
------------------------------------------------------------------------
719fff				bits 64
719fff 90		version_928:
71a000			version_929:
71a000 4989df			mov	r15,rbx
71a003			version_930:
71a003			version_931:
71a003			version_932:
71a003			version_933:
71a003			version_934:
71a003 4c89ff			mov	rdi,r15
71a006 4883ef04			sub	rdi,byte 4
71a00a 0f80f8ebb600		jo	stub_7fd31e288c08_0
71a010			version_935:
71a010 4883ed18			sub	rbp,byte 24
71a014 48895d10			mov	[rbp+16],rbx
71a018 48897508			mov	[rbp+8],rsi
71a01c 48c7c0e0582402		mov	rax,dword 35936480
71a023 48894500			mov	[rbp],rax
71a027 4889fb			mov	rbx,rdi
71a02a			inlined_call_60:
71a02a			version_936:
71a02a			version_937:
71a02a 4989df			mov	r15,rbx
71a02d			version_938:
71a02d			version_939:
71a02d			version_940:
71a02d			version_941:
71a02d			version_942:
71a02d 4983ff08			cmp	r15,byte 8
71a031			patchable_jump60:
71a031 0f8da5ebb600		jge	stub_7fd31e288bd8_0
71a037 e99cebb600		jmp	stub_7fd31e288bd8_1
>>> patching jump at 7fd31d719fd9 -> 7fd31d71a000
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #128
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #129
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a037				bits 64
71a037 90		version_943:
71a038			version_944:
71a038 49c7c704000000		mov	r15,dword 4
71a03f 4d89fe			mov	r14,r15
71a042 488b5500			mov	rdx,[rbp]
71a046 4883c508			add	rbp,byte 8
71a04a 488b4210			mov	rax,[rdx+16]
71a04e 49c7c300000000		mov	r11,dword 0
71a055 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #128
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #129
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288bd8				bits 64
288bd8			stub_7fd31e288bd8_0:
288bd8 e8d9f848ff		call	do_callback_handler
288bdd c1da280200000000
------------------------------------------------------------------------
288bc0				bits 64
288bc0			stub_7fd31e288bc0_1:
288bc0 83c104			add	ecx,byte 4
288bc3 90			nop
288bc4			stub_7fd31e288bc0_0:
288bc4 e8fbfb48ff		call	do_callback_cont_handler
288bc9 11db280200000000
------------------------------------------------------------------------
288ba8				bits 64
288ba8			stub_7fd31e288ba8_1:
288ba8 83c104			add	ecx,byte 4
288bab 90			nop
288bac			stub_7fd31e288ba8_0:
288bac e805f948ff		call	do_callback_handler
288bb1 61db280200000000
------------------------------------------------------------------------
71a057				bits 64
71a057 90		version_945:
71a058			version_946:
71a058 4989df			mov	r15,rbx
71a05b			version_947:
71a05b			version_948:
71a05b			version_949:
71a05b			version_950:
71a05b			version_951:
71a05b 4c89ff			mov	rdi,r15
71a05e 4883ef04			sub	rdi,byte 4
71a062 0f8070ebb600		jo	stub_7fd31e288bd8_0
71a068			version_952:
71a068 4883ed18			sub	rbp,byte 24
71a06c 48895d10			mov	[rbp+16],rbx
71a070 48897508			mov	[rbp+8],rsi
71a074 48c7c0e0582402		mov	rax,dword 35936480
71a07b 48894500			mov	[rbp],rax
71a07f 4889fb			mov	rbx,rdi
71a082			inlined_call_61:
71a082			version_953:
71a082			version_954:
71a082 4989df			mov	r15,rbx
71a085			version_955:
71a085			version_956:
71a085			version_957:
71a085			version_958:
71a085			version_959:
71a085 4983ff08			cmp	r15,byte 8
71a089			patchable_jump61:
71a089 0f8d1debb600		jge	stub_7fd31e288ba8_0
71a08f e914ebb600		jmp	stub_7fd31e288ba8_1
>>> patching jump at 7fd31d71a031 -> 7fd31d71a058
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #130
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #131
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a08f				bits 64
71a08f 90		version_960:
71a090			version_961:
71a090 49c7c704000000		mov	r15,dword 4
71a097 4d89fe			mov	r14,r15
71a09a 488b5500			mov	rdx,[rbp]
71a09e 4883c508			add	rbp,byte 8
71a0a2 488b4210			mov	rax,[rdx+16]
71a0a6 49c7c300000000		mov	r11,dword 0
71a0ad ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #130
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #131
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288ba8				bits 64
288ba8			stub_7fd31e288ba8_0:
288ba8 e809f948ff		call	do_callback_handler
288bad 51dc280200000000
------------------------------------------------------------------------
288b90				bits 64
288b90			stub_7fd31e288b90_1:
288b90 83c104			add	ecx,byte 4
288b93 90			nop
288b94			stub_7fd31e288b90_0:
288b94 e82bfc48ff		call	do_callback_cont_handler
288b99 a1dc280200000000
------------------------------------------------------------------------
288b78				bits 64
288b78			stub_7fd31e288b78_1:
288b78 83c104			add	ecx,byte 4
288b7b 90			nop
288b7c			stub_7fd31e288b78_0:
288b7c e835f948ff		call	do_callback_handler
288b81 f1dc280200000000
------------------------------------------------------------------------
71a0af				bits 64
71a0af 90		version_962:
71a0b0			version_963:
71a0b0 4989df			mov	r15,rbx
71a0b3			version_964:
71a0b3			version_965:
71a0b3			version_966:
71a0b3			version_967:
71a0b3			version_968:
71a0b3 4c89ff			mov	rdi,r15
71a0b6 4883ef04			sub	rdi,byte 4
71a0ba 0f80e8eab600		jo	stub_7fd31e288ba8_0
71a0c0			version_969:
71a0c0 4883ed18			sub	rbp,byte 24
71a0c4 48895d10			mov	[rbp+16],rbx
71a0c8 48897508			mov	[rbp+8],rsi
71a0cc 48c7c0e0582402		mov	rax,dword 35936480
71a0d3 48894500			mov	[rbp],rax
71a0d7 4889fb			mov	rbx,rdi
71a0da			inlined_call_62:
71a0da			version_970:
71a0da			version_971:
71a0da 4989df			mov	r15,rbx
71a0dd			version_972:
71a0dd			version_973:
71a0dd			version_974:
71a0dd			version_975:
71a0dd			version_976:
71a0dd 4983ff08			cmp	r15,byte 8
71a0e1			patchable_jump62:
71a0e1 0f8d95eab600		jge	stub_7fd31e288b78_0
71a0e7 e98ceab600		jmp	stub_7fd31e288b78_1
>>> patching jump at 7fd31d71a089 -> 7fd31d71a0b0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #132
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #133
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a0e7				bits 64
71a0e7 90		version_977:
71a0e8			version_978:
71a0e8 49c7c704000000		mov	r15,dword 4
71a0ef 4d89fe			mov	r14,r15
71a0f2 488b5500			mov	rdx,[rbp]
71a0f6 4883c508			add	rbp,byte 8
71a0fa 488b4210			mov	rax,[rdx+16]
71a0fe 49c7c300000000		mov	r11,dword 0
71a105 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #132
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #133
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288b78				bits 64
288b78			stub_7fd31e288b78_0:
288b78 e839f948ff		call	do_callback_handler
288b7d 015e290200000000
------------------------------------------------------------------------
288b60				bits 64
288b60			stub_7fd31e288b60_1:
288b60 83c104			add	ecx,byte 4
288b63 90			nop
288b64			stub_7fd31e288b60_0:
288b64 e85bfc48ff		call	do_callback_cont_handler
288b69 515e290200000000
------------------------------------------------------------------------
288b48				bits 64
288b48			stub_7fd31e288b48_1:
288b48 83c104			add	ecx,byte 4
288b4b 90			nop
288b4c			stub_7fd31e288b48_0:
288b4c e865f948ff		call	do_callback_handler
288b51 a15e290200000000
------------------------------------------------------------------------
71a107				bits 64
71a107 90		version_979:
71a108			version_980:
71a108 4989df			mov	r15,rbx
71a10b			version_981:
71a10b			version_982:
71a10b			version_983:
71a10b			version_984:
71a10b			version_985:
71a10b 4c89ff			mov	rdi,r15
71a10e 4883ef04			sub	rdi,byte 4
71a112 0f8060eab600		jo	stub_7fd31e288b78_0
71a118			version_986:
71a118 4883ed18			sub	rbp,byte 24
71a11c 48895d10			mov	[rbp+16],rbx
71a120 48897508			mov	[rbp+8],rsi
71a124 48c7c0e0582402		mov	rax,dword 35936480
71a12b 48894500			mov	[rbp],rax
71a12f 4889fb			mov	rbx,rdi
71a132			inlined_call_63:
71a132			version_987:
71a132			version_988:
71a132 4989df			mov	r15,rbx
71a135			version_989:
71a135			version_990:
71a135			version_991:
71a135			version_992:
71a135			version_993:
71a135 4983ff08			cmp	r15,byte 8
71a139			patchable_jump63:
71a139 0f8d0deab600		jge	stub_7fd31e288b48_0
71a13f e904eab600		jmp	stub_7fd31e288b48_1
>>> patching jump at 7fd31d71a0e1 -> 7fd31d71a108
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #134
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a13f				bits 64
71a13f 90		version_994:
71a140			version_995:
71a140 49c7c704000000		mov	r15,dword 4
71a147 4d89fe			mov	r14,r15
71a14a 488b5500			mov	rdx,[rbp]
71a14e 4883c508			add	rbp,byte 8
71a152 488b4210			mov	rax,[rdx+16]
71a156 49c7c300000000		mov	r11,dword 0
71a15d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #134
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288b48				bits 64
288b48			stub_7fd31e288b48_0:
288b48 e869f948ff		call	do_callback_handler
288b4d 915f290200000000
------------------------------------------------------------------------
288b30				bits 64
288b30			stub_7fd31e288b30_1:
288b30 83c104			add	ecx,byte 4
288b33 90			nop
288b34			stub_7fd31e288b30_0:
288b34 e88bfc48ff		call	do_callback_cont_handler
288b39 e15f290200000000
------------------------------------------------------------------------
288b18				bits 64
288b18			stub_7fd31e288b18_1:
288b18 83c104			add	ecx,byte 4
288b1b 90			nop
288b1c			stub_7fd31e288b18_0:
288b1c e895f948ff		call	do_callback_handler
288b21 3160290200000000
------------------------------------------------------------------------
71a15f				bits 64
71a15f 90		version_996:
71a160			version_997:
71a160 4989df			mov	r15,rbx
71a163			version_998:
71a163			version_999:
71a163			version_1000:
71a163			version_1001:
71a163			version_1002:
71a163 4c89ff			mov	rdi,r15
71a166 4883ef04			sub	rdi,byte 4
71a16a 0f80d8e9b600		jo	stub_7fd31e288b48_0
71a170			version_1003:
71a170 4883ed18			sub	rbp,byte 24
71a174 48895d10			mov	[rbp+16],rbx
71a178 48897508			mov	[rbp+8],rsi
71a17c 48c7c0e0582402		mov	rax,dword 35936480
71a183 48894500			mov	[rbp],rax
71a187 4889fb			mov	rbx,rdi
71a18a			inlined_call_64:
71a18a			version_1004:
71a18a			version_1005:
71a18a 4989df			mov	r15,rbx
71a18d			version_1006:
71a18d			version_1007:
71a18d			version_1008:
71a18d			version_1009:
71a18d			version_1010:
71a18d 4983ff08			cmp	r15,byte 8
71a191			patchable_jump64:
71a191 0f8d85e9b600		jge	stub_7fd31e288b18_0
71a197 e97ce9b600		jmp	stub_7fd31e288b18_1
>>> patching jump at 7fd31d71a139 -> 7fd31d71a160
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #136
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #137
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a197				bits 64
71a197 90		version_1011:
71a198			version_1012:
71a198 49c7c704000000		mov	r15,dword 4
71a19f 4d89fe			mov	r14,r15
71a1a2 488b5500			mov	rdx,[rbp]
71a1a6 4883c508			add	rbp,byte 8
71a1aa 488b4210			mov	rax,[rdx+16]
71a1ae 49c7c300000000		mov	r11,dword 0
71a1b5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #136
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #137
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288b18				bits 64
288b18			stub_7fd31e288b18_0:
288b18 e899f948ff		call	do_callback_handler
288b1d 2161290200000000
------------------------------------------------------------------------
288b00				bits 64
288b00			stub_7fd31e288b00_1:
288b00 83c104			add	ecx,byte 4
288b03 90			nop
288b04			stub_7fd31e288b00_0:
288b04 e8bbfc48ff		call	do_callback_cont_handler
288b09 7161290200000000
------------------------------------------------------------------------
288ae8				bits 64
288ae8			stub_7fd31e288ae8_1:
288ae8 83c104			add	ecx,byte 4
288aeb 90			nop
288aec			stub_7fd31e288ae8_0:
288aec e8c5f948ff		call	do_callback_handler
288af1 c161290200000000
------------------------------------------------------------------------
71a1b7				bits 64
71a1b7 90		version_1013:
71a1b8			version_1014:
71a1b8 4989df			mov	r15,rbx
71a1bb			version_1015:
71a1bb			version_1016:
71a1bb			version_1017:
71a1bb			version_1018:
71a1bb			version_1019:
71a1bb 4c89ff			mov	rdi,r15
71a1be 4883ef04			sub	rdi,byte 4
71a1c2 0f8050e9b600		jo	stub_7fd31e288b18_0
71a1c8			version_1020:
71a1c8 4883ed18			sub	rbp,byte 24
71a1cc 48895d10			mov	[rbp+16],rbx
71a1d0 48897508			mov	[rbp+8],rsi
71a1d4 48c7c0e0582402		mov	rax,dword 35936480
71a1db 48894500			mov	[rbp],rax
71a1df 4889fb			mov	rbx,rdi
71a1e2			inlined_call_65:
71a1e2			version_1021:
71a1e2			version_1022:
71a1e2 4989df			mov	r15,rbx
71a1e5			version_1023:
71a1e5			version_1024:
71a1e5			version_1025:
71a1e5			version_1026:
71a1e5			version_1027:
71a1e5 4983ff08			cmp	r15,byte 8
71a1e9			patchable_jump65:
71a1e9 0f8dfde8b600		jge	stub_7fd31e288ae8_0
71a1ef e9f4e8b600		jmp	stub_7fd31e288ae8_1
>>> patching jump at 7fd31d71a191 -> 7fd31d71a1b8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #138
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #139
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a1ef				bits 64
71a1ef 90		version_1028:
71a1f0			version_1029:
71a1f0 49c7c704000000		mov	r15,dword 4
71a1f7 4d89fe			mov	r14,r15
71a1fa 488b5500			mov	rdx,[rbp]
71a1fe 4883c508			add	rbp,byte 8
71a202 488b4210			mov	rax,[rdx+16]
71a206 49c7c300000000		mov	r11,dword 0
71a20d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #138
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #139
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288ae8				bits 64
288ae8			stub_7fd31e288ae8_0:
288ae8 e8c9f948ff		call	do_callback_handler
288aed b162290200000000
------------------------------------------------------------------------
288ad0				bits 64
288ad0			stub_7fd31e288ad0_1:
288ad0 83c104			add	ecx,byte 4
288ad3 90			nop
288ad4			stub_7fd31e288ad0_0:
288ad4 e8ebfc48ff		call	do_callback_cont_handler
288ad9 0163290200000000
------------------------------------------------------------------------
288ab8				bits 64
288ab8			stub_7fd31e288ab8_1:
288ab8 83c104			add	ecx,byte 4
288abb 90			nop
288abc			stub_7fd31e288ab8_0:
288abc e8f5f948ff		call	do_callback_handler
288ac1 5163290200000000
------------------------------------------------------------------------
71a20f				bits 64
71a20f 90		version_1030:
71a210			version_1031:
71a210 4989df			mov	r15,rbx
71a213			version_1032:
71a213			version_1033:
71a213			version_1034:
71a213			version_1035:
71a213			version_1036:
71a213 4c89ff			mov	rdi,r15
71a216 4883ef04			sub	rdi,byte 4
71a21a 0f80c8e8b600		jo	stub_7fd31e288ae8_0
71a220			version_1037:
71a220 4883ed18			sub	rbp,byte 24
71a224 48895d10			mov	[rbp+16],rbx
71a228 48897508			mov	[rbp+8],rsi
71a22c 48c7c0e0582402		mov	rax,dword 35936480
71a233 48894500			mov	[rbp],rax
71a237 4889fb			mov	rbx,rdi
71a23a			inlined_call_66:
71a23a			version_1038:
71a23a			version_1039:
71a23a 4989df			mov	r15,rbx
71a23d			version_1040:
71a23d			version_1041:
71a23d			version_1042:
71a23d			version_1043:
71a23d			version_1044:
71a23d 4983ff08			cmp	r15,byte 8
71a241			patchable_jump66:
71a241 0f8d75e8b600		jge	stub_7fd31e288ab8_0
71a247 e96ce8b600		jmp	stub_7fd31e288ab8_1
>>> patching jump at 7fd31d71a1e9 -> 7fd31d71a210
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #140
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #141
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a247				bits 64
71a247 90		version_1045:
71a248			version_1046:
71a248 49c7c704000000		mov	r15,dword 4
71a24f 4d89fe			mov	r14,r15
71a252 488b5500			mov	rdx,[rbp]
71a256 4883c508			add	rbp,byte 8
71a25a 488b4210			mov	rax,[rdx+16]
71a25e 49c7c300000000		mov	r11,dword 0
71a265 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #140
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #141
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288ab8				bits 64
288ab8			stub_7fd31e288ab8_0:
288ab8 e8f9f948ff		call	do_callback_handler
288abd 61a1290200000000
------------------------------------------------------------------------
288aa0				bits 64
288aa0			stub_7fd31e288aa0_1:
288aa0 83c104			add	ecx,byte 4
288aa3 90			nop
288aa4			stub_7fd31e288aa0_0:
288aa4 e81bfd48ff		call	do_callback_cont_handler
288aa9 b1a1290200000000
------------------------------------------------------------------------
288a88				bits 64
288a88			stub_7fd31e288a88_1:
288a88 83c104			add	ecx,byte 4
288a8b 90			nop
288a8c			stub_7fd31e288a88_0:
288a8c e825fa48ff		call	do_callback_handler
288a91 01a2290200000000
------------------------------------------------------------------------
71a267				bits 64
71a267 90		version_1047:
71a268			version_1048:
71a268 4989df			mov	r15,rbx
71a26b			version_1049:
71a26b			version_1050:
71a26b			version_1051:
71a26b			version_1052:
71a26b			version_1053:
71a26b 4c89ff			mov	rdi,r15
71a26e 4883ef04			sub	rdi,byte 4
71a272 0f8040e8b600		jo	stub_7fd31e288ab8_0
71a278			version_1054:
71a278 4883ed18			sub	rbp,byte 24
71a27c 48895d10			mov	[rbp+16],rbx
71a280 48897508			mov	[rbp+8],rsi
71a284 48c7c0e0582402		mov	rax,dword 35936480
71a28b 48894500			mov	[rbp],rax
71a28f 4889fb			mov	rbx,rdi
71a292			inlined_call_67:
71a292			version_1055:
71a292			version_1056:
71a292 4989df			mov	r15,rbx
71a295			version_1057:
71a295			version_1058:
71a295			version_1059:
71a295			version_1060:
71a295			version_1061:
71a295 4983ff08			cmp	r15,byte 8
71a299			patchable_jump67:
71a299 0f8dede7b600		jge	stub_7fd31e288a88_0
71a29f e9e4e7b600		jmp	stub_7fd31e288a88_1
>>> patching jump at 7fd31d71a241 -> 7fd31d71a268
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #142
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #143
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a29f				bits 64
71a29f 90		version_1062:
71a2a0			version_1063:
71a2a0 49c7c704000000		mov	r15,dword 4
71a2a7 4d89fe			mov	r14,r15
71a2aa 488b5500			mov	rdx,[rbp]
71a2ae 4883c508			add	rbp,byte 8
71a2b2 488b4210			mov	rax,[rdx+16]
71a2b6 49c7c300000000		mov	r11,dword 0
71a2bd ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #142
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #143
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288a88				bits 64
288a88			stub_7fd31e288a88_0:
288a88 e829fa48ff		call	do_callback_handler
288a8d 31c0290200000000
------------------------------------------------------------------------
288a70				bits 64
288a70			stub_7fd31e288a70_1:
288a70 83c104			add	ecx,byte 4
288a73 90			nop
288a74			stub_7fd31e288a70_0:
288a74 e84bfd48ff		call	do_callback_cont_handler
288a79 81c0290200000000
------------------------------------------------------------------------
288a58				bits 64
288a58			stub_7fd31e288a58_1:
288a58 83c104			add	ecx,byte 4
288a5b 90			nop
288a5c			stub_7fd31e288a58_0:
288a5c e855fa48ff		call	do_callback_handler
288a61 d1c0290200000000
------------------------------------------------------------------------
71a2bf				bits 64
71a2bf 90		version_1064:
71a2c0			version_1065:
71a2c0 4989df			mov	r15,rbx
71a2c3			version_1066:
71a2c3			version_1067:
71a2c3			version_1068:
71a2c3			version_1069:
71a2c3			version_1070:
71a2c3 4c89ff			mov	rdi,r15
71a2c6 4883ef04			sub	rdi,byte 4
71a2ca 0f80b8e7b600		jo	stub_7fd31e288a88_0
71a2d0			version_1071:
71a2d0 4883ed18			sub	rbp,byte 24
71a2d4 48895d10			mov	[rbp+16],rbx
71a2d8 48897508			mov	[rbp+8],rsi
71a2dc 48c7c0e0582402		mov	rax,dword 35936480
71a2e3 48894500			mov	[rbp],rax
71a2e7 4889fb			mov	rbx,rdi
71a2ea			inlined_call_68:
71a2ea			version_1072:
71a2ea			version_1073:
71a2ea 4989df			mov	r15,rbx
71a2ed			version_1074:
71a2ed			version_1075:
71a2ed			version_1076:
71a2ed			version_1077:
71a2ed			version_1078:
71a2ed 4983ff08			cmp	r15,byte 8
71a2f1			patchable_jump68:
71a2f1 0f8d65e7b600		jge	stub_7fd31e288a58_0
71a2f7 e95ce7b600		jmp	stub_7fd31e288a58_1
>>> patching jump at 7fd31d71a299 -> 7fd31d71a2c0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #144
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #145
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a2f7				bits 64
71a2f7 90		version_1079:
71a2f8			version_1080:
71a2f8 49c7c704000000		mov	r15,dword 4
71a2ff 4d89fe			mov	r14,r15
71a302 488b5500			mov	rdx,[rbp]
71a306 4883c508			add	rbp,byte 8
71a30a 488b4210			mov	rax,[rdx+16]
71a30e 49c7c300000000		mov	r11,dword 0
71a315 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #144
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #145
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288a58				bits 64
288a58			stub_7fd31e288a58_0:
288a58 e859fa48ff		call	do_callback_handler
288a5d c1c1290200000000
------------------------------------------------------------------------
288a40				bits 64
288a40			stub_7fd31e288a40_1:
288a40 83c104			add	ecx,byte 4
288a43 90			nop
288a44			stub_7fd31e288a40_0:
288a44 e87bfd48ff		call	do_callback_cont_handler
288a49 11c2290200000000
------------------------------------------------------------------------
288a28				bits 64
288a28			stub_7fd31e288a28_1:
288a28 83c104			add	ecx,byte 4
288a2b 90			nop
288a2c			stub_7fd31e288a28_0:
288a2c e885fa48ff		call	do_callback_handler
288a31 61c2290200000000
------------------------------------------------------------------------
71a317				bits 64
71a317 90		version_1081:
71a318			version_1082:
71a318 4989df			mov	r15,rbx
71a31b			version_1083:
71a31b			version_1084:
71a31b			version_1085:
71a31b			version_1086:
71a31b			version_1087:
71a31b 4c89ff			mov	rdi,r15
71a31e 4883ef04			sub	rdi,byte 4
71a322 0f8030e7b600		jo	stub_7fd31e288a58_0
71a328			version_1088:
71a328 4883ed18			sub	rbp,byte 24
71a32c 48895d10			mov	[rbp+16],rbx
71a330 48897508			mov	[rbp+8],rsi
71a334 48c7c0e0582402		mov	rax,dword 35936480
71a33b 48894500			mov	[rbp],rax
71a33f 4889fb			mov	rbx,rdi
71a342			inlined_call_69:
71a342			version_1089:
71a342			version_1090:
71a342 4989df			mov	r15,rbx
71a345			version_1091:
71a345			version_1092:
71a345			version_1093:
71a345			version_1094:
71a345			version_1095:
71a345 4983ff08			cmp	r15,byte 8
71a349			patchable_jump69:
71a349 0f8ddde6b600		jge	stub_7fd31e288a28_0
71a34f e9d4e6b600		jmp	stub_7fd31e288a28_1
>>> patching jump at 7fd31d71a2f1 -> 7fd31d71a318
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #146
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #147
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a34f				bits 64
71a34f 90		version_1096:
71a350			version_1097:
71a350 49c7c704000000		mov	r15,dword 4
71a357 4d89fe			mov	r14,r15
71a35a 488b5500			mov	rdx,[rbp]
71a35e 4883c508			add	rbp,byte 8
71a362 488b4210			mov	rax,[rdx+16]
71a366 49c7c300000000		mov	r11,dword 0
71a36d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #146
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #147
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288a28				bits 64
288a28			stub_7fd31e288a28_0:
288a28 e889fa48ff		call	do_callback_handler
288a2d 51c3290200000000
------------------------------------------------------------------------
288a10				bits 64
288a10			stub_7fd31e288a10_1:
288a10 83c104			add	ecx,byte 4
288a13 90			nop
288a14			stub_7fd31e288a10_0:
288a14 e8abfd48ff		call	do_callback_cont_handler
288a19 a1c3290200000000
------------------------------------------------------------------------
2889f8				bits 64
2889f8			stub_7fd31e2889f8_1:
2889f8 83c104			add	ecx,byte 4
2889fb 90			nop
2889fc			stub_7fd31e2889f8_0:
2889fc e8b5fa48ff		call	do_callback_handler
288a01 f1c3290200000000
------------------------------------------------------------------------
71a36f				bits 64
71a36f 90		version_1098:
71a370			version_1099:
71a370 4989df			mov	r15,rbx
71a373			version_1100:
71a373			version_1101:
71a373			version_1102:
71a373			version_1103:
71a373			version_1104:
71a373 4c89ff			mov	rdi,r15
71a376 4883ef04			sub	rdi,byte 4
71a37a 0f80a8e6b600		jo	stub_7fd31e288a28_0
71a380			version_1105:
71a380 4883ed18			sub	rbp,byte 24
71a384 48895d10			mov	[rbp+16],rbx
71a388 48897508			mov	[rbp+8],rsi
71a38c 48c7c0e0582402		mov	rax,dword 35936480
71a393 48894500			mov	[rbp],rax
71a397 4889fb			mov	rbx,rdi
71a39a			inlined_call_70:
71a39a			version_1106:
71a39a			version_1107:
71a39a 4989df			mov	r15,rbx
71a39d			version_1108:
71a39d			version_1109:
71a39d			version_1110:
71a39d			version_1111:
71a39d			version_1112:
71a39d 4983ff08			cmp	r15,byte 8
71a3a1			patchable_jump70:
71a3a1 0f8d55e6b600		jge	stub_7fd31e2889f8_0
71a3a7 e94ce6b600		jmp	stub_7fd31e2889f8_1
>>> patching jump at 7fd31d71a349 -> 7fd31d71a370
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #148
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #149
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a3a7				bits 64
71a3a7 90		version_1113:
71a3a8			version_1114:
71a3a8 49c7c704000000		mov	r15,dword 4
71a3af 4d89fe			mov	r14,r15
71a3b2 488b5500			mov	rdx,[rbp]
71a3b6 4883c508			add	rbp,byte 8
71a3ba 488b4210			mov	rax,[rdx+16]
71a3be 49c7c300000000		mov	r11,dword 0
71a3c5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #148
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #149
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
2889f8				bits 64
2889f8			stub_7fd31e2889f8_0:
2889f8 e8b9fa48ff		call	do_callback_handler
2889fd e1c4290200000000
------------------------------------------------------------------------
2889e0				bits 64
2889e0			stub_7fd31e2889e0_1:
2889e0 83c104			add	ecx,byte 4
2889e3 90			nop
2889e4			stub_7fd31e2889e0_0:
2889e4 e8dbfd48ff		call	do_callback_cont_handler
2889e9 31c5290200000000
------------------------------------------------------------------------
2889c8				bits 64
2889c8			stub_7fd31e2889c8_1:
2889c8 83c104			add	ecx,byte 4
2889cb 90			nop
2889cc			stub_7fd31e2889c8_0:
2889cc e8e5fa48ff		call	do_callback_handler
2889d1 81c5290200000000
------------------------------------------------------------------------
71a3c7				bits 64
71a3c7 90		version_1115:
71a3c8			version_1116:
71a3c8 4989df			mov	r15,rbx
71a3cb			version_1117:
71a3cb			version_1118:
71a3cb			version_1119:
71a3cb			version_1120:
71a3cb			version_1121:
71a3cb 4c89ff			mov	rdi,r15
71a3ce 4883ef04			sub	rdi,byte 4
71a3d2 0f8020e6b600		jo	stub_7fd31e2889f8_0
71a3d8			version_1122:
71a3d8 4883ed18			sub	rbp,byte 24
71a3dc 48895d10			mov	[rbp+16],rbx
71a3e0 48897508			mov	[rbp+8],rsi
71a3e4 48c7c0e0582402		mov	rax,dword 35936480
71a3eb 48894500			mov	[rbp],rax
71a3ef 4889fb			mov	rbx,rdi
71a3f2			inlined_call_71:
71a3f2			version_1123:
71a3f2			version_1124:
71a3f2 4989df			mov	r15,rbx
71a3f5			version_1125:
71a3f5			version_1126:
71a3f5			version_1127:
71a3f5			version_1128:
71a3f5			version_1129:
71a3f5 4983ff08			cmp	r15,byte 8
71a3f9			patchable_jump71:
71a3f9 0f8dcde5b600		jge	stub_7fd31e2889c8_0
71a3ff e9c4e5b600		jmp	stub_7fd31e2889c8_1
>>> patching jump at 7fd31d71a3a1 -> 7fd31d71a3c8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #150
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #151
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a3ff				bits 64
71a3ff 90		version_1130:
71a400			version_1131:
71a400 49c7c704000000		mov	r15,dword 4
71a407 4d89fe			mov	r14,r15
71a40a 488b5500			mov	rdx,[rbp]
71a40e 4883c508			add	rbp,byte 8
71a412 488b4210			mov	rax,[rdx+16]
71a416 49c7c300000000		mov	r11,dword 0
71a41d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #150
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #151
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
2889c8				bits 64
2889c8			stub_7fd31e2889c8_0:
2889c8 e8e9fa48ff		call	do_callback_handler
2889cd 71c6290200000000
------------------------------------------------------------------------
2889b0				bits 64
2889b0			stub_7fd31e2889b0_1:
2889b0 83c104			add	ecx,byte 4
2889b3 90			nop
2889b4			stub_7fd31e2889b0_0:
2889b4 e80bfe48ff		call	do_callback_cont_handler
2889b9 c1c6290200000000
------------------------------------------------------------------------
288998				bits 64
288998			stub_7fd31e288998_1:
288998 83c104			add	ecx,byte 4
28899b 90			nop
28899c			stub_7fd31e288998_0:
28899c e815fb48ff		call	do_callback_handler
2889a1 11c7290200000000
------------------------------------------------------------------------
71a41f				bits 64
71a41f 90		version_1132:
71a420			version_1133:
71a420 4989df			mov	r15,rbx
71a423			version_1134:
71a423			version_1135:
71a423			version_1136:
71a423			version_1137:
71a423			version_1138:
71a423 4c89ff			mov	rdi,r15
71a426 4883ef04			sub	rdi,byte 4
71a42a 0f8098e5b600		jo	stub_7fd31e2889c8_0
71a430			version_1139:
71a430 4883ed18			sub	rbp,byte 24
71a434 48895d10			mov	[rbp+16],rbx
71a438 48897508			mov	[rbp+8],rsi
71a43c 48c7c0e0582402		mov	rax,dword 35936480
71a443 48894500			mov	[rbp],rax
71a447 4889fb			mov	rbx,rdi
71a44a			inlined_call_72:
71a44a			version_1140:
71a44a			version_1141:
71a44a 4989df			mov	r15,rbx
71a44d			version_1142:
71a44d			version_1143:
71a44d			version_1144:
71a44d			version_1145:
71a44d			version_1146:
71a44d 4983ff08			cmp	r15,byte 8
71a451			patchable_jump72:
71a451 0f8d45e5b600		jge	stub_7fd31e288998_0
71a457 e93ce5b600		jmp	stub_7fd31e288998_1
>>> patching jump at 7fd31d71a3f9 -> 7fd31d71a420
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #152
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #153
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a457				bits 64
71a457 90		version_1147:
71a458			version_1148:
71a458 49c7c704000000		mov	r15,dword 4
71a45f 4d89fe			mov	r14,r15
71a462 488b5500			mov	rdx,[rbp]
71a466 4883c508			add	rbp,byte 8
71a46a 488b4210			mov	rax,[rdx+16]
71a46e 49c7c300000000		mov	r11,dword 0
71a475 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #152
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #153
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288998				bits 64
288998			stub_7fd31e288998_0:
288998 e819fb48ff		call	do_callback_handler
28899d 01c8290200000000
------------------------------------------------------------------------
288980				bits 64
288980			stub_7fd31e288980_1:
288980 83c104			add	ecx,byte 4
288983 90			nop
288984			stub_7fd31e288980_0:
288984 e83bfe48ff		call	do_callback_cont_handler
288989 51c8290200000000
------------------------------------------------------------------------
288968				bits 64
288968			stub_7fd31e288968_1:
288968 83c104			add	ecx,byte 4
28896b 90			nop
28896c			stub_7fd31e288968_0:
28896c e845fb48ff		call	do_callback_handler
288971 a1c8290200000000
------------------------------------------------------------------------
71a477				bits 64
71a477 90		version_1149:
71a478			version_1150:
71a478 4989df			mov	r15,rbx
71a47b			version_1151:
71a47b			version_1152:
71a47b			version_1153:
71a47b			version_1154:
71a47b			version_1155:
71a47b 4c89ff			mov	rdi,r15
71a47e 4883ef04			sub	rdi,byte 4
71a482 0f8010e5b600		jo	stub_7fd31e288998_0
71a488			version_1156:
71a488 4883ed18			sub	rbp,byte 24
71a48c 48895d10			mov	[rbp+16],rbx
71a490 48897508			mov	[rbp+8],rsi
71a494 48c7c0e0582402		mov	rax,dword 35936480
71a49b 48894500			mov	[rbp],rax
71a49f 4889fb			mov	rbx,rdi
71a4a2			inlined_call_73:
71a4a2			version_1157:
71a4a2			version_1158:
71a4a2 4989df			mov	r15,rbx
71a4a5			version_1159:
71a4a5			version_1160:
71a4a5			version_1161:
71a4a5			version_1162:
71a4a5			version_1163:
71a4a5 4983ff08			cmp	r15,byte 8
71a4a9			patchable_jump73:
71a4a9 0f8dbde4b600		jge	stub_7fd31e288968_0
71a4af e9b4e4b600		jmp	stub_7fd31e288968_1
>>> patching jump at 7fd31d71a451 -> 7fd31d71a478
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #154
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #155
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a4af				bits 64
71a4af 90		version_1164:
71a4b0			version_1165:
71a4b0 49c7c704000000		mov	r15,dword 4
71a4b7 4d89fe			mov	r14,r15
71a4ba 488b5500			mov	rdx,[rbp]
71a4be 4883c508			add	rbp,byte 8
71a4c2 488b4210			mov	rax,[rdx+16]
71a4c6 49c7c300000000		mov	r11,dword 0
71a4cd ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #154
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #155
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288968				bits 64
288968			stub_7fd31e288968_0:
288968 e849fb48ff		call	do_callback_handler
28896d 91c9290200000000
------------------------------------------------------------------------
288950				bits 64
288950			stub_7fd31e288950_1:
288950 83c104			add	ecx,byte 4
288953 90			nop
288954			stub_7fd31e288950_0:
288954 e86bfe48ff		call	do_callback_cont_handler
288959 e1c9290200000000
------------------------------------------------------------------------
288938				bits 64
288938			stub_7fd31e288938_1:
288938 83c104			add	ecx,byte 4
28893b 90			nop
28893c			stub_7fd31e288938_0:
28893c e875fb48ff		call	do_callback_handler
288941 31ca290200000000
------------------------------------------------------------------------
71a4cf				bits 64
71a4cf 90		version_1166:
71a4d0			version_1167:
71a4d0 4989df			mov	r15,rbx
71a4d3			version_1168:
71a4d3			version_1169:
71a4d3			version_1170:
71a4d3			version_1171:
71a4d3			version_1172:
71a4d3 4c89ff			mov	rdi,r15
71a4d6 4883ef04			sub	rdi,byte 4
71a4da 0f8088e4b600		jo	stub_7fd31e288968_0
71a4e0			version_1173:
71a4e0 4883ed18			sub	rbp,byte 24
71a4e4 48895d10			mov	[rbp+16],rbx
71a4e8 48897508			mov	[rbp+8],rsi
71a4ec 48c7c0e0582402		mov	rax,dword 35936480
71a4f3 48894500			mov	[rbp],rax
71a4f7 4889fb			mov	rbx,rdi
71a4fa			inlined_call_74:
71a4fa			version_1174:
71a4fa			version_1175:
71a4fa 4989df			mov	r15,rbx
71a4fd			version_1176:
71a4fd			version_1177:
71a4fd			version_1178:
71a4fd			version_1179:
71a4fd			version_1180:
71a4fd 4983ff08			cmp	r15,byte 8
71a501			patchable_jump74:
71a501 0f8d35e4b600		jge	stub_7fd31e288938_0
71a507 e92ce4b600		jmp	stub_7fd31e288938_1
>>> patching jump at 7fd31d71a4a9 -> 7fd31d71a4d0
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #156
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #157
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a507				bits 64
71a507 90		version_1181:
71a508			version_1182:
71a508 49c7c704000000		mov	r15,dword 4
71a50f 4d89fe			mov	r14,r15
71a512 488b5500			mov	rdx,[rbp]
71a516 4883c508			add	rbp,byte 8
71a51a 488b4210			mov	rax,[rdx+16]
71a51e 49c7c300000000		mov	r11,dword 0
71a525 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #156
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #157
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288938				bits 64
288938			stub_7fd31e288938_0:
288938 e879fb48ff		call	do_callback_handler
28893d 21cb290200000000
------------------------------------------------------------------------
288920				bits 64
288920			stub_7fd31e288920_1:
288920 83c104			add	ecx,byte 4
288923 90			nop
288924			stub_7fd31e288920_0:
288924 e89bfe48ff		call	do_callback_cont_handler
288929 71cb290200000000
------------------------------------------------------------------------
288908				bits 64
288908			stub_7fd31e288908_1:
288908 83c104			add	ecx,byte 4
28890b 90			nop
28890c			stub_7fd31e288908_0:
28890c e8a5fb48ff		call	do_callback_handler
288911 c1cb290200000000
------------------------------------------------------------------------
71a527				bits 64
71a527 90		version_1183:
71a528			version_1184:
71a528 4989df			mov	r15,rbx
71a52b			version_1185:
71a52b			version_1186:
71a52b			version_1187:
71a52b			version_1188:
71a52b			version_1189:
71a52b 4c89ff			mov	rdi,r15
71a52e 4883ef04			sub	rdi,byte 4
71a532 0f8000e4b600		jo	stub_7fd31e288938_0
71a538			version_1190:
71a538 4883ed18			sub	rbp,byte 24
71a53c 48895d10			mov	[rbp+16],rbx
71a540 48897508			mov	[rbp+8],rsi
71a544 48c7c0e0582402		mov	rax,dword 35936480
71a54b 48894500			mov	[rbp],rax
71a54f 4889fb			mov	rbx,rdi
71a552			inlined_call_75:
71a552			version_1191:
71a552			version_1192:
71a552 4989df			mov	r15,rbx
71a555			version_1193:
71a555			version_1194:
71a555			version_1195:
71a555			version_1196:
71a555			version_1197:
71a555 4983ff08			cmp	r15,byte 8
71a559			patchable_jump75:
71a559 0f8dade3b600		jge	stub_7fd31e288908_0
71a55f e9a4e3b600		jmp	stub_7fd31e288908_1
>>> patching jump at 7fd31d71a501 -> 7fd31d71a528
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #158
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #159
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a55f				bits 64
71a55f 90		version_1198:
71a560			version_1199:
71a560 49c7c704000000		mov	r15,dword 4
71a567 4d89fe			mov	r14,r15
71a56a 488b5500			mov	rdx,[rbp]
71a56e 4883c508			add	rbp,byte 8
71a572 488b4210			mov	rax,[rdx+16]
71a576 49c7c300000000		mov	r11,dword 0
71a57d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #158
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #159
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
288908				bits 64
288908			stub_7fd31e288908_0:
288908 e8a9fb48ff		call	do_callback_handler
28890d b1cc290200000000
------------------------------------------------------------------------
2888f0				bits 64
2888f0			stub_7fd31e2888f0_1:
2888f0 83c104			add	ecx,byte 4
2888f3 90			nop
2888f4			stub_7fd31e2888f0_0:
2888f4 e8cbfe48ff		call	do_callback_cont_handler
2888f9 01cd290200000000
------------------------------------------------------------------------
2888d8				bits 64
2888d8			stub_7fd31e2888d8_1:
2888d8 83c104			add	ecx,byte 4
2888db 90			nop
2888dc			stub_7fd31e2888d8_0:
2888dc e8d5fb48ff		call	do_callback_handler
2888e1 51cd290200000000
------------------------------------------------------------------------
71a57f				bits 64
71a57f 90		version_1200:
71a580			version_1201:
71a580 4989df			mov	r15,rbx
71a583			version_1202:
71a583			version_1203:
71a583			version_1204:
71a583			version_1205:
71a583			version_1206:
71a583 4c89ff			mov	rdi,r15
71a586 4883ef04			sub	rdi,byte 4
71a58a 0f8078e3b600		jo	stub_7fd31e288908_0
71a590			version_1207:
71a590 4883ed18			sub	rbp,byte 24
71a594 48895d10			mov	[rbp+16],rbx
71a598 48897508			mov	[rbp+8],rsi
71a59c 48c7c0e0582402		mov	rax,dword 35936480
71a5a3 48894500			mov	[rbp],rax
71a5a7 4889fb			mov	rbx,rdi
71a5aa			inlined_call_76:
71a5aa			version_1208:
71a5aa			version_1209:
71a5aa 4989df			mov	r15,rbx
71a5ad			version_1210:
71a5ad			version_1211:
71a5ad			version_1212:
71a5ad			version_1213:
71a5ad			version_1214:
71a5ad 4983ff08			cmp	r15,byte 8
71a5b1			patchable_jump76:
71a5b1 0f8d25e3b600		jge	stub_7fd31e2888d8_0
71a5b7 e91ce3b600		jmp	stub_7fd31e2888d8_1
>>> patching jump at 7fd31d71a559 -> 7fd31d71a580
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #160
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #161
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a5b7				bits 64
71a5b7 90		version_1215:
71a5b8			version_1216:
71a5b8 49c7c704000000		mov	r15,dword 4
71a5bf 4d89fe			mov	r14,r15
71a5c2 488b5500			mov	rdx,[rbp]
71a5c6 4883c508			add	rbp,byte 8
71a5ca 488b4210			mov	rax,[rdx+16]
71a5ce 49c7c300000000		mov	r11,dword 0
71a5d5 ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #160
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #161
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
2888d8				bits 64
2888d8			stub_7fd31e2888d8_0:
2888d8 e8d9fb48ff		call	do_callback_handler
2888dd 614e2a0200000000
------------------------------------------------------------------------
2888c0				bits 64
2888c0			stub_7fd31e2888c0_1:
2888c0 83c104			add	ecx,byte 4
2888c3 90			nop
2888c4			stub_7fd31e2888c0_0:
2888c4 e8fbfe48ff		call	do_callback_cont_handler
2888c9 b14e2a0200000000
------------------------------------------------------------------------
2888a8				bits 64
2888a8			stub_7fd31e2888a8_1:
2888a8 83c104			add	ecx,byte 4
2888ab 90			nop
2888ac			stub_7fd31e2888a8_0:
2888ac e805fc48ff		call	do_callback_handler
2888b1 014f2a0200000000
------------------------------------------------------------------------
71a5d7				bits 64
71a5d7 90		version_1217:
71a5d8			version_1218:
71a5d8 4989df			mov	r15,rbx
71a5db			version_1219:
71a5db			version_1220:
71a5db			version_1221:
71a5db			version_1222:
71a5db			version_1223:
71a5db 4c89ff			mov	rdi,r15
71a5de 4883ef04			sub	rdi,byte 4
71a5e2 0f80f0e2b600		jo	stub_7fd31e2888d8_0
71a5e8			version_1224:
71a5e8 4883ed18			sub	rbp,byte 24
71a5ec 48895d10			mov	[rbp+16],rbx
71a5f0 48897508			mov	[rbp+8],rsi
71a5f4 48c7c0e0582402		mov	rax,dword 35936480
71a5fb 48894500			mov	[rbp],rax
71a5ff 4889fb			mov	rbx,rdi
71a602			inlined_call_77:
71a602			version_1225:
71a602			version_1226:
71a602 4989df			mov	r15,rbx
71a605			version_1227:
71a605			version_1228:
71a605			version_1229:
71a605			version_1230:
71a605			version_1231:
71a605 4983ff08			cmp	r15,byte 8
71a609			patchable_jump77:
71a609 0f8d9de2b600		jge	stub_7fd31e2888a8_0
71a60f e994e2b600		jmp	stub_7fd31e2888a8_1
>>> patching jump at 7fd31d71a5b1 -> 7fd31d71a5d8
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #162
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #163
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a60f				bits 64
71a60f 90		version_1232:
71a610			version_1233:
71a610 49c7c704000000		mov	r15,dword 4
71a617 4d89fe			mov	r14,r15
71a61a 488b5500			mov	rdx,[rbp]
71a61e 4883c508			add	rbp,byte 8
71a622 488b4210			mov	rax,[rdx+16]
71a626 49c7c300000000		mov	r11,dword 0
71a62d ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #2
                   ast: (($$atom fib) (($$atom -) ($$atom n0) ($$atom 1)))
                   generator: #<procedure #3>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #162
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #163
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
2888a8				bits 64
2888a8			stub_7fd31e2888a8_0:
2888a8 e809fc48ff		call	do_callback_handler
2888ad f14f2a0200000000
------------------------------------------------------------------------
288890				bits 64
288890			stub_7fd31e288890_1:
288890 83c104			add	ecx,byte 4
288893 90			nop
288894			stub_7fd31e288890_0:
288894 e82bff48ff		call	do_callback_cont_handler
288899 41502a0200000000
------------------------------------------------------------------------
288878				bits 64
288878			stub_7fd31e288878_1:
288878 83c104			add	ecx,byte 4
28887b 90			nop
28887c			stub_7fd31e288878_0:
28887c e835fc48ff		call	do_callback_handler
288881 91502a0200000000
------------------------------------------------------------------------
71a62f				bits 64
71a62f 90		version_1234:
71a630			version_1235:
71a630 4989df			mov	r15,rbx
71a633			version_1236:
71a633			version_1237:
71a633			version_1238:
71a633			version_1239:
71a633			version_1240:
71a633 4c89ff			mov	rdi,r15
71a636 4883ef04			sub	rdi,byte 4
71a63a 0f8068e2b600		jo	stub_7fd31e2888a8_0
71a640			version_1241:
71a640 4883ed18			sub	rbp,byte 24
71a644 48895d10			mov	[rbp+16],rbx
71a648 48897508			mov	[rbp+8],rsi
71a64c 48c7c0e0582402		mov	rax,dword 35936480
71a653 48894500			mov	[rbp],rax
71a657 4889fb			mov	rbx,rdi
71a65a			inlined_call_78:
71a65a			version_1242:
71a65a			version_1243:
71a65a 4989df			mov	r15,rbx
71a65d			version_1244:
71a65d			version_1245:
71a65d			version_1246:
71a65d			version_1247:
71a65d			version_1248:
71a65d 4983ff08			cmp	r15,byte 8
71a661			patchable_jump78:
71a661 0f8d15e2b600		jge	stub_7fd31e288878_0
71a667 e90ce2b600		jmp	stub_7fd31e288878_1
>>> patching jump at 7fd31d71a609 -> 7fd31d71a630
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #82
                   ast: #f
                   generator: #<procedure #83>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #164
      stack: ((int) (clo) (ret))
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #165
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
71a667				bits 64
71a667 90		version_1249:
71a668			version_1250:
71a668 49c7c704000000		mov	r15,dword 4
71a66f 4d89fe			mov	r14,r15
71a672 488b5500			mov	rdx,[rbp]
71a676 4883c508			add	rbp,byte 8
71a67a 488b4210			mov	rax,[rdx+16]
71a67e 49c7c300000000		mov	r11,dword 0
71a685 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type int and ctx:
#<ctx #166
      stack: ((int))
      slot-loc: ((0 r . 8))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
71a687				bits 64
71a687 90		continuation_3:
71a688			version_1251:
71a688 4c890c25b074fc00		mov	[+16544944],r9
71a690 4c89f0			mov	rax,r14
71a693 415f			pop	r15
71a695 415e			pop	r14
71a697 415d			pop	r13
71a699 415c			pop	r12
71a69b 415b			pop	r11
71a69d 415a			pop	r10
71a69f 4159			pop	r9
71a6a1 4158			pop	r8
71a6a3 5f			pop	rdi
71a6a4 5e			pop	rsi
71a6a5 5d			pop	rbp
71a6a6 5a			pop	rdx
71a6a7 59			pop	rcx
71a6a8 5b			pop	rbx
71a6a9 58			pop	rax
71a6aa f20f100424		movsd	xmm0,[rsp]
71a6af f20f104c2408		movsd	xmm1,[rsp+8]
71a6b5 f20f10542410		movsd	xmm2,[rsp+16]
71a6bb f20f105c2418		movsd	xmm3,[rsp+24]
71a6c1 f20f10642420		movsd	xmm4,[rsp+32]
71a6c7 f20f106c2428		movsd	xmm5,[rsp+40]
71a6cd f20f10742430		movsd	xmm6,[rsp+48]
71a6d3 f20f107c2438		movsd	xmm7,[rsp+56]
71a6d9 f2440f10442440		movsd	xmm8,[rsp+64]
71a6e0 f2440f104c2448		movsd	xmm9,[rsp+72]
71a6e7 f2440f10542450		movsd	xmm10,[rsp+80]
71a6ee f2440f105c2458		movsd	xmm11,[rsp+88]
71a6f5 f2440f10642460		movsd	xmm12,[rsp+96]
71a6fc f2440f106c2468		movsd	xmm13,[rsp+104]
71a703 f2440f10742470		movsd	xmm14,[rsp+112]
71a70a f2440f107c2478		movsd	xmm15,[rsp+120]
71a711 4881c480000000		add	rsp,128
71a718 c3			ret
(time (##machine-code-block-exec mcb))
    616 ms real time
    617 ms cpu time (617 user, 0 system)
    no collections
    no bytes allocated
    no minor faults
    no major faults
