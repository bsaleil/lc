------------------------------------------------------------------------
d4b008				bits 64
d4b008 e987000000		jmp	rtlib_skip
d4b00d			do_callback_handler:
d4b00d 57			push	rdi
d4b00e 56			push	rsi
d4b00f 52			push	rdx
d4b010 51			push	rcx
d4b011 4150			push	r8
d4b013 4151			push	r9
d4b015 4152			push	r10
d4b017 4153			push	r11
d4b019 50			push	rax
d4b01a 4889e7			mov	rdi,rsp
d4b01d 4883e4f0			and	rsp,byte -16
d4b021 4883ec08			sub	rsp,byte 8
d4b025 57			push	rdi
d4b026 e85b786d01		call	do_callback
d4b02b 5c			pop	rsp
d4b02c 58			pop	rax
d4b02d 415b			pop	r11
d4b02f 415a			pop	r10
d4b031 4159			pop	r9
d4b033 4158			pop	r8
d4b035 59			pop	rcx
d4b036 5a			pop	rdx
d4b037 5e			pop	rsi
d4b038 5f			pop	rdi
d4b039 c3			ret
d4b03a			do_callback_fn_handler:
d4b03a 57			push	rdi
d4b03b 56			push	rsi
d4b03c 52			push	rdx
d4b03d 51			push	rcx
d4b03e 4150			push	r8
d4b040 4151			push	r9
d4b042 4152			push	r10
d4b044 4153			push	r11
d4b046 50			push	rax
d4b047 4889e7			mov	rdi,rsp
d4b04a 4883e4f0			and	rsp,byte -16
d4b04e 4883ec08			sub	rsp,byte 8
d4b052 57			push	rdi
d4b053 e846796d01		call	do_callback_fn
d4b058 5c			pop	rsp
d4b059 58			pop	rax
d4b05a 415b			pop	r11
d4b05c 415a			pop	r10
d4b05e 4159			pop	r9
d4b060 4158			pop	r8
d4b062 59			pop	rcx
d4b063 5a			pop	rdx
d4b064 5e			pop	rsi
d4b065 5f			pop	rdi
d4b066 c3			ret
d4b067			do_callback_cont_handler:
d4b067 57			push	rdi
d4b068 56			push	rsi
d4b069 52			push	rdx
d4b06a 51			push	rcx
d4b06b 4150			push	r8
d4b06d 4151			push	r9
d4b06f 4152			push	r10
d4b071 4153			push	r11
d4b073 50			push	rax
d4b074 4889e7			mov	rdi,rsp
d4b077 4883e4f0			and	rsp,byte -16
d4b07b 4883ec08			sub	rsp,byte 8
d4b07f 57			push	rdi
d4b080 e8317a6d01		call	do_callback_cont
d4b085 5c			pop	rsp
d4b086 58			pop	rax
d4b087 415b			pop	r11
d4b089 415a			pop	r10
d4b08b 4159			pop	r9
d4b08d 4158			pop	r8
d4b08f 59			pop	rcx
d4b090 5a			pop	rdx
d4b091 5e			pop	rsi
d4b092 5f			pop	rdi
d4b093 c3			ret
d4b094			rtlib_skip:
d4b094 54			push	rsp
d4b095 50			push	rax
d4b096 53			push	rbx
d4b097 51			push	rcx
d4b098 52			push	rdx
d4b099 55			push	rbp
d4b09a 56			push	rsi
d4b09b 57			push	rdi
d4b09c 4150			push	r8
d4b09e 4151			push	r9
d4b0a0 4152			push	r10
d4b0a2 4153			push	r11
d4b0a4 4154			push	r12
d4b0a6 4155			push	r13
d4b0a8 4156			push	r14
d4b0aa 4157			push	r15
d4b0ac 50			push	rax
d4b0ad 53			push	rbx
d4b0ae 48b83880b730157f
d4b0b6 0000			mov	rax,139728988373048
d4b0b8 48c7c300000000		mov	rbx,dword 0
d4b0bf 488918			mov	[rax],rbx
d4b0c2 5b			pop	rbx
d4b0c3 58			pop	rax
d4b0c4 50			push	rax
d4b0c5 53			push	rbx
d4b0c6 48b84080b730157f
d4b0ce 0000			mov	rax,139728988373056
d4b0d0 48c7c300000000		mov	rbx,dword 0
d4b0d7 488918			mov	[rax],rbx
d4b0da 5b			pop	rbx
d4b0db 58			pop	rax
d4b0dc 50			push	rax
d4b0dd 53			push	rbx
d4b0de 48b84880b730157f
d4b0e6 0000			mov	rax,139728988373064
d4b0e8 48c7c300000000		mov	rbx,dword 0
d4b0ef 488918			mov	[rax],rbx
d4b0f2 5b			pop	rbx
d4b0f3 58			pop	rax
d4b0f4 50			push	rax
d4b0f5 53			push	rbx
d4b0f6 48b85080b730157f
d4b0fe 0000			mov	rax,139728988373072
d4b100 48c7c300000000		mov	rbx,dword 0
d4b107 488918			mov	[rax],rbx
d4b10a 5b			pop	rbx
d4b10b 58			pop	rax
d4b10c 50			push	rax
d4b10d 53			push	rbx
d4b10e 48b85880b730157f
d4b116 0000			mov	rax,139728988373080
d4b118 48c7c300000000		mov	rbx,dword 0
d4b11f 488918			mov	[rax],rbx
d4b122 5b			pop	rbx
d4b123 58			pop	rax
d4b124 50			push	rax
d4b125 53			push	rbx
d4b126 48b86080b730157f
d4b12e 0000			mov	rax,139728988373088
d4b130 48c7c300000000		mov	rbx,dword 0
d4b137 488918			mov	[rax],rbx
d4b13a 5b			pop	rbx
d4b13b 58			pop	rax
d4b13c 48b80880b730157f
d4b144 0000			mov	rax,139728988373000
d4b146 488920			mov	[rax],rsp
d4b149 48b908905deb117f
d4b151 0000			mov	rcx,139714939949064
d4b153 48894828			mov	[rax+40],rcx
d4b157 48c7c100000000		mov	rcx,dword 0
d4b15e 49bc0816998c137f
d4b166 0000			mov	r12,139721939949064
d4b168 49ba8080b730157f
d4b170 0000			mov	r10,139728988373120
------------------------------------------------------------------------
8bcaf8				bits 64
8bcaf8			stub_7f152e8bcaf8_0:
8bcaf8 e810e548ff		call	do_callback_handler
8bcafd 7181db0200000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #3 stack: () env: () nb-args: -1>
>>> patching jump at 7f152dd4b172 -> 7f152dd4b172
------------------------------------------------------------------------
8bcae8				bits 64
8bcae8			stub_7f152e8bcae8_1:
8bcae8 fec1			inc	cl
8bcaea			stub_7f152e8bcae8_0:
8bcaea e84be548ff		call	do_callback_fn_handler
8bcaef 7120d80200000000
(obj= #(#<procedure #4>))
------------------------------------------------------------------------
8bcad8				bits 64
8bcad8			stub_7f152e8bcad8_0:
8bcad8 e830e548ff		call	do_callback_handler
8bcadd 7143d90200000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
d4b172				bits 64
d4b172 9090		version1:
d4b174 4883c400			add	rsp,byte 0
d4b178			version2:
d4b178 48c7c0eeffffff		mov	rax,dword -18
d4b17f 498902			mov	[r10],rax
d4b182			version3:
d4b182 498d4424f0		lea	rax,[r12-16]
d4b187 49bf0880b730157f
d4b18f 0000			mov	r15,139728988373000
d4b191 493b4728			cmp	rax,[r15+40]
d4b195 7d38			jge	short alloc-ok1
d4b197 48c7c010000000		mov	rax,dword 16
d4b19e 57			push	rdi
d4b19f 56			push	rsi
d4b1a0 52			push	rdx
d4b1a1 51			push	rcx
d4b1a2 4150			push	r8
d4b1a4 4151			push	r9
d4b1a6 4152			push	r10
d4b1a8 4153			push	r11
d4b1aa 50			push	rax
d4b1ab 4889e7			mov	rdi,rsp
d4b1ae 4883e4f0			and	rsp,byte -16
d4b1b2 4883ec08			sub	rsp,byte 8
d4b1b6 57			push	rdi
d4b1b7 e8d4716d01		call	gc
d4b1bc 5c			pop	rsp
d4b1bd 4989c4			mov	r12,rax
d4b1c0 58			pop	rax
d4b1c1 415b			pop	r11
d4b1c3 415a			pop	r10
d4b1c5 4159			pop	r9
d4b1c7 4158			pop	r8
d4b1c9 59			pop	rcx
d4b1ca 5a			pop	rdx
d4b1cb 5e			pop	rsi
d4b1cc 5f			pop	rdi
d4b1cd eb04			jmp	short alloc-end1
d4b1cf			alloc-ok1:
d4b1cf 4983ec10			sub	r12,byte 16
d4b1d3			alloc-end1:
d4b1d3 48c7c076020000		mov	rax,dword 630
d4b1da 49890424			mov	[r12],rax
d4b1de 48c7c05028d802		mov	rax,dword 47720528
d4b1e5 4989442408		mov	[r12+8],rax
d4b1ea 498d442401		lea	rax,[r12+1]
d4b1ef 50			push	rax
d4b1f0			version4:
d4b1f0 58			pop	rax
d4b1f1 498902			mov	[r10],rax
d4b1f4 6aee			push	qword byte -18
d4b1f6			version5:
d4b1f6 6afe			push	qword byte -2
d4b1f8			version6:
d4b1f8 48c7c08c000000		mov	rax,dword 140
d4b1ff 50			push	rax
d4b200			version7:
d4b200 41ff32			push	qword [r10]
d4b203			version8:
d4b203			version9:
d4b203			load-ret-addr1:
d4b203 48b8d8ca8b2e157f
d4b20b 0000			mov	rax,139728951954136
d4b20d 4889442410		mov	[rsp+16],rax
d4b212			version10:
d4b212 488b0424			mov	rax,[rsp]
d4b216 49c7c3e1e3d702		mov	r11,dword 47703009
d4b21d 488b4007			mov	rax,[rax+7]
d4b221 488b4010			mov	rax,[rax+16]
d4b225 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #6
                         stack: (procedure number retAddr)
                         env: ((n . #<identifier #7
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #6
      stack: (procedure number retAddr)
      env: ((n . #<identifier #7
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
8bcac8				bits 64
8bcac8			stub_7f152e8bcac8_0:
8bcac8 e840e548ff		call	do_callback_handler
8bcacd 81e4d70200000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
8bcab8				bits 64
8bcab8			stub_7f152e8bcab8_1:
8bcab8 fec1			inc	cl
8bcaba			stub_7f152e8bcab8_0:
8bcaba e84ee548ff		call	do_callback_handler
8bcabf d1e4d70200000000
(obj= #(#<procedure #9>))
------------------------------------------------------------------------
d4b227				bits 64
d4b227 90		fn_entry_1:
d4b228			version11:
d4b228 ff742408			push	qword [rsp+8]
d4b22c			version12:
d4b22c 48c7c008000000		mov	rax,dword 8
d4b233 50			push	rax
d4b234			version13:
d4b234			version14:
d4b234			version15:
d4b234 488b442408		mov	rax,[rsp+8]
d4b239 483b0424			cmp	rax,[rsp]
d4b23d			label-jump1:
d4b23d 0f8d8518b700		jge	stub_7f152e8bcac8_0
d4b243			version16:
d4b243 4883c410			add	rsp,byte 16
d4b247 6afa			push	qword byte -6
d4b249			version17:
d4b249 58			pop	rax
d4b24a 4883f8fe			cmp	rax,byte -2
d4b24e			patchable_jump1:
d4b24e 0f846618b700		je	stub_7f152e8bcab8_0
d4b254 e95f18b700		jmp	stub_7f152e8bcab8_1
>>> patching closure 7f138c9915f9 at 7f138c991609 : slot contains now label fn_entry_1 (7f152dd4b228)
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f152dd4b23d -> 7f152dd4b259
------------------------------------------------------------------------
d4b259				bits 64
d4b259 909090		version18:
d4b25c 4883c410			add	rsp,byte 16
d4b260 6afe			push	qword byte -2
d4b262 ebe5			jmp	short version17
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #12
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f152dd4b24e -> 7f152dd4b264
------------------------------------------------------------------------
8bcaa8				bits 64
8bcaa8			stub_7f152e8bcaa8_0:
8bcaa8 e860e548ff		call	do_callback_handler
8bcaad c1e5d70200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
8bca98				bits 64
8bca98			stub_7f152e8bca98_0:
8bca98 e870e548ff		call	do_callback_handler
8bca9d 9140d90200000000
(obj= #(#<procedure #14>))
------------------------------------------------------------------------
d4b264				bits 64
d4b264			version19:
d4b264 6afe			push	qword byte -2
d4b266			version20:
d4b266 ff742410			push	qword [rsp+16]
d4b26a			version21:
d4b26a 48c7c004000000		mov	rax,dword 4
d4b271 50			push	rax
d4b272			version22:
d4b272			version23:
d4b272			version24:
d4b272 58			pop	rax
d4b273 48290424			sub	[rsp],rax
d4b277 0f802b18b700		jo	stub_7f152e8bcaa8_0
d4b27d			version25:
d4b27d 41ff32			push	qword [r10]
d4b280			version26:
d4b280			version27:
d4b280			load-ret-addr2:
d4b280 48b898ca8b2e157f
d4b288 0000			mov	rax,139728951954072
d4b28a 4889442410		mov	[rsp+16],rax
d4b28f			version28:
d4b28f 488b0424			mov	rax,[rsp]
d4b293 49c7c3e1e3d702		mov	r11,dword 47703009
d4b29a 488b4007			mov	rax,[rax+7]
d4b29e 488b4010			mov	rax,[rax+16]
d4b2a2 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #12
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f152dd4b254 -> 7f152dd4b2a4
------------------------------------------------------------------------
d4b2a4				bits 64
d4b2a4			version29:
d4b2a4 ff742408			push	qword [rsp+8]
d4b2a8			version30:
d4b2a8 58			pop	rax
d4b2a9 4883c410			add	rsp,byte 16
d4b2ad c3			ret
------------------------------------------------------------------------
8bcab8				bits 64
8bcab8			stub_7f152e8bcab8_0:
8bcab8 e850e548ff		call	do_callback_handler
8bcabd 8141d90200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
8bca88				bits 64
8bca88			stub_7f152e8bca88_0:
8bca88 e880e548ff		call	do_callback_handler
8bca8d d141d90200000000
(obj= #(#<procedure #15>))
------------------------------------------------------------------------
d4b2ae				bits 64
d4b2ae 9090		continuation_1:
d4b2b0 50			push	rax
d4b2b1			version31:
d4b2b1 6afe			push	qword byte -2
d4b2b3			version32:
d4b2b3 ff742418			push	qword [rsp+24]
d4b2b7			version33:
d4b2b7 48c7c008000000		mov	rax,dword 8
d4b2be 50			push	rax
d4b2bf			version34:
d4b2bf			version35:
d4b2bf			version36:
d4b2bf 58			pop	rax
d4b2c0 48290424			sub	[rsp],rax
d4b2c4 0f80ee17b700		jo	stub_7f152e8bcab8_0
d4b2ca			version37:
d4b2ca 41ff32			push	qword [r10]
d4b2cd			version38:
d4b2cd			version39:
d4b2cd			load-ret-addr3:
d4b2cd 48b888ca8b2e157f
d4b2d5 0000			mov	rax,139728951954056
d4b2d7 4889442410		mov	[rsp+16],rax
d4b2dc			version40:
d4b2dc 488b0424			mov	rax,[rsp]
d4b2e0 49c7c3e1e3d702		mov	r11,dword 47703009
d4b2e7 488b4007			mov	rax,[rax+7]
d4b2eb 488b4010			mov	rax,[rax+16]
d4b2ef ffe0			jmp	rax
>>> patching mov at 7f152dd4b280 : now load continuation_1 (7f152dd4b2b0)
------------------------------------------------------------------------
d4b280				bits 64
d4b280 48b8b0b2d42d157f
d4b288 0000			mov	rax,139728939954864
------------------------------------------------------------------------
8bca78				bits 64
8bca78			stub_7f152e8bca78_1:
8bca78 fec1			inc	cl
8bca7a			stub_7f152e8bca78_0:
8bca7a e88ee548ff		call	do_callback_handler
8bca7f 7142d90200000000
(obj= #(#<procedure #16>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
d4b2f1				bits 64
d4b2f1 909090		continuation_2:
d4b2f4 50			push	rax
d4b2f5			version41:
d4b2f5 48c7c003000000		mov	rax,dword 3
d4b2fc 4823442408		and	rax,[rsp+8]
d4b301			patchable_jump2:
d4b301 0f847317b700		je	stub_7f152e8bca78_0
d4b307 e96c17b700		jmp	stub_7f152e8bca78_1
>>> patching mov at 7f152dd4b2cd : now load continuation_2 (7f152dd4b2f4)
------------------------------------------------------------------------
d4b2cd				bits 64
d4b2cd 48b8f4b2d42d157f
d4b2d5 0000			mov	rax,139728939954932
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f152dd4b301 -> 7f152e8bca78
GEN VERSION >>> #<ctx #17
                      stack: (unknown number procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
8bca68				bits 64
8bca68			stub_7f152e8bca68_1:
8bca68 fec1			inc	cl
8bca6a			stub_7f152e8bca68_0:
8bca6a e89ee548ff		call	do_callback_handler
8bca6f 317cdb0200000000
(obj= #(#<procedure #18>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
d4b307				bits 64
d4b307 90		version42:
d4b308 48c7c003000000		mov	rax,dword 3
d4b30f 48230424			and	rax,[rsp]
d4b313			patchable_jump3:
d4b313 0f845117b700		je	stub_7f152e8bca68_0
d4b319 e94a17b700		jmp	stub_7f152e8bca68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f152dd4b313 -> 7f152e8bca68
GEN VERSION >>> #<ctx #19
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
d4b319				bits 64
d4b319 909090		version43:
d4b31c 58			pop	rax
d4b31d 48010424			add	[rsp],rax
d4b321 0f80d117b700		jo	stub_7f152e8bcaf8_0
d4b327			version44:
d4b327 58			pop	rax
d4b328 4883c410			add	rsp,byte 16
d4b32c c3			ret
------------------------------------------------------------------------
d4b32d				bits 64
d4b32d 909090		continuation_3:
d4b330 50			push	rax
d4b331			version45:
d4b331 58			pop	rax
d4b332 4883c408			add	rsp,byte 8
d4b336 415f			pop	r15
d4b338 415e			pop	r14
d4b33a 415d			pop	r13
d4b33c 415c			pop	r12
d4b33e 415b			pop	r11
d4b340 415a			pop	r10
d4b342 4159			pop	r9
d4b344 4158			pop	r8
d4b346 5f			pop	rdi
d4b347 5e			pop	rsi
d4b348 5d			pop	rbp
d4b349 5a			pop	rdx
d4b34a 59			pop	rcx
d4b34b 5b			pop	rbx
d4b34c 58			pop	rax
d4b34d 5c			pop	rsp
d4b34e c3			ret
>>> patching mov at 7f152dd4b203 : now load continuation_3 (7f152dd4b330)
------------------------------------------------------------------------
d4b203				bits 64
d4b203 48b830b3d42d157f
d4b20b 0000			mov	rax,139728939954992
