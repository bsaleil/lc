------------------------------------------------------------------------
c7f008				bits 64
c7f008 e987000000		jmp	rtlib_skip
c7f00d			do_callback_handler:
c7f00d 57			push	rdi
c7f00e 56			push	rsi
c7f00f 52			push	rdx
c7f010 51			push	rcx
c7f011 4150			push	r8
c7f013 4151			push	r9
c7f015 4152			push	r10
c7f017 4153			push	r11
c7f019 50			push	rax
c7f01a 4889e7			mov	rdi,rsp
c7f01d 4883e4f0			and	rsp,byte -16
c7f021 4883ec08			sub	rsp,byte 8
c7f025 57			push	rdi
c7f026 e838746d01		call	do_callback
c7f02b 5c			pop	rsp
c7f02c 58			pop	rax
c7f02d 415b			pop	r11
c7f02f 415a			pop	r10
c7f031 4159			pop	r9
c7f033 4158			pop	r8
c7f035 59			pop	rcx
c7f036 5a			pop	rdx
c7f037 5e			pop	rsi
c7f038 5f			pop	rdi
c7f039 c3			ret
c7f03a			do_callback_fn_handler:
c7f03a 57			push	rdi
c7f03b 56			push	rsi
c7f03c 52			push	rdx
c7f03d 51			push	rcx
c7f03e 4150			push	r8
c7f040 4151			push	r9
c7f042 4152			push	r10
c7f044 4153			push	r11
c7f046 50			push	rax
c7f047 4889e7			mov	rdi,rsp
c7f04a 4883e4f0			and	rsp,byte -16
c7f04e 4883ec08			sub	rsp,byte 8
c7f052 57			push	rdi
c7f053 e823756d01		call	do_callback_fn
c7f058 5c			pop	rsp
c7f059 58			pop	rax
c7f05a 415b			pop	r11
c7f05c 415a			pop	r10
c7f05e 4159			pop	r9
c7f060 4158			pop	r8
c7f062 59			pop	rcx
c7f063 5a			pop	rdx
c7f064 5e			pop	rsi
c7f065 5f			pop	rdi
c7f066 c3			ret
c7f067			do_callback_cont_handler:
c7f067 57			push	rdi
c7f068 56			push	rsi
c7f069 52			push	rdx
c7f06a 51			push	rcx
c7f06b 4150			push	r8
c7f06d 4151			push	r9
c7f06f 4152			push	r10
c7f071 4153			push	r11
c7f073 50			push	rax
c7f074 4889e7			mov	rdi,rsp
c7f077 4883e4f0			and	rsp,byte -16
c7f07b 4883ec08			sub	rsp,byte 8
c7f07f 57			push	rdi
c7f080 e80e766d01		call	do_callback_cont
c7f085 5c			pop	rsp
c7f086 58			pop	rax
c7f087 415b			pop	r11
c7f089 415a			pop	r10
c7f08b 4159			pop	r9
c7f08d 4158			pop	r8
c7f08f 59			pop	rcx
c7f090 5a			pop	rdx
c7f091 5e			pop	rsi
c7f092 5f			pop	rdi
c7f093 c3			ret
c7f094			rtlib_skip:
c7f094 54			push	rsp
c7f095 50			push	rax
c7f096 53			push	rbx
c7f097 51			push	rcx
c7f098 52			push	rdx
c7f099 55			push	rbp
c7f09a 56			push	rsi
c7f09b 57			push	rdi
c7f09c 4150			push	r8
c7f09e 4151			push	r9
c7f0a0 4152			push	r10
c7f0a2 4153			push	r11
c7f0a4 4154			push	r12
c7f0a6 4155			push	r13
c7f0a8 4156			push	r14
c7f0aa 4157			push	r15
c7f0ac 50			push	rax
c7f0ad 53			push	rbx
c7f0ae 48b83880aa4e767f
c7f0b6 0000			mov	rax,140146102665272
c7f0b8 48c7c300000000		mov	rbx,dword 0
c7f0bf 488918			mov	[rax],rbx
c7f0c2 5b			pop	rbx
c7f0c3 58			pop	rax
c7f0c4 50			push	rax
c7f0c5 53			push	rbx
c7f0c6 48b84080aa4e767f
c7f0ce 0000			mov	rax,140146102665280
c7f0d0 48c7c300000000		mov	rbx,dword 0
c7f0d7 488918			mov	[rax],rbx
c7f0da 5b			pop	rbx
c7f0db 58			pop	rax
c7f0dc 50			push	rax
c7f0dd 53			push	rbx
c7f0de 48b84880aa4e767f
c7f0e6 0000			mov	rax,140146102665288
c7f0e8 48c7c300000000		mov	rbx,dword 0
c7f0ef 488918			mov	[rax],rbx
c7f0f2 5b			pop	rbx
c7f0f3 58			pop	rax
c7f0f4 50			push	rax
c7f0f5 53			push	rbx
c7f0f6 48b85080aa4e767f
c7f0fe 0000			mov	rax,140146102665296
c7f100 48c7c300000000		mov	rbx,dword 0
c7f107 488918			mov	[rax],rbx
c7f10a 5b			pop	rbx
c7f10b 58			pop	rax
c7f10c 50			push	rax
c7f10d 53			push	rbx
c7f10e 48b85880aa4e767f
c7f116 0000			mov	rax,140146102665304
c7f118 48c7c300000000		mov	rbx,dword 0
c7f11f 488918			mov	[rax],rbx
c7f122 5b			pop	rbx
c7f123 58			pop	rax
c7f124 50			push	rax
c7f125 53			push	rbx
c7f126 48b86080aa4e767f
c7f12e 0000			mov	rax,140146102665312
c7f130 48c7c300000000		mov	rbx,dword 0
c7f137 488918			mov	[rax],rbx
c7f13a 5b			pop	rbx
c7f13b 58			pop	rax
c7f13c 48b80880aa4e767f
c7f144 0000			mov	rax,140146102665224
c7f146 488920			mov	[rax],rsp
c7f149 48b908d05009737f
c7f151 0000			mov	rcx,140132054257672
c7f153 48894828			mov	[rax+40],rcx
c7f157 48c7c100000000		mov	rcx,dword 0
c7f15e 49bc08568caa747f
c7f166 0000			mov	r12,140139054257672
c7f168 49ba8080aa4e767f
c7f170 0000			mov	r10,140146102665344
------------------------------------------------------------------------
7f0af8				bits 64
7f0af8			stub_7f764c7f0af8_0:
7f0af8 e810e548ff		call	do_callback_handler
7f0afd 0193890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0ae8				bits 64
7f0ae8			stub_7f764c7f0ae8_0:
7f0ae8 e820e548ff		call	do_callback_handler
7f0aed b140860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0ad8				bits 64
7f0ad8			stub_7f764c7f0ad8_0:
7f0ad8 e830e548ff		call	do_callback_handler
7f0add d160870100000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
7f0ac8				bits 64
7f0ac8			stub_7f764c7f0ac8_0:
7f0ac8 e840e548ff		call	do_callback_handler
7f0acd 2161870100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0ab8				bits 64
7f0ab8			stub_7f764c7f0ab8_0:
7f0ab8 e850e548ff		call	do_callback_handler
7f0abd 7161870100000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
7f0aa8				bits 64
7f0aa8			stub_7f764c7f0aa8_0:
7f0aa8 e860e548ff		call	do_callback_handler
7f0aad c161870100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a98				bits 64
7f0a98			stub_7f764c7f0a98_0:
7f0a98 e870e548ff		call	do_callback_handler
7f0a9d 1162870100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a88				bits 64
7f0a88			stub_7f764c7f0a88_0:
7f0a88 e880e548ff		call	do_callback_handler
7f0a8d 6162870100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a78				bits 64
7f0a78			stub_7f764c7f0a78_0:
7f0a78 e890e548ff		call	do_callback_handler
7f0a7d b162870100000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
7f0a68				bits 64
7f0a68			stub_7f764c7f0a68_0:
7f0a68 e8a0e548ff		call	do_callback_handler
7f0a6d 0163870100000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
7f0a58				bits 64
7f0a58			stub_7f764c7f0a58_0:
7f0a58 e8b0e548ff		call	do_callback_handler
7f0a5d b193890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a48				bits 64
7f0a48			stub_7f764c7f0a48_0:
7f0a48 e8c0e548ff		call	do_callback_handler
7f0a4d 0194890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a38				bits 64
7f0a38			stub_7f764c7f0a38_0:
7f0a38 e8d0e548ff		call	do_callback_handler
7f0a3d 5194890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a28				bits 64
7f0a28			stub_7f764c7f0a28_0:
7f0a28 e8e0e548ff		call	do_callback_handler
7f0a2d a194890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a18				bits 64
7f0a18			stub_7f764c7f0a18_0:
7f0a18 e8f0e548ff		call	do_callback_handler
7f0a1d 5193890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0a08				bits 64
7f0a08			stub_7f764c7f0a08_0:
7f0a08 e800e648ff		call	do_callback_handler
7f0a0d b163870100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09f8				bits 64
7f09f8			stub_7f764c7f09f8_0:
7f09f8 e810e648ff		call	do_callback_handler
7f09fd 2104860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09e8				bits 64
7f09e8			stub_7f764c7f09e8_0:
7f09e8 e820e648ff		call	do_callback_handler
7f09ed 7104860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09d8				bits 64
7f09d8			stub_7f764c7f09d8_0:
7f09d8 e830e648ff		call	do_callback_handler
7f09dd c104860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09c8				bits 64
7f09c8			stub_7f764c7f09c8_0:
7f09c8 e840e648ff		call	do_callback_handler
7f09cd 1105860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09b8				bits 64
7f09b8			stub_7f764c7f09b8_0:
7f09b8 e850e648ff		call	do_callback_handler
7f09bd 6105860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f09a8				bits 64
7f09a8			stub_7f764c7f09a8_0:
7f09a8 e860e648ff		call	do_callback_handler
7f09ad b105860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0998				bits 64
7f0998			stub_7f764c7f0998_0:
7f0998 e870e648ff		call	do_callback_handler
7f099d 0106860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0988				bits 64
7f0988			stub_7f764c7f0988_0:
7f0988 e880e648ff		call	do_callback_handler
7f098d f194890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0978				bits 64
7f0978			stub_7f764c7f0978_0:
7f0978 e890e648ff		call	do_callback_handler
7f097d 4195890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0968				bits 64
7f0968			stub_7f764c7f0968_0:
7f0968 e8a0e648ff		call	do_callback_handler
7f096d 9195890100000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
7f0958				bits 64
7f0958			stub_7f764c7f0958_0:
7f0958 e8b0e648ff		call	do_callback_handler
7f095d e195890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0948				bits 64
7f0948			stub_7f764c7f0948_0:
7f0948 e8c0e648ff		call	do_callback_handler
7f094d 3196890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0938				bits 64
7f0938			stub_7f764c7f0938_0:
7f0938 e8d0e648ff		call	do_callback_handler
7f093d 8196890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0928				bits 64
7f0928			stub_7f764c7f0928_0:
7f0928 e8e0e648ff		call	do_callback_handler
7f092d d196890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0918				bits 64
7f0918			stub_7f764c7f0918_0:
7f0918 e8f0e648ff		call	do_callback_handler
7f091d 2197890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0908				bits 64
7f0908			stub_7f764c7f0908_0:
7f0908 e800e748ff		call	do_callback_handler
7f090d 7197890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08f8				bits 64
7f08f8			stub_7f764c7f08f8_0:
7f08f8 e810e748ff		call	do_callback_handler
7f08fd c197890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08e8				bits 64
7f08e8			stub_7f764c7f08e8_0:
7f08e8 e820e748ff		call	do_callback_handler
7f08ed 1198890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08d8				bits 64
7f08d8			stub_7f764c7f08d8_0:
7f08d8 e830e748ff		call	do_callback_handler
7f08dd 6198890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08c8				bits 64
7f08c8			stub_7f764c7f08c8_0:
7f08c8 e840e748ff		call	do_callback_handler
7f08cd b198890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08b8				bits 64
7f08b8			stub_7f764c7f08b8_0:
7f08b8 e850e748ff		call	do_callback_handler
7f08bd 0199890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f08a8				bits 64
7f08a8			stub_7f764c7f08a8_0:
7f08a8 e860e748ff		call	do_callback_handler
7f08ad 5199890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0898				bits 64
7f0898			stub_7f764c7f0898_0:
7f0898 e870e748ff		call	do_callback_handler
7f089d a199890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0888				bits 64
7f0888			stub_7f764c7f0888_0:
7f0888 e880e748ff		call	do_callback_handler
7f088d 6103860100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0878				bits 64
7f0878			stub_7f764c7f0878_0:
7f0878 e890e748ff		call	do_callback_handler
7f087d a19a890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0868				bits 64
7f0868			stub_7f764c7f0868_0:
7f0868 e8a0e748ff		call	do_callback_handler
7f086d f19a890100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0858				bits 64
7f0858			stub_7f764c7f0858_0:
7f0858 e8b0e748ff		call	do_callback_handler
7f085d 419b890100000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #4 stack: () env: () nb-args: -1>
>>> patching jump at 7f764bc7f172 -> 7f764bc7f172
------------------------------------------------------------------------
7f0848				bits 64
7f0848			stub_7f764c7f0848_1:
7f0848 fec1			inc	cl
7f084a			stub_7f764c7f0848_0:
7f084a e8ebe748ff		call	do_callback_fn_handler
7f084f 919b890100000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
7f0838				bits 64
7f0838			stub_7f764c7f0838_1:
7f0838 fec1			inc	cl
7f083a			stub_7f764c7f0838_0:
7f083a e8fbe748ff		call	do_callback_fn_handler
7f083f 619c890100000000
(obj= #(#<procedure #6>))
------------------------------------------------------------------------
7f0828				bits 64
7f0828			stub_7f764c7f0828_1:
7f0828 fec1			inc	cl
7f082a			stub_7f764c7f0828_0:
7f082a e80be848ff		call	do_callback_fn_handler
7f082f b19c890100000000
(obj= #(#<procedure #7>))
------------------------------------------------------------------------
7f0818				bits 64
7f0818			stub_7f764c7f0818_1:
7f0818 fec1			inc	cl
7f081a			stub_7f764c7f0818_0:
7f081a e81be848ff		call	do_callback_fn_handler
7f081f 019d890100000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
7f0808				bits 64
7f0808			stub_7f764c7f0808_1:
7f0808 fec1			inc	cl
7f080a			stub_7f764c7f0808_0:
7f080a e82be848ff		call	do_callback_fn_handler
7f080f 519d890100000000
(obj= #(#<procedure #9>))
------------------------------------------------------------------------
7f07f8				bits 64
7f07f8			stub_7f764c7f07f8_1:
7f07f8 fec1			inc	cl
7f07fa			stub_7f764c7f07f8_0:
7f07fa e83be848ff		call	do_callback_fn_handler
7f07ff a19d890100000000
(obj= #(#<procedure #10>))
------------------------------------------------------------------------
7f07e8				bits 64
7f07e8			stub_7f764c7f07e8_1:
7f07e8 fec1			inc	cl
7f07ea			stub_7f764c7f07e8_0:
7f07ea e84be848ff		call	do_callback_fn_handler
7f07ef f19d890100000000
(obj= #(#<procedure #11>))
------------------------------------------------------------------------
7f07d8				bits 64
7f07d8			stub_7f764c7f07d8_1:
7f07d8 fec1			inc	cl
7f07da			stub_7f764c7f07d8_0:
7f07da e85be848ff		call	do_callback_fn_handler
7f07df 419e890100000000
(obj= #(#<procedure #12>))
------------------------------------------------------------------------
7f07c8				bits 64
7f07c8			stub_7f764c7f07c8_1:
7f07c8 fec1			inc	cl
7f07ca			stub_7f764c7f07c8_0:
7f07ca e86be848ff		call	do_callback_fn_handler
7f07cf 919e890100000000
(obj= #(#<procedure #13>))
------------------------------------------------------------------------
7f07b8				bits 64
7f07b8			stub_7f764c7f07b8_1:
7f07b8 fec1			inc	cl
7f07ba			stub_7f764c7f07b8_0:
7f07ba e87be848ff		call	do_callback_fn_handler
7f07bf e19e890100000000
(obj= #(#<procedure #14>))
------------------------------------------------------------------------
7f07a8				bits 64
7f07a8			stub_7f764c7f07a8_1:
7f07a8 fec1			inc	cl
7f07aa			stub_7f764c7f07a8_0:
7f07aa e88be848ff		call	do_callback_fn_handler
7f07af 319f890100000000
(obj= #(#<procedure #15>))
------------------------------------------------------------------------
7f0798				bits 64
7f0798			stub_7f764c7f0798_1:
7f0798 fec1			inc	cl
7f079a			stub_7f764c7f0798_0:
7f079a e89be848ff		call	do_callback_fn_handler
7f079f e1f7860100000000
(obj= #(#<procedure #16>))
------------------------------------------------------------------------
7f0788				bits 64
7f0788			stub_7f764c7f0788_1:
7f0788 fec1			inc	cl
7f078a			stub_7f764c7f0788_0:
7f078a e8abe848ff		call	do_callback_fn_handler
7f078f 31f8860100000000
(obj= #(#<procedure #17>))
------------------------------------------------------------------------
7f0778				bits 64
7f0778			stub_7f764c7f0778_1:
7f0778 fec1			inc	cl
7f077a			stub_7f764c7f0778_0:
7f077a e8bbe848ff		call	do_callback_fn_handler
7f077f 81f8860100000000
(obj= #(#<procedure #18>))
------------------------------------------------------------------------
7f0768				bits 64
7f0768			stub_7f764c7f0768_1:
7f0768 fec1			inc	cl
7f076a			stub_7f764c7f0768_0:
7f076a e8cbe848ff		call	do_callback_fn_handler
7f076f d1f8860100000000
(obj= #(#<procedure #19>))
------------------------------------------------------------------------
7f0758				bits 64
7f0758			stub_7f764c7f0758_1:
7f0758 fec1			inc	cl
7f075a			stub_7f764c7f0758_0:
7f075a e8dbe848ff		call	do_callback_fn_handler
7f075f 21f9860100000000
(obj= #(#<procedure #20>))
------------------------------------------------------------------------
7f0748				bits 64
7f0748			stub_7f764c7f0748_1:
7f0748 fec1			inc	cl
7f074a			stub_7f764c7f0748_0:
7f074a e8ebe848ff		call	do_callback_fn_handler
7f074f 71f9860100000000
(obj= #(#<procedure #21>))
------------------------------------------------------------------------
7f0738				bits 64
7f0738			stub_7f764c7f0738_1:
7f0738 fec1			inc	cl
7f073a			stub_7f764c7f0738_0:
7f073a e8fbe848ff		call	do_callback_fn_handler
7f073f c1f9860100000000
(obj= #(#<procedure #22>))
------------------------------------------------------------------------
7f0728				bits 64
7f0728			stub_7f764c7f0728_1:
7f0728 fec1			inc	cl
7f072a			stub_7f764c7f0728_0:
7f072a e80be948ff		call	do_callback_fn_handler
7f072f 11fa860100000000
(obj= #(#<procedure #23>))
------------------------------------------------------------------------
7f0718				bits 64
7f0718			stub_7f764c7f0718_1:
7f0718 fec1			inc	cl
7f071a			stub_7f764c7f0718_0:
7f071a e81be948ff		call	do_callback_fn_handler
7f071f 61fa860100000000
(obj= #(#<procedure #24>))
------------------------------------------------------------------------
7f0708				bits 64
7f0708			stub_7f764c7f0708_1:
7f0708 fec1			inc	cl
7f070a			stub_7f764c7f0708_0:
7f070a e82be948ff		call	do_callback_fn_handler
7f070f b1fa860100000000
(obj= #(#<procedure #25>))
------------------------------------------------------------------------
7f06f8				bits 64
7f06f8			stub_7f764c7f06f8_1:
7f06f8 fec1			inc	cl
7f06fa			stub_7f764c7f06f8_0:
7f06fa e83be948ff		call	do_callback_fn_handler
7f06ff 01fb860100000000
(obj= #(#<procedure #26>))
------------------------------------------------------------------------
7f06e8				bits 64
7f06e8			stub_7f764c7f06e8_1:
7f06e8 fec1			inc	cl
7f06ea			stub_7f764c7f06e8_0:
7f06ea e84be948ff		call	do_callback_fn_handler
7f06ef 51fb860100000000
(obj= #(#<procedure #27>))
------------------------------------------------------------------------
7f06d8				bits 64
7f06d8			stub_7f764c7f06d8_1:
7f06d8 fec1			inc	cl
7f06da			stub_7f764c7f06d8_0:
7f06da e85be948ff		call	do_callback_fn_handler
7f06df a1fb860100000000
(obj= #(#<procedure #28>))
------------------------------------------------------------------------
7f06c8				bits 64
7f06c8			stub_7f764c7f06c8_1:
7f06c8 fec1			inc	cl
7f06ca			stub_7f764c7f06c8_0:
7f06ca e86be948ff		call	do_callback_fn_handler
7f06cf f1fb860100000000
(obj= #(#<procedure #29>))
------------------------------------------------------------------------
7f06b8				bits 64
7f06b8			stub_7f764c7f06b8_1:
7f06b8 fec1			inc	cl
7f06ba			stub_7f764c7f06b8_0:
7f06ba e87be948ff		call	do_callback_fn_handler
7f06bf 41fc860100000000
(obj= #(#<procedure #30>))
------------------------------------------------------------------------
7f06a8				bits 64
7f06a8			stub_7f764c7f06a8_1:
7f06a8 fec1			inc	cl
7f06aa			stub_7f764c7f06a8_0:
7f06aa e88be948ff		call	do_callback_fn_handler
7f06af 91fc860100000000
(obj= #(#<procedure #31>))
------------------------------------------------------------------------
7f0698				bits 64
7f0698			stub_7f764c7f0698_1:
7f0698 fec1			inc	cl
7f069a			stub_7f764c7f0698_0:
7f069a e89be948ff		call	do_callback_fn_handler
7f069f e1fc860100000000
(obj= #(#<procedure #32>))
------------------------------------------------------------------------
7f0688				bits 64
7f0688			stub_7f764c7f0688_1:
7f0688 fec1			inc	cl
7f068a			stub_7f764c7f0688_0:
7f068a e8abe948ff		call	do_callback_fn_handler
7f068f 819f890100000000
(obj= #(#<procedure #33>))
------------------------------------------------------------------------
7f0678				bits 64
7f0678			stub_7f764c7f0678_1:
7f0678 fec1			inc	cl
7f067a			stub_7f764c7f0678_0:
7f067a e8bbe948ff		call	do_callback_fn_handler
7f067f d19f890100000000
(obj= #(#<procedure #34>))
------------------------------------------------------------------------
7f0668				bits 64
7f0668			stub_7f764c7f0668_1:
7f0668 fec1			inc	cl
7f066a			stub_7f764c7f0668_0:
7f066a e8cbe948ff		call	do_callback_fn_handler
7f066f 21a0890100000000
(obj= #(#<procedure #35>))
------------------------------------------------------------------------
7f0658				bits 64
7f0658			stub_7f764c7f0658_1:
7f0658 fec1			inc	cl
7f065a			stub_7f764c7f0658_0:
7f065a e8dbe948ff		call	do_callback_fn_handler
7f065f 71a0890100000000
(obj= #(#<procedure #36>))
------------------------------------------------------------------------
7f0648				bits 64
7f0648			stub_7f764c7f0648_1:
7f0648 fec1			inc	cl
7f064a			stub_7f764c7f0648_0:
7f064a e8ebe948ff		call	do_callback_fn_handler
7f064f c1a0890100000000
(obj= #(#<procedure #37>))
------------------------------------------------------------------------
7f0638				bits 64
7f0638			stub_7f764c7f0638_1:
7f0638 fec1			inc	cl
7f063a			stub_7f764c7f0638_0:
7f063a e8fbe948ff		call	do_callback_fn_handler
7f063f 11a1890100000000
(obj= #(#<procedure #38>))
------------------------------------------------------------------------
7f0628				bits 64
7f0628			stub_7f764c7f0628_1:
7f0628 fec1			inc	cl
7f062a			stub_7f764c7f0628_0:
7f062a e80bea48ff		call	do_callback_fn_handler
7f062f 61a1890100000000
(obj= #(#<procedure #39>))
------------------------------------------------------------------------
7f0618				bits 64
7f0618			stub_7f764c7f0618_1:
7f0618 fec1			inc	cl
7f061a			stub_7f764c7f0618_0:
7f061a e81bea48ff		call	do_callback_fn_handler
7f061f b1a1890100000000
(obj= #(#<procedure #40>))
------------------------------------------------------------------------
7f0608				bits 64
7f0608			stub_7f764c7f0608_1:
7f0608 fec1			inc	cl
7f060a			stub_7f764c7f0608_0:
7f060a e82bea48ff		call	do_callback_fn_handler
7f060f 01a2890100000000
(obj= #(#<procedure #41>))
------------------------------------------------------------------------
7f05f8				bits 64
7f05f8			stub_7f764c7f05f8_1:
7f05f8 fec1			inc	cl
7f05fa			stub_7f764c7f05f8_0:
7f05fa e83bea48ff		call	do_callback_fn_handler
7f05ff 51a2890100000000
(obj= #(#<procedure #42>))
------------------------------------------------------------------------
7f05e8				bits 64
7f05e8			stub_7f764c7f05e8_1:
7f05e8 fec1			inc	cl
7f05ea			stub_7f764c7f05e8_0:
7f05ea e84bea48ff		call	do_callback_fn_handler
7f05ef a1a2890100000000
(obj= #(#<procedure #43>))
------------------------------------------------------------------------
7f05d8				bits 64
7f05d8			stub_7f764c7f05d8_1:
7f05d8 fec1			inc	cl
7f05da			stub_7f764c7f05d8_0:
7f05da e85bea48ff		call	do_callback_fn_handler
7f05df f1a2890100000000
(obj= #(#<procedure #44>))
------------------------------------------------------------------------
7f05c8				bits 64
7f05c8			stub_7f764c7f05c8_1:
7f05c8 fec1			inc	cl
7f05ca			stub_7f764c7f05c8_0:
7f05ca e86bea48ff		call	do_callback_fn_handler
7f05cf 41a3890100000000
(obj= #(#<procedure #45>))
------------------------------------------------------------------------
7f05b8				bits 64
7f05b8			stub_7f764c7f05b8_1:
7f05b8 fec1			inc	cl
7f05ba			stub_7f764c7f05b8_0:
7f05ba e87bea48ff		call	do_callback_fn_handler
7f05bf 91a3890100000000
(obj= #(#<procedure #46>))
------------------------------------------------------------------------
7f05a8				bits 64
7f05a8			stub_7f764c7f05a8_1:
7f05a8 fec1			inc	cl
7f05aa			stub_7f764c7f05a8_0:
7f05aa e88bea48ff		call	do_callback_fn_handler
7f05af e1a3890100000000
(obj= #(#<procedure #47>))
------------------------------------------------------------------------
7f0598				bits 64
7f0598			stub_7f764c7f0598_1:
7f0598 fec1			inc	cl
7f059a			stub_7f764c7f0598_0:
7f059a e89bea48ff		call	do_callback_fn_handler
7f059f 31a4890100000000
(obj= #(#<procedure #48>))
------------------------------------------------------------------------
7f0588				bits 64
7f0588			stub_7f764c7f0588_1:
7f0588 fec1			inc	cl
7f058a			stub_7f764c7f0588_0:
7f058a e8abea48ff		call	do_callback_fn_handler
7f058f 81a4890100000000
(obj= #(#<procedure #49>))
------------------------------------------------------------------------
7f0578				bits 64
7f0578			stub_7f764c7f0578_1:
7f0578 fec1			inc	cl
7f057a			stub_7f764c7f0578_0:
7f057a e8bbea48ff		call	do_callback_fn_handler
7f057f 3145fc0100000000
(obj= #(#<procedure #50>))
------------------------------------------------------------------------
7f0568				bits 64
7f0568			stub_7f764c7f0568_1:
7f0568 fec1			inc	cl
7f056a			stub_7f764c7f0568_0:
7f056a e8cbea48ff		call	do_callback_fn_handler
7f056f 7155fc0100000000
(obj= #(#<procedure #51>))
------------------------------------------------------------------------
7f0558				bits 64
7f0558			stub_7f764c7f0558_1:
7f0558 fec1			inc	cl
7f055a			stub_7f764c7f0558_0:
7f055a e8dbea48ff		call	do_callback_fn_handler
7f055f b165fc0100000000
(obj= #(#<procedure #52>))
------------------------------------------------------------------------
7f0548				bits 64
7f0548			stub_7f764c7f0548_1:
7f0548 fec1			inc	cl
7f054a			stub_7f764c7f0548_0:
7f054a e8ebea48ff		call	do_callback_fn_handler
7f054f f175fc0100000000
(obj= #(#<procedure #53>))
------------------------------------------------------------------------
7f0538				bits 64
7f0538			stub_7f764c7f0538_1:
7f0538 fec1			inc	cl
7f053a			stub_7f764c7f0538_0:
7f053a e8fbea48ff		call	do_callback_fn_handler
7f053f 3186fc0100000000
(obj= #(#<procedure #54>))
------------------------------------------------------------------------
7f0528				bits 64
7f0528			stub_7f764c7f0528_1:
7f0528 fec1			inc	cl
7f052a			stub_7f764c7f0528_0:
7f052a e80beb48ff		call	do_callback_fn_handler
7f052f 7196fc0100000000
(obj= #(#<procedure #55>))
------------------------------------------------------------------------
7f0518				bits 64
7f0518			stub_7f764c7f0518_1:
7f0518 fec1			inc	cl
7f051a			stub_7f764c7f0518_0:
7f051a e81beb48ff		call	do_callback_fn_handler
7f051f b1a6fc0100000000
(obj= #(#<procedure #56>))
------------------------------------------------------------------------
7f0508				bits 64
7f0508			stub_7f764c7f0508_1:
7f0508 fec1			inc	cl
7f050a			stub_7f764c7f0508_0:
7f050a e82beb48ff		call	do_callback_fn_handler
7f050f f1b6fc0100000000
(obj= #(#<procedure #57>))
------------------------------------------------------------------------
7f04f8				bits 64
7f04f8			stub_7f764c7f04f8_1:
7f04f8 fec1			inc	cl
7f04fa			stub_7f764c7f04f8_0:
7f04fa e83beb48ff		call	do_callback_fn_handler
7f04ff 31c7fc0100000000
(obj= #(#<procedure #58>))
------------------------------------------------------------------------
7f04e8				bits 64
7f04e8			stub_7f764c7f04e8_1:
7f04e8 fec1			inc	cl
7f04ea			stub_7f764c7f04e8_0:
7f04ea e84beb48ff		call	do_callback_fn_handler
7f04ef 71d7fc0100000000
(obj= #(#<procedure #59>))
------------------------------------------------------------------------
7f04d8				bits 64
7f04d8			stub_7f764c7f04d8_1:
7f04d8 fec1			inc	cl
7f04da			stub_7f764c7f04d8_0:
7f04da e85beb48ff		call	do_callback_fn_handler
7f04df b1e7fc0100000000
(obj= #(#<procedure #60>))
------------------------------------------------------------------------
7f04c8				bits 64
7f04c8			stub_7f764c7f04c8_1:
7f04c8 fec1			inc	cl
7f04ca			stub_7f764c7f04c8_0:
7f04ca e86beb48ff		call	do_callback_fn_handler
7f04cf f1f7fc0100000000
(obj= #(#<procedure #61>))
------------------------------------------------------------------------
7f04b8				bits 64
7f04b8			stub_7f764c7f04b8_1:
7f04b8 fec1			inc	cl
7f04ba			stub_7f764c7f04b8_0:
7f04ba e87beb48ff		call	do_callback_fn_handler
7f04bf 3108fd0100000000
(obj= #(#<procedure #62>))
------------------------------------------------------------------------
7f04a8				bits 64
7f04a8			stub_7f764c7f04a8_1:
7f04a8 fec1			inc	cl
7f04aa			stub_7f764c7f04a8_0:
7f04aa e88beb48ff		call	do_callback_fn_handler
7f04af 7118fd0100000000
(obj= #(#<procedure #63>))
------------------------------------------------------------------------
7f0498				bits 64
7f0498			stub_7f764c7f0498_1:
7f0498 fec1			inc	cl
7f049a			stub_7f764c7f0498_0:
7f049a e89beb48ff		call	do_callback_fn_handler
7f049f b128fd0100000000
(obj= #(#<procedure #64>))
------------------------------------------------------------------------
7f0488				bits 64
7f0488			stub_7f764c7f0488_1:
7f0488 fec1			inc	cl
7f048a			stub_7f764c7f0488_0:
7f048a e8abeb48ff		call	do_callback_fn_handler
7f048f f138fd0100000000
(obj= #(#<procedure #65>))
------------------------------------------------------------------------
7f0478				bits 64
7f0478			stub_7f764c7f0478_1:
7f0478 fec1			inc	cl
7f047a			stub_7f764c7f0478_0:
7f047a e8bbeb48ff		call	do_callback_fn_handler
7f047f 3149fd0100000000
(obj= #(#<procedure #66>))
------------------------------------------------------------------------
7f0468				bits 64
7f0468			stub_7f764c7f0468_1:
7f0468 fec1			inc	cl
7f046a			stub_7f764c7f0468_0:
7f046a e8cbeb48ff		call	do_callback_fn_handler
7f046f 7159fd0100000000
(obj= #(#<procedure #67>))
------------------------------------------------------------------------
7f0458				bits 64
7f0458			stub_7f764c7f0458_1:
7f0458 fec1			inc	cl
7f045a			stub_7f764c7f0458_0:
7f045a e8dbeb48ff		call	do_callback_fn_handler
7f045f b169fd0100000000
(obj= #(#<procedure #68>))
------------------------------------------------------------------------
7f0448				bits 64
7f0448			stub_7f764c7f0448_1:
7f0448 fec1			inc	cl
7f044a			stub_7f764c7f0448_0:
7f044a e8ebeb48ff		call	do_callback_fn_handler
7f044f f179fd0100000000
(obj= #(#<procedure #69>))
------------------------------------------------------------------------
7f0438				bits 64
7f0438			stub_7f764c7f0438_1:
7f0438 fec1			inc	cl
7f043a			stub_7f764c7f0438_0:
7f043a e8fbeb48ff		call	do_callback_fn_handler
7f043f 318afd0100000000
(obj= #(#<procedure #70>))
------------------------------------------------------------------------
7f0428				bits 64
7f0428			stub_7f764c7f0428_1:
7f0428 fec1			inc	cl
7f042a			stub_7f764c7f0428_0:
7f042a e80bec48ff		call	do_callback_fn_handler
7f042f 719afd0100000000
(obj= #(#<procedure #71>))
------------------------------------------------------------------------
7f0418				bits 64
7f0418			stub_7f764c7f0418_1:
7f0418 fec1			inc	cl
7f041a			stub_7f764c7f0418_0:
7f041a e81bec48ff		call	do_callback_fn_handler
7f041f b1aafd0100000000
(obj= #(#<procedure #72>))
------------------------------------------------------------------------
7f0408				bits 64
7f0408			stub_7f764c7f0408_1:
7f0408 fec1			inc	cl
7f040a			stub_7f764c7f0408_0:
7f040a e82bec48ff		call	do_callback_fn_handler
7f040f f1bafd0100000000
(obj= #(#<procedure #73>))
------------------------------------------------------------------------
7f03f8				bits 64
7f03f8			stub_7f764c7f03f8_1:
7f03f8 fec1			inc	cl
7f03fa			stub_7f764c7f03f8_0:
7f03fa e83bec48ff		call	do_callback_fn_handler
7f03ff b1cb1d0200000000
(obj= #(#<procedure #74>))
------------------------------------------------------------------------
7f03e8				bits 64
7f03e8			stub_7f764c7f03e8_1:
7f03e8 fec1			inc	cl
7f03ea			stub_7f764c7f03e8_0:
7f03ea e84bec48ff		call	do_callback_fn_handler
7f03ef 115c1e0200000000
(obj= #(#<procedure #75>))
------------------------------------------------------------------------
7f03d8				bits 64
7f03d8			stub_7f764c7f03d8_1:
7f03d8 fec1			inc	cl
7f03da			stub_7f764c7f03d8_0:
7f03da e85bec48ff		call	do_callback_fn_handler
7f03df 516c1e0200000000
(obj= #(#<procedure #76>))
------------------------------------------------------------------------
7f03c8				bits 64
7f03c8			stub_7f764c7f03c8_1:
7f03c8 fec1			inc	cl
7f03ca			stub_7f764c7f03c8_0:
7f03ca e86bec48ff		call	do_callback_fn_handler
7f03cf 917c1e0200000000
(obj= #(#<procedure #77>))
------------------------------------------------------------------------
7f03b8				bits 64
7f03b8			stub_7f764c7f03b8_1:
7f03b8 fec1			inc	cl
7f03ba			stub_7f764c7f03b8_0:
7f03ba e87bec48ff		call	do_callback_fn_handler
7f03bf d18c1e0200000000
(obj= #(#<procedure #78>))
------------------------------------------------------------------------
7f03a8				bits 64
7f03a8			stub_7f764c7f03a8_1:
7f03a8 fec1			inc	cl
7f03aa			stub_7f764c7f03a8_0:
7f03aa e88bec48ff		call	do_callback_fn_handler
7f03af 119d1e0200000000
(obj= #(#<procedure #79>))
------------------------------------------------------------------------
7f0398				bits 64
7f0398			stub_7f764c7f0398_1:
7f0398 fec1			inc	cl
7f039a			stub_7f764c7f0398_0:
7f039a e89bec48ff		call	do_callback_fn_handler
7f039f 51ad1e0200000000
(obj= #(#<procedure #80>))
------------------------------------------------------------------------
7f0388				bits 64
7f0388			stub_7f764c7f0388_1:
7f0388 fec1			inc	cl
7f038a			stub_7f764c7f0388_0:
7f038a e8abec48ff		call	do_callback_fn_handler
7f038f 91bd1e0200000000
(obj= #(#<procedure #81>))
------------------------------------------------------------------------
7f0378				bits 64
7f0378			stub_7f764c7f0378_1:
7f0378 fec1			inc	cl
7f037a			stub_7f764c7f0378_0:
7f037a e8bbec48ff		call	do_callback_fn_handler
7f037f d1cd1e0200000000
(obj= #(#<procedure #82>))
------------------------------------------------------------------------
7f0368				bits 64
7f0368			stub_7f764c7f0368_1:
7f0368 fec1			inc	cl
7f036a			stub_7f764c7f0368_0:
7f036a e8cbec48ff		call	do_callback_fn_handler
7f036f 11de1e0200000000
(obj= #(#<procedure #83>))
------------------------------------------------------------------------
7f0358				bits 64
7f0358			stub_7f764c7f0358_1:
7f0358 fec1			inc	cl
7f035a			stub_7f764c7f0358_0:
7f035a e8dbec48ff		call	do_callback_fn_handler
7f035f 51ee1e0200000000
(obj= #(#<procedure #84>))
------------------------------------------------------------------------
7f0348				bits 64
7f0348			stub_7f764c7f0348_1:
7f0348 fec1			inc	cl
7f034a			stub_7f764c7f0348_0:
7f034a e8ebec48ff		call	do_callback_fn_handler
7f034f 91fe1e0200000000
(obj= #(#<procedure #85>))
------------------------------------------------------------------------
7f0338				bits 64
7f0338			stub_7f764c7f0338_1:
7f0338 fec1			inc	cl
7f033a			stub_7f764c7f0338_0:
7f033a e8fbec48ff		call	do_callback_fn_handler
7f033f d10e1f0200000000
(obj= #(#<procedure #86>))
------------------------------------------------------------------------
7f0328				bits 64
7f0328			stub_7f764c7f0328_1:
7f0328 fec1			inc	cl
7f032a			stub_7f764c7f0328_0:
7f032a e80bed48ff		call	do_callback_fn_handler
7f032f 111f1f0200000000
(obj= #(#<procedure #87>))
------------------------------------------------------------------------
7f0318				bits 64
7f0318			stub_7f764c7f0318_1:
7f0318 fec1			inc	cl
7f031a			stub_7f764c7f0318_0:
7f031a e81bed48ff		call	do_callback_fn_handler
7f031f 512f1f0200000000
(obj= #(#<procedure #88>))
------------------------------------------------------------------------
7f0308				bits 64
7f0308			stub_7f764c7f0308_1:
7f0308 fec1			inc	cl
7f030a			stub_7f764c7f0308_0:
7f030a e82bed48ff		call	do_callback_fn_handler
7f030f 913f1f0200000000
(obj= #(#<procedure #89>))
------------------------------------------------------------------------
7f02f8				bits 64
7f02f8			stub_7f764c7f02f8_1:
7f02f8 fec1			inc	cl
7f02fa			stub_7f764c7f02f8_0:
7f02fa e83bed48ff		call	do_callback_fn_handler
7f02ff d14f1f0200000000
(obj= #(#<procedure #90>))
------------------------------------------------------------------------
7f02e8				bits 64
7f02e8			stub_7f764c7f02e8_1:
7f02e8 fec1			inc	cl
7f02ea			stub_7f764c7f02e8_0:
7f02ea e84bed48ff		call	do_callback_fn_handler
7f02ef 11601f0200000000
(obj= #(#<procedure #91>))
------------------------------------------------------------------------
7f02d8				bits 64
7f02d8			stub_7f764c7f02d8_1:
7f02d8 fec1			inc	cl
7f02da			stub_7f764c7f02d8_0:
7f02da e85bed48ff		call	do_callback_fn_handler
7f02df 51701f0200000000
(obj= #(#<procedure #92>))
------------------------------------------------------------------------
7f02c8				bits 64
7f02c8			stub_7f764c7f02c8_1:
7f02c8 fec1			inc	cl
7f02ca			stub_7f764c7f02c8_0:
7f02ca e86bed48ff		call	do_callback_fn_handler
7f02cf 91801f0200000000
(obj= #(#<procedure #93>))
------------------------------------------------------------------------
7f02b8				bits 64
7f02b8			stub_7f764c7f02b8_1:
7f02b8 fec1			inc	cl
7f02ba			stub_7f764c7f02b8_0:
7f02ba e87bed48ff		call	do_callback_fn_handler
7f02bf d1901f0200000000
(obj= #(#<procedure #94>))
------------------------------------------------------------------------
7f02a8				bits 64
7f02a8			stub_7f764c7f02a8_1:
7f02a8 fec1			inc	cl
7f02aa			stub_7f764c7f02a8_0:
7f02aa e88bed48ff		call	do_callback_fn_handler
7f02af 11a11f0200000000
(obj= #(#<procedure #95>))
------------------------------------------------------------------------
7f0298				bits 64
7f0298			stub_7f764c7f0298_1:
7f0298 fec1			inc	cl
7f029a			stub_7f764c7f0298_0:
7f029a e89bed48ff		call	do_callback_fn_handler
7f029f 51b11f0200000000
(obj= #(#<procedure #96>))
------------------------------------------------------------------------
7f0288				bits 64
7f0288			stub_7f764c7f0288_1:
7f0288 fec1			inc	cl
7f028a			stub_7f764c7f0288_0:
7f028a e8abed48ff		call	do_callback_fn_handler
7f028f 91c11f0200000000
(obj= #(#<procedure #97>))
------------------------------------------------------------------------
7f0278				bits 64
7f0278			stub_7f764c7f0278_1:
7f0278 fec1			inc	cl
7f027a			stub_7f764c7f0278_0:
7f027a e8bbed48ff		call	do_callback_fn_handler
7f027f 51e61f0200000000
(obj= #(#<procedure #98>))
------------------------------------------------------------------------
7f0268				bits 64
7f0268			stub_7f764c7f0268_1:
7f0268 fec1			inc	cl
7f026a			stub_7f764c7f0268_0:
7f026a e8cbed48ff		call	do_callback_fn_handler
7f026f 91f61f0200000000
(obj= #(#<procedure #99>))
------------------------------------------------------------------------
7f0258				bits 64
7f0258			stub_7f764c7f0258_1:
7f0258 fec1			inc	cl
7f025a			stub_7f764c7f0258_0:
7f025a e8dbed48ff		call	do_callback_fn_handler
7f025f d106200200000000
(obj= #(#<procedure #100>))
------------------------------------------------------------------------
7f0248				bits 64
7f0248			stub_7f764c7f0248_1:
7f0248 fec1			inc	cl
7f024a			stub_7f764c7f0248_0:
7f024a e8ebed48ff		call	do_callback_fn_handler
7f024f 1117200200000000
(obj= #(#<procedure #101>))
------------------------------------------------------------------------
7f0238				bits 64
7f0238			stub_7f764c7f0238_1:
7f0238 fec1			inc	cl
7f023a			stub_7f764c7f0238_0:
7f023a e8fbed48ff		call	do_callback_fn_handler
7f023f 9131200200000000
(obj= #(#<procedure #102>))
------------------------------------------------------------------------
7f0228				bits 64
7f0228			stub_7f764c7f0228_1:
7f0228 fec1			inc	cl
7f022a			stub_7f764c7f0228_0:
7f022a e80bee48ff		call	do_callback_fn_handler
7f022f d141200200000000
(obj= #(#<procedure #103>))
------------------------------------------------------------------------
7f0218				bits 64
7f0218			stub_7f764c7f0218_1:
7f0218 fec1			inc	cl
7f021a			stub_7f764c7f0218_0:
7f021a e81bee48ff		call	do_callback_fn_handler
7f021f 1152200200000000
(obj= #(#<procedure #104>))
------------------------------------------------------------------------
7f0208				bits 64
7f0208			stub_7f764c7f0208_1:
7f0208 fec1			inc	cl
7f020a			stub_7f764c7f0208_0:
7f020a e82bee48ff		call	do_callback_fn_handler
7f020f 5162200200000000
(obj= #(#<procedure #105>))
------------------------------------------------------------------------
7f01f8				bits 64
7f01f8			stub_7f764c7f01f8_1:
7f01f8 fec1			inc	cl
7f01fa			stub_7f764c7f01f8_0:
7f01fa e83bee48ff		call	do_callback_fn_handler
7f01ff 9172200200000000
(obj= #(#<procedure #106>))
------------------------------------------------------------------------
7f01e8				bits 64
7f01e8			stub_7f764c7f01e8_1:
7f01e8 fec1			inc	cl
7f01ea			stub_7f764c7f01e8_0:
7f01ea e84bee48ff		call	do_callback_fn_handler
7f01ef d182200200000000
(obj= #(#<procedure #107>))
------------------------------------------------------------------------
7f01d8				bits 64
7f01d8			stub_7f764c7f01d8_1:
7f01d8 fec1			inc	cl
7f01da			stub_7f764c7f01d8_0:
7f01da e85bee48ff		call	do_callback_fn_handler
7f01df 9193400200000000
(obj= #(#<procedure #108>))
------------------------------------------------------------------------
7f01c8				bits 64
7f01c8			stub_7f764c7f01c8_1:
7f01c8 fec1			inc	cl
7f01ca			stub_7f764c7f01c8_0:
7f01ca e86bee48ff		call	do_callback_fn_handler
7f01cf d1a3400200000000
(obj= #(#<procedure #109>))
------------------------------------------------------------------------
7f01b8				bits 64
7f01b8			stub_7f764c7f01b8_1:
7f01b8 fec1			inc	cl
7f01ba			stub_7f764c7f01b8_0:
7f01ba e87bee48ff		call	do_callback_fn_handler
7f01bf 11b4400200000000
(obj= #(#<procedure #110>))
------------------------------------------------------------------------
7f01a8				bits 64
7f01a8			stub_7f764c7f01a8_1:
7f01a8 fec1			inc	cl
7f01aa			stub_7f764c7f01a8_0:
7f01aa e88bee48ff		call	do_callback_fn_handler
7f01af 51c4400200000000
(obj= #(#<procedure #111>))
------------------------------------------------------------------------
7f0198				bits 64
7f0198			stub_7f764c7f0198_1:
7f0198 fec1			inc	cl
7f019a			stub_7f764c7f0198_0:
7f019a e89bee48ff		call	do_callback_fn_handler
7f019f 91d4400200000000
(obj= #(#<procedure #112>))
------------------------------------------------------------------------
7f0188				bits 64
7f0188			stub_7f764c7f0188_1:
7f0188 fec1			inc	cl
7f018a			stub_7f764c7f0188_0:
7f018a e8abee48ff		call	do_callback_fn_handler
7f018f d1e4400200000000
(obj= #(#<procedure #113>))
------------------------------------------------------------------------
7f0178				bits 64
7f0178			stub_7f764c7f0178_1:
7f0178 fec1			inc	cl
7f017a			stub_7f764c7f0178_0:
7f017a e8bbee48ff		call	do_callback_fn_handler
7f017f 11f5400200000000
(obj= #(#<procedure #114>))
------------------------------------------------------------------------
7f0168				bits 64
7f0168			stub_7f764c7f0168_1:
7f0168 fec1			inc	cl
7f016a			stub_7f764c7f0168_0:
7f016a e8cbee48ff		call	do_callback_fn_handler
7f016f 5105410200000000
(obj= #(#<procedure #115>))
------------------------------------------------------------------------
7f0158				bits 64
7f0158			stub_7f764c7f0158_1:
7f0158 fec1			inc	cl
7f015a			stub_7f764c7f0158_0:
7f015a e8dbee48ff		call	do_callback_fn_handler
7f015f 9115410200000000
(obj= #(#<procedure #116>))
------------------------------------------------------------------------
7f0148				bits 64
7f0148			stub_7f764c7f0148_1:
7f0148 fec1			inc	cl
7f014a			stub_7f764c7f0148_0:
7f014a e8ebee48ff		call	do_callback_fn_handler
7f014f d125410200000000
(obj= #(#<procedure #117>))
------------------------------------------------------------------------
7f0138				bits 64
7f0138			stub_7f764c7f0138_1:
7f0138 fec1			inc	cl
7f013a			stub_7f764c7f0138_0:
7f013a e8fbee48ff		call	do_callback_fn_handler
7f013f 1136410200000000
(obj= #(#<procedure #118>))
------------------------------------------------------------------------
7f0128				bits 64
7f0128			stub_7f764c7f0128_0:
7f0128 e83aef48ff		call	do_callback_cont_handler
7f012d 5146410200000000
(obj= #(#<procedure #119>))
------------------------------------------------------------------------
c7f172				bits 64
c7f172 9090		version1:
c7f174 48c7c0eeffffff		mov	rax,dword -18
c7f17b 498902			mov	[r10],rax
c7f17e			version2:
c7f17e 50			push	rax
c7f17f 53			push	rbx
c7f180 48b85080aa4e767f
c7f188 0000			mov	rax,140146102665296
c7f18a 488b18			mov	rbx,[rax]
c7f18d 48ffc3			inc	rbx
c7f190 488918			mov	[rax],rbx
c7f193 5b			pop	rbx
c7f194 58			pop	rax
c7f195 498d4424f0		lea	rax,[r12-16]
c7f19a 49bf0880aa4e767f
c7f1a2 0000			mov	r15,140146102665224
c7f1a4 493b4728			cmp	rax,[r15+40]
c7f1a8 7d38			jge	short alloc-ok1
c7f1aa 48c7c010000000		mov	rax,dword 16
c7f1b1 57			push	rdi
c7f1b2 56			push	rsi
c7f1b3 52			push	rdx
c7f1b4 51			push	rcx
c7f1b5 4150			push	r8
c7f1b7 4151			push	r9
c7f1b9 4152			push	r10
c7f1bb 4153			push	r11
c7f1bd 50			push	rax
c7f1be 4889e7			mov	rdi,rsp
c7f1c1 4883e4f0			and	rsp,byte -16
c7f1c5 4883ec08			sub	rsp,byte 8
c7f1c9 57			push	rdi
c7f1ca e8016f6d01		call	gc
c7f1cf 5c			pop	rsp
c7f1d0 4989c4			mov	r12,rax
c7f1d3 58			pop	rax
c7f1d4 415b			pop	r11
c7f1d6 415a			pop	r10
c7f1d8 4159			pop	r9
c7f1da 4158			pop	r8
c7f1dc 59			pop	rcx
c7f1dd 5a			pop	rdx
c7f1de 5e			pop	rsi
c7f1df 5f			pop	rdi
c7f1e0 eb04			jmp	short alloc-end1
c7f1e2			alloc-ok1:
c7f1e2 4983ec10			sub	r12,byte 16
c7f1e6			alloc-end1:
c7f1e6 48c7c076020000		mov	rax,dword 630
c7f1ed 49890424			mov	[r12],rax
c7f1f1 48c7c090488601		mov	rax,dword 25577616
c7f1f8 4989442408		mov	[r12+8],rax
c7f1fd 498d442401		lea	rax,[r12+1]
c7f202 50			push	rax
c7f203			version3:
c7f203 58			pop	rax
c7f204 498902			mov	[r10],rax
c7f207 6aee			push	qword byte -18
c7f209			version4:
c7f209 48c7c0eeffffff		mov	rax,dword -18
c7f210 49894208			mov	[r10+8],rax
c7f214			version5:
c7f214 50			push	rax
c7f215 53			push	rbx
c7f216 48b85080aa4e767f
c7f21e 0000			mov	rax,140146102665296
c7f220 488b18			mov	rbx,[rax]
c7f223 48ffc3			inc	rbx
c7f226 488918			mov	[rax],rbx
c7f229 5b			pop	rbx
c7f22a 58			pop	rax
c7f22b 498d4424f0		lea	rax,[r12-16]
c7f230 49bf0880aa4e767f
c7f238 0000			mov	r15,140146102665224
c7f23a 493b4728			cmp	rax,[r15+40]
c7f23e 7d38			jge	short alloc-ok2
c7f240 48c7c010000000		mov	rax,dword 16
c7f247 57			push	rdi
c7f248 56			push	rsi
c7f249 52			push	rdx
c7f24a 51			push	rcx
c7f24b 4150			push	r8
c7f24d 4151			push	r9
c7f24f 4152			push	r10
c7f251 4153			push	r11
c7f253 50			push	rax
c7f254 4889e7			mov	rdi,rsp
c7f257 4883e4f0			and	rsp,byte -16
c7f25b 4883ec08			sub	rsp,byte 8
c7f25f 57			push	rdi
c7f260 e86b6e6d01		call	gc
c7f265 5c			pop	rsp
c7f266 4989c4			mov	r12,rax
c7f269 58			pop	rax
c7f26a 415b			pop	r11
c7f26c 415a			pop	r10
c7f26e 4159			pop	r9
c7f270 4158			pop	r8
c7f272 59			pop	rcx
c7f273 5a			pop	rdx
c7f274 5e			pop	rsi
c7f275 5f			pop	rdi
c7f276 eb04			jmp	short alloc-end2
c7f278			alloc-ok2:
c7f278 4983ec10			sub	r12,byte 16
c7f27c			alloc-end2:
c7f27c 48c7c076020000		mov	rax,dword 630
c7f283 49890424			mov	[r12],rax
c7f287 48c7c080588601		mov	rax,dword 25581696
c7f28e 4989442408		mov	[r12+8],rax
c7f293 498d442401		lea	rax,[r12+1]
c7f298 50			push	rax
c7f299			version6:
c7f299 58			pop	rax
c7f29a 49894208			mov	[r10+8],rax
c7f29e 6aee			push	qword byte -18
c7f2a0			version7:
c7f2a0 48c7c0eeffffff		mov	rax,dword -18
c7f2a7 49894210			mov	[r10+16],rax
c7f2ab			version8:
c7f2ab 50			push	rax
c7f2ac 53			push	rbx
c7f2ad 48b85080aa4e767f
c7f2b5 0000			mov	rax,140146102665296
c7f2b7 488b18			mov	rbx,[rax]
c7f2ba 48ffc3			inc	rbx
c7f2bd 488918			mov	[rax],rbx
c7f2c0 5b			pop	rbx
c7f2c1 58			pop	rax
c7f2c2 498d4424f0		lea	rax,[r12-16]
c7f2c7 49bf0880aa4e767f
c7f2cf 0000			mov	r15,140146102665224
c7f2d1 493b4728			cmp	rax,[r15+40]
c7f2d5 7d38			jge	short alloc-ok3
c7f2d7 48c7c010000000		mov	rax,dword 16
c7f2de 57			push	rdi
c7f2df 56			push	rsi
c7f2e0 52			push	rdx
c7f2e1 51			push	rcx
c7f2e2 4150			push	r8
c7f2e4 4151			push	r9
c7f2e6 4152			push	r10
c7f2e8 4153			push	r11
c7f2ea 50			push	rax
c7f2eb 4889e7			mov	rdi,rsp
c7f2ee 4883e4f0			and	rsp,byte -16
c7f2f2 4883ec08			sub	rsp,byte 8
c7f2f6 57			push	rdi
c7f2f7 e8d46d6d01		call	gc
c7f2fc 5c			pop	rsp
c7f2fd 4989c4			mov	r12,rax
c7f300 58			pop	rax
c7f301 415b			pop	r11
c7f303 415a			pop	r10
c7f305 4159			pop	r9
c7f307 4158			pop	r8
c7f309 59			pop	rcx
c7f30a 5a			pop	rdx
c7f30b 5e			pop	rsi
c7f30c 5f			pop	rdi
c7f30d eb04			jmp	short alloc-end3
c7f30f			alloc-ok3:
c7f30f 4983ec10			sub	r12,byte 16
c7f313			alloc-end3:
c7f313 48c7c076020000		mov	rax,dword 630
c7f31a 49890424			mov	[r12],rax
c7f31e 48c7c070688601		mov	rax,dword 25585776
c7f325 4989442408		mov	[r12+8],rax
c7f32a 498d442401		lea	rax,[r12+1]
c7f32f 50			push	rax
c7f330			version9:
c7f330 58			pop	rax
c7f331 49894210			mov	[r10+16],rax
c7f335 6aee			push	qword byte -18
c7f337			version10:
c7f337 48c7c0eeffffff		mov	rax,dword -18
c7f33e 49894218			mov	[r10+24],rax
c7f342			version11:
c7f342 50			push	rax
c7f343 53			push	rbx
c7f344 48b85080aa4e767f
c7f34c 0000			mov	rax,140146102665296
c7f34e 488b18			mov	rbx,[rax]
c7f351 48ffc3			inc	rbx
c7f354 488918			mov	[rax],rbx
c7f357 5b			pop	rbx
c7f358 58			pop	rax
c7f359 498d4424f0		lea	rax,[r12-16]
c7f35e 49bf0880aa4e767f
c7f366 0000			mov	r15,140146102665224
c7f368 493b4728			cmp	rax,[r15+40]
c7f36c 7d38			jge	short alloc-ok4
c7f36e 48c7c010000000		mov	rax,dword 16
c7f375 57			push	rdi
c7f376 56			push	rsi
c7f377 52			push	rdx
c7f378 51			push	rcx
c7f379 4150			push	r8
c7f37b 4151			push	r9
c7f37d 4152			push	r10
c7f37f 4153			push	r11
c7f381 50			push	rax
c7f382 4889e7			mov	rdi,rsp
c7f385 4883e4f0			and	rsp,byte -16
c7f389 4883ec08			sub	rsp,byte 8
c7f38d 57			push	rdi
c7f38e e83d6d6d01		call	gc
c7f393 5c			pop	rsp
c7f394 4989c4			mov	r12,rax
c7f397 58			pop	rax
c7f398 415b			pop	r11
c7f39a 415a			pop	r10
c7f39c 4159			pop	r9
c7f39e 4158			pop	r8
c7f3a0 59			pop	rcx
c7f3a1 5a			pop	rdx
c7f3a2 5e			pop	rsi
c7f3a3 5f			pop	rdi
c7f3a4 eb04			jmp	short alloc-end4
c7f3a6			alloc-ok4:
c7f3a6 4983ec10			sub	r12,byte 16
c7f3aa			alloc-end4:
c7f3aa 48c7c076020000		mov	rax,dword 630
c7f3b1 49890424			mov	[r12],rax
c7f3b5 48c7c060788601		mov	rax,dword 25589856
c7f3bc 4989442408		mov	[r12+8],rax
c7f3c1 498d442401		lea	rax,[r12+1]
c7f3c6 50			push	rax
c7f3c7			version12:
c7f3c7 58			pop	rax
c7f3c8 49894218			mov	[r10+24],rax
c7f3cc 6aee			push	qword byte -18
c7f3ce			version13:
c7f3ce 48c7c0eeffffff		mov	rax,dword -18
c7f3d5 49894220			mov	[r10+32],rax
c7f3d9			version14:
c7f3d9 50			push	rax
c7f3da 53			push	rbx
c7f3db 48b85080aa4e767f
c7f3e3 0000			mov	rax,140146102665296
c7f3e5 488b18			mov	rbx,[rax]
c7f3e8 48ffc3			inc	rbx
c7f3eb 488918			mov	[rax],rbx
c7f3ee 5b			pop	rbx
c7f3ef 58			pop	rax
c7f3f0 498d4424f0		lea	rax,[r12-16]
c7f3f5 49bf0880aa4e767f
c7f3fd 0000			mov	r15,140146102665224
c7f3ff 493b4728			cmp	rax,[r15+40]
c7f403 7d38			jge	short alloc-ok5
c7f405 48c7c010000000		mov	rax,dword 16
c7f40c 57			push	rdi
c7f40d 56			push	rsi
c7f40e 52			push	rdx
c7f40f 51			push	rcx
c7f410 4150			push	r8
c7f412 4151			push	r9
c7f414 4152			push	r10
c7f416 4153			push	r11
c7f418 50			push	rax
c7f419 4889e7			mov	rdi,rsp
c7f41c 4883e4f0			and	rsp,byte -16
c7f420 4883ec08			sub	rsp,byte 8
c7f424 57			push	rdi
c7f425 e8a66c6d01		call	gc
c7f42a 5c			pop	rsp
c7f42b 4989c4			mov	r12,rax
c7f42e 58			pop	rax
c7f42f 415b			pop	r11
c7f431 415a			pop	r10
c7f433 4159			pop	r9
c7f435 4158			pop	r8
c7f437 59			pop	rcx
c7f438 5a			pop	rdx
c7f439 5e			pop	rsi
c7f43a 5f			pop	rdi
c7f43b eb04			jmp	short alloc-end5
c7f43d			alloc-ok5:
c7f43d 4983ec10			sub	r12,byte 16
c7f441			alloc-end5:
c7f441 48c7c076020000		mov	rax,dword 630
c7f448 49890424			mov	[r12],rax
c7f44c 48c7c050888601		mov	rax,dword 25593936
c7f453 4989442408		mov	[r12+8],rax
c7f458 498d442401		lea	rax,[r12+1]
c7f45d 50			push	rax
c7f45e			version15:
c7f45e 58			pop	rax
c7f45f 49894220			mov	[r10+32],rax
c7f463 6aee			push	qword byte -18
c7f465			version16:
c7f465 48c7c0eeffffff		mov	rax,dword -18
c7f46c 49894228			mov	[r10+40],rax
c7f470			version17:
c7f470 50			push	rax
c7f471 53			push	rbx
c7f472 48b85080aa4e767f
c7f47a 0000			mov	rax,140146102665296
c7f47c 488b18			mov	rbx,[rax]
c7f47f 48ffc3			inc	rbx
c7f482 488918			mov	[rax],rbx
c7f485 5b			pop	rbx
c7f486 58			pop	rax
c7f487 498d4424f0		lea	rax,[r12-16]
c7f48c 49bf0880aa4e767f
c7f494 0000			mov	r15,140146102665224
c7f496 493b4728			cmp	rax,[r15+40]
c7f49a 7d38			jge	short alloc-ok6
c7f49c 48c7c010000000		mov	rax,dword 16
c7f4a3 57			push	rdi
c7f4a4 56			push	rsi
c7f4a5 52			push	rdx
c7f4a6 51			push	rcx
c7f4a7 4150			push	r8
c7f4a9 4151			push	r9
c7f4ab 4152			push	r10
c7f4ad 4153			push	r11
c7f4af 50			push	rax
c7f4b0 4889e7			mov	rdi,rsp
c7f4b3 4883e4f0			and	rsp,byte -16
c7f4b7 4883ec08			sub	rsp,byte 8
c7f4bb 57			push	rdi
c7f4bc e80f6c6d01		call	gc
c7f4c1 5c			pop	rsp
c7f4c2 4989c4			mov	r12,rax
c7f4c5 58			pop	rax
c7f4c6 415b			pop	r11
c7f4c8 415a			pop	r10
c7f4ca 4159			pop	r9
c7f4cc 4158			pop	r8
c7f4ce 59			pop	rcx
c7f4cf 5a			pop	rdx
c7f4d0 5e			pop	rsi
c7f4d1 5f			pop	rdi
c7f4d2 eb04			jmp	short alloc-end6
c7f4d4			alloc-ok6:
c7f4d4 4983ec10			sub	r12,byte 16
c7f4d8			alloc-end6:
c7f4d8 48c7c076020000		mov	rax,dword 630
c7f4df 49890424			mov	[r12],rax
c7f4e3 48c7c040988601		mov	rax,dword 25598016
c7f4ea 4989442408		mov	[r12+8],rax
c7f4ef 498d442401		lea	rax,[r12+1]
c7f4f4 50			push	rax
c7f4f5			version18:
c7f4f5 58			pop	rax
c7f4f6 49894228			mov	[r10+40],rax
c7f4fa 6aee			push	qword byte -18
c7f4fc			version19:
c7f4fc 48c7c0eeffffff		mov	rax,dword -18
c7f503 49894230			mov	[r10+48],rax
c7f507			version20:
c7f507 50			push	rax
c7f508 53			push	rbx
c7f509 48b85080aa4e767f
c7f511 0000			mov	rax,140146102665296
c7f513 488b18			mov	rbx,[rax]
c7f516 48ffc3			inc	rbx
c7f519 488918			mov	[rax],rbx
c7f51c 5b			pop	rbx
c7f51d 58			pop	rax
c7f51e 498d4424f0		lea	rax,[r12-16]
c7f523 49bf0880aa4e767f
c7f52b 0000			mov	r15,140146102665224
c7f52d 493b4728			cmp	rax,[r15+40]
c7f531 7d38			jge	short alloc-ok7
c7f533 48c7c010000000		mov	rax,dword 16
c7f53a 57			push	rdi
c7f53b 56			push	rsi
c7f53c 52			push	rdx
c7f53d 51			push	rcx
c7f53e 4150			push	r8
c7f540 4151			push	r9
c7f542 4152			push	r10
c7f544 4153			push	r11
c7f546 50			push	rax
c7f547 4889e7			mov	rdi,rsp
c7f54a 4883e4f0			and	rsp,byte -16
c7f54e 4883ec08			sub	rsp,byte 8
c7f552 57			push	rdi
c7f553 e8786b6d01		call	gc
c7f558 5c			pop	rsp
c7f559 4989c4			mov	r12,rax
c7f55c 58			pop	rax
c7f55d 415b			pop	r11
c7f55f 415a			pop	r10
c7f561 4159			pop	r9
c7f563 4158			pop	r8
c7f565 59			pop	rcx
c7f566 5a			pop	rdx
c7f567 5e			pop	rsi
c7f568 5f			pop	rdi
c7f569 eb04			jmp	short alloc-end7
c7f56b			alloc-ok7:
c7f56b 4983ec10			sub	r12,byte 16
c7f56f			alloc-end7:
c7f56f 48c7c076020000		mov	rax,dword 630
c7f576 49890424			mov	[r12],rax
c7f57a 48c7c030a88601		mov	rax,dword 25602096
c7f581 4989442408		mov	[r12+8],rax
c7f586 498d442401		lea	rax,[r12+1]
c7f58b 50			push	rax
c7f58c			version21:
c7f58c 58			pop	rax
c7f58d 49894230			mov	[r10+48],rax
c7f591 6aee			push	qword byte -18
c7f593			version22:
c7f593 48c7c0eeffffff		mov	rax,dword -18
c7f59a 49894238			mov	[r10+56],rax
c7f59e			version23:
c7f59e 50			push	rax
c7f59f 53			push	rbx
c7f5a0 48b85080aa4e767f
c7f5a8 0000			mov	rax,140146102665296
c7f5aa 488b18			mov	rbx,[rax]
c7f5ad 48ffc3			inc	rbx
c7f5b0 488918			mov	[rax],rbx
c7f5b3 5b			pop	rbx
c7f5b4 58			pop	rax
c7f5b5 498d4424f0		lea	rax,[r12-16]
c7f5ba 49bf0880aa4e767f
c7f5c2 0000			mov	r15,140146102665224
c7f5c4 493b4728			cmp	rax,[r15+40]
c7f5c8 7d38			jge	short alloc-ok8
c7f5ca 48c7c010000000		mov	rax,dword 16
c7f5d1 57			push	rdi
c7f5d2 56			push	rsi
c7f5d3 52			push	rdx
c7f5d4 51			push	rcx
c7f5d5 4150			push	r8
c7f5d7 4151			push	r9
c7f5d9 4152			push	r10
c7f5db 4153			push	r11
c7f5dd 50			push	rax
c7f5de 4889e7			mov	rdi,rsp
c7f5e1 4883e4f0			and	rsp,byte -16
c7f5e5 4883ec08			sub	rsp,byte 8
c7f5e9 57			push	rdi
c7f5ea e8e16a6d01		call	gc
c7f5ef 5c			pop	rsp
c7f5f0 4989c4			mov	r12,rax
c7f5f3 58			pop	rax
c7f5f4 415b			pop	r11
c7f5f6 415a			pop	r10
c7f5f8 4159			pop	r9
c7f5fa 4158			pop	r8
c7f5fc 59			pop	rcx
c7f5fd 5a			pop	rdx
c7f5fe 5e			pop	rsi
c7f5ff 5f			pop	rdi
c7f600 eb04			jmp	short alloc-end8
c7f602			alloc-ok8:
c7f602 4983ec10			sub	r12,byte 16
c7f606			alloc-end8:
c7f606 48c7c076020000		mov	rax,dword 630
c7f60d 49890424			mov	[r12],rax
c7f611 48c7c020b88601		mov	rax,dword 25606176
c7f618 4989442408		mov	[r12+8],rax
c7f61d 498d442401		lea	rax,[r12+1]
c7f622 50			push	rax
c7f623			version24:
c7f623 58			pop	rax
c7f624 49894238			mov	[r10+56],rax
c7f628 6aee			push	qword byte -18
c7f62a			version25:
c7f62a 48c7c0eeffffff		mov	rax,dword -18
c7f631 49894240			mov	[r10+64],rax
c7f635			version26:
c7f635 50			push	rax
c7f636 53			push	rbx
c7f637 48b85080aa4e767f
c7f63f 0000			mov	rax,140146102665296
c7f641 488b18			mov	rbx,[rax]
c7f644 48ffc3			inc	rbx
c7f647 488918			mov	[rax],rbx
c7f64a 5b			pop	rbx
c7f64b 58			pop	rax
c7f64c 498d4424f0		lea	rax,[r12-16]
c7f651 49bf0880aa4e767f
c7f659 0000			mov	r15,140146102665224
c7f65b 493b4728			cmp	rax,[r15+40]
c7f65f 7d38			jge	short alloc-ok9
c7f661 48c7c010000000		mov	rax,dword 16
c7f668 57			push	rdi
c7f669 56			push	rsi
c7f66a 52			push	rdx
c7f66b 51			push	rcx
c7f66c 4150			push	r8
c7f66e 4151			push	r9
c7f670 4152			push	r10
c7f672 4153			push	r11
c7f674 50			push	rax
c7f675 4889e7			mov	rdi,rsp
c7f678 4883e4f0			and	rsp,byte -16
c7f67c 4883ec08			sub	rsp,byte 8
c7f680 57			push	rdi
c7f681 e84a6a6d01		call	gc
c7f686 5c			pop	rsp
c7f687 4989c4			mov	r12,rax
c7f68a 58			pop	rax
c7f68b 415b			pop	r11
c7f68d 415a			pop	r10
c7f68f 4159			pop	r9
c7f691 4158			pop	r8
c7f693 59			pop	rcx
c7f694 5a			pop	rdx
c7f695 5e			pop	rsi
c7f696 5f			pop	rdi
c7f697 eb04			jmp	short alloc-end9
c7f699			alloc-ok9:
c7f699 4983ec10			sub	r12,byte 16
c7f69d			alloc-end9:
c7f69d 48c7c076020000		mov	rax,dword 630
c7f6a4 49890424			mov	[r12],rax
c7f6a8 48c7c010c88601		mov	rax,dword 25610256
c7f6af 4989442408		mov	[r12+8],rax
c7f6b4 498d442401		lea	rax,[r12+1]
c7f6b9 50			push	rax
c7f6ba			version27:
c7f6ba 58			pop	rax
c7f6bb 49894240			mov	[r10+64],rax
c7f6bf 6aee			push	qword byte -18
c7f6c1			version28:
c7f6c1 48c7c0eeffffff		mov	rax,dword -18
c7f6c8 49894248			mov	[r10+72],rax
c7f6cc			version29:
c7f6cc 50			push	rax
c7f6cd 53			push	rbx
c7f6ce 48b85080aa4e767f
c7f6d6 0000			mov	rax,140146102665296
c7f6d8 488b18			mov	rbx,[rax]
c7f6db 48ffc3			inc	rbx
c7f6de 488918			mov	[rax],rbx
c7f6e1 5b			pop	rbx
c7f6e2 58			pop	rax
c7f6e3 498d4424f0		lea	rax,[r12-16]
c7f6e8 49bf0880aa4e767f
c7f6f0 0000			mov	r15,140146102665224
c7f6f2 493b4728			cmp	rax,[r15+40]
c7f6f6 7d38			jge	short alloc-ok10
c7f6f8 48c7c010000000		mov	rax,dword 16
c7f6ff 57			push	rdi
c7f700 56			push	rsi
c7f701 52			push	rdx
c7f702 51			push	rcx
c7f703 4150			push	r8
c7f705 4151			push	r9
c7f707 4152			push	r10
c7f709 4153			push	r11
c7f70b 50			push	rax
c7f70c 4889e7			mov	rdi,rsp
c7f70f 4883e4f0			and	rsp,byte -16
c7f713 4883ec08			sub	rsp,byte 8
c7f717 57			push	rdi
c7f718 e8b3696d01		call	gc
c7f71d 5c			pop	rsp
c7f71e 4989c4			mov	r12,rax
c7f721 58			pop	rax
c7f722 415b			pop	r11
c7f724 415a			pop	r10
c7f726 4159			pop	r9
c7f728 4158			pop	r8
c7f72a 59			pop	rcx
c7f72b 5a			pop	rdx
c7f72c 5e			pop	rsi
c7f72d 5f			pop	rdi
c7f72e eb04			jmp	short alloc-end10
c7f730			alloc-ok10:
c7f730 4983ec10			sub	r12,byte 16
c7f734			alloc-end10:
c7f734 48c7c076020000		mov	rax,dword 630
c7f73b 49890424			mov	[r12],rax
c7f73f 48c7c000d88601		mov	rax,dword 25614336
c7f746 4989442408		mov	[r12+8],rax
c7f74b 498d442401		lea	rax,[r12+1]
c7f750 50			push	rax
c7f751			version30:
c7f751 58			pop	rax
c7f752 49894248			mov	[r10+72],rax
c7f756 6aee			push	qword byte -18
c7f758			version31:
c7f758 48c7c0eeffffff		mov	rax,dword -18
c7f75f 49894250			mov	[r10+80],rax
c7f763			version32:
c7f763 50			push	rax
c7f764 53			push	rbx
c7f765 48b85080aa4e767f
c7f76d 0000			mov	rax,140146102665296
c7f76f 488b18			mov	rbx,[rax]
c7f772 48ffc3			inc	rbx
c7f775 488918			mov	[rax],rbx
c7f778 5b			pop	rbx
c7f779 58			pop	rax
c7f77a 498d4424f0		lea	rax,[r12-16]
c7f77f 49bf0880aa4e767f
c7f787 0000			mov	r15,140146102665224
c7f789 493b4728			cmp	rax,[r15+40]
c7f78d 7d38			jge	short alloc-ok11
c7f78f 48c7c010000000		mov	rax,dword 16
c7f796 57			push	rdi
c7f797 56			push	rsi
c7f798 52			push	rdx
c7f799 51			push	rcx
c7f79a 4150			push	r8
c7f79c 4151			push	r9
c7f79e 4152			push	r10
c7f7a0 4153			push	r11
c7f7a2 50			push	rax
c7f7a3 4889e7			mov	rdi,rsp
c7f7a6 4883e4f0			and	rsp,byte -16
c7f7aa 4883ec08			sub	rsp,byte 8
c7f7ae 57			push	rdi
c7f7af e81c696d01		call	gc
c7f7b4 5c			pop	rsp
c7f7b5 4989c4			mov	r12,rax
c7f7b8 58			pop	rax
c7f7b9 415b			pop	r11
c7f7bb 415a			pop	r10
c7f7bd 4159			pop	r9
c7f7bf 4158			pop	r8
c7f7c1 59			pop	rcx
c7f7c2 5a			pop	rdx
c7f7c3 5e			pop	rsi
c7f7c4 5f			pop	rdi
c7f7c5 eb04			jmp	short alloc-end11
c7f7c7			alloc-ok11:
c7f7c7 4983ec10			sub	r12,byte 16
c7f7cb			alloc-end11:
c7f7cb 48c7c076020000		mov	rax,dword 630
c7f7d2 49890424			mov	[r12],rax
c7f7d6 48c7c0f0e78601		mov	rax,dword 25618416
c7f7dd 4989442408		mov	[r12+8],rax
c7f7e2 498d442401		lea	rax,[r12+1]
c7f7e7 50			push	rax
c7f7e8			version33:
c7f7e8 58			pop	rax
c7f7e9 49894250			mov	[r10+80],rax
c7f7ed 6aee			push	qword byte -18
c7f7ef			version34:
c7f7ef 48c7c0eeffffff		mov	rax,dword -18
c7f7f6 49894258			mov	[r10+88],rax
c7f7fa			version35:
c7f7fa 50			push	rax
c7f7fb 53			push	rbx
c7f7fc 48b85080aa4e767f
c7f804 0000			mov	rax,140146102665296
c7f806 488b18			mov	rbx,[rax]
c7f809 48ffc3			inc	rbx
c7f80c 488918			mov	[rax],rbx
c7f80f 5b			pop	rbx
c7f810 58			pop	rax
c7f811 498d4424f0		lea	rax,[r12-16]
c7f816 49bf0880aa4e767f
c7f81e 0000			mov	r15,140146102665224
c7f820 493b4728			cmp	rax,[r15+40]
c7f824 7d38			jge	short alloc-ok12
c7f826 48c7c010000000		mov	rax,dword 16
c7f82d 57			push	rdi
c7f82e 56			push	rsi
c7f82f 52			push	rdx
c7f830 51			push	rcx
c7f831 4150			push	r8
c7f833 4151			push	r9
c7f835 4152			push	r10
c7f837 4153			push	r11
c7f839 50			push	rax
c7f83a 4889e7			mov	rdi,rsp
c7f83d 4883e4f0			and	rsp,byte -16
c7f841 4883ec08			sub	rsp,byte 8
c7f845 57			push	rdi
c7f846 e885686d01		call	gc
c7f84b 5c			pop	rsp
c7f84c 4989c4			mov	r12,rax
c7f84f 58			pop	rax
c7f850 415b			pop	r11
c7f852 415a			pop	r10
c7f854 4159			pop	r9
c7f856 4158			pop	r8
c7f858 59			pop	rcx
c7f859 5a			pop	rdx
c7f85a 5e			pop	rsi
c7f85b 5f			pop	rdi
c7f85c eb04			jmp	short alloc-end12
c7f85e			alloc-ok12:
c7f85e 4983ec10			sub	r12,byte 16
c7f862			alloc-end12:
c7f862 48c7c076020000		mov	rax,dword 630
c7f869 49890424			mov	[r12],rax
c7f86d 48c7c070a6c901		mov	rax,dword 29992560
c7f874 4989442408		mov	[r12+8],rax
c7f879 498d442401		lea	rax,[r12+1]
c7f87e 50			push	rax
c7f87f			version36:
c7f87f 58			pop	rax
c7f880 49894258			mov	[r10+88],rax
c7f884 6aee			push	qword byte -18
c7f886			version37:
c7f886 48c7c0eeffffff		mov	rax,dword -18
c7f88d 49894260			mov	[r10+96],rax
c7f891			version38:
c7f891 50			push	rax
c7f892 53			push	rbx
c7f893 48b85080aa4e767f
c7f89b 0000			mov	rax,140146102665296
c7f89d 488b18			mov	rbx,[rax]
c7f8a0 48ffc3			inc	rbx
c7f8a3 488918			mov	[rax],rbx
c7f8a6 5b			pop	rbx
c7f8a7 58			pop	rax
c7f8a8 498d4424f0		lea	rax,[r12-16]
c7f8ad 49bf0880aa4e767f
c7f8b5 0000			mov	r15,140146102665224
c7f8b7 493b4728			cmp	rax,[r15+40]
c7f8bb 7d38			jge	short alloc-ok13
c7f8bd 48c7c010000000		mov	rax,dword 16
c7f8c4 57			push	rdi
c7f8c5 56			push	rsi
c7f8c6 52			push	rdx
c7f8c7 51			push	rcx
c7f8c8 4150			push	r8
c7f8ca 4151			push	r9
c7f8cc 4152			push	r10
c7f8ce 4153			push	r11
c7f8d0 50			push	rax
c7f8d1 4889e7			mov	rdi,rsp
c7f8d4 4883e4f0			and	rsp,byte -16
c7f8d8 4883ec08			sub	rsp,byte 8
c7f8dc 57			push	rdi
c7f8dd e8ee676d01		call	gc
c7f8e2 5c			pop	rsp
c7f8e3 4989c4			mov	r12,rax
c7f8e6 58			pop	rax
c7f8e7 415b			pop	r11
c7f8e9 415a			pop	r10
c7f8eb 4159			pop	r9
c7f8ed 4158			pop	r8
c7f8ef 59			pop	rcx
c7f8f0 5a			pop	rdx
c7f8f1 5e			pop	rsi
c7f8f2 5f			pop	rdi
c7f8f3 eb04			jmp	short alloc-end13
c7f8f5			alloc-ok13:
c7f8f5 4983ec10			sub	r12,byte 16
c7f8f9			alloc-end13:
c7f8f9 48c7c076020000		mov	rax,dword 630
c7f900 49890424			mov	[r12],rax
c7f904 48c7c060b6c901		mov	rax,dword 29996640
c7f90b 4989442408		mov	[r12+8],rax
c7f910 498d442401		lea	rax,[r12+1]
c7f915 50			push	rax
c7f916			version39:
c7f916 58			pop	rax
c7f917 49894260			mov	[r10+96],rax
c7f91b 6aee			push	qword byte -18
c7f91d			version40:
c7f91d 48c7c0eeffffff		mov	rax,dword -18
c7f924 49894268			mov	[r10+104],rax
c7f928			version41:
c7f928 50			push	rax
c7f929 53			push	rbx
c7f92a 48b85080aa4e767f
c7f932 0000			mov	rax,140146102665296
c7f934 488b18			mov	rbx,[rax]
c7f937 48ffc3			inc	rbx
c7f93a 488918			mov	[rax],rbx
c7f93d 5b			pop	rbx
c7f93e 58			pop	rax
c7f93f 498d4424f0		lea	rax,[r12-16]
c7f944 49bf0880aa4e767f
c7f94c 0000			mov	r15,140146102665224
c7f94e 493b4728			cmp	rax,[r15+40]
c7f952 7d38			jge	short alloc-ok14
c7f954 48c7c010000000		mov	rax,dword 16
c7f95b 57			push	rdi
c7f95c 56			push	rsi
c7f95d 52			push	rdx
c7f95e 51			push	rcx
c7f95f 4150			push	r8
c7f961 4151			push	r9
c7f963 4152			push	r10
c7f965 4153			push	r11
c7f967 50			push	rax
c7f968 4889e7			mov	rdi,rsp
c7f96b 4883e4f0			and	rsp,byte -16
c7f96f 4883ec08			sub	rsp,byte 8
c7f973 57			push	rdi
c7f974 e857676d01		call	gc
c7f979 5c			pop	rsp
c7f97a 4989c4			mov	r12,rax
c7f97d 58			pop	rax
c7f97e 415b			pop	r11
c7f980 415a			pop	r10
c7f982 4159			pop	r9
c7f984 4158			pop	r8
c7f986 59			pop	rcx
c7f987 5a			pop	rdx
c7f988 5e			pop	rsi
c7f989 5f			pop	rdi
c7f98a eb04			jmp	short alloc-end14
c7f98c			alloc-ok14:
c7f98c 4983ec10			sub	r12,byte 16
c7f990			alloc-end14:
c7f990 48c7c076020000		mov	rax,dword 630
c7f997 49890424			mov	[r12],rax
c7f99b 48c7c050c6c901		mov	rax,dword 30000720
c7f9a2 4989442408		mov	[r12+8],rax
c7f9a7 498d442401		lea	rax,[r12+1]
c7f9ac 50			push	rax
c7f9ad			version42:
c7f9ad 58			pop	rax
c7f9ae 49894268			mov	[r10+104],rax
c7f9b2 6aee			push	qword byte -18
c7f9b4			version43:
c7f9b4 48c7c0eeffffff		mov	rax,dword -18
c7f9bb 49894270			mov	[r10+112],rax
c7f9bf			version44:
c7f9bf 50			push	rax
c7f9c0 53			push	rbx
c7f9c1 48b85080aa4e767f
c7f9c9 0000			mov	rax,140146102665296
c7f9cb 488b18			mov	rbx,[rax]
c7f9ce 48ffc3			inc	rbx
c7f9d1 488918			mov	[rax],rbx
c7f9d4 5b			pop	rbx
c7f9d5 58			pop	rax
c7f9d6 498d4424f0		lea	rax,[r12-16]
c7f9db 49bf0880aa4e767f
c7f9e3 0000			mov	r15,140146102665224
c7f9e5 493b4728			cmp	rax,[r15+40]
c7f9e9 7d38			jge	short alloc-ok15
c7f9eb 48c7c010000000		mov	rax,dword 16
c7f9f2 57			push	rdi
c7f9f3 56			push	rsi
c7f9f4 52			push	rdx
c7f9f5 51			push	rcx
c7f9f6 4150			push	r8
c7f9f8 4151			push	r9
c7f9fa 4152			push	r10
c7f9fc 4153			push	r11
c7f9fe 50			push	rax
c7f9ff 4889e7			mov	rdi,rsp
c7fa02 4883e4f0			and	rsp,byte -16
c7fa06 4883ec08			sub	rsp,byte 8
c7fa0a 57			push	rdi
c7fa0b e8c0666d01		call	gc
c7fa10 5c			pop	rsp
c7fa11 4989c4			mov	r12,rax
c7fa14 58			pop	rax
c7fa15 415b			pop	r11
c7fa17 415a			pop	r10
c7fa19 4159			pop	r9
c7fa1b 4158			pop	r8
c7fa1d 59			pop	rcx
c7fa1e 5a			pop	rdx
c7fa1f 5e			pop	rsi
c7fa20 5f			pop	rdi
c7fa21 eb04			jmp	short alloc-end15
c7fa23			alloc-ok15:
c7fa23 4983ec10			sub	r12,byte 16
c7fa27			alloc-end15:
c7fa27 48c7c076020000		mov	rax,dword 630
c7fa2e 49890424			mov	[r12],rax
c7fa32 48c7c040d6c901		mov	rax,dword 30004800
c7fa39 4989442408		mov	[r12+8],rax
c7fa3e 498d442401		lea	rax,[r12+1]
c7fa43 50			push	rax
c7fa44			version45:
c7fa44 58			pop	rax
c7fa45 49894270			mov	[r10+112],rax
c7fa49 6aee			push	qword byte -18
c7fa4b			version46:
c7fa4b 48c7c0eeffffff		mov	rax,dword -18
c7fa52 49894278			mov	[r10+120],rax
c7fa56			version47:
c7fa56 50			push	rax
c7fa57 53			push	rbx
c7fa58 48b85080aa4e767f
c7fa60 0000			mov	rax,140146102665296
c7fa62 488b18			mov	rbx,[rax]
c7fa65 48ffc3			inc	rbx
c7fa68 488918			mov	[rax],rbx
c7fa6b 5b			pop	rbx
c7fa6c 58			pop	rax
c7fa6d 498d4424f0		lea	rax,[r12-16]
c7fa72 49bf0880aa4e767f
c7fa7a 0000			mov	r15,140146102665224
c7fa7c 493b4728			cmp	rax,[r15+40]
c7fa80 7d38			jge	short alloc-ok16
c7fa82 48c7c010000000		mov	rax,dword 16
c7fa89 57			push	rdi
c7fa8a 56			push	rsi
c7fa8b 52			push	rdx
c7fa8c 51			push	rcx
c7fa8d 4150			push	r8
c7fa8f 4151			push	r9
c7fa91 4152			push	r10
c7fa93 4153			push	r11
c7fa95 50			push	rax
c7fa96 4889e7			mov	rdi,rsp
c7fa99 4883e4f0			and	rsp,byte -16
c7fa9d 4883ec08			sub	rsp,byte 8
c7faa1 57			push	rdi
c7faa2 e829666d01		call	gc
c7faa7 5c			pop	rsp
c7faa8 4989c4			mov	r12,rax
c7faab 58			pop	rax
c7faac 415b			pop	r11
c7faae 415a			pop	r10
c7fab0 4159			pop	r9
c7fab2 4158			pop	r8
c7fab4 59			pop	rcx
c7fab5 5a			pop	rdx
c7fab6 5e			pop	rsi
c7fab7 5f			pop	rdi
c7fab8 eb04			jmp	short alloc-end16
c7faba			alloc-ok16:
c7faba 4983ec10			sub	r12,byte 16
c7fabe			alloc-end16:
c7fabe 48c7c076020000		mov	rax,dword 630
c7fac5 49890424			mov	[r12],rax
c7fac9 48c7c030e6c901		mov	rax,dword 30008880
c7fad0 4989442408		mov	[r12+8],rax
c7fad5 498d442401		lea	rax,[r12+1]
c7fada 50			push	rax
c7fadb			version48:
c7fadb 58			pop	rax
c7fadc 49894278			mov	[r10+120],rax
c7fae0 6aee			push	qword byte -18
c7fae2			version49:
c7fae2 48c7c0eeffffff		mov	rax,dword -18
c7fae9 49898280000000		mov	[r10+128],rax
c7faf0			version50:
c7faf0 50			push	rax
c7faf1 53			push	rbx
c7faf2 48b85080aa4e767f
c7fafa 0000			mov	rax,140146102665296
c7fafc 488b18			mov	rbx,[rax]
c7faff 48ffc3			inc	rbx
c7fb02 488918			mov	[rax],rbx
c7fb05 5b			pop	rbx
c7fb06 58			pop	rax
c7fb07 498d4424f0		lea	rax,[r12-16]
c7fb0c 49bf0880aa4e767f
c7fb14 0000			mov	r15,140146102665224
c7fb16 493b4728			cmp	rax,[r15+40]
c7fb1a 7d38			jge	short alloc-ok17
c7fb1c 48c7c010000000		mov	rax,dword 16
c7fb23 57			push	rdi
c7fb24 56			push	rsi
c7fb25 52			push	rdx
c7fb26 51			push	rcx
c7fb27 4150			push	r8
c7fb29 4151			push	r9
c7fb2b 4152			push	r10
c7fb2d 4153			push	r11
c7fb2f 50			push	rax
c7fb30 4889e7			mov	rdi,rsp
c7fb33 4883e4f0			and	rsp,byte -16
c7fb37 4883ec08			sub	rsp,byte 8
c7fb3b 57			push	rdi
c7fb3c e88f656d01		call	gc
c7fb41 5c			pop	rsp
c7fb42 4989c4			mov	r12,rax
c7fb45 58			pop	rax
c7fb46 415b			pop	r11
c7fb48 415a			pop	r10
c7fb4a 4159			pop	r9
c7fb4c 4158			pop	r8
c7fb4e 59			pop	rcx
c7fb4f 5a			pop	rdx
c7fb50 5e			pop	rsi
c7fb51 5f			pop	rdi
c7fb52 eb04			jmp	short alloc-end17
c7fb54			alloc-ok17:
c7fb54 4983ec10			sub	r12,byte 16
c7fb58			alloc-end17:
c7fb58 48c7c076020000		mov	rax,dword 630
c7fb5f 49890424			mov	[r12],rax
c7fb63 48c7c020f6c901		mov	rax,dword 30012960
c7fb6a 4989442408		mov	[r12+8],rax
c7fb6f 498d442401		lea	rax,[r12+1]
c7fb74 50			push	rax
c7fb75			version51:
c7fb75 58			pop	rax
c7fb76 49898280000000		mov	[r10+128],rax
c7fb7d 6aee			push	qword byte -18
c7fb7f			version52:
c7fb7f 48c7c0eeffffff		mov	rax,dword -18
c7fb86 49898288000000		mov	[r10+136],rax
c7fb8d			version53:
c7fb8d 50			push	rax
c7fb8e 53			push	rbx
c7fb8f 48b85080aa4e767f
c7fb97 0000			mov	rax,140146102665296
c7fb99 488b18			mov	rbx,[rax]
c7fb9c 48ffc3			inc	rbx
c7fb9f 488918			mov	[rax],rbx
c7fba2 5b			pop	rbx
c7fba3 58			pop	rax
c7fba4 498d4424f0		lea	rax,[r12-16]
c7fba9 49bf0880aa4e767f
c7fbb1 0000			mov	r15,140146102665224
c7fbb3 493b4728			cmp	rax,[r15+40]
c7fbb7 7d38			jge	short alloc-ok18
c7fbb9 48c7c010000000		mov	rax,dword 16
c7fbc0 57			push	rdi
c7fbc1 56			push	rsi
c7fbc2 52			push	rdx
c7fbc3 51			push	rcx
c7fbc4 4150			push	r8
c7fbc6 4151			push	r9
c7fbc8 4152			push	r10
c7fbca 4153			push	r11
c7fbcc 50			push	rax
c7fbcd 4889e7			mov	rdi,rsp
c7fbd0 4883e4f0			and	rsp,byte -16
c7fbd4 4883ec08			sub	rsp,byte 8
c7fbd8 57			push	rdi
c7fbd9 e8f2646d01		call	gc
c7fbde 5c			pop	rsp
c7fbdf 4989c4			mov	r12,rax
c7fbe2 58			pop	rax
c7fbe3 415b			pop	r11
c7fbe5 415a			pop	r10
c7fbe7 4159			pop	r9
c7fbe9 4158			pop	r8
c7fbeb 59			pop	rcx
c7fbec 5a			pop	rdx
c7fbed 5e			pop	rsi
c7fbee 5f			pop	rdi
c7fbef eb04			jmp	short alloc-end18
c7fbf1			alloc-ok18:
c7fbf1 4983ec10			sub	r12,byte 16
c7fbf5			alloc-end18:
c7fbf5 48c7c076020000		mov	rax,dword 630
c7fbfc 49890424			mov	[r12],rax
c7fc00 48c7c01006ca01		mov	rax,dword 30017040
c7fc07 4989442408		mov	[r12+8],rax
c7fc0c 498d442401		lea	rax,[r12+1]
c7fc11 50			push	rax
c7fc12			version54:
c7fc12 58			pop	rax
c7fc13 49898288000000		mov	[r10+136],rax
c7fc1a 6aee			push	qword byte -18
c7fc1c			version55:
c7fc1c 48c7c0eeffffff		mov	rax,dword -18
c7fc23 49898290000000		mov	[r10+144],rax
c7fc2a			version56:
c7fc2a 50			push	rax
c7fc2b 53			push	rbx
c7fc2c 48b85080aa4e767f
c7fc34 0000			mov	rax,140146102665296
c7fc36 488b18			mov	rbx,[rax]
c7fc39 48ffc3			inc	rbx
c7fc3c 488918			mov	[rax],rbx
c7fc3f 5b			pop	rbx
c7fc40 58			pop	rax
c7fc41 498d4424f0		lea	rax,[r12-16]
c7fc46 49bf0880aa4e767f
c7fc4e 0000			mov	r15,140146102665224
c7fc50 493b4728			cmp	rax,[r15+40]
c7fc54 7d38			jge	short alloc-ok19
c7fc56 48c7c010000000		mov	rax,dword 16
c7fc5d 57			push	rdi
c7fc5e 56			push	rsi
c7fc5f 52			push	rdx
c7fc60 51			push	rcx
c7fc61 4150			push	r8
c7fc63 4151			push	r9
c7fc65 4152			push	r10
c7fc67 4153			push	r11
c7fc69 50			push	rax
c7fc6a 4889e7			mov	rdi,rsp
c7fc6d 4883e4f0			and	rsp,byte -16
c7fc71 4883ec08			sub	rsp,byte 8
c7fc75 57			push	rdi
c7fc76 e855646d01		call	gc
c7fc7b 5c			pop	rsp
c7fc7c 4989c4			mov	r12,rax
c7fc7f 58			pop	rax
c7fc80 415b			pop	r11
c7fc82 415a			pop	r10
c7fc84 4159			pop	r9
c7fc86 4158			pop	r8
c7fc88 59			pop	rcx
c7fc89 5a			pop	rdx
c7fc8a 5e			pop	rsi
c7fc8b 5f			pop	rdi
c7fc8c eb04			jmp	short alloc-end19
c7fc8e			alloc-ok19:
c7fc8e 4983ec10			sub	r12,byte 16
c7fc92			alloc-end19:
c7fc92 48c7c076020000		mov	rax,dword 630
c7fc99 49890424			mov	[r12],rax
c7fc9d 48c7c00016ca01		mov	rax,dword 30021120
c7fca4 4989442408		mov	[r12+8],rax
c7fca9 498d442401		lea	rax,[r12+1]
c7fcae 50			push	rax
c7fcaf			version57:
c7fcaf 58			pop	rax
c7fcb0 49898290000000		mov	[r10+144],rax
c7fcb7 6aee			push	qword byte -18
c7fcb9			version58:
c7fcb9 48c7c0eeffffff		mov	rax,dword -18
c7fcc0 49898298000000		mov	[r10+152],rax
c7fcc7			version59:
c7fcc7 50			push	rax
c7fcc8 53			push	rbx
c7fcc9 48b85080aa4e767f
c7fcd1 0000			mov	rax,140146102665296
c7fcd3 488b18			mov	rbx,[rax]
c7fcd6 48ffc3			inc	rbx
c7fcd9 488918			mov	[rax],rbx
c7fcdc 5b			pop	rbx
c7fcdd 58			pop	rax
c7fcde 498d4424f0		lea	rax,[r12-16]
c7fce3 49bf0880aa4e767f
c7fceb 0000			mov	r15,140146102665224
c7fced 493b4728			cmp	rax,[r15+40]
c7fcf1 7d38			jge	short alloc-ok20
c7fcf3 48c7c010000000		mov	rax,dword 16
c7fcfa 57			push	rdi
c7fcfb 56			push	rsi
c7fcfc 52			push	rdx
c7fcfd 51			push	rcx
c7fcfe 4150			push	r8
c7fd00 4151			push	r9
c7fd02 4152			push	r10
c7fd04 4153			push	r11
c7fd06 50			push	rax
c7fd07 4889e7			mov	rdi,rsp
c7fd0a 4883e4f0			and	rsp,byte -16
c7fd0e 4883ec08			sub	rsp,byte 8
c7fd12 57			push	rdi
c7fd13 e8b8636d01		call	gc
c7fd18 5c			pop	rsp
c7fd19 4989c4			mov	r12,rax
c7fd1c 58			pop	rax
c7fd1d 415b			pop	r11
c7fd1f 415a			pop	r10
c7fd21 4159			pop	r9
c7fd23 4158			pop	r8
c7fd25 59			pop	rcx
c7fd26 5a			pop	rdx
c7fd27 5e			pop	rsi
c7fd28 5f			pop	rdi
c7fd29 eb04			jmp	short alloc-end20
c7fd2b			alloc-ok20:
c7fd2b 4983ec10			sub	r12,byte 16
c7fd2f			alloc-end20:
c7fd2f 48c7c076020000		mov	rax,dword 630
c7fd36 49890424			mov	[r12],rax
c7fd3a 48c7c0f025ca01		mov	rax,dword 30025200
c7fd41 4989442408		mov	[r12+8],rax
c7fd46 498d442401		lea	rax,[r12+1]
c7fd4b 50			push	rax
c7fd4c			version60:
c7fd4c 58			pop	rax
c7fd4d 49898298000000		mov	[r10+152],rax
c7fd54 6aee			push	qword byte -18
c7fd56			version61:
c7fd56 48c7c0eeffffff		mov	rax,dword -18
c7fd5d 498982a0000000		mov	[r10+160],rax
c7fd64			version62:
c7fd64 50			push	rax
c7fd65 53			push	rbx
c7fd66 48b85080aa4e767f
c7fd6e 0000			mov	rax,140146102665296
c7fd70 488b18			mov	rbx,[rax]
c7fd73 48ffc3			inc	rbx
c7fd76 488918			mov	[rax],rbx
c7fd79 5b			pop	rbx
c7fd7a 58			pop	rax
c7fd7b 498d4424f0		lea	rax,[r12-16]
c7fd80 49bf0880aa4e767f
c7fd88 0000			mov	r15,140146102665224
c7fd8a 493b4728			cmp	rax,[r15+40]
c7fd8e 7d38			jge	short alloc-ok21
c7fd90 48c7c010000000		mov	rax,dword 16
c7fd97 57			push	rdi
c7fd98 56			push	rsi
c7fd99 52			push	rdx
c7fd9a 51			push	rcx
c7fd9b 4150			push	r8
c7fd9d 4151			push	r9
c7fd9f 4152			push	r10
c7fda1 4153			push	r11
c7fda3 50			push	rax
c7fda4 4889e7			mov	rdi,rsp
c7fda7 4883e4f0			and	rsp,byte -16
c7fdab 4883ec08			sub	rsp,byte 8
c7fdaf 57			push	rdi
c7fdb0 e81b636d01		call	gc
c7fdb5 5c			pop	rsp
c7fdb6 4989c4			mov	r12,rax
c7fdb9 58			pop	rax
c7fdba 415b			pop	r11
c7fdbc 415a			pop	r10
c7fdbe 4159			pop	r9
c7fdc0 4158			pop	r8
c7fdc2 59			pop	rcx
c7fdc3 5a			pop	rdx
c7fdc4 5e			pop	rsi
c7fdc5 5f			pop	rdi
c7fdc6 eb04			jmp	short alloc-end21
c7fdc8			alloc-ok21:
c7fdc8 4983ec10			sub	r12,byte 16
c7fdcc			alloc-end21:
c7fdcc 48c7c076020000		mov	rax,dword 630
c7fdd3 49890424			mov	[r12],rax
c7fdd7 48c7c02036da01		mov	rax,dword 31077920
c7fdde 4989442408		mov	[r12+8],rax
c7fde3 498d442401		lea	rax,[r12+1]
c7fde8 50			push	rax
c7fde9			version63:
c7fde9 58			pop	rax
c7fdea 498982a0000000		mov	[r10+160],rax
c7fdf1 6aee			push	qword byte -18
c7fdf3			version64:
c7fdf3 48c7c0eeffffff		mov	rax,dword -18
c7fdfa 498982a8000000		mov	[r10+168],rax
c7fe01			version65:
c7fe01 50			push	rax
c7fe02 53			push	rbx
c7fe03 48b85080aa4e767f
c7fe0b 0000			mov	rax,140146102665296
c7fe0d 488b18			mov	rbx,[rax]
c7fe10 48ffc3			inc	rbx
c7fe13 488918			mov	[rax],rbx
c7fe16 5b			pop	rbx
c7fe17 58			pop	rax
c7fe18 498d4424f0		lea	rax,[r12-16]
c7fe1d 49bf0880aa4e767f
c7fe25 0000			mov	r15,140146102665224
c7fe27 493b4728			cmp	rax,[r15+40]
c7fe2b 7d38			jge	short alloc-ok22
c7fe2d 48c7c010000000		mov	rax,dword 16
c7fe34 57			push	rdi
c7fe35 56			push	rsi
c7fe36 52			push	rdx
c7fe37 51			push	rcx
c7fe38 4150			push	r8
c7fe3a 4151			push	r9
c7fe3c 4152			push	r10
c7fe3e 4153			push	r11
c7fe40 50			push	rax
c7fe41 4889e7			mov	rdi,rsp
c7fe44 4883e4f0			and	rsp,byte -16
c7fe48 4883ec08			sub	rsp,byte 8
c7fe4c 57			push	rdi
c7fe4d e87e626d01		call	gc
c7fe52 5c			pop	rsp
c7fe53 4989c4			mov	r12,rax
c7fe56 58			pop	rax
c7fe57 415b			pop	r11
c7fe59 415a			pop	r10
c7fe5b 4159			pop	r9
c7fe5d 4158			pop	r8
c7fe5f 59			pop	rcx
c7fe60 5a			pop	rdx
c7fe61 5e			pop	rsi
c7fe62 5f			pop	rdi
c7fe63 eb04			jmp	short alloc-end22
c7fe65			alloc-ok22:
c7fe65 4983ec10			sub	r12,byte 16
c7fe69			alloc-end22:
c7fe69 48c7c076020000		mov	rax,dword 630
c7fe70 49890424			mov	[r12],rax
c7fe74 48c7c01046da01		mov	rax,dword 31082000
c7fe7b 4989442408		mov	[r12+8],rax
c7fe80 498d442401		lea	rax,[r12+1]
c7fe85 50			push	rax
c7fe86			version66:
c7fe86 58			pop	rax
c7fe87 498982a8000000		mov	[r10+168],rax
c7fe8e 6aee			push	qword byte -18
c7fe90			version67:
c7fe90 48c7c0eeffffff		mov	rax,dword -18
c7fe97 498982b0000000		mov	[r10+176],rax
c7fe9e			version68:
c7fe9e 50			push	rax
c7fe9f 53			push	rbx
c7fea0 48b85080aa4e767f
c7fea8 0000			mov	rax,140146102665296
c7feaa 488b18			mov	rbx,[rax]
c7fead 48ffc3			inc	rbx
c7feb0 488918			mov	[rax],rbx
c7feb3 5b			pop	rbx
c7feb4 58			pop	rax
c7feb5 498d4424f0		lea	rax,[r12-16]
c7feba 49bf0880aa4e767f
c7fec2 0000			mov	r15,140146102665224
c7fec4 493b4728			cmp	rax,[r15+40]
c7fec8 7d38			jge	short alloc-ok23
c7feca 48c7c010000000		mov	rax,dword 16
c7fed1 57			push	rdi
c7fed2 56			push	rsi
c7fed3 52			push	rdx
c7fed4 51			push	rcx
c7fed5 4150			push	r8
c7fed7 4151			push	r9
c7fed9 4152			push	r10
c7fedb 4153			push	r11
c7fedd 50			push	rax
c7fede 4889e7			mov	rdi,rsp
c7fee1 4883e4f0			and	rsp,byte -16
c7fee5 4883ec08			sub	rsp,byte 8
c7fee9 57			push	rdi
c7feea e8e1616d01		call	gc
c7feef 5c			pop	rsp
c7fef0 4989c4			mov	r12,rax
c7fef3 58			pop	rax
c7fef4 415b			pop	r11
c7fef6 415a			pop	r10
c7fef8 4159			pop	r9
c7fefa 4158			pop	r8
c7fefc 59			pop	rcx
c7fefd 5a			pop	rdx
c7fefe 5e			pop	rsi
c7feff 5f			pop	rdi
c7ff00 eb04			jmp	short alloc-end23
c7ff02			alloc-ok23:
c7ff02 4983ec10			sub	r12,byte 16
c7ff06			alloc-end23:
c7ff06 48c7c076020000		mov	rax,dword 630
c7ff0d 49890424			mov	[r12],rax
c7ff11 48c7c00056da01		mov	rax,dword 31086080
c7ff18 4989442408		mov	[r12+8],rax
c7ff1d 498d442401		lea	rax,[r12+1]
c7ff22 50			push	rax
c7ff23			version69:
c7ff23 58			pop	rax
c7ff24 498982b0000000		mov	[r10+176],rax
c7ff2b 6aee			push	qword byte -18
c7ff2d			version70:
c7ff2d 48c7c0eeffffff		mov	rax,dword -18
c7ff34 498982b8000000		mov	[r10+184],rax
c7ff3b			version71:
c7ff3b 50			push	rax
c7ff3c 53			push	rbx
c7ff3d 48b85080aa4e767f
c7ff45 0000			mov	rax,140146102665296
c7ff47 488b18			mov	rbx,[rax]
c7ff4a 48ffc3			inc	rbx
c7ff4d 488918			mov	[rax],rbx
c7ff50 5b			pop	rbx
c7ff51 58			pop	rax
c7ff52 498d4424f0		lea	rax,[r12-16]
c7ff57 49bf0880aa4e767f
c7ff5f 0000			mov	r15,140146102665224
c7ff61 493b4728			cmp	rax,[r15+40]
c7ff65 7d38			jge	short alloc-ok24
c7ff67 48c7c010000000		mov	rax,dword 16
c7ff6e 57			push	rdi
c7ff6f 56			push	rsi
c7ff70 52			push	rdx
c7ff71 51			push	rcx
c7ff72 4150			push	r8
c7ff74 4151			push	r9
c7ff76 4152			push	r10
c7ff78 4153			push	r11
c7ff7a 50			push	rax
c7ff7b 4889e7			mov	rdi,rsp
c7ff7e 4883e4f0			and	rsp,byte -16
c7ff82 4883ec08			sub	rsp,byte 8
c7ff86 57			push	rdi
c7ff87 e844616d01		call	gc
c7ff8c 5c			pop	rsp
c7ff8d 4989c4			mov	r12,rax
c7ff90 58			pop	rax
c7ff91 415b			pop	r11
c7ff93 415a			pop	r10
c7ff95 4159			pop	r9
c7ff97 4158			pop	r8
c7ff99 59			pop	rcx
c7ff9a 5a			pop	rdx
c7ff9b 5e			pop	rsi
c7ff9c 5f			pop	rdi
c7ff9d eb04			jmp	short alloc-end24
c7ff9f			alloc-ok24:
c7ff9f 4983ec10			sub	r12,byte 16
c7ffa3			alloc-end24:
c7ffa3 48c7c076020000		mov	rax,dword 630
c7ffaa 49890424			mov	[r12],rax
c7ffae 48c7c010e6da01		mov	rax,dword 31122960
c7ffb5 4989442408		mov	[r12+8],rax
c7ffba 498d442401		lea	rax,[r12+1]
c7ffbf 50			push	rax
c7ffc0			version72:
c7ffc0 58			pop	rax
c7ffc1 498982b8000000		mov	[r10+184],rax
c7ffc8 6aee			push	qword byte -18
c7ffca			version73:
c7ffca 48c7c0eeffffff		mov	rax,dword -18
c7ffd1 498982c0000000		mov	[r10+192],rax
c7ffd8			version74:
c7ffd8 50			push	rax
c7ffd9 53			push	rbx
c7ffda 48b85080aa4e767f
c7ffe2 0000			mov	rax,140146102665296
c7ffe4 488b18			mov	rbx,[rax]
c7ffe7 48ffc3			inc	rbx
c7ffea 488918			mov	[rax],rbx
c7ffed 5b			pop	rbx
c7ffee 58			pop	rax
c7ffef 498d4424f0		lea	rax,[r12-16]
c7fff4 49bf0880aa4e767f
c7fffc 0000			mov	r15,140146102665224
c7fffe 493b4728			cmp	rax,[r15+40]
c80002 7d38			jge	short alloc-ok25
c80004 48c7c010000000		mov	rax,dword 16
c8000b 57			push	rdi
c8000c 56			push	rsi
c8000d 52			push	rdx
c8000e 51			push	rcx
c8000f 4150			push	r8
c80011 4151			push	r9
c80013 4152			push	r10
c80015 4153			push	r11
c80017 50			push	rax
c80018 4889e7			mov	rdi,rsp
c8001b 4883e4f0			and	rsp,byte -16
c8001f 4883ec08			sub	rsp,byte 8
c80023 57			push	rdi
c80024 e8a7606d01		call	gc
c80029 5c			pop	rsp
c8002a 4989c4			mov	r12,rax
c8002d 58			pop	rax
c8002e 415b			pop	r11
c80030 415a			pop	r10
c80032 4159			pop	r9
c80034 4158			pop	r8
c80036 59			pop	rcx
c80037 5a			pop	rdx
c80038 5e			pop	rsi
c80039 5f			pop	rdi
c8003a eb04			jmp	short alloc-end25
c8003c			alloc-ok25:
c8003c 4983ec10			sub	r12,byte 16
c80040			alloc-end25:
c80040 48c7c076020000		mov	rax,dword 630
c80047 49890424			mov	[r12],rax
c8004b 48c7c000f6da01		mov	rax,dword 31127040
c80052 4989442408		mov	[r12+8],rax
c80057 498d442401		lea	rax,[r12+1]
c8005c 50			push	rax
c8005d			version75:
c8005d 58			pop	rax
c8005e 498982c0000000		mov	[r10+192],rax
c80065 6aee			push	qword byte -18
c80067			version76:
c80067 48c7c0eeffffff		mov	rax,dword -18
c8006e 498982c8000000		mov	[r10+200],rax
c80075			version77:
c80075 50			push	rax
c80076 53			push	rbx
c80077 48b85080aa4e767f
c8007f 0000			mov	rax,140146102665296
c80081 488b18			mov	rbx,[rax]
c80084 48ffc3			inc	rbx
c80087 488918			mov	[rax],rbx
c8008a 5b			pop	rbx
c8008b 58			pop	rax
c8008c 498d4424f0		lea	rax,[r12-16]
c80091 49bf0880aa4e767f
c80099 0000			mov	r15,140146102665224
c8009b 493b4728			cmp	rax,[r15+40]
c8009f 7d38			jge	short alloc-ok26
c800a1 48c7c010000000		mov	rax,dword 16
c800a8 57			push	rdi
c800a9 56			push	rsi
c800aa 52			push	rdx
c800ab 51			push	rcx
c800ac 4150			push	r8
c800ae 4151			push	r9
c800b0 4152			push	r10
c800b2 4153			push	r11
c800b4 50			push	rax
c800b5 4889e7			mov	rdi,rsp
c800b8 4883e4f0			and	rsp,byte -16
c800bc 4883ec08			sub	rsp,byte 8
c800c0 57			push	rdi
c800c1 e80a606d01		call	gc
c800c6 5c			pop	rsp
c800c7 4989c4			mov	r12,rax
c800ca 58			pop	rax
c800cb 415b			pop	r11
c800cd 415a			pop	r10
c800cf 4159			pop	r9
c800d1 4158			pop	r8
c800d3 59			pop	rcx
c800d4 5a			pop	rdx
c800d5 5e			pop	rsi
c800d6 5f			pop	rdi
c800d7 eb04			jmp	short alloc-end26
c800d9			alloc-ok26:
c800d9 4983ec10			sub	r12,byte 16
c800dd			alloc-end26:
c800dd 48c7c076020000		mov	rax,dword 630
c800e4 49890424			mov	[r12],rax
c800e8 48c7c0f005db01		mov	rax,dword 31131120
c800ef 4989442408		mov	[r12+8],rax
c800f4 498d442401		lea	rax,[r12+1]
c800f9 50			push	rax
c800fa			version78:
c800fa 58			pop	rax
c800fb 498982c8000000		mov	[r10+200],rax
c80102 6aee			push	qword byte -18
c80104			version79:
c80104 48c7c0eeffffff		mov	rax,dword -18
c8010b 498982d0000000		mov	[r10+208],rax
c80112			version80:
c80112 50			push	rax
c80113 53			push	rbx
c80114 48b85080aa4e767f
c8011c 0000			mov	rax,140146102665296
c8011e 488b18			mov	rbx,[rax]
c80121 48ffc3			inc	rbx
c80124 488918			mov	[rax],rbx
c80127 5b			pop	rbx
c80128 58			pop	rax
c80129 498d4424f0		lea	rax,[r12-16]
c8012e 49bf0880aa4e767f
c80136 0000			mov	r15,140146102665224
c80138 493b4728			cmp	rax,[r15+40]
c8013c 7d38			jge	short alloc-ok27
c8013e 48c7c010000000		mov	rax,dword 16
c80145 57			push	rdi
c80146 56			push	rsi
c80147 52			push	rdx
c80148 51			push	rcx
c80149 4150			push	r8
c8014b 4151			push	r9
c8014d 4152			push	r10
c8014f 4153			push	r11
c80151 50			push	rax
c80152 4889e7			mov	rdi,rsp
c80155 4883e4f0			and	rsp,byte -16
c80159 4883ec08			sub	rsp,byte 8
c8015d 57			push	rdi
c8015e e86d5f6d01		call	gc
c80163 5c			pop	rsp
c80164 4989c4			mov	r12,rax
c80167 58			pop	rax
c80168 415b			pop	r11
c8016a 415a			pop	r10
c8016c 4159			pop	r9
c8016e 4158			pop	r8
c80170 59			pop	rcx
c80171 5a			pop	rdx
c80172 5e			pop	rsi
c80173 5f			pop	rdi
c80174 eb04			jmp	short alloc-end27
c80176			alloc-ok27:
c80176 4983ec10			sub	r12,byte 16
c8017a			alloc-end27:
c8017a 48c7c076020000		mov	rax,dword 630
c80181 49890424			mov	[r12],rax
c80185 48c7c0e015db01		mov	rax,dword 31135200
c8018c 4989442408		mov	[r12+8],rax
c80191 498d442401		lea	rax,[r12+1]
c80196 50			push	rax
c80197			version81:
c80197 58			pop	rax
c80198 498982d0000000		mov	[r10+208],rax
c8019f 6aee			push	qword byte -18
c801a1			version82:
c801a1 48c7c0eeffffff		mov	rax,dword -18
c801a8 498982d8000000		mov	[r10+216],rax
c801af			version83:
c801af 50			push	rax
c801b0 53			push	rbx
c801b1 48b85080aa4e767f
c801b9 0000			mov	rax,140146102665296
c801bb 488b18			mov	rbx,[rax]
c801be 48ffc3			inc	rbx
c801c1 488918			mov	[rax],rbx
c801c4 5b			pop	rbx
c801c5 58			pop	rax
c801c6 498d4424f0		lea	rax,[r12-16]
c801cb 49bf0880aa4e767f
c801d3 0000			mov	r15,140146102665224
c801d5 493b4728			cmp	rax,[r15+40]
c801d9 7d38			jge	short alloc-ok28
c801db 48c7c010000000		mov	rax,dword 16
c801e2 57			push	rdi
c801e3 56			push	rsi
c801e4 52			push	rdx
c801e5 51			push	rcx
c801e6 4150			push	r8
c801e8 4151			push	r9
c801ea 4152			push	r10
c801ec 4153			push	r11
c801ee 50			push	rax
c801ef 4889e7			mov	rdi,rsp
c801f2 4883e4f0			and	rsp,byte -16
c801f6 4883ec08			sub	rsp,byte 8
c801fa 57			push	rdi
c801fb e8d05e6d01		call	gc
c80200 5c			pop	rsp
c80201 4989c4			mov	r12,rax
c80204 58			pop	rax
c80205 415b			pop	r11
c80207 415a			pop	r10
c80209 4159			pop	r9
c8020b 4158			pop	r8
c8020d 59			pop	rcx
c8020e 5a			pop	rdx
c8020f 5e			pop	rsi
c80210 5f			pop	rdi
c80211 eb04			jmp	short alloc-end28
c80213			alloc-ok28:
c80213 4983ec10			sub	r12,byte 16
c80217			alloc-end28:
c80217 48c7c076020000		mov	rax,dword 630
c8021e 49890424			mov	[r12],rax
c80222 48c7c0d025db01		mov	rax,dword 31139280
c80229 4989442408		mov	[r12+8],rax
c8022e 498d442401		lea	rax,[r12+1]
c80233 50			push	rax
c80234			version84:
c80234 58			pop	rax
c80235 498982d8000000		mov	[r10+216],rax
c8023c 6aee			push	qword byte -18
c8023e			version85:
c8023e 48c7c0eeffffff		mov	rax,dword -18
c80245 498982e0000000		mov	[r10+224],rax
c8024c			version86:
c8024c 50			push	rax
c8024d 53			push	rbx
c8024e 48b85080aa4e767f
c80256 0000			mov	rax,140146102665296
c80258 488b18			mov	rbx,[rax]
c8025b 48ffc3			inc	rbx
c8025e 488918			mov	[rax],rbx
c80261 5b			pop	rbx
c80262 58			pop	rax
c80263 498d4424f0		lea	rax,[r12-16]
c80268 49bf0880aa4e767f
c80270 0000			mov	r15,140146102665224
c80272 493b4728			cmp	rax,[r15+40]
c80276 7d38			jge	short alloc-ok29
c80278 48c7c010000000		mov	rax,dword 16
c8027f 57			push	rdi
c80280 56			push	rsi
c80281 52			push	rdx
c80282 51			push	rcx
c80283 4150			push	r8
c80285 4151			push	r9
c80287 4152			push	r10
c80289 4153			push	r11
c8028b 50			push	rax
c8028c 4889e7			mov	rdi,rsp
c8028f 4883e4f0			and	rsp,byte -16
c80293 4883ec08			sub	rsp,byte 8
c80297 57			push	rdi
c80298 e8335e6d01		call	gc
c8029d 5c			pop	rsp
c8029e 4989c4			mov	r12,rax
c802a1 58			pop	rax
c802a2 415b			pop	r11
c802a4 415a			pop	r10
c802a6 4159			pop	r9
c802a8 4158			pop	r8
c802aa 59			pop	rcx
c802ab 5a			pop	rdx
c802ac 5e			pop	rsi
c802ad 5f			pop	rdi
c802ae eb04			jmp	short alloc-end29
c802b0			alloc-ok29:
c802b0 4983ec10			sub	r12,byte 16
c802b4			alloc-end29:
c802b4 48c7c076020000		mov	rax,dword 630
c802bb 49890424			mov	[r12],rax
c802bf 48c7c0c035db01		mov	rax,dword 31143360
c802c6 4989442408		mov	[r12+8],rax
c802cb 498d442401		lea	rax,[r12+1]
c802d0 50			push	rax
c802d1			version87:
c802d1 58			pop	rax
c802d2 498982e0000000		mov	[r10+224],rax
c802d9 6aee			push	qword byte -18
c802db			version88:
c802db 48c7c0eeffffff		mov	rax,dword -18
c802e2 498982e8000000		mov	[r10+232],rax
c802e9			version89:
c802e9 50			push	rax
c802ea 53			push	rbx
c802eb 48b85080aa4e767f
c802f3 0000			mov	rax,140146102665296
c802f5 488b18			mov	rbx,[rax]
c802f8 48ffc3			inc	rbx
c802fb 488918			mov	[rax],rbx
c802fe 5b			pop	rbx
c802ff 58			pop	rax
c80300 498d4424f0		lea	rax,[r12-16]
c80305 49bf0880aa4e767f
c8030d 0000			mov	r15,140146102665224
c8030f 493b4728			cmp	rax,[r15+40]
c80313 7d38			jge	short alloc-ok30
c80315 48c7c010000000		mov	rax,dword 16
c8031c 57			push	rdi
c8031d 56			push	rsi
c8031e 52			push	rdx
c8031f 51			push	rcx
c80320 4150			push	r8
c80322 4151			push	r9
c80324 4152			push	r10
c80326 4153			push	r11
c80328 50			push	rax
c80329 4889e7			mov	rdi,rsp
c8032c 4883e4f0			and	rsp,byte -16
c80330 4883ec08			sub	rsp,byte 8
c80334 57			push	rdi
c80335 e8965d6d01		call	gc
c8033a 5c			pop	rsp
c8033b 4989c4			mov	r12,rax
c8033e 58			pop	rax
c8033f 415b			pop	r11
c80341 415a			pop	r10
c80343 4159			pop	r9
c80345 4158			pop	r8
c80347 59			pop	rcx
c80348 5a			pop	rdx
c80349 5e			pop	rsi
c8034a 5f			pop	rdi
c8034b eb04			jmp	short alloc-end30
c8034d			alloc-ok30:
c8034d 4983ec10			sub	r12,byte 16
c80351			alloc-end30:
c80351 48c7c076020000		mov	rax,dword 630
c80358 49890424			mov	[r12],rax
c8035c 48c7c0b045db01		mov	rax,dword 31147440
c80363 4989442408		mov	[r12+8],rax
c80368 498d442401		lea	rax,[r12+1]
c8036d 50			push	rax
c8036e			version90:
c8036e 58			pop	rax
c8036f 498982e8000000		mov	[r10+232],rax
c80376 6aee			push	qword byte -18
c80378			version91:
c80378 48c7c0eeffffff		mov	rax,dword -18
c8037f 498982f0000000		mov	[r10+240],rax
c80386			version92:
c80386 50			push	rax
c80387 53			push	rbx
c80388 48b85080aa4e767f
c80390 0000			mov	rax,140146102665296
c80392 488b18			mov	rbx,[rax]
c80395 48ffc3			inc	rbx
c80398 488918			mov	[rax],rbx
c8039b 5b			pop	rbx
c8039c 58			pop	rax
c8039d 498d4424f0		lea	rax,[r12-16]
c803a2 49bf0880aa4e767f
c803aa 0000			mov	r15,140146102665224
c803ac 493b4728			cmp	rax,[r15+40]
c803b0 7d38			jge	short alloc-ok31
c803b2 48c7c010000000		mov	rax,dword 16
c803b9 57			push	rdi
c803ba 56			push	rsi
c803bb 52			push	rdx
c803bc 51			push	rcx
c803bd 4150			push	r8
c803bf 4151			push	r9
c803c1 4152			push	r10
c803c3 4153			push	r11
c803c5 50			push	rax
c803c6 4889e7			mov	rdi,rsp
c803c9 4883e4f0			and	rsp,byte -16
c803cd 4883ec08			sub	rsp,byte 8
c803d1 57			push	rdi
c803d2 e8f95c6d01		call	gc
c803d7 5c			pop	rsp
c803d8 4989c4			mov	r12,rax
c803db 58			pop	rax
c803dc 415b			pop	r11
c803de 415a			pop	r10
c803e0 4159			pop	r9
c803e2 4158			pop	r8
c803e4 59			pop	rcx
c803e5 5a			pop	rdx
c803e6 5e			pop	rsi
c803e7 5f			pop	rdi
c803e8 eb04			jmp	short alloc-end31
c803ea			alloc-ok31:
c803ea 4983ec10			sub	r12,byte 16
c803ee			alloc-end31:
c803ee 48c7c076020000		mov	rax,dword 630
c803f5 49890424			mov	[r12],rax
c803f9 48c7c0a055db01		mov	rax,dword 31151520
c80400 4989442408		mov	[r12+8],rax
c80405 498d442401		lea	rax,[r12+1]
c8040a 50			push	rax
c8040b			version93:
c8040b 58			pop	rax
c8040c 498982f0000000		mov	[r10+240],rax
c80413 6aee			push	qword byte -18
c80415			version94:
c80415 48c7c0eeffffff		mov	rax,dword -18
c8041c 498982f8000000		mov	[r10+248],rax
c80423			version95:
c80423 50			push	rax
c80424 53			push	rbx
c80425 48b85080aa4e767f
c8042d 0000			mov	rax,140146102665296
c8042f 488b18			mov	rbx,[rax]
c80432 48ffc3			inc	rbx
c80435 488918			mov	[rax],rbx
c80438 5b			pop	rbx
c80439 58			pop	rax
c8043a 498d4424f0		lea	rax,[r12-16]
c8043f 49bf0880aa4e767f
c80447 0000			mov	r15,140146102665224
c80449 493b4728			cmp	rax,[r15+40]
c8044d 7d38			jge	short alloc-ok32
c8044f 48c7c010000000		mov	rax,dword 16
c80456 57			push	rdi
c80457 56			push	rsi
c80458 52			push	rdx
c80459 51			push	rcx
c8045a 4150			push	r8
c8045c 4151			push	r9
c8045e 4152			push	r10
c80460 4153			push	r11
c80462 50			push	rax
c80463 4889e7			mov	rdi,rsp
c80466 4883e4f0			and	rsp,byte -16
c8046a 4883ec08			sub	rsp,byte 8
c8046e 57			push	rdi
c8046f e85c5c6d01		call	gc
c80474 5c			pop	rsp
c80475 4989c4			mov	r12,rax
c80478 58			pop	rax
c80479 415b			pop	r11
c8047b 415a			pop	r10
c8047d 4159			pop	r9
c8047f 4158			pop	r8
c80481 59			pop	rcx
c80482 5a			pop	rdx
c80483 5e			pop	rsi
c80484 5f			pop	rdi
c80485 eb04			jmp	short alloc-end32
c80487			alloc-ok32:
c80487 4983ec10			sub	r12,byte 16
c8048b			alloc-end32:
c8048b 48c7c076020000		mov	rax,dword 630
c80492 49890424			mov	[r12],rax
c80496 48c7c09065db01		mov	rax,dword 31155600
c8049d 4989442408		mov	[r12+8],rax
c804a2 498d442401		lea	rax,[r12+1]
c804a7 50			push	rax
c804a8			version96:
c804a8 58			pop	rax
c804a9 498982f8000000		mov	[r10+248],rax
c804b0 6aee			push	qword byte -18
c804b2			version97:
c804b2 48c7c0eeffffff		mov	rax,dword -18
c804b9 49898200010000		mov	[r10+256],rax
c804c0			version98:
c804c0 50			push	rax
c804c1 53			push	rbx
c804c2 48b85080aa4e767f
c804ca 0000			mov	rax,140146102665296
c804cc 488b18			mov	rbx,[rax]
c804cf 48ffc3			inc	rbx
c804d2 488918			mov	[rax],rbx
c804d5 5b			pop	rbx
c804d6 58			pop	rax
c804d7 498d4424f0		lea	rax,[r12-16]
c804dc 49bf0880aa4e767f
c804e4 0000			mov	r15,140146102665224
c804e6 493b4728			cmp	rax,[r15+40]
c804ea 7d38			jge	short alloc-ok33
c804ec 48c7c010000000		mov	rax,dword 16
c804f3 57			push	rdi
c804f4 56			push	rsi
c804f5 52			push	rdx
c804f6 51			push	rcx
c804f7 4150			push	r8
c804f9 4151			push	r9
c804fb 4152			push	r10
c804fd 4153			push	r11
c804ff 50			push	rax
c80500 4889e7			mov	rdi,rsp
c80503 4883e4f0			and	rsp,byte -16
c80507 4883ec08			sub	rsp,byte 8
c8050b 57			push	rdi
c8050c e8bf5b6d01		call	gc
c80511 5c			pop	rsp
c80512 4989c4			mov	r12,rax
c80515 58			pop	rax
c80516 415b			pop	r11
c80518 415a			pop	r10
c8051a 4159			pop	r9
c8051c 4158			pop	r8
c8051e 59			pop	rcx
c8051f 5a			pop	rdx
c80520 5e			pop	rsi
c80521 5f			pop	rdi
c80522 eb04			jmp	short alloc-end33
c80524			alloc-ok33:
c80524 4983ec10			sub	r12,byte 16
c80528			alloc-end33:
c80528 48c7c076020000		mov	rax,dword 630
c8052f 49890424			mov	[r12],rax
c80533 48c7c08075db01		mov	rax,dword 31159680
c8053a 4989442408		mov	[r12+8],rax
c8053f 498d442401		lea	rax,[r12+1]
c80544 50			push	rax
c80545			version99:
c80545 58			pop	rax
c80546 49898200010000		mov	[r10+256],rax
c8054d 6aee			push	qword byte -18
c8054f			version100:
c8054f 48c7c0eeffffff		mov	rax,dword -18
c80556 49898208010000		mov	[r10+264],rax
c8055d			version101:
c8055d 50			push	rax
c8055e 53			push	rbx
c8055f 48b85080aa4e767f
c80567 0000			mov	rax,140146102665296
c80569 488b18			mov	rbx,[rax]
c8056c 48ffc3			inc	rbx
c8056f 488918			mov	[rax],rbx
c80572 5b			pop	rbx
c80573 58			pop	rax
c80574 498d4424f0		lea	rax,[r12-16]
c80579 49bf0880aa4e767f
c80581 0000			mov	r15,140146102665224
c80583 493b4728			cmp	rax,[r15+40]
c80587 7d38			jge	short alloc-ok34
c80589 48c7c010000000		mov	rax,dword 16
c80590 57			push	rdi
c80591 56			push	rsi
c80592 52			push	rdx
c80593 51			push	rcx
c80594 4150			push	r8
c80596 4151			push	r9
c80598 4152			push	r10
c8059a 4153			push	r11
c8059c 50			push	rax
c8059d 4889e7			mov	rdi,rsp
c805a0 4883e4f0			and	rsp,byte -16
c805a4 4883ec08			sub	rsp,byte 8
c805a8 57			push	rdi
c805a9 e8225b6d01		call	gc
c805ae 5c			pop	rsp
c805af 4989c4			mov	r12,rax
c805b2 58			pop	rax
c805b3 415b			pop	r11
c805b5 415a			pop	r10
c805b7 4159			pop	r9
c805b9 4158			pop	r8
c805bb 59			pop	rcx
c805bc 5a			pop	rdx
c805bd 5e			pop	rsi
c805be 5f			pop	rdi
c805bf eb04			jmp	short alloc-end34
c805c1			alloc-ok34:
c805c1 4983ec10			sub	r12,byte 16
c805c5			alloc-end34:
c805c5 48c7c076020000		mov	rax,dword 630
c805cc 49890424			mov	[r12],rax
c805d0 48c7c07085db01		mov	rax,dword 31163760
c805d7 4989442408		mov	[r12+8],rax
c805dc 498d442401		lea	rax,[r12+1]
c805e1 50			push	rax
c805e2			version102:
c805e2 58			pop	rax
c805e3 49898208010000		mov	[r10+264],rax
c805ea 6aee			push	qword byte -18
c805ec			version103:
c805ec 48c7c0eeffffff		mov	rax,dword -18
c805f3 49898210010000		mov	[r10+272],rax
c805fa			version104:
c805fa 50			push	rax
c805fb 53			push	rbx
c805fc 48b85080aa4e767f
c80604 0000			mov	rax,140146102665296
c80606 488b18			mov	rbx,[rax]
c80609 48ffc3			inc	rbx
c8060c 488918			mov	[rax],rbx
c8060f 5b			pop	rbx
c80610 58			pop	rax
c80611 498d4424f0		lea	rax,[r12-16]
c80616 49bf0880aa4e767f
c8061e 0000			mov	r15,140146102665224
c80620 493b4728			cmp	rax,[r15+40]
c80624 7d38			jge	short alloc-ok35
c80626 48c7c010000000		mov	rax,dword 16
c8062d 57			push	rdi
c8062e 56			push	rsi
c8062f 52			push	rdx
c80630 51			push	rcx
c80631 4150			push	r8
c80633 4151			push	r9
c80635 4152			push	r10
c80637 4153			push	r11
c80639 50			push	rax
c8063a 4889e7			mov	rdi,rsp
c8063d 4883e4f0			and	rsp,byte -16
c80641 4883ec08			sub	rsp,byte 8
c80645 57			push	rdi
c80646 e8855a6d01		call	gc
c8064b 5c			pop	rsp
c8064c 4989c4			mov	r12,rax
c8064f 58			pop	rax
c80650 415b			pop	r11
c80652 415a			pop	r10
c80654 4159			pop	r9
c80656 4158			pop	r8
c80658 59			pop	rcx
c80659 5a			pop	rdx
c8065a 5e			pop	rsi
c8065b 5f			pop	rdi
c8065c eb04			jmp	short alloc-end35
c8065e			alloc-ok35:
c8065e 4983ec10			sub	r12,byte 16
c80662			alloc-end35:
c80662 48c7c076020000		mov	rax,dword 630
c80669 49890424			mov	[r12],rax
c8066d 48c7c06095db01		mov	rax,dword 31167840
c80674 4989442408		mov	[r12+8],rax
c80679 498d442401		lea	rax,[r12+1]
c8067e 50			push	rax
c8067f			version105:
c8067f 58			pop	rax
c80680 49898210010000		mov	[r10+272],rax
c80687 6aee			push	qword byte -18
c80689			version106:
c80689 48c7c0eeffffff		mov	rax,dword -18
c80690 49898218010000		mov	[r10+280],rax
c80697			version107:
c80697 50			push	rax
c80698 53			push	rbx
c80699 48b85080aa4e767f
c806a1 0000			mov	rax,140146102665296
c806a3 488b18			mov	rbx,[rax]
c806a6 48ffc3			inc	rbx
c806a9 488918			mov	[rax],rbx
c806ac 5b			pop	rbx
c806ad 58			pop	rax
c806ae 498d4424f0		lea	rax,[r12-16]
c806b3 49bf0880aa4e767f
c806bb 0000			mov	r15,140146102665224
c806bd 493b4728			cmp	rax,[r15+40]
c806c1 7d38			jge	short alloc-ok36
c806c3 48c7c010000000		mov	rax,dword 16
c806ca 57			push	rdi
c806cb 56			push	rsi
c806cc 52			push	rdx
c806cd 51			push	rcx
c806ce 4150			push	r8
c806d0 4151			push	r9
c806d2 4152			push	r10
c806d4 4153			push	r11
c806d6 50			push	rax
c806d7 4889e7			mov	rdi,rsp
c806da 4883e4f0			and	rsp,byte -16
c806de 4883ec08			sub	rsp,byte 8
c806e2 57			push	rdi
c806e3 e8e8596d01		call	gc
c806e8 5c			pop	rsp
c806e9 4989c4			mov	r12,rax
c806ec 58			pop	rax
c806ed 415b			pop	r11
c806ef 415a			pop	r10
c806f1 4159			pop	r9
c806f3 4158			pop	r8
c806f5 59			pop	rcx
c806f6 5a			pop	rdx
c806f7 5e			pop	rsi
c806f8 5f			pop	rdi
c806f9 eb04			jmp	short alloc-end36
c806fb			alloc-ok36:
c806fb 4983ec10			sub	r12,byte 16
c806ff			alloc-end36:
c806ff 48c7c076020000		mov	rax,dword 630
c80706 49890424			mov	[r12],rax
c8070a 48c7c050a5db01		mov	rax,dword 31171920
c80711 4989442408		mov	[r12+8],rax
c80716 498d442401		lea	rax,[r12+1]
c8071b 50			push	rax
c8071c			version108:
c8071c 58			pop	rax
c8071d 49898218010000		mov	[r10+280],rax
c80724 6aee			push	qword byte -18
c80726			version109:
c80726 48c7c0eeffffff		mov	rax,dword -18
c8072d 49898220010000		mov	[r10+288],rax
c80734			version110:
c80734 50			push	rax
c80735 53			push	rbx
c80736 48b85080aa4e767f
c8073e 0000			mov	rax,140146102665296
c80740 488b18			mov	rbx,[rax]
c80743 48ffc3			inc	rbx
c80746 488918			mov	[rax],rbx
c80749 5b			pop	rbx
c8074a 58			pop	rax
c8074b 498d4424f0		lea	rax,[r12-16]
c80750 49bf0880aa4e767f
c80758 0000			mov	r15,140146102665224
c8075a 493b4728			cmp	rax,[r15+40]
c8075e 7d38			jge	short alloc-ok37
c80760 48c7c010000000		mov	rax,dword 16
c80767 57			push	rdi
c80768 56			push	rsi
c80769 52			push	rdx
c8076a 51			push	rcx
c8076b 4150			push	r8
c8076d 4151			push	r9
c8076f 4152			push	r10
c80771 4153			push	r11
c80773 50			push	rax
c80774 4889e7			mov	rdi,rsp
c80777 4883e4f0			and	rsp,byte -16
c8077b 4883ec08			sub	rsp,byte 8
c8077f 57			push	rdi
c80780 e84b596d01		call	gc
c80785 5c			pop	rsp
c80786 4989c4			mov	r12,rax
c80789 58			pop	rax
c8078a 415b			pop	r11
c8078c 415a			pop	r10
c8078e 4159			pop	r9
c80790 4158			pop	r8
c80792 59			pop	rcx
c80793 5a			pop	rdx
c80794 5e			pop	rsi
c80795 5f			pop	rdi
c80796 eb04			jmp	short alloc-end37
c80798			alloc-ok37:
c80798 4983ec10			sub	r12,byte 16
c8079c			alloc-end37:
c8079c 48c7c076020000		mov	rax,dword 630
c807a3 49890424			mov	[r12],rax
c807a7 48c7c040b5db01		mov	rax,dword 31176000
c807ae 4989442408		mov	[r12+8],rax
c807b3 498d442401		lea	rax,[r12+1]
c807b8 50			push	rax
c807b9			version111:
c807b9 58			pop	rax
c807ba 49898220010000		mov	[r10+288],rax
c807c1 6aee			push	qword byte -18
c807c3			version112:
c807c3 48c7c0eeffffff		mov	rax,dword -18
c807ca 49898228010000		mov	[r10+296],rax
c807d1			version113:
c807d1 50			push	rax
c807d2 53			push	rbx
c807d3 48b85080aa4e767f
c807db 0000			mov	rax,140146102665296
c807dd 488b18			mov	rbx,[rax]
c807e0 48ffc3			inc	rbx
c807e3 488918			mov	[rax],rbx
c807e6 5b			pop	rbx
c807e7 58			pop	rax
c807e8 498d4424f0		lea	rax,[r12-16]
c807ed 49bf0880aa4e767f
c807f5 0000			mov	r15,140146102665224
c807f7 493b4728			cmp	rax,[r15+40]
c807fb 7d38			jge	short alloc-ok38
c807fd 48c7c010000000		mov	rax,dword 16
c80804 57			push	rdi
c80805 56			push	rsi
c80806 52			push	rdx
c80807 51			push	rcx
c80808 4150			push	r8
c8080a 4151			push	r9
c8080c 4152			push	r10
c8080e 4153			push	r11
c80810 50			push	rax
c80811 4889e7			mov	rdi,rsp
c80814 4883e4f0			and	rsp,byte -16
c80818 4883ec08			sub	rsp,byte 8
c8081c 57			push	rdi
c8081d e8ae586d01		call	gc
c80822 5c			pop	rsp
c80823 4989c4			mov	r12,rax
c80826 58			pop	rax
c80827 415b			pop	r11
c80829 415a			pop	r10
c8082b 4159			pop	r9
c8082d 4158			pop	r8
c8082f 59			pop	rcx
c80830 5a			pop	rdx
c80831 5e			pop	rsi
c80832 5f			pop	rdi
c80833 eb04			jmp	short alloc-end38
c80835			alloc-ok38:
c80835 4983ec10			sub	r12,byte 16
c80839			alloc-end38:
c80839 48c7c076020000		mov	rax,dword 630
c80840 49890424			mov	[r12],rax
c80844 48c7c030c5db01		mov	rax,dword 31180080
c8084b 4989442408		mov	[r12+8],rax
c80850 498d442401		lea	rax,[r12+1]
c80855 50			push	rax
c80856			version114:
c80856 58			pop	rax
c80857 49898228010000		mov	[r10+296],rax
c8085e 6aee			push	qword byte -18
c80860			version115:
c80860 48c7c0eeffffff		mov	rax,dword -18
c80867 49898230010000		mov	[r10+304],rax
c8086e			version116:
c8086e 50			push	rax
c8086f 53			push	rbx
c80870 48b85080aa4e767f
c80878 0000			mov	rax,140146102665296
c8087a 488b18			mov	rbx,[rax]
c8087d 48ffc3			inc	rbx
c80880 488918			mov	[rax],rbx
c80883 5b			pop	rbx
c80884 58			pop	rax
c80885 498d4424f0		lea	rax,[r12-16]
c8088a 49bf0880aa4e767f
c80892 0000			mov	r15,140146102665224
c80894 493b4728			cmp	rax,[r15+40]
c80898 7d38			jge	short alloc-ok39
c8089a 48c7c010000000		mov	rax,dword 16
c808a1 57			push	rdi
c808a2 56			push	rsi
c808a3 52			push	rdx
c808a4 51			push	rcx
c808a5 4150			push	r8
c808a7 4151			push	r9
c808a9 4152			push	r10
c808ab 4153			push	r11
c808ad 50			push	rax
c808ae 4889e7			mov	rdi,rsp
c808b1 4883e4f0			and	rsp,byte -16
c808b5 4883ec08			sub	rsp,byte 8
c808b9 57			push	rdi
c808ba e811586d01		call	gc
c808bf 5c			pop	rsp
c808c0 4989c4			mov	r12,rax
c808c3 58			pop	rax
c808c4 415b			pop	r11
c808c6 415a			pop	r10
c808c8 4159			pop	r9
c808ca 4158			pop	r8
c808cc 59			pop	rcx
c808cd 5a			pop	rdx
c808ce 5e			pop	rsi
c808cf 5f			pop	rdi
c808d0 eb04			jmp	short alloc-end39
c808d2			alloc-ok39:
c808d2 4983ec10			sub	r12,byte 16
c808d6			alloc-end39:
c808d6 48c7c076020000		mov	rax,dword 630
c808dd 49890424			mov	[r12],rax
c808e1 48c7c020d5db01		mov	rax,dword 31184160
c808e8 4989442408		mov	[r12+8],rax
c808ed 498d442401		lea	rax,[r12+1]
c808f2 50			push	rax
c808f3			version117:
c808f3 58			pop	rax
c808f4 49898230010000		mov	[r10+304],rax
c808fb 6aee			push	qword byte -18
c808fd			version118:
c808fd 48c7c0eeffffff		mov	rax,dword -18
c80904 49898238010000		mov	[r10+312],rax
c8090b			version119:
c8090b 50			push	rax
c8090c 53			push	rbx
c8090d 48b85080aa4e767f
c80915 0000			mov	rax,140146102665296
c80917 488b18			mov	rbx,[rax]
c8091a 48ffc3			inc	rbx
c8091d 488918			mov	[rax],rbx
c80920 5b			pop	rbx
c80921 58			pop	rax
c80922 498d4424f0		lea	rax,[r12-16]
c80927 49bf0880aa4e767f
c8092f 0000			mov	r15,140146102665224
c80931 493b4728			cmp	rax,[r15+40]
c80935 7d38			jge	short alloc-ok40
c80937 48c7c010000000		mov	rax,dword 16
c8093e 57			push	rdi
c8093f 56			push	rsi
c80940 52			push	rdx
c80941 51			push	rcx
c80942 4150			push	r8
c80944 4151			push	r9
c80946 4152			push	r10
c80948 4153			push	r11
c8094a 50			push	rax
c8094b 4889e7			mov	rdi,rsp
c8094e 4883e4f0			and	rsp,byte -16
c80952 4883ec08			sub	rsp,byte 8
c80956 57			push	rdi
c80957 e874576d01		call	gc
c8095c 5c			pop	rsp
c8095d 4989c4			mov	r12,rax
c80960 58			pop	rax
c80961 415b			pop	r11
c80963 415a			pop	r10
c80965 4159			pop	r9
c80967 4158			pop	r8
c80969 59			pop	rcx
c8096a 5a			pop	rdx
c8096b 5e			pop	rsi
c8096c 5f			pop	rdi
c8096d eb04			jmp	short alloc-end40
c8096f			alloc-ok40:
c8096f 4983ec10			sub	r12,byte 16
c80973			alloc-end40:
c80973 48c7c076020000		mov	rax,dword 630
c8097a 49890424			mov	[r12],rax
c8097e 48c7c010e5db01		mov	rax,dword 31188240
c80985 4989442408		mov	[r12+8],rax
c8098a 498d442401		lea	rax,[r12+1]
c8098f 50			push	rax
c80990			version120:
c80990 58			pop	rax
c80991 49898238010000		mov	[r10+312],rax
c80998 6aee			push	qword byte -18
c8099a			version121:
c8099a 48c7c0eeffffff		mov	rax,dword -18
c809a1 49898240010000		mov	[r10+320],rax
c809a8			version122:
c809a8 50			push	rax
c809a9 53			push	rbx
c809aa 48b85080aa4e767f
c809b2 0000			mov	rax,140146102665296
c809b4 488b18			mov	rbx,[rax]
c809b7 48ffc3			inc	rbx
c809ba 488918			mov	[rax],rbx
c809bd 5b			pop	rbx
c809be 58			pop	rax
c809bf 498d4424f0		lea	rax,[r12-16]
c809c4 49bf0880aa4e767f
c809cc 0000			mov	r15,140146102665224
c809ce 493b4728			cmp	rax,[r15+40]
c809d2 7d38			jge	short alloc-ok41
c809d4 48c7c010000000		mov	rax,dword 16
c809db 57			push	rdi
c809dc 56			push	rsi
c809dd 52			push	rdx
c809de 51			push	rcx
c809df 4150			push	r8
c809e1 4151			push	r9
c809e3 4152			push	r10
c809e5 4153			push	r11
c809e7 50			push	rax
c809e8 4889e7			mov	rdi,rsp
c809eb 4883e4f0			and	rsp,byte -16
c809ef 4883ec08			sub	rsp,byte 8
c809f3 57			push	rdi
c809f4 e8d7566d01		call	gc
c809f9 5c			pop	rsp
c809fa 4989c4			mov	r12,rax
c809fd 58			pop	rax
c809fe 415b			pop	r11
c80a00 415a			pop	r10
c80a02 4159			pop	r9
c80a04 4158			pop	r8
c80a06 59			pop	rcx
c80a07 5a			pop	rdx
c80a08 5e			pop	rsi
c80a09 5f			pop	rdi
c80a0a eb04			jmp	short alloc-end41
c80a0c			alloc-ok41:
c80a0c 4983ec10			sub	r12,byte 16
c80a10			alloc-end41:
c80a10 48c7c076020000		mov	rax,dword 630
c80a17 49890424			mov	[r12],rax
c80a1b 48c7c000f5db01		mov	rax,dword 31192320
c80a22 4989442408		mov	[r12+8],rax
c80a27 498d442401		lea	rax,[r12+1]
c80a2c 50			push	rax
c80a2d			version123:
c80a2d 58			pop	rax
c80a2e 49898240010000		mov	[r10+320],rax
c80a35 6aee			push	qword byte -18
c80a37			version124:
c80a37 48c7c0eeffffff		mov	rax,dword -18
c80a3e 49898248010000		mov	[r10+328],rax
c80a45			version125:
c80a45 50			push	rax
c80a46 53			push	rbx
c80a47 48b85080aa4e767f
c80a4f 0000			mov	rax,140146102665296
c80a51 488b18			mov	rbx,[rax]
c80a54 48ffc3			inc	rbx
c80a57 488918			mov	[rax],rbx
c80a5a 5b			pop	rbx
c80a5b 58			pop	rax
c80a5c 498d4424f0		lea	rax,[r12-16]
c80a61 49bf0880aa4e767f
c80a69 0000			mov	r15,140146102665224
c80a6b 493b4728			cmp	rax,[r15+40]
c80a6f 7d38			jge	short alloc-ok42
c80a71 48c7c010000000		mov	rax,dword 16
c80a78 57			push	rdi
c80a79 56			push	rsi
c80a7a 52			push	rdx
c80a7b 51			push	rcx
c80a7c 4150			push	r8
c80a7e 4151			push	r9
c80a80 4152			push	r10
c80a82 4153			push	r11
c80a84 50			push	rax
c80a85 4889e7			mov	rdi,rsp
c80a88 4883e4f0			and	rsp,byte -16
c80a8c 4883ec08			sub	rsp,byte 8
c80a90 57			push	rdi
c80a91 e83a566d01		call	gc
c80a96 5c			pop	rsp
c80a97 4989c4			mov	r12,rax
c80a9a 58			pop	rax
c80a9b 415b			pop	r11
c80a9d 415a			pop	r10
c80a9f 4159			pop	r9
c80aa1 4158			pop	r8
c80aa3 59			pop	rcx
c80aa4 5a			pop	rdx
c80aa5 5e			pop	rsi
c80aa6 5f			pop	rdi
c80aa7 eb04			jmp	short alloc-end42
c80aa9			alloc-ok42:
c80aa9 4983ec10			sub	r12,byte 16
c80aad			alloc-end42:
c80aad 48c7c076020000		mov	rax,dword 630
c80ab4 49890424			mov	[r12],rax
c80ab8 48c7c07005fc01		mov	rax,dword 33293680
c80abf 4989442408		mov	[r12+8],rax
c80ac4 498d442401		lea	rax,[r12+1]
c80ac9 50			push	rax
c80aca			version126:
c80aca 58			pop	rax
c80acb 49898248010000		mov	[r10+328],rax
c80ad2 6aee			push	qword byte -18
c80ad4			version127:
c80ad4 48c7c0eeffffff		mov	rax,dword -18
c80adb 49898250010000		mov	[r10+336],rax
c80ae2			version128:
c80ae2 50			push	rax
c80ae3 53			push	rbx
c80ae4 48b85080aa4e767f
c80aec 0000			mov	rax,140146102665296
c80aee 488b18			mov	rbx,[rax]
c80af1 48ffc3			inc	rbx
c80af4 488918			mov	[rax],rbx
c80af7 5b			pop	rbx
c80af8 58			pop	rax
c80af9 498d4424f0		lea	rax,[r12-16]
c80afe 49bf0880aa4e767f
c80b06 0000			mov	r15,140146102665224
c80b08 493b4728			cmp	rax,[r15+40]
c80b0c 7d38			jge	short alloc-ok43
c80b0e 48c7c010000000		mov	rax,dword 16
c80b15 57			push	rdi
c80b16 56			push	rsi
c80b17 52			push	rdx
c80b18 51			push	rcx
c80b19 4150			push	r8
c80b1b 4151			push	r9
c80b1d 4152			push	r10
c80b1f 4153			push	r11
c80b21 50			push	rax
c80b22 4889e7			mov	rdi,rsp
c80b25 4883e4f0			and	rsp,byte -16
c80b29 4883ec08			sub	rsp,byte 8
c80b2d 57			push	rdi
c80b2e e89d556d01		call	gc
c80b33 5c			pop	rsp
c80b34 4989c4			mov	r12,rax
c80b37 58			pop	rax
c80b38 415b			pop	r11
c80b3a 415a			pop	r10
c80b3c 4159			pop	r9
c80b3e 4158			pop	r8
c80b40 59			pop	rcx
c80b41 5a			pop	rdx
c80b42 5e			pop	rsi
c80b43 5f			pop	rdi
c80b44 eb04			jmp	short alloc-end43
c80b46			alloc-ok43:
c80b46 4983ec10			sub	r12,byte 16
c80b4a			alloc-end43:
c80b4a 48c7c076020000		mov	rax,dword 630
c80b51 49890424			mov	[r12],rax
c80b55 48c7c06015fc01		mov	rax,dword 33297760
c80b5c 4989442408		mov	[r12+8],rax
c80b61 498d442401		lea	rax,[r12+1]
c80b66 50			push	rax
c80b67			version129:
c80b67 58			pop	rax
c80b68 49898250010000		mov	[r10+336],rax
c80b6f 6aee			push	qword byte -18
c80b71			version130:
c80b71 48c7c0eeffffff		mov	rax,dword -18
c80b78 49898258010000		mov	[r10+344],rax
c80b7f			version131:
c80b7f 50			push	rax
c80b80 53			push	rbx
c80b81 48b85080aa4e767f
c80b89 0000			mov	rax,140146102665296
c80b8b 488b18			mov	rbx,[rax]
c80b8e 48ffc3			inc	rbx
c80b91 488918			mov	[rax],rbx
c80b94 5b			pop	rbx
c80b95 58			pop	rax
c80b96 498d4424f0		lea	rax,[r12-16]
c80b9b 49bf0880aa4e767f
c80ba3 0000			mov	r15,140146102665224
c80ba5 493b4728			cmp	rax,[r15+40]
c80ba9 7d38			jge	short alloc-ok44
c80bab 48c7c010000000		mov	rax,dword 16
c80bb2 57			push	rdi
c80bb3 56			push	rsi
c80bb4 52			push	rdx
c80bb5 51			push	rcx
c80bb6 4150			push	r8
c80bb8 4151			push	r9
c80bba 4152			push	r10
c80bbc 4153			push	r11
c80bbe 50			push	rax
c80bbf 4889e7			mov	rdi,rsp
c80bc2 4883e4f0			and	rsp,byte -16
c80bc6 4883ec08			sub	rsp,byte 8
c80bca 57			push	rdi
c80bcb e800556d01		call	gc
c80bd0 5c			pop	rsp
c80bd1 4989c4			mov	r12,rax
c80bd4 58			pop	rax
c80bd5 415b			pop	r11
c80bd7 415a			pop	r10
c80bd9 4159			pop	r9
c80bdb 4158			pop	r8
c80bdd 59			pop	rcx
c80bde 5a			pop	rdx
c80bdf 5e			pop	rsi
c80be0 5f			pop	rdi
c80be1 eb04			jmp	short alloc-end44
c80be3			alloc-ok44:
c80be3 4983ec10			sub	r12,byte 16
c80be7			alloc-end44:
c80be7 48c7c076020000		mov	rax,dword 630
c80bee 49890424			mov	[r12],rax
c80bf2 48c7c05025fc01		mov	rax,dword 33301840
c80bf9 4989442408		mov	[r12+8],rax
c80bfe 498d442401		lea	rax,[r12+1]
c80c03 50			push	rax
c80c04			version132:
c80c04 58			pop	rax
c80c05 49898258010000		mov	[r10+344],rax
c80c0c 6aee			push	qword byte -18
c80c0e			version133:
c80c0e 48c7c0eeffffff		mov	rax,dword -18
c80c15 49898260010000		mov	[r10+352],rax
c80c1c			version134:
c80c1c 50			push	rax
c80c1d 53			push	rbx
c80c1e 48b85080aa4e767f
c80c26 0000			mov	rax,140146102665296
c80c28 488b18			mov	rbx,[rax]
c80c2b 48ffc3			inc	rbx
c80c2e 488918			mov	[rax],rbx
c80c31 5b			pop	rbx
c80c32 58			pop	rax
c80c33 498d4424f0		lea	rax,[r12-16]
c80c38 49bf0880aa4e767f
c80c40 0000			mov	r15,140146102665224
c80c42 493b4728			cmp	rax,[r15+40]
c80c46 7d38			jge	short alloc-ok45
c80c48 48c7c010000000		mov	rax,dword 16
c80c4f 57			push	rdi
c80c50 56			push	rsi
c80c51 52			push	rdx
c80c52 51			push	rcx
c80c53 4150			push	r8
c80c55 4151			push	r9
c80c57 4152			push	r10
c80c59 4153			push	r11
c80c5b 50			push	rax
c80c5c 4889e7			mov	rdi,rsp
c80c5f 4883e4f0			and	rsp,byte -16
c80c63 4883ec08			sub	rsp,byte 8
c80c67 57			push	rdi
c80c68 e863546d01		call	gc
c80c6d 5c			pop	rsp
c80c6e 4989c4			mov	r12,rax
c80c71 58			pop	rax
c80c72 415b			pop	r11
c80c74 415a			pop	r10
c80c76 4159			pop	r9
c80c78 4158			pop	r8
c80c7a 59			pop	rcx
c80c7b 5a			pop	rdx
c80c7c 5e			pop	rsi
c80c7d 5f			pop	rdi
c80c7e eb04			jmp	short alloc-end45
c80c80			alloc-ok45:
c80c80 4983ec10			sub	r12,byte 16
c80c84			alloc-end45:
c80c84 48c7c076020000		mov	rax,dword 630
c80c8b 49890424			mov	[r12],rax
c80c8f 48c7c04035fc01		mov	rax,dword 33305920
c80c96 4989442408		mov	[r12+8],rax
c80c9b 498d442401		lea	rax,[r12+1]
c80ca0 50			push	rax
c80ca1			version135:
c80ca1 58			pop	rax
c80ca2 49898260010000		mov	[r10+352],rax
c80ca9 6aee			push	qword byte -18
c80cab			version136:
c80cab 48c7c0eeffffff		mov	rax,dword -18
c80cb2 49898268010000		mov	[r10+360],rax
c80cb9			version137:
c80cb9 50			push	rax
c80cba 53			push	rbx
c80cbb 48b85080aa4e767f
c80cc3 0000			mov	rax,140146102665296
c80cc5 488b18			mov	rbx,[rax]
c80cc8 48ffc3			inc	rbx
c80ccb 488918			mov	[rax],rbx
c80cce 5b			pop	rbx
c80ccf 58			pop	rax
c80cd0 498d4424f0		lea	rax,[r12-16]
c80cd5 49bf0880aa4e767f
c80cdd 0000			mov	r15,140146102665224
c80cdf 493b4728			cmp	rax,[r15+40]
c80ce3 7d38			jge	short alloc-ok46
c80ce5 48c7c010000000		mov	rax,dword 16
c80cec 57			push	rdi
c80ced 56			push	rsi
c80cee 52			push	rdx
c80cef 51			push	rcx
c80cf0 4150			push	r8
c80cf2 4151			push	r9
c80cf4 4152			push	r10
c80cf6 4153			push	r11
c80cf8 50			push	rax
c80cf9 4889e7			mov	rdi,rsp
c80cfc 4883e4f0			and	rsp,byte -16
c80d00 4883ec08			sub	rsp,byte 8
c80d04 57			push	rdi
c80d05 e8c6536d01		call	gc
c80d0a 5c			pop	rsp
c80d0b 4989c4			mov	r12,rax
c80d0e 58			pop	rax
c80d0f 415b			pop	r11
c80d11 415a			pop	r10
c80d13 4159			pop	r9
c80d15 4158			pop	r8
c80d17 59			pop	rcx
c80d18 5a			pop	rdx
c80d19 5e			pop	rsi
c80d1a 5f			pop	rdi
c80d1b eb04			jmp	short alloc-end46
c80d1d			alloc-ok46:
c80d1d 4983ec10			sub	r12,byte 16
c80d21			alloc-end46:
c80d21 48c7c076020000		mov	rax,dword 630
c80d28 49890424			mov	[r12],rax
c80d2c 48c7c08045fc01		mov	rax,dword 33310080
c80d33 4989442408		mov	[r12+8],rax
c80d38 498d442401		lea	rax,[r12+1]
c80d3d 50			push	rax
c80d3e			version138:
c80d3e 58			pop	rax
c80d3f 49898268010000		mov	[r10+360],rax
c80d46 6aee			push	qword byte -18
c80d48			version139:
c80d48 48c7c0eeffffff		mov	rax,dword -18
c80d4f 49898270010000		mov	[r10+368],rax
c80d56			version140:
c80d56 50			push	rax
c80d57 53			push	rbx
c80d58 48b85080aa4e767f
c80d60 0000			mov	rax,140146102665296
c80d62 488b18			mov	rbx,[rax]
c80d65 48ffc3			inc	rbx
c80d68 488918			mov	[rax],rbx
c80d6b 5b			pop	rbx
c80d6c 58			pop	rax
c80d6d 498d4424f0		lea	rax,[r12-16]
c80d72 49bf0880aa4e767f
c80d7a 0000			mov	r15,140146102665224
c80d7c 493b4728			cmp	rax,[r15+40]
c80d80 7d38			jge	short alloc-ok47
c80d82 48c7c010000000		mov	rax,dword 16
c80d89 57			push	rdi
c80d8a 56			push	rsi
c80d8b 52			push	rdx
c80d8c 51			push	rcx
c80d8d 4150			push	r8
c80d8f 4151			push	r9
c80d91 4152			push	r10
c80d93 4153			push	r11
c80d95 50			push	rax
c80d96 4889e7			mov	rdi,rsp
c80d99 4883e4f0			and	rsp,byte -16
c80d9d 4883ec08			sub	rsp,byte 8
c80da1 57			push	rdi
c80da2 e829536d01		call	gc
c80da7 5c			pop	rsp
c80da8 4989c4			mov	r12,rax
c80dab 58			pop	rax
c80dac 415b			pop	r11
c80dae 415a			pop	r10
c80db0 4159			pop	r9
c80db2 4158			pop	r8
c80db4 59			pop	rcx
c80db5 5a			pop	rdx
c80db6 5e			pop	rsi
c80db7 5f			pop	rdi
c80db8 eb04			jmp	short alloc-end47
c80dba			alloc-ok47:
c80dba 4983ec10			sub	r12,byte 16
c80dbe			alloc-end47:
c80dbe 48c7c076020000		mov	rax,dword 630
c80dc5 49890424			mov	[r12],rax
c80dc9 48c7c0c055fc01		mov	rax,dword 33314240
c80dd0 4989442408		mov	[r12+8],rax
c80dd5 498d442401		lea	rax,[r12+1]
c80dda 50			push	rax
c80ddb			version141:
c80ddb 58			pop	rax
c80ddc 49898270010000		mov	[r10+368],rax
c80de3 6aee			push	qword byte -18
c80de5			version142:
c80de5 48c7c0eeffffff		mov	rax,dword -18
c80dec 49898278010000		mov	[r10+376],rax
c80df3			version143:
c80df3 50			push	rax
c80df4 53			push	rbx
c80df5 48b85080aa4e767f
c80dfd 0000			mov	rax,140146102665296
c80dff 488b18			mov	rbx,[rax]
c80e02 48ffc3			inc	rbx
c80e05 488918			mov	[rax],rbx
c80e08 5b			pop	rbx
c80e09 58			pop	rax
c80e0a 498d4424f0		lea	rax,[r12-16]
c80e0f 49bf0880aa4e767f
c80e17 0000			mov	r15,140146102665224
c80e19 493b4728			cmp	rax,[r15+40]
c80e1d 7d38			jge	short alloc-ok48
c80e1f 48c7c010000000		mov	rax,dword 16
c80e26 57			push	rdi
c80e27 56			push	rsi
c80e28 52			push	rdx
c80e29 51			push	rcx
c80e2a 4150			push	r8
c80e2c 4151			push	r9
c80e2e 4152			push	r10
c80e30 4153			push	r11
c80e32 50			push	rax
c80e33 4889e7			mov	rdi,rsp
c80e36 4883e4f0			and	rsp,byte -16
c80e3a 4883ec08			sub	rsp,byte 8
c80e3e 57			push	rdi
c80e3f e88c526d01		call	gc
c80e44 5c			pop	rsp
c80e45 4989c4			mov	r12,rax
c80e48 58			pop	rax
c80e49 415b			pop	r11
c80e4b 415a			pop	r10
c80e4d 4159			pop	r9
c80e4f 4158			pop	r8
c80e51 59			pop	rcx
c80e52 5a			pop	rdx
c80e53 5e			pop	rsi
c80e54 5f			pop	rdi
c80e55 eb04			jmp	short alloc-end48
c80e57			alloc-ok48:
c80e57 4983ec10			sub	r12,byte 16
c80e5b			alloc-end48:
c80e5b 48c7c076020000		mov	rax,dword 630
c80e62 49890424			mov	[r12],rax
c80e66 48c7c00066fc01		mov	rax,dword 33318400
c80e6d 4989442408		mov	[r12+8],rax
c80e72 498d442401		lea	rax,[r12+1]
c80e77 50			push	rax
c80e78			version144:
c80e78 58			pop	rax
c80e79 49898278010000		mov	[r10+376],rax
c80e80 6aee			push	qword byte -18
c80e82			version145:
c80e82 48c7c0eeffffff		mov	rax,dword -18
c80e89 49898280010000		mov	[r10+384],rax
c80e90			version146:
c80e90 50			push	rax
c80e91 53			push	rbx
c80e92 48b85080aa4e767f
c80e9a 0000			mov	rax,140146102665296
c80e9c 488b18			mov	rbx,[rax]
c80e9f 48ffc3			inc	rbx
c80ea2 488918			mov	[rax],rbx
c80ea5 5b			pop	rbx
c80ea6 58			pop	rax
c80ea7 498d4424f0		lea	rax,[r12-16]
c80eac 49bf0880aa4e767f
c80eb4 0000			mov	r15,140146102665224
c80eb6 493b4728			cmp	rax,[r15+40]
c80eba 7d38			jge	short alloc-ok49
c80ebc 48c7c010000000		mov	rax,dword 16
c80ec3 57			push	rdi
c80ec4 56			push	rsi
c80ec5 52			push	rdx
c80ec6 51			push	rcx
c80ec7 4150			push	r8
c80ec9 4151			push	r9
c80ecb 4152			push	r10
c80ecd 4153			push	r11
c80ecf 50			push	rax
c80ed0 4889e7			mov	rdi,rsp
c80ed3 4883e4f0			and	rsp,byte -16
c80ed7 4883ec08			sub	rsp,byte 8
c80edb 57			push	rdi
c80edc e8ef516d01		call	gc
c80ee1 5c			pop	rsp
c80ee2 4989c4			mov	r12,rax
c80ee5 58			pop	rax
c80ee6 415b			pop	r11
c80ee8 415a			pop	r10
c80eea 4159			pop	r9
c80eec 4158			pop	r8
c80eee 59			pop	rcx
c80eef 5a			pop	rdx
c80ef0 5e			pop	rsi
c80ef1 5f			pop	rdi
c80ef2 eb04			jmp	short alloc-end49
c80ef4			alloc-ok49:
c80ef4 4983ec10			sub	r12,byte 16
c80ef8			alloc-end49:
c80ef8 48c7c076020000		mov	rax,dword 630
c80eff 49890424			mov	[r12],rax
c80f03 48c7c04076fc01		mov	rax,dword 33322560
c80f0a 4989442408		mov	[r12+8],rax
c80f0f 498d442401		lea	rax,[r12+1]
c80f14 50			push	rax
c80f15			version147:
c80f15 58			pop	rax
c80f16 49898280010000		mov	[r10+384],rax
c80f1d 6aee			push	qword byte -18
c80f1f			version148:
c80f1f 48c7c0eeffffff		mov	rax,dword -18
c80f26 49898288010000		mov	[r10+392],rax
c80f2d			version149:
c80f2d 50			push	rax
c80f2e 53			push	rbx
c80f2f 48b85080aa4e767f
c80f37 0000			mov	rax,140146102665296
c80f39 488b18			mov	rbx,[rax]
c80f3c 48ffc3			inc	rbx
c80f3f 488918			mov	[rax],rbx
c80f42 5b			pop	rbx
c80f43 58			pop	rax
c80f44 498d4424f0		lea	rax,[r12-16]
c80f49 49bf0880aa4e767f
c80f51 0000			mov	r15,140146102665224
c80f53 493b4728			cmp	rax,[r15+40]
c80f57 7d38			jge	short alloc-ok50
c80f59 48c7c010000000		mov	rax,dword 16
c80f60 57			push	rdi
c80f61 56			push	rsi
c80f62 52			push	rdx
c80f63 51			push	rcx
c80f64 4150			push	r8
c80f66 4151			push	r9
c80f68 4152			push	r10
c80f6a 4153			push	r11
c80f6c 50			push	rax
c80f6d 4889e7			mov	rdi,rsp
c80f70 4883e4f0			and	rsp,byte -16
c80f74 4883ec08			sub	rsp,byte 8
c80f78 57			push	rdi
c80f79 e852516d01		call	gc
c80f7e 5c			pop	rsp
c80f7f 4989c4			mov	r12,rax
c80f82 58			pop	rax
c80f83 415b			pop	r11
c80f85 415a			pop	r10
c80f87 4159			pop	r9
c80f89 4158			pop	r8
c80f8b 59			pop	rcx
c80f8c 5a			pop	rdx
c80f8d 5e			pop	rsi
c80f8e 5f			pop	rdi
c80f8f eb04			jmp	short alloc-end50
c80f91			alloc-ok50:
c80f91 4983ec10			sub	r12,byte 16
c80f95			alloc-end50:
c80f95 48c7c076020000		mov	rax,dword 630
c80f9c 49890424			mov	[r12],rax
c80fa0 48c7c08086fc01		mov	rax,dword 33326720
c80fa7 4989442408		mov	[r12+8],rax
c80fac 498d442401		lea	rax,[r12+1]
c80fb1 50			push	rax
c80fb2			version150:
c80fb2 58			pop	rax
c80fb3 49898288010000		mov	[r10+392],rax
c80fba 6aee			push	qword byte -18
c80fbc			version151:
c80fbc 48c7c0eeffffff		mov	rax,dword -18
c80fc3 49898290010000		mov	[r10+400],rax
c80fca			version152:
c80fca 50			push	rax
c80fcb 53			push	rbx
c80fcc 48b85080aa4e767f
c80fd4 0000			mov	rax,140146102665296
c80fd6 488b18			mov	rbx,[rax]
c80fd9 48ffc3			inc	rbx
c80fdc 488918			mov	[rax],rbx
c80fdf 5b			pop	rbx
c80fe0 58			pop	rax
c80fe1 498d4424f0		lea	rax,[r12-16]
c80fe6 49bf0880aa4e767f
c80fee 0000			mov	r15,140146102665224
c80ff0 493b4728			cmp	rax,[r15+40]
c80ff4 7d38			jge	short alloc-ok51
c80ff6 48c7c010000000		mov	rax,dword 16
c80ffd 57			push	rdi
c80ffe 56			push	rsi
c80fff 52			push	rdx
c81000 51			push	rcx
c81001 4150			push	r8
c81003 4151			push	r9
c81005 4152			push	r10
c81007 4153			push	r11
c81009 50			push	rax
c8100a 4889e7			mov	rdi,rsp
c8100d 4883e4f0			and	rsp,byte -16
c81011 4883ec08			sub	rsp,byte 8
c81015 57			push	rdi
c81016 e8b5506d01		call	gc
c8101b 5c			pop	rsp
c8101c 4989c4			mov	r12,rax
c8101f 58			pop	rax
c81020 415b			pop	r11
c81022 415a			pop	r10
c81024 4159			pop	r9
c81026 4158			pop	r8
c81028 59			pop	rcx
c81029 5a			pop	rdx
c8102a 5e			pop	rsi
c8102b 5f			pop	rdi
c8102c eb04			jmp	short alloc-end51
c8102e			alloc-ok51:
c8102e 4983ec10			sub	r12,byte 16
c81032			alloc-end51:
c81032 48c7c076020000		mov	rax,dword 630
c81039 49890424			mov	[r12],rax
c8103d 48c7c0c096fc01		mov	rax,dword 33330880
c81044 4989442408		mov	[r12+8],rax
c81049 498d442401		lea	rax,[r12+1]
c8104e 50			push	rax
c8104f			version153:
c8104f 58			pop	rax
c81050 49898290010000		mov	[r10+400],rax
c81057 6aee			push	qword byte -18
c81059			version154:
c81059 48c7c0eeffffff		mov	rax,dword -18
c81060 49898298010000		mov	[r10+408],rax
c81067			version155:
c81067 50			push	rax
c81068 53			push	rbx
c81069 48b85080aa4e767f
c81071 0000			mov	rax,140146102665296
c81073 488b18			mov	rbx,[rax]
c81076 48ffc3			inc	rbx
c81079 488918			mov	[rax],rbx
c8107c 5b			pop	rbx
c8107d 58			pop	rax
c8107e 498d4424f0		lea	rax,[r12-16]
c81083 49bf0880aa4e767f
c8108b 0000			mov	r15,140146102665224
c8108d 493b4728			cmp	rax,[r15+40]
c81091 7d38			jge	short alloc-ok52
c81093 48c7c010000000		mov	rax,dword 16
c8109a 57			push	rdi
c8109b 56			push	rsi
c8109c 52			push	rdx
c8109d 51			push	rcx
c8109e 4150			push	r8
c810a0 4151			push	r9
c810a2 4152			push	r10
c810a4 4153			push	r11
c810a6 50			push	rax
c810a7 4889e7			mov	rdi,rsp
c810aa 4883e4f0			and	rsp,byte -16
c810ae 4883ec08			sub	rsp,byte 8
c810b2 57			push	rdi
c810b3 e818506d01		call	gc
c810b8 5c			pop	rsp
c810b9 4989c4			mov	r12,rax
c810bc 58			pop	rax
c810bd 415b			pop	r11
c810bf 415a			pop	r10
c810c1 4159			pop	r9
c810c3 4158			pop	r8
c810c5 59			pop	rcx
c810c6 5a			pop	rdx
c810c7 5e			pop	rsi
c810c8 5f			pop	rdi
c810c9 eb04			jmp	short alloc-end52
c810cb			alloc-ok52:
c810cb 4983ec10			sub	r12,byte 16
c810cf			alloc-end52:
c810cf 48c7c076020000		mov	rax,dword 630
c810d6 49890424			mov	[r12],rax
c810da 48c7c000a7fc01		mov	rax,dword 33335040
c810e1 4989442408		mov	[r12+8],rax
c810e6 498d442401		lea	rax,[r12+1]
c810eb 50			push	rax
c810ec			version156:
c810ec 58			pop	rax
c810ed 49898298010000		mov	[r10+408],rax
c810f4 6aee			push	qword byte -18
c810f6			version157:
c810f6 48c7c0eeffffff		mov	rax,dword -18
c810fd 498982a0010000		mov	[r10+416],rax
c81104			version158:
c81104 50			push	rax
c81105 53			push	rbx
c81106 48b85080aa4e767f
c8110e 0000			mov	rax,140146102665296
c81110 488b18			mov	rbx,[rax]
c81113 48ffc3			inc	rbx
c81116 488918			mov	[rax],rbx
c81119 5b			pop	rbx
c8111a 58			pop	rax
c8111b 498d4424f0		lea	rax,[r12-16]
c81120 49bf0880aa4e767f
c81128 0000			mov	r15,140146102665224
c8112a 493b4728			cmp	rax,[r15+40]
c8112e 7d38			jge	short alloc-ok53
c81130 48c7c010000000		mov	rax,dword 16
c81137 57			push	rdi
c81138 56			push	rsi
c81139 52			push	rdx
c8113a 51			push	rcx
c8113b 4150			push	r8
c8113d 4151			push	r9
c8113f 4152			push	r10
c81141 4153			push	r11
c81143 50			push	rax
c81144 4889e7			mov	rdi,rsp
c81147 4883e4f0			and	rsp,byte -16
c8114b 4883ec08			sub	rsp,byte 8
c8114f 57			push	rdi
c81150 e87b4f6d01		call	gc
c81155 5c			pop	rsp
c81156 4989c4			mov	r12,rax
c81159 58			pop	rax
c8115a 415b			pop	r11
c8115c 415a			pop	r10
c8115e 4159			pop	r9
c81160 4158			pop	r8
c81162 59			pop	rcx
c81163 5a			pop	rdx
c81164 5e			pop	rsi
c81165 5f			pop	rdi
c81166 eb04			jmp	short alloc-end53
c81168			alloc-ok53:
c81168 4983ec10			sub	r12,byte 16
c8116c			alloc-end53:
c8116c 48c7c076020000		mov	rax,dword 630
c81173 49890424			mov	[r12],rax
c81177 48c7c040b7fc01		mov	rax,dword 33339200
c8117e 4989442408		mov	[r12+8],rax
c81183 498d442401		lea	rax,[r12+1]
c81188 50			push	rax
c81189			version159:
c81189 58			pop	rax
c8118a 498982a0010000		mov	[r10+416],rax
c81191 6aee			push	qword byte -18
c81193			version160:
c81193 48c7c0eeffffff		mov	rax,dword -18
c8119a 498982a8010000		mov	[r10+424],rax
c811a1			version161:
c811a1			version162:
c811a1 50			push	rax
c811a2 53			push	rbx
c811a3 48b85080aa4e767f
c811ab 0000			mov	rax,140146102665296
c811ad 488b18			mov	rbx,[rax]
c811b0 48ffc3			inc	rbx
c811b3 488918			mov	[rax],rbx
c811b6 5b			pop	rbx
c811b7 58			pop	rax
c811b8 498d4424f0		lea	rax,[r12-16]
c811bd 49bf0880aa4e767f
c811c5 0000			mov	r15,140146102665224
c811c7 493b4728			cmp	rax,[r15+40]
c811cb 7d38			jge	short alloc-ok54
c811cd 48c7c010000000		mov	rax,dword 16
c811d4 57			push	rdi
c811d5 56			push	rsi
c811d6 52			push	rdx
c811d7 51			push	rcx
c811d8 4150			push	r8
c811da 4151			push	r9
c811dc 4152			push	r10
c811de 4153			push	r11
c811e0 50			push	rax
c811e1 4889e7			mov	rdi,rsp
c811e4 4883e4f0			and	rsp,byte -16
c811e8 4883ec08			sub	rsp,byte 8
c811ec 57			push	rdi
c811ed e8de4e6d01		call	gc
c811f2 5c			pop	rsp
c811f3 4989c4			mov	r12,rax
c811f6 58			pop	rax
c811f7 415b			pop	r11
c811f9 415a			pop	r10
c811fb 4159			pop	r9
c811fd 4158			pop	r8
c811ff 59			pop	rcx
c81200 5a			pop	rdx
c81201 5e			pop	rsi
c81202 5f			pop	rdi
c81203 eb04			jmp	short alloc-end54
c81205			alloc-ok54:
c81205 4983ec10			sub	r12,byte 16
c81209			alloc-end54:
c81209 48c7c076020000		mov	rax,dword 630
c81210 49890424			mov	[r12],rax
c81214 48c7c080c7fc01		mov	rax,dword 33343360
c8121b 4989442408		mov	[r12+8],rax
c81220 498d442401		lea	rax,[r12+1]
c81225 50			push	rax
c81226			version163:
c81226 58			pop	rax
c81227 498982a8010000		mov	[r10+424],rax
c8122e 6aee			push	qword byte -18
c81230			version164:
c81230 48c7c0eeffffff		mov	rax,dword -18
c81237 498982b0010000		mov	[r10+432],rax
c8123e			version165:
c8123e			version166:
c8123e 50			push	rax
c8123f 53			push	rbx
c81240 48b85080aa4e767f
c81248 0000			mov	rax,140146102665296
c8124a 488b18			mov	rbx,[rax]
c8124d 48ffc3			inc	rbx
c81250 488918			mov	[rax],rbx
c81253 5b			pop	rbx
c81254 58			pop	rax
c81255 498d4424f0		lea	rax,[r12-16]
c8125a 49bf0880aa4e767f
c81262 0000			mov	r15,140146102665224
c81264 493b4728			cmp	rax,[r15+40]
c81268 7d38			jge	short alloc-ok55
c8126a 48c7c010000000		mov	rax,dword 16
c81271 57			push	rdi
c81272 56			push	rsi
c81273 52			push	rdx
c81274 51			push	rcx
c81275 4150			push	r8
c81277 4151			push	r9
c81279 4152			push	r10
c8127b 4153			push	r11
c8127d 50			push	rax
c8127e 4889e7			mov	rdi,rsp
c81281 4883e4f0			and	rsp,byte -16
c81285 4883ec08			sub	rsp,byte 8
c81289 57			push	rdi
c8128a e8414e6d01		call	gc
c8128f 5c			pop	rsp
c81290 4989c4			mov	r12,rax
c81293 58			pop	rax
c81294 415b			pop	r11
c81296 415a			pop	r10
c81298 4159			pop	r9
c8129a 4158			pop	r8
c8129c 59			pop	rcx
c8129d 5a			pop	rdx
c8129e 5e			pop	rsi
c8129f 5f			pop	rdi
c812a0 eb04			jmp	short alloc-end55
c812a2			alloc-ok55:
c812a2 4983ec10			sub	r12,byte 16
c812a6			alloc-end55:
c812a6 48c7c076020000		mov	rax,dword 630
c812ad 49890424			mov	[r12],rax
c812b1 48c7c0c0d7fc01		mov	rax,dword 33347520
c812b8 4989442408		mov	[r12+8],rax
c812bd 498d442401		lea	rax,[r12+1]
c812c2 50			push	rax
c812c3			version167:
c812c3 58			pop	rax
c812c4 498982b0010000		mov	[r10+432],rax
c812cb 6aee			push	qword byte -18
c812cd			version168:
c812cd 48c7c0eeffffff		mov	rax,dword -18
c812d4 498982b8010000		mov	[r10+440],rax
c812db			version169:
c812db 50			push	rax
c812dc 53			push	rbx
c812dd 48b85080aa4e767f
c812e5 0000			mov	rax,140146102665296
c812e7 488b18			mov	rbx,[rax]
c812ea 48ffc3			inc	rbx
c812ed 488918			mov	[rax],rbx
c812f0 5b			pop	rbx
c812f1 58			pop	rax
c812f2 498d4424f0		lea	rax,[r12-16]
c812f7 49bf0880aa4e767f
c812ff 0000			mov	r15,140146102665224
c81301 493b4728			cmp	rax,[r15+40]
c81305 7d38			jge	short alloc-ok56
c81307 48c7c010000000		mov	rax,dword 16
c8130e 57			push	rdi
c8130f 56			push	rsi
c81310 52			push	rdx
c81311 51			push	rcx
c81312 4150			push	r8
c81314 4151			push	r9
c81316 4152			push	r10
c81318 4153			push	r11
c8131a 50			push	rax
c8131b 4889e7			mov	rdi,rsp
c8131e 4883e4f0			and	rsp,byte -16
c81322 4883ec08			sub	rsp,byte 8
c81326 57			push	rdi
c81327 e8a44d6d01		call	gc
c8132c 5c			pop	rsp
c8132d 4989c4			mov	r12,rax
c81330 58			pop	rax
c81331 415b			pop	r11
c81333 415a			pop	r10
c81335 4159			pop	r9
c81337 4158			pop	r8
c81339 59			pop	rcx
c8133a 5a			pop	rdx
c8133b 5e			pop	rsi
c8133c 5f			pop	rdi
c8133d eb04			jmp	short alloc-end56
c8133f			alloc-ok56:
c8133f 4983ec10			sub	r12,byte 16
c81343			alloc-end56:
c81343 48c7c076020000		mov	rax,dword 630
c8134a 49890424			mov	[r12],rax
c8134e 48c7c000e8fc01		mov	rax,dword 33351680
c81355 4989442408		mov	[r12+8],rax
c8135a 498d442401		lea	rax,[r12+1]
c8135f 50			push	rax
c81360			version170:
c81360 58			pop	rax
c81361 498982b8010000		mov	[r10+440],rax
c81368 6aee			push	qword byte -18
c8136a			version171:
c8136a 48c7c0eeffffff		mov	rax,dword -18
c81371 498982c0010000		mov	[r10+448],rax
c81378			version172:
c81378 50			push	rax
c81379 53			push	rbx
c8137a 48b85080aa4e767f
c81382 0000			mov	rax,140146102665296
c81384 488b18			mov	rbx,[rax]
c81387 48ffc3			inc	rbx
c8138a 488918			mov	[rax],rbx
c8138d 5b			pop	rbx
c8138e 58			pop	rax
c8138f 498d4424f0		lea	rax,[r12-16]
c81394 49bf0880aa4e767f
c8139c 0000			mov	r15,140146102665224
c8139e 493b4728			cmp	rax,[r15+40]
c813a2 7d38			jge	short alloc-ok57
c813a4 48c7c010000000		mov	rax,dword 16
c813ab 57			push	rdi
c813ac 56			push	rsi
c813ad 52			push	rdx
c813ae 51			push	rcx
c813af 4150			push	r8
c813b1 4151			push	r9
c813b3 4152			push	r10
c813b5 4153			push	r11
c813b7 50			push	rax
c813b8 4889e7			mov	rdi,rsp
c813bb 4883e4f0			and	rsp,byte -16
c813bf 4883ec08			sub	rsp,byte 8
c813c3 57			push	rdi
c813c4 e8074d6d01		call	gc
c813c9 5c			pop	rsp
c813ca 4989c4			mov	r12,rax
c813cd 58			pop	rax
c813ce 415b			pop	r11
c813d0 415a			pop	r10
c813d2 4159			pop	r9
c813d4 4158			pop	r8
c813d6 59			pop	rcx
c813d7 5a			pop	rdx
c813d8 5e			pop	rsi
c813d9 5f			pop	rdi
c813da eb04			jmp	short alloc-end57
c813dc			alloc-ok57:
c813dc 4983ec10			sub	r12,byte 16
c813e0			alloc-end57:
c813e0 48c7c076020000		mov	rax,dword 630
c813e7 49890424			mov	[r12],rax
c813eb 48c7c040f8fc01		mov	rax,dword 33355840
c813f2 4989442408		mov	[r12+8],rax
c813f7 498d442401		lea	rax,[r12+1]
c813fc 50			push	rax
c813fd			version173:
c813fd 58			pop	rax
c813fe 498982c0010000		mov	[r10+448],rax
c81405 6aee			push	qword byte -18
c81407			version174:
c81407 48c7c0eeffffff		mov	rax,dword -18
c8140e 498982c8010000		mov	[r10+456],rax
c81415			version175:
c81415 50			push	rax
c81416 53			push	rbx
c81417 48b85080aa4e767f
c8141f 0000			mov	rax,140146102665296
c81421 488b18			mov	rbx,[rax]
c81424 48ffc3			inc	rbx
c81427 488918			mov	[rax],rbx
c8142a 5b			pop	rbx
c8142b 58			pop	rax
c8142c 498d4424f0		lea	rax,[r12-16]
c81431 49bf0880aa4e767f
c81439 0000			mov	r15,140146102665224
c8143b 493b4728			cmp	rax,[r15+40]
c8143f 7d38			jge	short alloc-ok58
c81441 48c7c010000000		mov	rax,dword 16
c81448 57			push	rdi
c81449 56			push	rsi
c8144a 52			push	rdx
c8144b 51			push	rcx
c8144c 4150			push	r8
c8144e 4151			push	r9
c81450 4152			push	r10
c81452 4153			push	r11
c81454 50			push	rax
c81455 4889e7			mov	rdi,rsp
c81458 4883e4f0			and	rsp,byte -16
c8145c 4883ec08			sub	rsp,byte 8
c81460 57			push	rdi
c81461 e86a4c6d01		call	gc
c81466 5c			pop	rsp
c81467 4989c4			mov	r12,rax
c8146a 58			pop	rax
c8146b 415b			pop	r11
c8146d 415a			pop	r10
c8146f 4159			pop	r9
c81471 4158			pop	r8
c81473 59			pop	rcx
c81474 5a			pop	rdx
c81475 5e			pop	rsi
c81476 5f			pop	rdi
c81477 eb04			jmp	short alloc-end58
c81479			alloc-ok58:
c81479 4983ec10			sub	r12,byte 16
c8147d			alloc-end58:
c8147d 48c7c076020000		mov	rax,dword 630
c81484 49890424			mov	[r12],rax
c81488 48c7c08008fd01		mov	rax,dword 33360000
c8148f 4989442408		mov	[r12+8],rax
c81494 498d442401		lea	rax,[r12+1]
c81499 50			push	rax
c8149a			version176:
c8149a 58			pop	rax
c8149b 498982c8010000		mov	[r10+456],rax
c814a2 6aee			push	qword byte -18
c814a4			version177:
c814a4 48c7c0eeffffff		mov	rax,dword -18
c814ab 498982d0010000		mov	[r10+464],rax
c814b2			version178:
c814b2 50			push	rax
c814b3 53			push	rbx
c814b4 48b85080aa4e767f
c814bc 0000			mov	rax,140146102665296
c814be 488b18			mov	rbx,[rax]
c814c1 48ffc3			inc	rbx
c814c4 488918			mov	[rax],rbx
c814c7 5b			pop	rbx
c814c8 58			pop	rax
c814c9 498d4424f0		lea	rax,[r12-16]
c814ce 49bf0880aa4e767f
c814d6 0000			mov	r15,140146102665224
c814d8 493b4728			cmp	rax,[r15+40]
c814dc 7d38			jge	short alloc-ok59
c814de 48c7c010000000		mov	rax,dword 16
c814e5 57			push	rdi
c814e6 56			push	rsi
c814e7 52			push	rdx
c814e8 51			push	rcx
c814e9 4150			push	r8
c814eb 4151			push	r9
c814ed 4152			push	r10
c814ef 4153			push	r11
c814f1 50			push	rax
c814f2 4889e7			mov	rdi,rsp
c814f5 4883e4f0			and	rsp,byte -16
c814f9 4883ec08			sub	rsp,byte 8
c814fd 57			push	rdi
c814fe e8cd4b6d01		call	gc
c81503 5c			pop	rsp
c81504 4989c4			mov	r12,rax
c81507 58			pop	rax
c81508 415b			pop	r11
c8150a 415a			pop	r10
c8150c 4159			pop	r9
c8150e 4158			pop	r8
c81510 59			pop	rcx
c81511 5a			pop	rdx
c81512 5e			pop	rsi
c81513 5f			pop	rdi
c81514 eb04			jmp	short alloc-end59
c81516			alloc-ok59:
c81516 4983ec10			sub	r12,byte 16
c8151a			alloc-end59:
c8151a 48c7c076020000		mov	rax,dword 630
c81521 49890424			mov	[r12],rax
c81525 48c7c0c018fd01		mov	rax,dword 33364160
c8152c 4989442408		mov	[r12+8],rax
c81531 498d442401		lea	rax,[r12+1]
c81536 50			push	rax
c81537			version179:
c81537 58			pop	rax
c81538 498982d0010000		mov	[r10+464],rax
c8153f 6aee			push	qword byte -18
c81541			version180:
c81541 48c7c0eeffffff		mov	rax,dword -18
c81548 498982d8010000		mov	[r10+472],rax
c8154f			version181:
c8154f 50			push	rax
c81550 53			push	rbx
c81551 48b85080aa4e767f
c81559 0000			mov	rax,140146102665296
c8155b 488b18			mov	rbx,[rax]
c8155e 48ffc3			inc	rbx
c81561 488918			mov	[rax],rbx
c81564 5b			pop	rbx
c81565 58			pop	rax
c81566 498d4424f0		lea	rax,[r12-16]
c8156b 49bf0880aa4e767f
c81573 0000			mov	r15,140146102665224
c81575 493b4728			cmp	rax,[r15+40]
c81579 7d38			jge	short alloc-ok60
c8157b 48c7c010000000		mov	rax,dword 16
c81582 57			push	rdi
c81583 56			push	rsi
c81584 52			push	rdx
c81585 51			push	rcx
c81586 4150			push	r8
c81588 4151			push	r9
c8158a 4152			push	r10
c8158c 4153			push	r11
c8158e 50			push	rax
c8158f 4889e7			mov	rdi,rsp
c81592 4883e4f0			and	rsp,byte -16
c81596 4883ec08			sub	rsp,byte 8
c8159a 57			push	rdi
c8159b e8304b6d01		call	gc
c815a0 5c			pop	rsp
c815a1 4989c4			mov	r12,rax
c815a4 58			pop	rax
c815a5 415b			pop	r11
c815a7 415a			pop	r10
c815a9 4159			pop	r9
c815ab 4158			pop	r8
c815ad 59			pop	rcx
c815ae 5a			pop	rdx
c815af 5e			pop	rsi
c815b0 5f			pop	rdi
c815b1 eb04			jmp	short alloc-end60
c815b3			alloc-ok60:
c815b3 4983ec10			sub	r12,byte 16
c815b7			alloc-end60:
c815b7 48c7c076020000		mov	rax,dword 630
c815be 49890424			mov	[r12],rax
c815c2 48c7c00029fd01		mov	rax,dword 33368320
c815c9 4989442408		mov	[r12+8],rax
c815ce 498d442401		lea	rax,[r12+1]
c815d3 50			push	rax
c815d4			version182:
c815d4 58			pop	rax
c815d5 498982d8010000		mov	[r10+472],rax
c815dc 6aee			push	qword byte -18
c815de			version183:
c815de 48c7c0eeffffff		mov	rax,dword -18
c815e5 498982e0010000		mov	[r10+480],rax
c815ec			version184:
c815ec 50			push	rax
c815ed 53			push	rbx
c815ee 48b85080aa4e767f
c815f6 0000			mov	rax,140146102665296
c815f8 488b18			mov	rbx,[rax]
c815fb 48ffc3			inc	rbx
c815fe 488918			mov	[rax],rbx
c81601 5b			pop	rbx
c81602 58			pop	rax
c81603 498d4424f0		lea	rax,[r12-16]
c81608 49bf0880aa4e767f
c81610 0000			mov	r15,140146102665224
c81612 493b4728			cmp	rax,[r15+40]
c81616 7d38			jge	short alloc-ok61
c81618 48c7c010000000		mov	rax,dword 16
c8161f 57			push	rdi
c81620 56			push	rsi
c81621 52			push	rdx
c81622 51			push	rcx
c81623 4150			push	r8
c81625 4151			push	r9
c81627 4152			push	r10
c81629 4153			push	r11
c8162b 50			push	rax
c8162c 4889e7			mov	rdi,rsp
c8162f 4883e4f0			and	rsp,byte -16
c81633 4883ec08			sub	rsp,byte 8
c81637 57			push	rdi
c81638 e8934a6d01		call	gc
c8163d 5c			pop	rsp
c8163e 4989c4			mov	r12,rax
c81641 58			pop	rax
c81642 415b			pop	r11
c81644 415a			pop	r10
c81646 4159			pop	r9
c81648 4158			pop	r8
c8164a 59			pop	rcx
c8164b 5a			pop	rdx
c8164c 5e			pop	rsi
c8164d 5f			pop	rdi
c8164e eb04			jmp	short alloc-end61
c81650			alloc-ok61:
c81650 4983ec10			sub	r12,byte 16
c81654			alloc-end61:
c81654 48c7c076020000		mov	rax,dword 630
c8165b 49890424			mov	[r12],rax
c8165f 48c7c04039fd01		mov	rax,dword 33372480
c81666 4989442408		mov	[r12+8],rax
c8166b 498d442401		lea	rax,[r12+1]
c81670 50			push	rax
c81671			version185:
c81671 58			pop	rax
c81672 498982e0010000		mov	[r10+480],rax
c81679 6aee			push	qword byte -18
c8167b			version186:
c8167b 48c7c0eeffffff		mov	rax,dword -18
c81682 498982e8010000		mov	[r10+488],rax
c81689			version187:
c81689 50			push	rax
c8168a 53			push	rbx
c8168b 48b85080aa4e767f
c81693 0000			mov	rax,140146102665296
c81695 488b18			mov	rbx,[rax]
c81698 48ffc3			inc	rbx
c8169b 488918			mov	[rax],rbx
c8169e 5b			pop	rbx
c8169f 58			pop	rax
c816a0 498d4424f0		lea	rax,[r12-16]
c816a5 49bf0880aa4e767f
c816ad 0000			mov	r15,140146102665224
c816af 493b4728			cmp	rax,[r15+40]
c816b3 7d38			jge	short alloc-ok62
c816b5 48c7c010000000		mov	rax,dword 16
c816bc 57			push	rdi
c816bd 56			push	rsi
c816be 52			push	rdx
c816bf 51			push	rcx
c816c0 4150			push	r8
c816c2 4151			push	r9
c816c4 4152			push	r10
c816c6 4153			push	r11
c816c8 50			push	rax
c816c9 4889e7			mov	rdi,rsp
c816cc 4883e4f0			and	rsp,byte -16
c816d0 4883ec08			sub	rsp,byte 8
c816d4 57			push	rdi
c816d5 e8f6496d01		call	gc
c816da 5c			pop	rsp
c816db 4989c4			mov	r12,rax
c816de 58			pop	rax
c816df 415b			pop	r11
c816e1 415a			pop	r10
c816e3 4159			pop	r9
c816e5 4158			pop	r8
c816e7 59			pop	rcx
c816e8 5a			pop	rdx
c816e9 5e			pop	rsi
c816ea 5f			pop	rdi
c816eb eb04			jmp	short alloc-end62
c816ed			alloc-ok62:
c816ed 4983ec10			sub	r12,byte 16
c816f1			alloc-end62:
c816f1 48c7c076020000		mov	rax,dword 630
c816f8 49890424			mov	[r12],rax
c816fc 48c7c08049fd01		mov	rax,dword 33376640
c81703 4989442408		mov	[r12+8],rax
c81708 498d442401		lea	rax,[r12+1]
c8170d 50			push	rax
c8170e			version188:
c8170e 58			pop	rax
c8170f 498982e8010000		mov	[r10+488],rax
c81716 6aee			push	qword byte -18
c81718			version189:
c81718 48c7c0eeffffff		mov	rax,dword -18
c8171f 498982f0010000		mov	[r10+496],rax
c81726			version190:
c81726 50			push	rax
c81727 53			push	rbx
c81728 48b85080aa4e767f
c81730 0000			mov	rax,140146102665296
c81732 488b18			mov	rbx,[rax]
c81735 48ffc3			inc	rbx
c81738 488918			mov	[rax],rbx
c8173b 5b			pop	rbx
c8173c 58			pop	rax
c8173d 498d4424f0		lea	rax,[r12-16]
c81742 49bf0880aa4e767f
c8174a 0000			mov	r15,140146102665224
c8174c 493b4728			cmp	rax,[r15+40]
c81750 7d38			jge	short alloc-ok63
c81752 48c7c010000000		mov	rax,dword 16
c81759 57			push	rdi
c8175a 56			push	rsi
c8175b 52			push	rdx
c8175c 51			push	rcx
c8175d 4150			push	r8
c8175f 4151			push	r9
c81761 4152			push	r10
c81763 4153			push	r11
c81765 50			push	rax
c81766 4889e7			mov	rdi,rsp
c81769 4883e4f0			and	rsp,byte -16
c8176d 4883ec08			sub	rsp,byte 8
c81771 57			push	rdi
c81772 e859496d01		call	gc
c81777 5c			pop	rsp
c81778 4989c4			mov	r12,rax
c8177b 58			pop	rax
c8177c 415b			pop	r11
c8177e 415a			pop	r10
c81780 4159			pop	r9
c81782 4158			pop	r8
c81784 59			pop	rcx
c81785 5a			pop	rdx
c81786 5e			pop	rsi
c81787 5f			pop	rdi
c81788 eb04			jmp	short alloc-end63
c8178a			alloc-ok63:
c8178a 4983ec10			sub	r12,byte 16
c8178e			alloc-end63:
c8178e 48c7c076020000		mov	rax,dword 630
c81795 49890424			mov	[r12],rax
c81799 48c7c0c059fd01		mov	rax,dword 33380800
c817a0 4989442408		mov	[r12+8],rax
c817a5 498d442401		lea	rax,[r12+1]
c817aa 50			push	rax
c817ab			version191:
c817ab 58			pop	rax
c817ac 498982f0010000		mov	[r10+496],rax
c817b3 6aee			push	qword byte -18
c817b5			version192:
c817b5 48c7c0eeffffff		mov	rax,dword -18
c817bc 498982f8010000		mov	[r10+504],rax
c817c3			version193:
c817c3 50			push	rax
c817c4 53			push	rbx
c817c5 48b85080aa4e767f
c817cd 0000			mov	rax,140146102665296
c817cf 488b18			mov	rbx,[rax]
c817d2 48ffc3			inc	rbx
c817d5 488918			mov	[rax],rbx
c817d8 5b			pop	rbx
c817d9 58			pop	rax
c817da 498d4424f0		lea	rax,[r12-16]
c817df 49bf0880aa4e767f
c817e7 0000			mov	r15,140146102665224
c817e9 493b4728			cmp	rax,[r15+40]
c817ed 7d38			jge	short alloc-ok64
c817ef 48c7c010000000		mov	rax,dword 16
c817f6 57			push	rdi
c817f7 56			push	rsi
c817f8 52			push	rdx
c817f9 51			push	rcx
c817fa 4150			push	r8
c817fc 4151			push	r9
c817fe 4152			push	r10
c81800 4153			push	r11
c81802 50			push	rax
c81803 4889e7			mov	rdi,rsp
c81806 4883e4f0			and	rsp,byte -16
c8180a 4883ec08			sub	rsp,byte 8
c8180e 57			push	rdi
c8180f e8bc486d01		call	gc
c81814 5c			pop	rsp
c81815 4989c4			mov	r12,rax
c81818 58			pop	rax
c81819 415b			pop	r11
c8181b 415a			pop	r10
c8181d 4159			pop	r9
c8181f 4158			pop	r8
c81821 59			pop	rcx
c81822 5a			pop	rdx
c81823 5e			pop	rsi
c81824 5f			pop	rdi
c81825 eb04			jmp	short alloc-end64
c81827			alloc-ok64:
c81827 4983ec10			sub	r12,byte 16
c8182b			alloc-end64:
c8182b 48c7c076020000		mov	rax,dword 630
c81832 49890424			mov	[r12],rax
c81836 48c7c0006afd01		mov	rax,dword 33384960
c8183d 4989442408		mov	[r12+8],rax
c81842 498d442401		lea	rax,[r12+1]
c81847 50			push	rax
c81848			version194:
c81848 58			pop	rax
c81849 498982f8010000		mov	[r10+504],rax
c81850 6aee			push	qword byte -18
c81852			version195:
c81852 48c7c0eeffffff		mov	rax,dword -18
c81859 49898200020000		mov	[r10+512],rax
c81860			version196:
c81860 50			push	rax
c81861 53			push	rbx
c81862 48b85080aa4e767f
c8186a 0000			mov	rax,140146102665296
c8186c 488b18			mov	rbx,[rax]
c8186f 48ffc3			inc	rbx
c81872 488918			mov	[rax],rbx
c81875 5b			pop	rbx
c81876 58			pop	rax
c81877 498d4424f0		lea	rax,[r12-16]
c8187c 49bf0880aa4e767f
c81884 0000			mov	r15,140146102665224
c81886 493b4728			cmp	rax,[r15+40]
c8188a 7d38			jge	short alloc-ok65
c8188c 48c7c010000000		mov	rax,dword 16
c81893 57			push	rdi
c81894 56			push	rsi
c81895 52			push	rdx
c81896 51			push	rcx
c81897 4150			push	r8
c81899 4151			push	r9
c8189b 4152			push	r10
c8189d 4153			push	r11
c8189f 50			push	rax
c818a0 4889e7			mov	rdi,rsp
c818a3 4883e4f0			and	rsp,byte -16
c818a7 4883ec08			sub	rsp,byte 8
c818ab 57			push	rdi
c818ac e81f486d01		call	gc
c818b1 5c			pop	rsp
c818b2 4989c4			mov	r12,rax
c818b5 58			pop	rax
c818b6 415b			pop	r11
c818b8 415a			pop	r10
c818ba 4159			pop	r9
c818bc 4158			pop	r8
c818be 59			pop	rcx
c818bf 5a			pop	rdx
c818c0 5e			pop	rsi
c818c1 5f			pop	rdi
c818c2 eb04			jmp	short alloc-end65
c818c4			alloc-ok65:
c818c4 4983ec10			sub	r12,byte 16
c818c8			alloc-end65:
c818c8 48c7c076020000		mov	rax,dword 630
c818cf 49890424			mov	[r12],rax
c818d3 48c7c0407afd01		mov	rax,dword 33389120
c818da 4989442408		mov	[r12+8],rax
c818df 498d442401		lea	rax,[r12+1]
c818e4 50			push	rax
c818e5			version197:
c818e5 58			pop	rax
c818e6 49898200020000		mov	[r10+512],rax
c818ed 6aee			push	qword byte -18
c818ef			version198:
c818ef 48c7c0eeffffff		mov	rax,dword -18
c818f6 49898208020000		mov	[r10+520],rax
c818fd			version199:
c818fd 50			push	rax
c818fe 53			push	rbx
c818ff 48b85080aa4e767f
c81907 0000			mov	rax,140146102665296
c81909 488b18			mov	rbx,[rax]
c8190c 48ffc3			inc	rbx
c8190f 488918			mov	[rax],rbx
c81912 5b			pop	rbx
c81913 58			pop	rax
c81914 498d4424f0		lea	rax,[r12-16]
c81919 49bf0880aa4e767f
c81921 0000			mov	r15,140146102665224
c81923 493b4728			cmp	rax,[r15+40]
c81927 7d38			jge	short alloc-ok66
c81929 48c7c010000000		mov	rax,dword 16
c81930 57			push	rdi
c81931 56			push	rsi
c81932 52			push	rdx
c81933 51			push	rcx
c81934 4150			push	r8
c81936 4151			push	r9
c81938 4152			push	r10
c8193a 4153			push	r11
c8193c 50			push	rax
c8193d 4889e7			mov	rdi,rsp
c81940 4883e4f0			and	rsp,byte -16
c81944 4883ec08			sub	rsp,byte 8
c81948 57			push	rdi
c81949 e882476d01		call	gc
c8194e 5c			pop	rsp
c8194f 4989c4			mov	r12,rax
c81952 58			pop	rax
c81953 415b			pop	r11
c81955 415a			pop	r10
c81957 4159			pop	r9
c81959 4158			pop	r8
c8195b 59			pop	rcx
c8195c 5a			pop	rdx
c8195d 5e			pop	rsi
c8195e 5f			pop	rdi
c8195f eb04			jmp	short alloc-end66
c81961			alloc-ok66:
c81961 4983ec10			sub	r12,byte 16
c81965			alloc-end66:
c81965 48c7c076020000		mov	rax,dword 630
c8196c 49890424			mov	[r12],rax
c81970 48c7c0808afd01		mov	rax,dword 33393280
c81977 4989442408		mov	[r12+8],rax
c8197c 498d442401		lea	rax,[r12+1]
c81981 50			push	rax
c81982			version200:
c81982 58			pop	rax
c81983 49898208020000		mov	[r10+520],rax
c8198a 6aee			push	qword byte -18
c8198c			version201:
c8198c 48c7c0eeffffff		mov	rax,dword -18
c81993 49898210020000		mov	[r10+528],rax
c8199a			version202:
c8199a 50			push	rax
c8199b 53			push	rbx
c8199c 48b85080aa4e767f
c819a4 0000			mov	rax,140146102665296
c819a6 488b18			mov	rbx,[rax]
c819a9 48ffc3			inc	rbx
c819ac 488918			mov	[rax],rbx
c819af 5b			pop	rbx
c819b0 58			pop	rax
c819b1 498d4424f0		lea	rax,[r12-16]
c819b6 49bf0880aa4e767f
c819be 0000			mov	r15,140146102665224
c819c0 493b4728			cmp	rax,[r15+40]
c819c4 7d38			jge	short alloc-ok67
c819c6 48c7c010000000		mov	rax,dword 16
c819cd 57			push	rdi
c819ce 56			push	rsi
c819cf 52			push	rdx
c819d0 51			push	rcx
c819d1 4150			push	r8
c819d3 4151			push	r9
c819d5 4152			push	r10
c819d7 4153			push	r11
c819d9 50			push	rax
c819da 4889e7			mov	rdi,rsp
c819dd 4883e4f0			and	rsp,byte -16
c819e1 4883ec08			sub	rsp,byte 8
c819e5 57			push	rdi
c819e6 e8e5466d01		call	gc
c819eb 5c			pop	rsp
c819ec 4989c4			mov	r12,rax
c819ef 58			pop	rax
c819f0 415b			pop	r11
c819f2 415a			pop	r10
c819f4 4159			pop	r9
c819f6 4158			pop	r8
c819f8 59			pop	rcx
c819f9 5a			pop	rdx
c819fa 5e			pop	rsi
c819fb 5f			pop	rdi
c819fc eb04			jmp	short alloc-end67
c819fe			alloc-ok67:
c819fe 4983ec10			sub	r12,byte 16
c81a02			alloc-end67:
c81a02 48c7c076020000		mov	rax,dword 630
c81a09 49890424			mov	[r12],rax
c81a0d 48c7c0c09afd01		mov	rax,dword 33397440
c81a14 4989442408		mov	[r12+8],rax
c81a19 498d442401		lea	rax,[r12+1]
c81a1e 50			push	rax
c81a1f			version203:
c81a1f 58			pop	rax
c81a20 49898210020000		mov	[r10+528],rax
c81a27 6aee			push	qword byte -18
c81a29			version204:
c81a29 48c7c0eeffffff		mov	rax,dword -18
c81a30 49898218020000		mov	[r10+536],rax
c81a37			version205:
c81a37 50			push	rax
c81a38 53			push	rbx
c81a39 48b85080aa4e767f
c81a41 0000			mov	rax,140146102665296
c81a43 488b18			mov	rbx,[rax]
c81a46 48ffc3			inc	rbx
c81a49 488918			mov	[rax],rbx
c81a4c 5b			pop	rbx
c81a4d 58			pop	rax
c81a4e 498d4424f0		lea	rax,[r12-16]
c81a53 49bf0880aa4e767f
c81a5b 0000			mov	r15,140146102665224
c81a5d 493b4728			cmp	rax,[r15+40]
c81a61 7d38			jge	short alloc-ok68
c81a63 48c7c010000000		mov	rax,dword 16
c81a6a 57			push	rdi
c81a6b 56			push	rsi
c81a6c 52			push	rdx
c81a6d 51			push	rcx
c81a6e 4150			push	r8
c81a70 4151			push	r9
c81a72 4152			push	r10
c81a74 4153			push	r11
c81a76 50			push	rax
c81a77 4889e7			mov	rdi,rsp
c81a7a 4883e4f0			and	rsp,byte -16
c81a7e 4883ec08			sub	rsp,byte 8
c81a82 57			push	rdi
c81a83 e848466d01		call	gc
c81a88 5c			pop	rsp
c81a89 4989c4			mov	r12,rax
c81a8c 58			pop	rax
c81a8d 415b			pop	r11
c81a8f 415a			pop	r10
c81a91 4159			pop	r9
c81a93 4158			pop	r8
c81a95 59			pop	rcx
c81a96 5a			pop	rdx
c81a97 5e			pop	rsi
c81a98 5f			pop	rdi
c81a99 eb04			jmp	short alloc-end68
c81a9b			alloc-ok68:
c81a9b 4983ec10			sub	r12,byte 16
c81a9f			alloc-end68:
c81a9f 48c7c076020000		mov	rax,dword 630
c81aa6 49890424			mov	[r12],rax
c81aaa 48c7c000abfd01		mov	rax,dword 33401600
c81ab1 4989442408		mov	[r12+8],rax
c81ab6 498d442401		lea	rax,[r12+1]
c81abb 50			push	rax
c81abc			version206:
c81abc 58			pop	rax
c81abd 49898218020000		mov	[r10+536],rax
c81ac4 6aee			push	qword byte -18
c81ac6			version207:
c81ac6 48c7c0eeffffff		mov	rax,dword -18
c81acd 49898220020000		mov	[r10+544],rax
c81ad4			version208:
c81ad4 50			push	rax
c81ad5 53			push	rbx
c81ad6 48b85080aa4e767f
c81ade 0000			mov	rax,140146102665296
c81ae0 488b18			mov	rbx,[rax]
c81ae3 48ffc3			inc	rbx
c81ae6 488918			mov	[rax],rbx
c81ae9 5b			pop	rbx
c81aea 58			pop	rax
c81aeb 498d4424f0		lea	rax,[r12-16]
c81af0 49bf0880aa4e767f
c81af8 0000			mov	r15,140146102665224
c81afa 493b4728			cmp	rax,[r15+40]
c81afe 7d38			jge	short alloc-ok69
c81b00 48c7c010000000		mov	rax,dword 16
c81b07 57			push	rdi
c81b08 56			push	rsi
c81b09 52			push	rdx
c81b0a 51			push	rcx
c81b0b 4150			push	r8
c81b0d 4151			push	r9
c81b0f 4152			push	r10
c81b11 4153			push	r11
c81b13 50			push	rax
c81b14 4889e7			mov	rdi,rsp
c81b17 4883e4f0			and	rsp,byte -16
c81b1b 4883ec08			sub	rsp,byte 8
c81b1f 57			push	rdi
c81b20 e8ab456d01		call	gc
c81b25 5c			pop	rsp
c81b26 4989c4			mov	r12,rax
c81b29 58			pop	rax
c81b2a 415b			pop	r11
c81b2c 415a			pop	r10
c81b2e 4159			pop	r9
c81b30 4158			pop	r8
c81b32 59			pop	rcx
c81b33 5a			pop	rdx
c81b34 5e			pop	rsi
c81b35 5f			pop	rdi
c81b36 eb04			jmp	short alloc-end69
c81b38			alloc-ok69:
c81b38 4983ec10			sub	r12,byte 16
c81b3c			alloc-end69:
c81b3c 48c7c076020000		mov	rax,dword 630
c81b43 49890424			mov	[r12],rax
c81b47 48c7c040bbfd01		mov	rax,dword 33405760
c81b4e 4989442408		mov	[r12+8],rax
c81b53 498d442401		lea	rax,[r12+1]
c81b58 50			push	rax
c81b59			version209:
c81b59 58			pop	rax
c81b5a 49898220020000		mov	[r10+544],rax
c81b61 6aee			push	qword byte -18
c81b63			version210:
c81b63 48c7c0eeffffff		mov	rax,dword -18
c81b6a 49898228020000		mov	[r10+552],rax
c81b71			version211:
c81b71 50			push	rax
c81b72 53			push	rbx
c81b73 48b85080aa4e767f
c81b7b 0000			mov	rax,140146102665296
c81b7d 488b18			mov	rbx,[rax]
c81b80 48ffc3			inc	rbx
c81b83 488918			mov	[rax],rbx
c81b86 5b			pop	rbx
c81b87 58			pop	rax
c81b88 498d4424f0		lea	rax,[r12-16]
c81b8d 49bf0880aa4e767f
c81b95 0000			mov	r15,140146102665224
c81b97 493b4728			cmp	rax,[r15+40]
c81b9b 7d38			jge	short alloc-ok70
c81b9d 48c7c010000000		mov	rax,dword 16
c81ba4 57			push	rdi
c81ba5 56			push	rsi
c81ba6 52			push	rdx
c81ba7 51			push	rcx
c81ba8 4150			push	r8
c81baa 4151			push	r9
c81bac 4152			push	r10
c81bae 4153			push	r11
c81bb0 50			push	rax
c81bb1 4889e7			mov	rdi,rsp
c81bb4 4883e4f0			and	rsp,byte -16
c81bb8 4883ec08			sub	rsp,byte 8
c81bbc 57			push	rdi
c81bbd e80e456d01		call	gc
c81bc2 5c			pop	rsp
c81bc3 4989c4			mov	r12,rax
c81bc6 58			pop	rax
c81bc7 415b			pop	r11
c81bc9 415a			pop	r10
c81bcb 4159			pop	r9
c81bcd 4158			pop	r8
c81bcf 59			pop	rcx
c81bd0 5a			pop	rdx
c81bd1 5e			pop	rsi
c81bd2 5f			pop	rdi
c81bd3 eb04			jmp	short alloc-end70
c81bd5			alloc-ok70:
c81bd5 4983ec10			sub	r12,byte 16
c81bd9			alloc-end70:
c81bd9 48c7c076020000		mov	rax,dword 630
c81be0 49890424			mov	[r12],rax
c81be4 48c7c000cc1d02		mov	rax,dword 35507200
c81beb 4989442408		mov	[r12+8],rax
c81bf0 498d442401		lea	rax,[r12+1]
c81bf5 50			push	rax
c81bf6			version212:
c81bf6 58			pop	rax
c81bf7 49898228020000		mov	[r10+552],rax
c81bfe 6aee			push	qword byte -18
c81c00			version213:
c81c00 48c7c0eeffffff		mov	rax,dword -18
c81c07 49898230020000		mov	[r10+560],rax
c81c0e			version214:
c81c0e 50			push	rax
c81c0f 53			push	rbx
c81c10 48b85080aa4e767f
c81c18 0000			mov	rax,140146102665296
c81c1a 488b18			mov	rbx,[rax]
c81c1d 48ffc3			inc	rbx
c81c20 488918			mov	[rax],rbx
c81c23 5b			pop	rbx
c81c24 58			pop	rax
c81c25 498d4424f0		lea	rax,[r12-16]
c81c2a 49bf0880aa4e767f
c81c32 0000			mov	r15,140146102665224
c81c34 493b4728			cmp	rax,[r15+40]
c81c38 7d38			jge	short alloc-ok71
c81c3a 48c7c010000000		mov	rax,dword 16
c81c41 57			push	rdi
c81c42 56			push	rsi
c81c43 52			push	rdx
c81c44 51			push	rcx
c81c45 4150			push	r8
c81c47 4151			push	r9
c81c49 4152			push	r10
c81c4b 4153			push	r11
c81c4d 50			push	rax
c81c4e 4889e7			mov	rdi,rsp
c81c51 4883e4f0			and	rsp,byte -16
c81c55 4883ec08			sub	rsp,byte 8
c81c59 57			push	rdi
c81c5a e871446d01		call	gc
c81c5f 5c			pop	rsp
c81c60 4989c4			mov	r12,rax
c81c63 58			pop	rax
c81c64 415b			pop	r11
c81c66 415a			pop	r10
c81c68 4159			pop	r9
c81c6a 4158			pop	r8
c81c6c 59			pop	rcx
c81c6d 5a			pop	rdx
c81c6e 5e			pop	rsi
c81c6f 5f			pop	rdi
c81c70 eb04			jmp	short alloc-end71
c81c72			alloc-ok71:
c81c72 4983ec10			sub	r12,byte 16
c81c76			alloc-end71:
c81c76 48c7c076020000		mov	rax,dword 630
c81c7d 49890424			mov	[r12],rax
c81c81 48c7c0605c1e02		mov	rax,dword 35544160
c81c88 4989442408		mov	[r12+8],rax
c81c8d 498d442401		lea	rax,[r12+1]
c81c92 50			push	rax
c81c93			version215:
c81c93 58			pop	rax
c81c94 49898230020000		mov	[r10+560],rax
c81c9b 6aee			push	qword byte -18
c81c9d			version216:
c81c9d 48c7c0eeffffff		mov	rax,dword -18
c81ca4 49898238020000		mov	[r10+568],rax
c81cab			version217:
c81cab 50			push	rax
c81cac 53			push	rbx
c81cad 48b85080aa4e767f
c81cb5 0000			mov	rax,140146102665296
c81cb7 488b18			mov	rbx,[rax]
c81cba 48ffc3			inc	rbx
c81cbd 488918			mov	[rax],rbx
c81cc0 5b			pop	rbx
c81cc1 58			pop	rax
c81cc2 498d4424f0		lea	rax,[r12-16]
c81cc7 49bf0880aa4e767f
c81ccf 0000			mov	r15,140146102665224
c81cd1 493b4728			cmp	rax,[r15+40]
c81cd5 7d38			jge	short alloc-ok72
c81cd7 48c7c010000000		mov	rax,dword 16
c81cde 57			push	rdi
c81cdf 56			push	rsi
c81ce0 52			push	rdx
c81ce1 51			push	rcx
c81ce2 4150			push	r8
c81ce4 4151			push	r9
c81ce6 4152			push	r10
c81ce8 4153			push	r11
c81cea 50			push	rax
c81ceb 4889e7			mov	rdi,rsp
c81cee 4883e4f0			and	rsp,byte -16
c81cf2 4883ec08			sub	rsp,byte 8
c81cf6 57			push	rdi
c81cf7 e8d4436d01		call	gc
c81cfc 5c			pop	rsp
c81cfd 4989c4			mov	r12,rax
c81d00 58			pop	rax
c81d01 415b			pop	r11
c81d03 415a			pop	r10
c81d05 4159			pop	r9
c81d07 4158			pop	r8
c81d09 59			pop	rcx
c81d0a 5a			pop	rdx
c81d0b 5e			pop	rsi
c81d0c 5f			pop	rdi
c81d0d eb04			jmp	short alloc-end72
c81d0f			alloc-ok72:
c81d0f 4983ec10			sub	r12,byte 16
c81d13			alloc-end72:
c81d13 48c7c076020000		mov	rax,dword 630
c81d1a 49890424			mov	[r12],rax
c81d1e 48c7c0a06c1e02		mov	rax,dword 35548320
c81d25 4989442408		mov	[r12+8],rax
c81d2a 498d442401		lea	rax,[r12+1]
c81d2f 50			push	rax
c81d30			version218:
c81d30 58			pop	rax
c81d31 49898238020000		mov	[r10+568],rax
c81d38 6aee			push	qword byte -18
c81d3a			version219:
c81d3a 48c7c0eeffffff		mov	rax,dword -18
c81d41 49898240020000		mov	[r10+576],rax
c81d48			version220:
c81d48 50			push	rax
c81d49 53			push	rbx
c81d4a 48b85080aa4e767f
c81d52 0000			mov	rax,140146102665296
c81d54 488b18			mov	rbx,[rax]
c81d57 48ffc3			inc	rbx
c81d5a 488918			mov	[rax],rbx
c81d5d 5b			pop	rbx
c81d5e 58			pop	rax
c81d5f 498d4424f0		lea	rax,[r12-16]
c81d64 49bf0880aa4e767f
c81d6c 0000			mov	r15,140146102665224
c81d6e 493b4728			cmp	rax,[r15+40]
c81d72 7d38			jge	short alloc-ok73
c81d74 48c7c010000000		mov	rax,dword 16
c81d7b 57			push	rdi
c81d7c 56			push	rsi
c81d7d 52			push	rdx
c81d7e 51			push	rcx
c81d7f 4150			push	r8
c81d81 4151			push	r9
c81d83 4152			push	r10
c81d85 4153			push	r11
c81d87 50			push	rax
c81d88 4889e7			mov	rdi,rsp
c81d8b 4883e4f0			and	rsp,byte -16
c81d8f 4883ec08			sub	rsp,byte 8
c81d93 57			push	rdi
c81d94 e837436d01		call	gc
c81d99 5c			pop	rsp
c81d9a 4989c4			mov	r12,rax
c81d9d 58			pop	rax
c81d9e 415b			pop	r11
c81da0 415a			pop	r10
c81da2 4159			pop	r9
c81da4 4158			pop	r8
c81da6 59			pop	rcx
c81da7 5a			pop	rdx
c81da8 5e			pop	rsi
c81da9 5f			pop	rdi
c81daa eb04			jmp	short alloc-end73
c81dac			alloc-ok73:
c81dac 4983ec10			sub	r12,byte 16
c81db0			alloc-end73:
c81db0 48c7c076020000		mov	rax,dword 630
c81db7 49890424			mov	[r12],rax
c81dbb 48c7c0e07c1e02		mov	rax,dword 35552480
c81dc2 4989442408		mov	[r12+8],rax
c81dc7 498d442401		lea	rax,[r12+1]
c81dcc 50			push	rax
c81dcd			version221:
c81dcd 58			pop	rax
c81dce 49898240020000		mov	[r10+576],rax
c81dd5 6aee			push	qword byte -18
c81dd7			version222:
c81dd7 48c7c0eeffffff		mov	rax,dword -18
c81dde 49898248020000		mov	[r10+584],rax
c81de5			version223:
c81de5 50			push	rax
c81de6 53			push	rbx
c81de7 48b85080aa4e767f
c81def 0000			mov	rax,140146102665296
c81df1 488b18			mov	rbx,[rax]
c81df4 48ffc3			inc	rbx
c81df7 488918			mov	[rax],rbx
c81dfa 5b			pop	rbx
c81dfb 58			pop	rax
c81dfc 498d4424f0		lea	rax,[r12-16]
c81e01 49bf0880aa4e767f
c81e09 0000			mov	r15,140146102665224
c81e0b 493b4728			cmp	rax,[r15+40]
c81e0f 7d38			jge	short alloc-ok74
c81e11 48c7c010000000		mov	rax,dword 16
c81e18 57			push	rdi
c81e19 56			push	rsi
c81e1a 52			push	rdx
c81e1b 51			push	rcx
c81e1c 4150			push	r8
c81e1e 4151			push	r9
c81e20 4152			push	r10
c81e22 4153			push	r11
c81e24 50			push	rax
c81e25 4889e7			mov	rdi,rsp
c81e28 4883e4f0			and	rsp,byte -16
c81e2c 4883ec08			sub	rsp,byte 8
c81e30 57			push	rdi
c81e31 e89a426d01		call	gc
c81e36 5c			pop	rsp
c81e37 4989c4			mov	r12,rax
c81e3a 58			pop	rax
c81e3b 415b			pop	r11
c81e3d 415a			pop	r10
c81e3f 4159			pop	r9
c81e41 4158			pop	r8
c81e43 59			pop	rcx
c81e44 5a			pop	rdx
c81e45 5e			pop	rsi
c81e46 5f			pop	rdi
c81e47 eb04			jmp	short alloc-end74
c81e49			alloc-ok74:
c81e49 4983ec10			sub	r12,byte 16
c81e4d			alloc-end74:
c81e4d 48c7c076020000		mov	rax,dword 630
c81e54 49890424			mov	[r12],rax
c81e58 48c7c0208d1e02		mov	rax,dword 35556640
c81e5f 4989442408		mov	[r12+8],rax
c81e64 498d442401		lea	rax,[r12+1]
c81e69 50			push	rax
c81e6a			version224:
c81e6a 58			pop	rax
c81e6b 49898248020000		mov	[r10+584],rax
c81e72 6aee			push	qword byte -18
c81e74			version225:
c81e74 48c7c0eeffffff		mov	rax,dword -18
c81e7b 49898250020000		mov	[r10+592],rax
c81e82			version226:
c81e82 50			push	rax
c81e83 53			push	rbx
c81e84 48b85080aa4e767f
c81e8c 0000			mov	rax,140146102665296
c81e8e 488b18			mov	rbx,[rax]
c81e91 48ffc3			inc	rbx
c81e94 488918			mov	[rax],rbx
c81e97 5b			pop	rbx
c81e98 58			pop	rax
c81e99 498d4424f0		lea	rax,[r12-16]
c81e9e 49bf0880aa4e767f
c81ea6 0000			mov	r15,140146102665224
c81ea8 493b4728			cmp	rax,[r15+40]
c81eac 7d38			jge	short alloc-ok75
c81eae 48c7c010000000		mov	rax,dword 16
c81eb5 57			push	rdi
c81eb6 56			push	rsi
c81eb7 52			push	rdx
c81eb8 51			push	rcx
c81eb9 4150			push	r8
c81ebb 4151			push	r9
c81ebd 4152			push	r10
c81ebf 4153			push	r11
c81ec1 50			push	rax
c81ec2 4889e7			mov	rdi,rsp
c81ec5 4883e4f0			and	rsp,byte -16
c81ec9 4883ec08			sub	rsp,byte 8
c81ecd 57			push	rdi
c81ece e8fd416d01		call	gc
c81ed3 5c			pop	rsp
c81ed4 4989c4			mov	r12,rax
c81ed7 58			pop	rax
c81ed8 415b			pop	r11
c81eda 415a			pop	r10
c81edc 4159			pop	r9
c81ede 4158			pop	r8
c81ee0 59			pop	rcx
c81ee1 5a			pop	rdx
c81ee2 5e			pop	rsi
c81ee3 5f			pop	rdi
c81ee4 eb04			jmp	short alloc-end75
c81ee6			alloc-ok75:
c81ee6 4983ec10			sub	r12,byte 16
c81eea			alloc-end75:
c81eea 48c7c076020000		mov	rax,dword 630
c81ef1 49890424			mov	[r12],rax
c81ef5 48c7c0609d1e02		mov	rax,dword 35560800
c81efc 4989442408		mov	[r12+8],rax
c81f01 498d442401		lea	rax,[r12+1]
c81f06 50			push	rax
c81f07			version227:
c81f07 58			pop	rax
c81f08 49898250020000		mov	[r10+592],rax
c81f0f 6aee			push	qword byte -18
c81f11			version228:
c81f11 48c7c0eeffffff		mov	rax,dword -18
c81f18 49898258020000		mov	[r10+600],rax
c81f1f			version229:
c81f1f 50			push	rax
c81f20 53			push	rbx
c81f21 48b85080aa4e767f
c81f29 0000			mov	rax,140146102665296
c81f2b 488b18			mov	rbx,[rax]
c81f2e 48ffc3			inc	rbx
c81f31 488918			mov	[rax],rbx
c81f34 5b			pop	rbx
c81f35 58			pop	rax
c81f36 498d4424f0		lea	rax,[r12-16]
c81f3b 49bf0880aa4e767f
c81f43 0000			mov	r15,140146102665224
c81f45 493b4728			cmp	rax,[r15+40]
c81f49 7d38			jge	short alloc-ok76
c81f4b 48c7c010000000		mov	rax,dword 16
c81f52 57			push	rdi
c81f53 56			push	rsi
c81f54 52			push	rdx
c81f55 51			push	rcx
c81f56 4150			push	r8
c81f58 4151			push	r9
c81f5a 4152			push	r10
c81f5c 4153			push	r11
c81f5e 50			push	rax
c81f5f 4889e7			mov	rdi,rsp
c81f62 4883e4f0			and	rsp,byte -16
c81f66 4883ec08			sub	rsp,byte 8
c81f6a 57			push	rdi
c81f6b e860416d01		call	gc
c81f70 5c			pop	rsp
c81f71 4989c4			mov	r12,rax
c81f74 58			pop	rax
c81f75 415b			pop	r11
c81f77 415a			pop	r10
c81f79 4159			pop	r9
c81f7b 4158			pop	r8
c81f7d 59			pop	rcx
c81f7e 5a			pop	rdx
c81f7f 5e			pop	rsi
c81f80 5f			pop	rdi
c81f81 eb04			jmp	short alloc-end76
c81f83			alloc-ok76:
c81f83 4983ec10			sub	r12,byte 16
c81f87			alloc-end76:
c81f87 48c7c076020000		mov	rax,dword 630
c81f8e 49890424			mov	[r12],rax
c81f92 48c7c0a0ad1e02		mov	rax,dword 35564960
c81f99 4989442408		mov	[r12+8],rax
c81f9e 498d442401		lea	rax,[r12+1]
c81fa3 50			push	rax
c81fa4			version230:
c81fa4 58			pop	rax
c81fa5 49898258020000		mov	[r10+600],rax
c81fac 6aee			push	qword byte -18
c81fae			version231:
c81fae 48c7c0eeffffff		mov	rax,dword -18
c81fb5 49898260020000		mov	[r10+608],rax
c81fbc			version232:
c81fbc 50			push	rax
c81fbd 53			push	rbx
c81fbe 48b85080aa4e767f
c81fc6 0000			mov	rax,140146102665296
c81fc8 488b18			mov	rbx,[rax]
c81fcb 48ffc3			inc	rbx
c81fce 488918			mov	[rax],rbx
c81fd1 5b			pop	rbx
c81fd2 58			pop	rax
c81fd3 498d4424f0		lea	rax,[r12-16]
c81fd8 49bf0880aa4e767f
c81fe0 0000			mov	r15,140146102665224
c81fe2 493b4728			cmp	rax,[r15+40]
c81fe6 7d38			jge	short alloc-ok77
c81fe8 48c7c010000000		mov	rax,dword 16
c81fef 57			push	rdi
c81ff0 56			push	rsi
c81ff1 52			push	rdx
c81ff2 51			push	rcx
c81ff3 4150			push	r8
c81ff5 4151			push	r9
c81ff7 4152			push	r10
c81ff9 4153			push	r11
c81ffb 50			push	rax
c81ffc 4889e7			mov	rdi,rsp
c81fff 4883e4f0			and	rsp,byte -16
c82003 4883ec08			sub	rsp,byte 8
c82007 57			push	rdi
c82008 e8c3406d01		call	gc
c8200d 5c			pop	rsp
c8200e 4989c4			mov	r12,rax
c82011 58			pop	rax
c82012 415b			pop	r11
c82014 415a			pop	r10
c82016 4159			pop	r9
c82018 4158			pop	r8
c8201a 59			pop	rcx
c8201b 5a			pop	rdx
c8201c 5e			pop	rsi
c8201d 5f			pop	rdi
c8201e eb04			jmp	short alloc-end77
c82020			alloc-ok77:
c82020 4983ec10			sub	r12,byte 16
c82024			alloc-end77:
c82024 48c7c076020000		mov	rax,dword 630
c8202b 49890424			mov	[r12],rax
c8202f 48c7c0e0bd1e02		mov	rax,dword 35569120
c82036 4989442408		mov	[r12+8],rax
c8203b 498d442401		lea	rax,[r12+1]
c82040 50			push	rax
c82041			version233:
c82041 58			pop	rax
c82042 49898260020000		mov	[r10+608],rax
c82049 6aee			push	qword byte -18
c8204b			version234:
c8204b 48c7c0eeffffff		mov	rax,dword -18
c82052 49898268020000		mov	[r10+616],rax
c82059			version235:
c82059 50			push	rax
c8205a 53			push	rbx
c8205b 48b85080aa4e767f
c82063 0000			mov	rax,140146102665296
c82065 488b18			mov	rbx,[rax]
c82068 48ffc3			inc	rbx
c8206b 488918			mov	[rax],rbx
c8206e 5b			pop	rbx
c8206f 58			pop	rax
c82070 498d4424f0		lea	rax,[r12-16]
c82075 49bf0880aa4e767f
c8207d 0000			mov	r15,140146102665224
c8207f 493b4728			cmp	rax,[r15+40]
c82083 7d38			jge	short alloc-ok78
c82085 48c7c010000000		mov	rax,dword 16
c8208c 57			push	rdi
c8208d 56			push	rsi
c8208e 52			push	rdx
c8208f 51			push	rcx
c82090 4150			push	r8
c82092 4151			push	r9
c82094 4152			push	r10
c82096 4153			push	r11
c82098 50			push	rax
c82099 4889e7			mov	rdi,rsp
c8209c 4883e4f0			and	rsp,byte -16
c820a0 4883ec08			sub	rsp,byte 8
c820a4 57			push	rdi
c820a5 e826406d01		call	gc
c820aa 5c			pop	rsp
c820ab 4989c4			mov	r12,rax
c820ae 58			pop	rax
c820af 415b			pop	r11
c820b1 415a			pop	r10
c820b3 4159			pop	r9
c820b5 4158			pop	r8
c820b7 59			pop	rcx
c820b8 5a			pop	rdx
c820b9 5e			pop	rsi
c820ba 5f			pop	rdi
c820bb eb04			jmp	short alloc-end78
c820bd			alloc-ok78:
c820bd 4983ec10			sub	r12,byte 16
c820c1			alloc-end78:
c820c1 48c7c076020000		mov	rax,dword 630
c820c8 49890424			mov	[r12],rax
c820cc 48c7c020ce1e02		mov	rax,dword 35573280
c820d3 4989442408		mov	[r12+8],rax
c820d8 498d442401		lea	rax,[r12+1]
c820dd 50			push	rax
c820de			version236:
c820de 58			pop	rax
c820df 49898268020000		mov	[r10+616],rax
c820e6 6aee			push	qword byte -18
c820e8			version237:
c820e8 48c7c0eeffffff		mov	rax,dword -18
c820ef 49898270020000		mov	[r10+624],rax
c820f6			version238:
c820f6 50			push	rax
c820f7 53			push	rbx
c820f8 48b85080aa4e767f
c82100 0000			mov	rax,140146102665296
c82102 488b18			mov	rbx,[rax]
c82105 48ffc3			inc	rbx
c82108 488918			mov	[rax],rbx
c8210b 5b			pop	rbx
c8210c 58			pop	rax
c8210d 498d4424f0		lea	rax,[r12-16]
c82112 49bf0880aa4e767f
c8211a 0000			mov	r15,140146102665224
c8211c 493b4728			cmp	rax,[r15+40]
c82120 7d38			jge	short alloc-ok79
c82122 48c7c010000000		mov	rax,dword 16
c82129 57			push	rdi
c8212a 56			push	rsi
c8212b 52			push	rdx
c8212c 51			push	rcx
c8212d 4150			push	r8
c8212f 4151			push	r9
c82131 4152			push	r10
c82133 4153			push	r11
c82135 50			push	rax
c82136 4889e7			mov	rdi,rsp
c82139 4883e4f0			and	rsp,byte -16
c8213d 4883ec08			sub	rsp,byte 8
c82141 57			push	rdi
c82142 e8893f6d01		call	gc
c82147 5c			pop	rsp
c82148 4989c4			mov	r12,rax
c8214b 58			pop	rax
c8214c 415b			pop	r11
c8214e 415a			pop	r10
c82150 4159			pop	r9
c82152 4158			pop	r8
c82154 59			pop	rcx
c82155 5a			pop	rdx
c82156 5e			pop	rsi
c82157 5f			pop	rdi
c82158 eb04			jmp	short alloc-end79
c8215a			alloc-ok79:
c8215a 4983ec10			sub	r12,byte 16
c8215e			alloc-end79:
c8215e 48c7c076020000		mov	rax,dword 630
c82165 49890424			mov	[r12],rax
c82169 48c7c060de1e02		mov	rax,dword 35577440
c82170 4989442408		mov	[r12+8],rax
c82175 498d442401		lea	rax,[r12+1]
c8217a 50			push	rax
c8217b			version239:
c8217b 58			pop	rax
c8217c 49898270020000		mov	[r10+624],rax
c82183 6aee			push	qword byte -18
c82185			version240:
c82185 48c7c0eeffffff		mov	rax,dword -18
c8218c 49898278020000		mov	[r10+632],rax
c82193			version241:
c82193 50			push	rax
c82194 53			push	rbx
c82195 48b85080aa4e767f
c8219d 0000			mov	rax,140146102665296
c8219f 488b18			mov	rbx,[rax]
c821a2 48ffc3			inc	rbx
c821a5 488918			mov	[rax],rbx
c821a8 5b			pop	rbx
c821a9 58			pop	rax
c821aa 498d4424f0		lea	rax,[r12-16]
c821af 49bf0880aa4e767f
c821b7 0000			mov	r15,140146102665224
c821b9 493b4728			cmp	rax,[r15+40]
c821bd 7d38			jge	short alloc-ok80
c821bf 48c7c010000000		mov	rax,dword 16
c821c6 57			push	rdi
c821c7 56			push	rsi
c821c8 52			push	rdx
c821c9 51			push	rcx
c821ca 4150			push	r8
c821cc 4151			push	r9
c821ce 4152			push	r10
c821d0 4153			push	r11
c821d2 50			push	rax
c821d3 4889e7			mov	rdi,rsp
c821d6 4883e4f0			and	rsp,byte -16
c821da 4883ec08			sub	rsp,byte 8
c821de 57			push	rdi
c821df e8ec3e6d01		call	gc
c821e4 5c			pop	rsp
c821e5 4989c4			mov	r12,rax
c821e8 58			pop	rax
c821e9 415b			pop	r11
c821eb 415a			pop	r10
c821ed 4159			pop	r9
c821ef 4158			pop	r8
c821f1 59			pop	rcx
c821f2 5a			pop	rdx
c821f3 5e			pop	rsi
c821f4 5f			pop	rdi
c821f5 eb04			jmp	short alloc-end80
c821f7			alloc-ok80:
c821f7 4983ec10			sub	r12,byte 16
c821fb			alloc-end80:
c821fb 48c7c076020000		mov	rax,dword 630
c82202 49890424			mov	[r12],rax
c82206 48c7c0a0ee1e02		mov	rax,dword 35581600
c8220d 4989442408		mov	[r12+8],rax
c82212 498d442401		lea	rax,[r12+1]
c82217 50			push	rax
c82218			version242:
c82218 58			pop	rax
c82219 49898278020000		mov	[r10+632],rax
c82220 6aee			push	qword byte -18
c82222			version243:
c82222 48c7c0eeffffff		mov	rax,dword -18
c82229 49898280020000		mov	[r10+640],rax
c82230			version244:
c82230 50			push	rax
c82231 53			push	rbx
c82232 48b85080aa4e767f
c8223a 0000			mov	rax,140146102665296
c8223c 488b18			mov	rbx,[rax]
c8223f 48ffc3			inc	rbx
c82242 488918			mov	[rax],rbx
c82245 5b			pop	rbx
c82246 58			pop	rax
c82247 498d4424f0		lea	rax,[r12-16]
c8224c 49bf0880aa4e767f
c82254 0000			mov	r15,140146102665224
c82256 493b4728			cmp	rax,[r15+40]
c8225a 7d38			jge	short alloc-ok81
c8225c 48c7c010000000		mov	rax,dword 16
c82263 57			push	rdi
c82264 56			push	rsi
c82265 52			push	rdx
c82266 51			push	rcx
c82267 4150			push	r8
c82269 4151			push	r9
c8226b 4152			push	r10
c8226d 4153			push	r11
c8226f 50			push	rax
c82270 4889e7			mov	rdi,rsp
c82273 4883e4f0			and	rsp,byte -16
c82277 4883ec08			sub	rsp,byte 8
c8227b 57			push	rdi
c8227c e84f3e6d01		call	gc
c82281 5c			pop	rsp
c82282 4989c4			mov	r12,rax
c82285 58			pop	rax
c82286 415b			pop	r11
c82288 415a			pop	r10
c8228a 4159			pop	r9
c8228c 4158			pop	r8
c8228e 59			pop	rcx
c8228f 5a			pop	rdx
c82290 5e			pop	rsi
c82291 5f			pop	rdi
c82292 eb04			jmp	short alloc-end81
c82294			alloc-ok81:
c82294 4983ec10			sub	r12,byte 16
c82298			alloc-end81:
c82298 48c7c076020000		mov	rax,dword 630
c8229f 49890424			mov	[r12],rax
c822a3 48c7c0e0fe1e02		mov	rax,dword 35585760
c822aa 4989442408		mov	[r12+8],rax
c822af 498d442401		lea	rax,[r12+1]
c822b4 50			push	rax
c822b5			version245:
c822b5 58			pop	rax
c822b6 49898280020000		mov	[r10+640],rax
c822bd 6aee			push	qword byte -18
c822bf			version246:
c822bf 48c7c0eeffffff		mov	rax,dword -18
c822c6 49898288020000		mov	[r10+648],rax
c822cd			version247:
c822cd 50			push	rax
c822ce 53			push	rbx
c822cf 48b85080aa4e767f
c822d7 0000			mov	rax,140146102665296
c822d9 488b18			mov	rbx,[rax]
c822dc 48ffc3			inc	rbx
c822df 488918			mov	[rax],rbx
c822e2 5b			pop	rbx
c822e3 58			pop	rax
c822e4 498d4424f0		lea	rax,[r12-16]
c822e9 49bf0880aa4e767f
c822f1 0000			mov	r15,140146102665224
c822f3 493b4728			cmp	rax,[r15+40]
c822f7 7d38			jge	short alloc-ok82
c822f9 48c7c010000000		mov	rax,dword 16
c82300 57			push	rdi
c82301 56			push	rsi
c82302 52			push	rdx
c82303 51			push	rcx
c82304 4150			push	r8
c82306 4151			push	r9
c82308 4152			push	r10
c8230a 4153			push	r11
c8230c 50			push	rax
c8230d 4889e7			mov	rdi,rsp
c82310 4883e4f0			and	rsp,byte -16
c82314 4883ec08			sub	rsp,byte 8
c82318 57			push	rdi
c82319 e8b23d6d01		call	gc
c8231e 5c			pop	rsp
c8231f 4989c4			mov	r12,rax
c82322 58			pop	rax
c82323 415b			pop	r11
c82325 415a			pop	r10
c82327 4159			pop	r9
c82329 4158			pop	r8
c8232b 59			pop	rcx
c8232c 5a			pop	rdx
c8232d 5e			pop	rsi
c8232e 5f			pop	rdi
c8232f eb04			jmp	short alloc-end82
c82331			alloc-ok82:
c82331 4983ec10			sub	r12,byte 16
c82335			alloc-end82:
c82335 48c7c076020000		mov	rax,dword 630
c8233c 49890424			mov	[r12],rax
c82340 48c7c0200f1f02		mov	rax,dword 35589920
c82347 4989442408		mov	[r12+8],rax
c8234c 498d442401		lea	rax,[r12+1]
c82351 50			push	rax
c82352			version248:
c82352 58			pop	rax
c82353 49898288020000		mov	[r10+648],rax
c8235a 6aee			push	qword byte -18
c8235c			version249:
c8235c 48c7c0eeffffff		mov	rax,dword -18
c82363 49898290020000		mov	[r10+656],rax
c8236a			version250:
c8236a 50			push	rax
c8236b 53			push	rbx
c8236c 48b85080aa4e767f
c82374 0000			mov	rax,140146102665296
c82376 488b18			mov	rbx,[rax]
c82379 48ffc3			inc	rbx
c8237c 488918			mov	[rax],rbx
c8237f 5b			pop	rbx
c82380 58			pop	rax
c82381 498d4424f0		lea	rax,[r12-16]
c82386 49bf0880aa4e767f
c8238e 0000			mov	r15,140146102665224
c82390 493b4728			cmp	rax,[r15+40]
c82394 7d38			jge	short alloc-ok83
c82396 48c7c010000000		mov	rax,dword 16
c8239d 57			push	rdi
c8239e 56			push	rsi
c8239f 52			push	rdx
c823a0 51			push	rcx
c823a1 4150			push	r8
c823a3 4151			push	r9
c823a5 4152			push	r10
c823a7 4153			push	r11
c823a9 50			push	rax
c823aa 4889e7			mov	rdi,rsp
c823ad 4883e4f0			and	rsp,byte -16
c823b1 4883ec08			sub	rsp,byte 8
c823b5 57			push	rdi
c823b6 e8153d6d01		call	gc
c823bb 5c			pop	rsp
c823bc 4989c4			mov	r12,rax
c823bf 58			pop	rax
c823c0 415b			pop	r11
c823c2 415a			pop	r10
c823c4 4159			pop	r9
c823c6 4158			pop	r8
c823c8 59			pop	rcx
c823c9 5a			pop	rdx
c823ca 5e			pop	rsi
c823cb 5f			pop	rdi
c823cc eb04			jmp	short alloc-end83
c823ce			alloc-ok83:
c823ce 4983ec10			sub	r12,byte 16
c823d2			alloc-end83:
c823d2 48c7c076020000		mov	rax,dword 630
c823d9 49890424			mov	[r12],rax
c823dd 48c7c0601f1f02		mov	rax,dword 35594080
c823e4 4989442408		mov	[r12+8],rax
c823e9 498d442401		lea	rax,[r12+1]
c823ee 50			push	rax
c823ef			version251:
c823ef 58			pop	rax
c823f0 49898290020000		mov	[r10+656],rax
c823f7 6aee			push	qword byte -18
c823f9			version252:
c823f9 48c7c0eeffffff		mov	rax,dword -18
c82400 49898298020000		mov	[r10+664],rax
c82407			version253:
c82407 50			push	rax
c82408 53			push	rbx
c82409 48b85080aa4e767f
c82411 0000			mov	rax,140146102665296
c82413 488b18			mov	rbx,[rax]
c82416 48ffc3			inc	rbx
c82419 488918			mov	[rax],rbx
c8241c 5b			pop	rbx
c8241d 58			pop	rax
c8241e 498d4424f0		lea	rax,[r12-16]
c82423 49bf0880aa4e767f
c8242b 0000			mov	r15,140146102665224
c8242d 493b4728			cmp	rax,[r15+40]
c82431 7d38			jge	short alloc-ok84
c82433 48c7c010000000		mov	rax,dword 16
c8243a 57			push	rdi
c8243b 56			push	rsi
c8243c 52			push	rdx
c8243d 51			push	rcx
c8243e 4150			push	r8
c82440 4151			push	r9
c82442 4152			push	r10
c82444 4153			push	r11
c82446 50			push	rax
c82447 4889e7			mov	rdi,rsp
c8244a 4883e4f0			and	rsp,byte -16
c8244e 4883ec08			sub	rsp,byte 8
c82452 57			push	rdi
c82453 e8783c6d01		call	gc
c82458 5c			pop	rsp
c82459 4989c4			mov	r12,rax
c8245c 58			pop	rax
c8245d 415b			pop	r11
c8245f 415a			pop	r10
c82461 4159			pop	r9
c82463 4158			pop	r8
c82465 59			pop	rcx
c82466 5a			pop	rdx
c82467 5e			pop	rsi
c82468 5f			pop	rdi
c82469 eb04			jmp	short alloc-end84
c8246b			alloc-ok84:
c8246b 4983ec10			sub	r12,byte 16
c8246f			alloc-end84:
c8246f 48c7c076020000		mov	rax,dword 630
c82476 49890424			mov	[r12],rax
c8247a 48c7c0a02f1f02		mov	rax,dword 35598240
c82481 4989442408		mov	[r12+8],rax
c82486 498d442401		lea	rax,[r12+1]
c8248b 50			push	rax
c8248c			version254:
c8248c 58			pop	rax
c8248d 49898298020000		mov	[r10+664],rax
c82494 6aee			push	qword byte -18
c82496			version255:
c82496 48c7c0eeffffff		mov	rax,dword -18
c8249d 498982a0020000		mov	[r10+672],rax
c824a4			version256:
c824a4 50			push	rax
c824a5 53			push	rbx
c824a6 48b85080aa4e767f
c824ae 0000			mov	rax,140146102665296
c824b0 488b18			mov	rbx,[rax]
c824b3 48ffc3			inc	rbx
c824b6 488918			mov	[rax],rbx
c824b9 5b			pop	rbx
c824ba 58			pop	rax
c824bb 498d4424f0		lea	rax,[r12-16]
c824c0 49bf0880aa4e767f
c824c8 0000			mov	r15,140146102665224
c824ca 493b4728			cmp	rax,[r15+40]
c824ce 7d38			jge	short alloc-ok85
c824d0 48c7c010000000		mov	rax,dword 16
c824d7 57			push	rdi
c824d8 56			push	rsi
c824d9 52			push	rdx
c824da 51			push	rcx
c824db 4150			push	r8
c824dd 4151			push	r9
c824df 4152			push	r10
c824e1 4153			push	r11
c824e3 50			push	rax
c824e4 4889e7			mov	rdi,rsp
c824e7 4883e4f0			and	rsp,byte -16
c824eb 4883ec08			sub	rsp,byte 8
c824ef 57			push	rdi
c824f0 e8db3b6d01		call	gc
c824f5 5c			pop	rsp
c824f6 4989c4			mov	r12,rax
c824f9 58			pop	rax
c824fa 415b			pop	r11
c824fc 415a			pop	r10
c824fe 4159			pop	r9
c82500 4158			pop	r8
c82502 59			pop	rcx
c82503 5a			pop	rdx
c82504 5e			pop	rsi
c82505 5f			pop	rdi
c82506 eb04			jmp	short alloc-end85
c82508			alloc-ok85:
c82508 4983ec10			sub	r12,byte 16
c8250c			alloc-end85:
c8250c 48c7c076020000		mov	rax,dword 630
c82513 49890424			mov	[r12],rax
c82517 48c7c0e03f1f02		mov	rax,dword 35602400
c8251e 4989442408		mov	[r12+8],rax
c82523 498d442401		lea	rax,[r12+1]
c82528 50			push	rax
c82529			version257:
c82529 58			pop	rax
c8252a 498982a0020000		mov	[r10+672],rax
c82531 6aee			push	qword byte -18
c82533			version258:
c82533 48c7c0eeffffff		mov	rax,dword -18
c8253a 498982a8020000		mov	[r10+680],rax
c82541			version259:
c82541 50			push	rax
c82542 53			push	rbx
c82543 48b85080aa4e767f
c8254b 0000			mov	rax,140146102665296
c8254d 488b18			mov	rbx,[rax]
c82550 48ffc3			inc	rbx
c82553 488918			mov	[rax],rbx
c82556 5b			pop	rbx
c82557 58			pop	rax
c82558 498d4424f0		lea	rax,[r12-16]
c8255d 49bf0880aa4e767f
c82565 0000			mov	r15,140146102665224
c82567 493b4728			cmp	rax,[r15+40]
c8256b 7d38			jge	short alloc-ok86
c8256d 48c7c010000000		mov	rax,dword 16
c82574 57			push	rdi
c82575 56			push	rsi
c82576 52			push	rdx
c82577 51			push	rcx
c82578 4150			push	r8
c8257a 4151			push	r9
c8257c 4152			push	r10
c8257e 4153			push	r11
c82580 50			push	rax
c82581 4889e7			mov	rdi,rsp
c82584 4883e4f0			and	rsp,byte -16
c82588 4883ec08			sub	rsp,byte 8
c8258c 57			push	rdi
c8258d e83e3b6d01		call	gc
c82592 5c			pop	rsp
c82593 4989c4			mov	r12,rax
c82596 58			pop	rax
c82597 415b			pop	r11
c82599 415a			pop	r10
c8259b 4159			pop	r9
c8259d 4158			pop	r8
c8259f 59			pop	rcx
c825a0 5a			pop	rdx
c825a1 5e			pop	rsi
c825a2 5f			pop	rdi
c825a3 eb04			jmp	short alloc-end86
c825a5			alloc-ok86:
c825a5 4983ec10			sub	r12,byte 16
c825a9			alloc-end86:
c825a9 48c7c076020000		mov	rax,dword 630
c825b0 49890424			mov	[r12],rax
c825b4 48c7c020501f02		mov	rax,dword 35606560
c825bb 4989442408		mov	[r12+8],rax
c825c0 498d442401		lea	rax,[r12+1]
c825c5 50			push	rax
c825c6			version260:
c825c6 58			pop	rax
c825c7 498982a8020000		mov	[r10+680],rax
c825ce 6aee			push	qword byte -18
c825d0			version261:
c825d0 48c7c0eeffffff		mov	rax,dword -18
c825d7 498982b0020000		mov	[r10+688],rax
c825de			version262:
c825de 50			push	rax
c825df 53			push	rbx
c825e0 48b85080aa4e767f
c825e8 0000			mov	rax,140146102665296
c825ea 488b18			mov	rbx,[rax]
c825ed 48ffc3			inc	rbx
c825f0 488918			mov	[rax],rbx
c825f3 5b			pop	rbx
c825f4 58			pop	rax
c825f5 498d4424f0		lea	rax,[r12-16]
c825fa 49bf0880aa4e767f
c82602 0000			mov	r15,140146102665224
c82604 493b4728			cmp	rax,[r15+40]
c82608 7d38			jge	short alloc-ok87
c8260a 48c7c010000000		mov	rax,dword 16
c82611 57			push	rdi
c82612 56			push	rsi
c82613 52			push	rdx
c82614 51			push	rcx
c82615 4150			push	r8
c82617 4151			push	r9
c82619 4152			push	r10
c8261b 4153			push	r11
c8261d 50			push	rax
c8261e 4889e7			mov	rdi,rsp
c82621 4883e4f0			and	rsp,byte -16
c82625 4883ec08			sub	rsp,byte 8
c82629 57			push	rdi
c8262a e8a13a6d01		call	gc
c8262f 5c			pop	rsp
c82630 4989c4			mov	r12,rax
c82633 58			pop	rax
c82634 415b			pop	r11
c82636 415a			pop	r10
c82638 4159			pop	r9
c8263a 4158			pop	r8
c8263c 59			pop	rcx
c8263d 5a			pop	rdx
c8263e 5e			pop	rsi
c8263f 5f			pop	rdi
c82640 eb04			jmp	short alloc-end87
c82642			alloc-ok87:
c82642 4983ec10			sub	r12,byte 16
c82646			alloc-end87:
c82646 48c7c076020000		mov	rax,dword 630
c8264d 49890424			mov	[r12],rax
c82651 48c7c060601f02		mov	rax,dword 35610720
c82658 4989442408		mov	[r12+8],rax
c8265d 498d442401		lea	rax,[r12+1]
c82662 50			push	rax
c82663			version263:
c82663 58			pop	rax
c82664 498982b0020000		mov	[r10+688],rax
c8266b 6aee			push	qword byte -18
c8266d			version264:
c8266d 48c7c0eeffffff		mov	rax,dword -18
c82674 498982b8020000		mov	[r10+696],rax
c8267b			version265:
c8267b 50			push	rax
c8267c 53			push	rbx
c8267d 48b85080aa4e767f
c82685 0000			mov	rax,140146102665296
c82687 488b18			mov	rbx,[rax]
c8268a 48ffc3			inc	rbx
c8268d 488918			mov	[rax],rbx
c82690 5b			pop	rbx
c82691 58			pop	rax
c82692 498d4424f0		lea	rax,[r12-16]
c82697 49bf0880aa4e767f
c8269f 0000			mov	r15,140146102665224
c826a1 493b4728			cmp	rax,[r15+40]
c826a5 7d38			jge	short alloc-ok88
c826a7 48c7c010000000		mov	rax,dword 16
c826ae 57			push	rdi
c826af 56			push	rsi
c826b0 52			push	rdx
c826b1 51			push	rcx
c826b2 4150			push	r8
c826b4 4151			push	r9
c826b6 4152			push	r10
c826b8 4153			push	r11
c826ba 50			push	rax
c826bb 4889e7			mov	rdi,rsp
c826be 4883e4f0			and	rsp,byte -16
c826c2 4883ec08			sub	rsp,byte 8
c826c6 57			push	rdi
c826c7 e8043a6d01		call	gc
c826cc 5c			pop	rsp
c826cd 4989c4			mov	r12,rax
c826d0 58			pop	rax
c826d1 415b			pop	r11
c826d3 415a			pop	r10
c826d5 4159			pop	r9
c826d7 4158			pop	r8
c826d9 59			pop	rcx
c826da 5a			pop	rdx
c826db 5e			pop	rsi
c826dc 5f			pop	rdi
c826dd eb04			jmp	short alloc-end88
c826df			alloc-ok88:
c826df 4983ec10			sub	r12,byte 16
c826e3			alloc-end88:
c826e3 48c7c076020000		mov	rax,dword 630
c826ea 49890424			mov	[r12],rax
c826ee 48c7c0a0701f02		mov	rax,dword 35614880
c826f5 4989442408		mov	[r12+8],rax
c826fa 498d442401		lea	rax,[r12+1]
c826ff 50			push	rax
c82700			version266:
c82700 58			pop	rax
c82701 498982b8020000		mov	[r10+696],rax
c82708 6aee			push	qword byte -18
c8270a			version267:
c8270a 48c7c0eeffffff		mov	rax,dword -18
c82711 498982c0020000		mov	[r10+704],rax
c82718			version268:
c82718 50			push	rax
c82719 53			push	rbx
c8271a 48b85080aa4e767f
c82722 0000			mov	rax,140146102665296
c82724 488b18			mov	rbx,[rax]
c82727 48ffc3			inc	rbx
c8272a 488918			mov	[rax],rbx
c8272d 5b			pop	rbx
c8272e 58			pop	rax
c8272f 498d4424f0		lea	rax,[r12-16]
c82734 49bf0880aa4e767f
c8273c 0000			mov	r15,140146102665224
c8273e 493b4728			cmp	rax,[r15+40]
c82742 7d38			jge	short alloc-ok89
c82744 48c7c010000000		mov	rax,dword 16
c8274b 57			push	rdi
c8274c 56			push	rsi
c8274d 52			push	rdx
c8274e 51			push	rcx
c8274f 4150			push	r8
c82751 4151			push	r9
c82753 4152			push	r10
c82755 4153			push	r11
c82757 50			push	rax
c82758 4889e7			mov	rdi,rsp
c8275b 4883e4f0			and	rsp,byte -16
c8275f 4883ec08			sub	rsp,byte 8
c82763 57			push	rdi
c82764 e867396d01		call	gc
c82769 5c			pop	rsp
c8276a 4989c4			mov	r12,rax
c8276d 58			pop	rax
c8276e 415b			pop	r11
c82770 415a			pop	r10
c82772 4159			pop	r9
c82774 4158			pop	r8
c82776 59			pop	rcx
c82777 5a			pop	rdx
c82778 5e			pop	rsi
c82779 5f			pop	rdi
c8277a eb04			jmp	short alloc-end89
c8277c			alloc-ok89:
c8277c 4983ec10			sub	r12,byte 16
c82780			alloc-end89:
c82780 48c7c076020000		mov	rax,dword 630
c82787 49890424			mov	[r12],rax
c8278b 48c7c0e0801f02		mov	rax,dword 35619040
c82792 4989442408		mov	[r12+8],rax
c82797 498d442401		lea	rax,[r12+1]
c8279c 50			push	rax
c8279d			version269:
c8279d 58			pop	rax
c8279e 498982c0020000		mov	[r10+704],rax
c827a5 6aee			push	qword byte -18
c827a7			version270:
c827a7 48c7c0eeffffff		mov	rax,dword -18
c827ae 498982c8020000		mov	[r10+712],rax
c827b5			version271:
c827b5 50			push	rax
c827b6 53			push	rbx
c827b7 48b85080aa4e767f
c827bf 0000			mov	rax,140146102665296
c827c1 488b18			mov	rbx,[rax]
c827c4 48ffc3			inc	rbx
c827c7 488918			mov	[rax],rbx
c827ca 5b			pop	rbx
c827cb 58			pop	rax
c827cc 498d4424f0		lea	rax,[r12-16]
c827d1 49bf0880aa4e767f
c827d9 0000			mov	r15,140146102665224
c827db 493b4728			cmp	rax,[r15+40]
c827df 7d38			jge	short alloc-ok90
c827e1 48c7c010000000		mov	rax,dword 16
c827e8 57			push	rdi
c827e9 56			push	rsi
c827ea 52			push	rdx
c827eb 51			push	rcx
c827ec 4150			push	r8
c827ee 4151			push	r9
c827f0 4152			push	r10
c827f2 4153			push	r11
c827f4 50			push	rax
c827f5 4889e7			mov	rdi,rsp
c827f8 4883e4f0			and	rsp,byte -16
c827fc 4883ec08			sub	rsp,byte 8
c82800 57			push	rdi
c82801 e8ca386d01		call	gc
c82806 5c			pop	rsp
c82807 4989c4			mov	r12,rax
c8280a 58			pop	rax
c8280b 415b			pop	r11
c8280d 415a			pop	r10
c8280f 4159			pop	r9
c82811 4158			pop	r8
c82813 59			pop	rcx
c82814 5a			pop	rdx
c82815 5e			pop	rsi
c82816 5f			pop	rdi
c82817 eb04			jmp	short alloc-end90
c82819			alloc-ok90:
c82819 4983ec10			sub	r12,byte 16
c8281d			alloc-end90:
c8281d 48c7c076020000		mov	rax,dword 630
c82824 49890424			mov	[r12],rax
c82828 48c7c020911f02		mov	rax,dword 35623200
c8282f 4989442408		mov	[r12+8],rax
c82834 498d442401		lea	rax,[r12+1]
c82839 50			push	rax
c8283a			version272:
c8283a 58			pop	rax
c8283b 498982c8020000		mov	[r10+712],rax
c82842 6aee			push	qword byte -18
c82844			version273:
c82844 48c7c0eeffffff		mov	rax,dword -18
c8284b 498982d0020000		mov	[r10+720],rax
c82852			version274:
c82852 50			push	rax
c82853 53			push	rbx
c82854 48b85080aa4e767f
c8285c 0000			mov	rax,140146102665296
c8285e 488b18			mov	rbx,[rax]
c82861 48ffc3			inc	rbx
c82864 488918			mov	[rax],rbx
c82867 5b			pop	rbx
c82868 58			pop	rax
c82869 498d4424f0		lea	rax,[r12-16]
c8286e 49bf0880aa4e767f
c82876 0000			mov	r15,140146102665224
c82878 493b4728			cmp	rax,[r15+40]
c8287c 7d38			jge	short alloc-ok91
c8287e 48c7c010000000		mov	rax,dword 16
c82885 57			push	rdi
c82886 56			push	rsi
c82887 52			push	rdx
c82888 51			push	rcx
c82889 4150			push	r8
c8288b 4151			push	r9
c8288d 4152			push	r10
c8288f 4153			push	r11
c82891 50			push	rax
c82892 4889e7			mov	rdi,rsp
c82895 4883e4f0			and	rsp,byte -16
c82899 4883ec08			sub	rsp,byte 8
c8289d 57			push	rdi
c8289e e82d386d01		call	gc
c828a3 5c			pop	rsp
c828a4 4989c4			mov	r12,rax
c828a7 58			pop	rax
c828a8 415b			pop	r11
c828aa 415a			pop	r10
c828ac 4159			pop	r9
c828ae 4158			pop	r8
c828b0 59			pop	rcx
c828b1 5a			pop	rdx
c828b2 5e			pop	rsi
c828b3 5f			pop	rdi
c828b4 eb04			jmp	short alloc-end91
c828b6			alloc-ok91:
c828b6 4983ec10			sub	r12,byte 16
c828ba			alloc-end91:
c828ba 48c7c076020000		mov	rax,dword 630
c828c1 49890424			mov	[r12],rax
c828c5 48c7c060a11f02		mov	rax,dword 35627360
c828cc 4989442408		mov	[r12+8],rax
c828d1 498d442401		lea	rax,[r12+1]
c828d6 50			push	rax
c828d7			version275:
c828d7 58			pop	rax
c828d8 498982d0020000		mov	[r10+720],rax
c828df 6aee			push	qword byte -18
c828e1			version276:
c828e1 48c7c0eeffffff		mov	rax,dword -18
c828e8 498982d8020000		mov	[r10+728],rax
c828ef			version277:
c828ef 50			push	rax
c828f0 53			push	rbx
c828f1 48b85080aa4e767f
c828f9 0000			mov	rax,140146102665296
c828fb 488b18			mov	rbx,[rax]
c828fe 48ffc3			inc	rbx
c82901 488918			mov	[rax],rbx
c82904 5b			pop	rbx
c82905 58			pop	rax
c82906 498d4424f0		lea	rax,[r12-16]
c8290b 49bf0880aa4e767f
c82913 0000			mov	r15,140146102665224
c82915 493b4728			cmp	rax,[r15+40]
c82919 7d38			jge	short alloc-ok92
c8291b 48c7c010000000		mov	rax,dword 16
c82922 57			push	rdi
c82923 56			push	rsi
c82924 52			push	rdx
c82925 51			push	rcx
c82926 4150			push	r8
c82928 4151			push	r9
c8292a 4152			push	r10
c8292c 4153			push	r11
c8292e 50			push	rax
c8292f 4889e7			mov	rdi,rsp
c82932 4883e4f0			and	rsp,byte -16
c82936 4883ec08			sub	rsp,byte 8
c8293a 57			push	rdi
c8293b e890376d01		call	gc
c82940 5c			pop	rsp
c82941 4989c4			mov	r12,rax
c82944 58			pop	rax
c82945 415b			pop	r11
c82947 415a			pop	r10
c82949 4159			pop	r9
c8294b 4158			pop	r8
c8294d 59			pop	rcx
c8294e 5a			pop	rdx
c8294f 5e			pop	rsi
c82950 5f			pop	rdi
c82951 eb04			jmp	short alloc-end92
c82953			alloc-ok92:
c82953 4983ec10			sub	r12,byte 16
c82957			alloc-end92:
c82957 48c7c076020000		mov	rax,dword 630
c8295e 49890424			mov	[r12],rax
c82962 48c7c0a0b11f02		mov	rax,dword 35631520
c82969 4989442408		mov	[r12+8],rax
c8296e 498d442401		lea	rax,[r12+1]
c82973 50			push	rax
c82974			version278:
c82974 58			pop	rax
c82975 498982d8020000		mov	[r10+728],rax
c8297c 6aee			push	qword byte -18
c8297e			version279:
c8297e 48c7c0eeffffff		mov	rax,dword -18
c82985 498982e0020000		mov	[r10+736],rax
c8298c			version280:
c8298c 50			push	rax
c8298d 53			push	rbx
c8298e 48b85080aa4e767f
c82996 0000			mov	rax,140146102665296
c82998 488b18			mov	rbx,[rax]
c8299b 48ffc3			inc	rbx
c8299e 488918			mov	[rax],rbx
c829a1 5b			pop	rbx
c829a2 58			pop	rax
c829a3 498d4424f0		lea	rax,[r12-16]
c829a8 49bf0880aa4e767f
c829b0 0000			mov	r15,140146102665224
c829b2 493b4728			cmp	rax,[r15+40]
c829b6 7d38			jge	short alloc-ok93
c829b8 48c7c010000000		mov	rax,dword 16
c829bf 57			push	rdi
c829c0 56			push	rsi
c829c1 52			push	rdx
c829c2 51			push	rcx
c829c3 4150			push	r8
c829c5 4151			push	r9
c829c7 4152			push	r10
c829c9 4153			push	r11
c829cb 50			push	rax
c829cc 4889e7			mov	rdi,rsp
c829cf 4883e4f0			and	rsp,byte -16
c829d3 4883ec08			sub	rsp,byte 8
c829d7 57			push	rdi
c829d8 e8f3366d01		call	gc
c829dd 5c			pop	rsp
c829de 4989c4			mov	r12,rax
c829e1 58			pop	rax
c829e2 415b			pop	r11
c829e4 415a			pop	r10
c829e6 4159			pop	r9
c829e8 4158			pop	r8
c829ea 59			pop	rcx
c829eb 5a			pop	rdx
c829ec 5e			pop	rsi
c829ed 5f			pop	rdi
c829ee eb04			jmp	short alloc-end93
c829f0			alloc-ok93:
c829f0 4983ec10			sub	r12,byte 16
c829f4			alloc-end93:
c829f4 48c7c076020000		mov	rax,dword 630
c829fb 49890424			mov	[r12],rax
c829ff 48c7c060d61f02		mov	rax,dword 35640928
c82a06 4989442408		mov	[r12+8],rax
c82a0b 498d442401		lea	rax,[r12+1]
c82a10 50			push	rax
c82a11			version281:
c82a11 58			pop	rax
c82a12 498982e0020000		mov	[r10+736],rax
c82a19 6aee			push	qword byte -18
c82a1b			version282:
c82a1b 48c7c0eeffffff		mov	rax,dword -18
c82a22 498982e8020000		mov	[r10+744],rax
c82a29			version283:
c82a29 50			push	rax
c82a2a 53			push	rbx
c82a2b 48b85080aa4e767f
c82a33 0000			mov	rax,140146102665296
c82a35 488b18			mov	rbx,[rax]
c82a38 48ffc3			inc	rbx
c82a3b 488918			mov	[rax],rbx
c82a3e 5b			pop	rbx
c82a3f 58			pop	rax
c82a40 498d4424f0		lea	rax,[r12-16]
c82a45 49bf0880aa4e767f
c82a4d 0000			mov	r15,140146102665224
c82a4f 493b4728			cmp	rax,[r15+40]
c82a53 7d38			jge	short alloc-ok94
c82a55 48c7c010000000		mov	rax,dword 16
c82a5c 57			push	rdi
c82a5d 56			push	rsi
c82a5e 52			push	rdx
c82a5f 51			push	rcx
c82a60 4150			push	r8
c82a62 4151			push	r9
c82a64 4152			push	r10
c82a66 4153			push	r11
c82a68 50			push	rax
c82a69 4889e7			mov	rdi,rsp
c82a6c 4883e4f0			and	rsp,byte -16
c82a70 4883ec08			sub	rsp,byte 8
c82a74 57			push	rdi
c82a75 e856366d01		call	gc
c82a7a 5c			pop	rsp
c82a7b 4989c4			mov	r12,rax
c82a7e 58			pop	rax
c82a7f 415b			pop	r11
c82a81 415a			pop	r10
c82a83 4159			pop	r9
c82a85 4158			pop	r8
c82a87 59			pop	rcx
c82a88 5a			pop	rdx
c82a89 5e			pop	rsi
c82a8a 5f			pop	rdi
c82a8b eb04			jmp	short alloc-end94
c82a8d			alloc-ok94:
c82a8d 4983ec10			sub	r12,byte 16
c82a91			alloc-end94:
c82a91 48c7c076020000		mov	rax,dword 630
c82a98 49890424			mov	[r12],rax
c82a9c 48c7c0a0e61f02		mov	rax,dword 35645088
c82aa3 4989442408		mov	[r12+8],rax
c82aa8 498d442401		lea	rax,[r12+1]
c82aad 50			push	rax
c82aae			version284:
c82aae 58			pop	rax
c82aaf 498982e8020000		mov	[r10+744],rax
c82ab6 6aee			push	qword byte -18
c82ab8			version285:
c82ab8 48c7c0eeffffff		mov	rax,dword -18
c82abf 498982f0020000		mov	[r10+752],rax
c82ac6			version286:
c82ac6 50			push	rax
c82ac7 53			push	rbx
c82ac8 48b85080aa4e767f
c82ad0 0000			mov	rax,140146102665296
c82ad2 488b18			mov	rbx,[rax]
c82ad5 48ffc3			inc	rbx
c82ad8 488918			mov	[rax],rbx
c82adb 5b			pop	rbx
c82adc 58			pop	rax
c82add 498d4424f0		lea	rax,[r12-16]
c82ae2 49bf0880aa4e767f
c82aea 0000			mov	r15,140146102665224
c82aec 493b4728			cmp	rax,[r15+40]
c82af0 7d38			jge	short alloc-ok95
c82af2 48c7c010000000		mov	rax,dword 16
c82af9 57			push	rdi
c82afa 56			push	rsi
c82afb 52			push	rdx
c82afc 51			push	rcx
c82afd 4150			push	r8
c82aff 4151			push	r9
c82b01 4152			push	r10
c82b03 4153			push	r11
c82b05 50			push	rax
c82b06 4889e7			mov	rdi,rsp
c82b09 4883e4f0			and	rsp,byte -16
c82b0d 4883ec08			sub	rsp,byte 8
c82b11 57			push	rdi
c82b12 e8b9356d01		call	gc
c82b17 5c			pop	rsp
c82b18 4989c4			mov	r12,rax
c82b1b 58			pop	rax
c82b1c 415b			pop	r11
c82b1e 415a			pop	r10
c82b20 4159			pop	r9
c82b22 4158			pop	r8
c82b24 59			pop	rcx
c82b25 5a			pop	rdx
c82b26 5e			pop	rsi
c82b27 5f			pop	rdi
c82b28 eb04			jmp	short alloc-end95
c82b2a			alloc-ok95:
c82b2a 4983ec10			sub	r12,byte 16
c82b2e			alloc-end95:
c82b2e 48c7c076020000		mov	rax,dword 630
c82b35 49890424			mov	[r12],rax
c82b39 48c7c0e0f61f02		mov	rax,dword 35649248
c82b40 4989442408		mov	[r12+8],rax
c82b45 498d442401		lea	rax,[r12+1]
c82b4a 50			push	rax
c82b4b			version287:
c82b4b 58			pop	rax
c82b4c 498982f0020000		mov	[r10+752],rax
c82b53 6aee			push	qword byte -18
c82b55			version288:
c82b55 48c7c0eeffffff		mov	rax,dword -18
c82b5c 498982f8020000		mov	[r10+760],rax
c82b63			version289:
c82b63 50			push	rax
c82b64 53			push	rbx
c82b65 48b85080aa4e767f
c82b6d 0000			mov	rax,140146102665296
c82b6f 488b18			mov	rbx,[rax]
c82b72 48ffc3			inc	rbx
c82b75 488918			mov	[rax],rbx
c82b78 5b			pop	rbx
c82b79 58			pop	rax
c82b7a 498d4424f0		lea	rax,[r12-16]
c82b7f 49bf0880aa4e767f
c82b87 0000			mov	r15,140146102665224
c82b89 493b4728			cmp	rax,[r15+40]
c82b8d 7d38			jge	short alloc-ok96
c82b8f 48c7c010000000		mov	rax,dword 16
c82b96 57			push	rdi
c82b97 56			push	rsi
c82b98 52			push	rdx
c82b99 51			push	rcx
c82b9a 4150			push	r8
c82b9c 4151			push	r9
c82b9e 4152			push	r10
c82ba0 4153			push	r11
c82ba2 50			push	rax
c82ba3 4889e7			mov	rdi,rsp
c82ba6 4883e4f0			and	rsp,byte -16
c82baa 4883ec08			sub	rsp,byte 8
c82bae 57			push	rdi
c82baf e81c356d01		call	gc
c82bb4 5c			pop	rsp
c82bb5 4989c4			mov	r12,rax
c82bb8 58			pop	rax
c82bb9 415b			pop	r11
c82bbb 415a			pop	r10
c82bbd 4159			pop	r9
c82bbf 4158			pop	r8
c82bc1 59			pop	rcx
c82bc2 5a			pop	rdx
c82bc3 5e			pop	rsi
c82bc4 5f			pop	rdi
c82bc5 eb04			jmp	short alloc-end96
c82bc7			alloc-ok96:
c82bc7 4983ec10			sub	r12,byte 16
c82bcb			alloc-end96:
c82bcb 48c7c076020000		mov	rax,dword 630
c82bd2 49890424			mov	[r12],rax
c82bd6 48c7c020072002		mov	rax,dword 35653408
c82bdd 4989442408		mov	[r12+8],rax
c82be2 498d442401		lea	rax,[r12+1]
c82be7 50			push	rax
c82be8			version290:
c82be8 58			pop	rax
c82be9 498982f8020000		mov	[r10+760],rax
c82bf0 6aee			push	qword byte -18
c82bf2			version291:
c82bf2 48c7c0eeffffff		mov	rax,dword -18
c82bf9 49898200030000		mov	[r10+768],rax
c82c00			version292:
c82c00 50			push	rax
c82c01 53			push	rbx
c82c02 48b85080aa4e767f
c82c0a 0000			mov	rax,140146102665296
c82c0c 488b18			mov	rbx,[rax]
c82c0f 48ffc3			inc	rbx
c82c12 488918			mov	[rax],rbx
c82c15 5b			pop	rbx
c82c16 58			pop	rax
c82c17 498d4424f0		lea	rax,[r12-16]
c82c1c 49bf0880aa4e767f
c82c24 0000			mov	r15,140146102665224
c82c26 493b4728			cmp	rax,[r15+40]
c82c2a 7d38			jge	short alloc-ok97
c82c2c 48c7c010000000		mov	rax,dword 16
c82c33 57			push	rdi
c82c34 56			push	rsi
c82c35 52			push	rdx
c82c36 51			push	rcx
c82c37 4150			push	r8
c82c39 4151			push	r9
c82c3b 4152			push	r10
c82c3d 4153			push	r11
c82c3f 50			push	rax
c82c40 4889e7			mov	rdi,rsp
c82c43 4883e4f0			and	rsp,byte -16
c82c47 4883ec08			sub	rsp,byte 8
c82c4b 57			push	rdi
c82c4c e87f346d01		call	gc
c82c51 5c			pop	rsp
c82c52 4989c4			mov	r12,rax
c82c55 58			pop	rax
c82c56 415b			pop	r11
c82c58 415a			pop	r10
c82c5a 4159			pop	r9
c82c5c 4158			pop	r8
c82c5e 59			pop	rcx
c82c5f 5a			pop	rdx
c82c60 5e			pop	rsi
c82c61 5f			pop	rdi
c82c62 eb04			jmp	short alloc-end97
c82c64			alloc-ok97:
c82c64 4983ec10			sub	r12,byte 16
c82c68			alloc-end97:
c82c68 48c7c076020000		mov	rax,dword 630
c82c6f 49890424			mov	[r12],rax
c82c73 48c7c060172002		mov	rax,dword 35657568
c82c7a 4989442408		mov	[r12+8],rax
c82c7f 498d442401		lea	rax,[r12+1]
c82c84 50			push	rax
c82c85			version293:
c82c85 58			pop	rax
c82c86 49898200030000		mov	[r10+768],rax
c82c8d 6aee			push	qword byte -18
c82c8f			version294:
c82c8f 48c7c0eeffffff		mov	rax,dword -18
c82c96 49898208030000		mov	[r10+776],rax
c82c9d			version295:
c82c9d 50			push	rax
c82c9e 53			push	rbx
c82c9f 48b85080aa4e767f
c82ca7 0000			mov	rax,140146102665296
c82ca9 488b18			mov	rbx,[rax]
c82cac 48ffc3			inc	rbx
c82caf 488918			mov	[rax],rbx
c82cb2 5b			pop	rbx
c82cb3 58			pop	rax
c82cb4 498d4424f0		lea	rax,[r12-16]
c82cb9 49bf0880aa4e767f
c82cc1 0000			mov	r15,140146102665224
c82cc3 493b4728			cmp	rax,[r15+40]
c82cc7 7d38			jge	short alloc-ok98
c82cc9 48c7c010000000		mov	rax,dword 16
c82cd0 57			push	rdi
c82cd1 56			push	rsi
c82cd2 52			push	rdx
c82cd3 51			push	rcx
c82cd4 4150			push	r8
c82cd6 4151			push	r9
c82cd8 4152			push	r10
c82cda 4153			push	r11
c82cdc 50			push	rax
c82cdd 4889e7			mov	rdi,rsp
c82ce0 4883e4f0			and	rsp,byte -16
c82ce4 4883ec08			sub	rsp,byte 8
c82ce8 57			push	rdi
c82ce9 e8e2336d01		call	gc
c82cee 5c			pop	rsp
c82cef 4989c4			mov	r12,rax
c82cf2 58			pop	rax
c82cf3 415b			pop	r11
c82cf5 415a			pop	r10
c82cf7 4159			pop	r9
c82cf9 4158			pop	r8
c82cfb 59			pop	rcx
c82cfc 5a			pop	rdx
c82cfd 5e			pop	rsi
c82cfe 5f			pop	rdi
c82cff eb04			jmp	short alloc-end98
c82d01			alloc-ok98:
c82d01 4983ec10			sub	r12,byte 16
c82d05			alloc-end98:
c82d05 48c7c076020000		mov	rax,dword 630
c82d0c 49890424			mov	[r12],rax
c82d10 48c7c0e0312002		mov	rax,dword 35664352
c82d17 4989442408		mov	[r12+8],rax
c82d1c 498d442401		lea	rax,[r12+1]
c82d21 50			push	rax
c82d22			version296:
c82d22 58			pop	rax
c82d23 49898208030000		mov	[r10+776],rax
c82d2a 6aee			push	qword byte -18
c82d2c			version297:
c82d2c 48c7c0eeffffff		mov	rax,dword -18
c82d33 49898210030000		mov	[r10+784],rax
c82d3a			version298:
c82d3a 50			push	rax
c82d3b 53			push	rbx
c82d3c 48b85080aa4e767f
c82d44 0000			mov	rax,140146102665296
c82d46 488b18			mov	rbx,[rax]
c82d49 48ffc3			inc	rbx
c82d4c 488918			mov	[rax],rbx
c82d4f 5b			pop	rbx
c82d50 58			pop	rax
c82d51 498d4424f0		lea	rax,[r12-16]
c82d56 49bf0880aa4e767f
c82d5e 0000			mov	r15,140146102665224
c82d60 493b4728			cmp	rax,[r15+40]
c82d64 7d38			jge	short alloc-ok99
c82d66 48c7c010000000		mov	rax,dword 16
c82d6d 57			push	rdi
c82d6e 56			push	rsi
c82d6f 52			push	rdx
c82d70 51			push	rcx
c82d71 4150			push	r8
c82d73 4151			push	r9
c82d75 4152			push	r10
c82d77 4153			push	r11
c82d79 50			push	rax
c82d7a 4889e7			mov	rdi,rsp
c82d7d 4883e4f0			and	rsp,byte -16
c82d81 4883ec08			sub	rsp,byte 8
c82d85 57			push	rdi
c82d86 e845336d01		call	gc
c82d8b 5c			pop	rsp
c82d8c 4989c4			mov	r12,rax
c82d8f 58			pop	rax
c82d90 415b			pop	r11
c82d92 415a			pop	r10
c82d94 4159			pop	r9
c82d96 4158			pop	r8
c82d98 59			pop	rcx
c82d99 5a			pop	rdx
c82d9a 5e			pop	rsi
c82d9b 5f			pop	rdi
c82d9c eb04			jmp	short alloc-end99
c82d9e			alloc-ok99:
c82d9e 4983ec10			sub	r12,byte 16
c82da2			alloc-end99:
c82da2 48c7c076020000		mov	rax,dword 630
c82da9 49890424			mov	[r12],rax
c82dad 48c7c020422002		mov	rax,dword 35668512
c82db4 4989442408		mov	[r12+8],rax
c82db9 498d442401		lea	rax,[r12+1]
c82dbe 50			push	rax
c82dbf			version299:
c82dbf 58			pop	rax
c82dc0 49898210030000		mov	[r10+784],rax
c82dc7 6aee			push	qword byte -18
c82dc9			version300:
c82dc9 48c7c0eeffffff		mov	rax,dword -18
c82dd0 49898218030000		mov	[r10+792],rax
c82dd7			version301:
c82dd7 50			push	rax
c82dd8 53			push	rbx
c82dd9 48b85080aa4e767f
c82de1 0000			mov	rax,140146102665296
c82de3 488b18			mov	rbx,[rax]
c82de6 48ffc3			inc	rbx
c82de9 488918			mov	[rax],rbx
c82dec 5b			pop	rbx
c82ded 58			pop	rax
c82dee 498d4424f0		lea	rax,[r12-16]
c82df3 49bf0880aa4e767f
c82dfb 0000			mov	r15,140146102665224
c82dfd 493b4728			cmp	rax,[r15+40]
c82e01 7d38			jge	short alloc-ok100
c82e03 48c7c010000000		mov	rax,dword 16
c82e0a 57			push	rdi
c82e0b 56			push	rsi
c82e0c 52			push	rdx
c82e0d 51			push	rcx
c82e0e 4150			push	r8
c82e10 4151			push	r9
c82e12 4152			push	r10
c82e14 4153			push	r11
c82e16 50			push	rax
c82e17 4889e7			mov	rdi,rsp
c82e1a 4883e4f0			and	rsp,byte -16
c82e1e 4883ec08			sub	rsp,byte 8
c82e22 57			push	rdi
c82e23 e8a8326d01		call	gc
c82e28 5c			pop	rsp
c82e29 4989c4			mov	r12,rax
c82e2c 58			pop	rax
c82e2d 415b			pop	r11
c82e2f 415a			pop	r10
c82e31 4159			pop	r9
c82e33 4158			pop	r8
c82e35 59			pop	rcx
c82e36 5a			pop	rdx
c82e37 5e			pop	rsi
c82e38 5f			pop	rdi
c82e39 eb04			jmp	short alloc-end100
c82e3b			alloc-ok100:
c82e3b 4983ec10			sub	r12,byte 16
c82e3f			alloc-end100:
c82e3f 48c7c076020000		mov	rax,dword 630
c82e46 49890424			mov	[r12],rax
c82e4a 48c7c060522002		mov	rax,dword 35672672
c82e51 4989442408		mov	[r12+8],rax
c82e56 498d442401		lea	rax,[r12+1]
c82e5b 50			push	rax
c82e5c			version302:
c82e5c 58			pop	rax
c82e5d 49898218030000		mov	[r10+792],rax
c82e64 6aee			push	qword byte -18
c82e66			version303:
c82e66 48c7c0eeffffff		mov	rax,dword -18
c82e6d 49898220030000		mov	[r10+800],rax
c82e74			version304:
c82e74 50			push	rax
c82e75 53			push	rbx
c82e76 48b85080aa4e767f
c82e7e 0000			mov	rax,140146102665296
c82e80 488b18			mov	rbx,[rax]
c82e83 48ffc3			inc	rbx
c82e86 488918			mov	[rax],rbx
c82e89 5b			pop	rbx
c82e8a 58			pop	rax
c82e8b 498d4424f0		lea	rax,[r12-16]
c82e90 49bf0880aa4e767f
c82e98 0000			mov	r15,140146102665224
c82e9a 493b4728			cmp	rax,[r15+40]
c82e9e 7d38			jge	short alloc-ok101
c82ea0 48c7c010000000		mov	rax,dword 16
c82ea7 57			push	rdi
c82ea8 56			push	rsi
c82ea9 52			push	rdx
c82eaa 51			push	rcx
c82eab 4150			push	r8
c82ead 4151			push	r9
c82eaf 4152			push	r10
c82eb1 4153			push	r11
c82eb3 50			push	rax
c82eb4 4889e7			mov	rdi,rsp
c82eb7 4883e4f0			and	rsp,byte -16
c82ebb 4883ec08			sub	rsp,byte 8
c82ebf 57			push	rdi
c82ec0 e80b326d01		call	gc
c82ec5 5c			pop	rsp
c82ec6 4989c4			mov	r12,rax
c82ec9 58			pop	rax
c82eca 415b			pop	r11
c82ecc 415a			pop	r10
c82ece 4159			pop	r9
c82ed0 4158			pop	r8
c82ed2 59			pop	rcx
c82ed3 5a			pop	rdx
c82ed4 5e			pop	rsi
c82ed5 5f			pop	rdi
c82ed6 eb04			jmp	short alloc-end101
c82ed8			alloc-ok101:
c82ed8 4983ec10			sub	r12,byte 16
c82edc			alloc-end101:
c82edc 48c7c076020000		mov	rax,dword 630
c82ee3 49890424			mov	[r12],rax
c82ee7 48c7c0a0622002		mov	rax,dword 35676832
c82eee 4989442408		mov	[r12+8],rax
c82ef3 498d442401		lea	rax,[r12+1]
c82ef8 50			push	rax
c82ef9			version305:
c82ef9 58			pop	rax
c82efa 49898220030000		mov	[r10+800],rax
c82f01 6aee			push	qword byte -18
c82f03			version306:
c82f03 48c7c0eeffffff		mov	rax,dword -18
c82f0a 49898228030000		mov	[r10+808],rax
c82f11			version307:
c82f11 50			push	rax
c82f12 53			push	rbx
c82f13 48b85080aa4e767f
c82f1b 0000			mov	rax,140146102665296
c82f1d 488b18			mov	rbx,[rax]
c82f20 48ffc3			inc	rbx
c82f23 488918			mov	[rax],rbx
c82f26 5b			pop	rbx
c82f27 58			pop	rax
c82f28 498d4424f0		lea	rax,[r12-16]
c82f2d 49bf0880aa4e767f
c82f35 0000			mov	r15,140146102665224
c82f37 493b4728			cmp	rax,[r15+40]
c82f3b 7d38			jge	short alloc-ok102
c82f3d 48c7c010000000		mov	rax,dword 16
c82f44 57			push	rdi
c82f45 56			push	rsi
c82f46 52			push	rdx
c82f47 51			push	rcx
c82f48 4150			push	r8
c82f4a 4151			push	r9
c82f4c 4152			push	r10
c82f4e 4153			push	r11
c82f50 50			push	rax
c82f51 4889e7			mov	rdi,rsp
c82f54 4883e4f0			and	rsp,byte -16
c82f58 4883ec08			sub	rsp,byte 8
c82f5c 57			push	rdi
c82f5d e86e316d01		call	gc
c82f62 5c			pop	rsp
c82f63 4989c4			mov	r12,rax
c82f66 58			pop	rax
c82f67 415b			pop	r11
c82f69 415a			pop	r10
c82f6b 4159			pop	r9
c82f6d 4158			pop	r8
c82f6f 59			pop	rcx
c82f70 5a			pop	rdx
c82f71 5e			pop	rsi
c82f72 5f			pop	rdi
c82f73 eb04			jmp	short alloc-end102
c82f75			alloc-ok102:
c82f75 4983ec10			sub	r12,byte 16
c82f79			alloc-end102:
c82f79 48c7c076020000		mov	rax,dword 630
c82f80 49890424			mov	[r12],rax
c82f84 48c7c0e0722002		mov	rax,dword 35680992
c82f8b 4989442408		mov	[r12+8],rax
c82f90 498d442401		lea	rax,[r12+1]
c82f95 50			push	rax
c82f96			version308:
c82f96 58			pop	rax
c82f97 49898228030000		mov	[r10+808],rax
c82f9e 6aee			push	qword byte -18
c82fa0			version309:
c82fa0 48c7c0eeffffff		mov	rax,dword -18
c82fa7 49898230030000		mov	[r10+816],rax
c82fae			version310:
c82fae 50			push	rax
c82faf 53			push	rbx
c82fb0 48b85080aa4e767f
c82fb8 0000			mov	rax,140146102665296
c82fba 488b18			mov	rbx,[rax]
c82fbd 48ffc3			inc	rbx
c82fc0 488918			mov	[rax],rbx
c82fc3 5b			pop	rbx
c82fc4 58			pop	rax
c82fc5 498d4424f0		lea	rax,[r12-16]
c82fca 49bf0880aa4e767f
c82fd2 0000			mov	r15,140146102665224
c82fd4 493b4728			cmp	rax,[r15+40]
c82fd8 7d38			jge	short alloc-ok103
c82fda 48c7c010000000		mov	rax,dword 16
c82fe1 57			push	rdi
c82fe2 56			push	rsi
c82fe3 52			push	rdx
c82fe4 51			push	rcx
c82fe5 4150			push	r8
c82fe7 4151			push	r9
c82fe9 4152			push	r10
c82feb 4153			push	r11
c82fed 50			push	rax
c82fee 4889e7			mov	rdi,rsp
c82ff1 4883e4f0			and	rsp,byte -16
c82ff5 4883ec08			sub	rsp,byte 8
c82ff9 57			push	rdi
c82ffa e8d1306d01		call	gc
c82fff 5c			pop	rsp
c83000 4989c4			mov	r12,rax
c83003 58			pop	rax
c83004 415b			pop	r11
c83006 415a			pop	r10
c83008 4159			pop	r9
c8300a 4158			pop	r8
c8300c 59			pop	rcx
c8300d 5a			pop	rdx
c8300e 5e			pop	rsi
c8300f 5f			pop	rdi
c83010 eb04			jmp	short alloc-end103
c83012			alloc-ok103:
c83012 4983ec10			sub	r12,byte 16
c83016			alloc-end103:
c83016 48c7c076020000		mov	rax,dword 630
c8301d 49890424			mov	[r12],rax
c83021 48c7c0a0834002		mov	rax,dword 37782432
c83028 4989442408		mov	[r12+8],rax
c8302d 498d442401		lea	rax,[r12+1]
c83032 50			push	rax
c83033			version311:
c83033 58			pop	rax
c83034 49898230030000		mov	[r10+816],rax
c8303b 6aee			push	qword byte -18
c8303d			version312:
c8303d 48c7c0eeffffff		mov	rax,dword -18
c83044 49898238030000		mov	[r10+824],rax
c8304b			version313:
c8304b 50			push	rax
c8304c 53			push	rbx
c8304d 48b85080aa4e767f
c83055 0000			mov	rax,140146102665296
c83057 488b18			mov	rbx,[rax]
c8305a 48ffc3			inc	rbx
c8305d 488918			mov	[rax],rbx
c83060 5b			pop	rbx
c83061 58			pop	rax
c83062 498d4424f0		lea	rax,[r12-16]
c83067 49bf0880aa4e767f
c8306f 0000			mov	r15,140146102665224
c83071 493b4728			cmp	rax,[r15+40]
c83075 7d38			jge	short alloc-ok104
c83077 48c7c010000000		mov	rax,dword 16
c8307e 57			push	rdi
c8307f 56			push	rsi
c83080 52			push	rdx
c83081 51			push	rcx
c83082 4150			push	r8
c83084 4151			push	r9
c83086 4152			push	r10
c83088 4153			push	r11
c8308a 50			push	rax
c8308b 4889e7			mov	rdi,rsp
c8308e 4883e4f0			and	rsp,byte -16
c83092 4883ec08			sub	rsp,byte 8
c83096 57			push	rdi
c83097 e834306d01		call	gc
c8309c 5c			pop	rsp
c8309d 4989c4			mov	r12,rax
c830a0 58			pop	rax
c830a1 415b			pop	r11
c830a3 415a			pop	r10
c830a5 4159			pop	r9
c830a7 4158			pop	r8
c830a9 59			pop	rcx
c830aa 5a			pop	rdx
c830ab 5e			pop	rsi
c830ac 5f			pop	rdi
c830ad eb04			jmp	short alloc-end104
c830af			alloc-ok104:
c830af 4983ec10			sub	r12,byte 16
c830b3			alloc-end104:
c830b3 48c7c076020000		mov	rax,dword 630
c830ba 49890424			mov	[r12],rax
c830be 48c7c0e0934002		mov	rax,dword 37786592
c830c5 4989442408		mov	[r12+8],rax
c830ca 498d442401		lea	rax,[r12+1]
c830cf 50			push	rax
c830d0			version314:
c830d0 58			pop	rax
c830d1 49898238030000		mov	[r10+824],rax
c830d8 6aee			push	qword byte -18
c830da			version315:
c830da 48c7c0eeffffff		mov	rax,dword -18
c830e1 49898240030000		mov	[r10+832],rax
c830e8			version316:
c830e8 50			push	rax
c830e9 53			push	rbx
c830ea 48b85080aa4e767f
c830f2 0000			mov	rax,140146102665296
c830f4 488b18			mov	rbx,[rax]
c830f7 48ffc3			inc	rbx
c830fa 488918			mov	[rax],rbx
c830fd 5b			pop	rbx
c830fe 58			pop	rax
c830ff 498d4424f0		lea	rax,[r12-16]
c83104 49bf0880aa4e767f
c8310c 0000			mov	r15,140146102665224
c8310e 493b4728			cmp	rax,[r15+40]
c83112 7d38			jge	short alloc-ok105
c83114 48c7c010000000		mov	rax,dword 16
c8311b 57			push	rdi
c8311c 56			push	rsi
c8311d 52			push	rdx
c8311e 51			push	rcx
c8311f 4150			push	r8
c83121 4151			push	r9
c83123 4152			push	r10
c83125 4153			push	r11
c83127 50			push	rax
c83128 4889e7			mov	rdi,rsp
c8312b 4883e4f0			and	rsp,byte -16
c8312f 4883ec08			sub	rsp,byte 8
c83133 57			push	rdi
c83134 e8972f6d01		call	gc
c83139 5c			pop	rsp
c8313a 4989c4			mov	r12,rax
c8313d 58			pop	rax
c8313e 415b			pop	r11
c83140 415a			pop	r10
c83142 4159			pop	r9
c83144 4158			pop	r8
c83146 59			pop	rcx
c83147 5a			pop	rdx
c83148 5e			pop	rsi
c83149 5f			pop	rdi
c8314a eb04			jmp	short alloc-end105
c8314c			alloc-ok105:
c8314c 4983ec10			sub	r12,byte 16
c83150			alloc-end105:
c83150 48c7c076020000		mov	rax,dword 630
c83157 49890424			mov	[r12],rax
c8315b 48c7c020a44002		mov	rax,dword 37790752
c83162 4989442408		mov	[r12+8],rax
c83167 498d442401		lea	rax,[r12+1]
c8316c 50			push	rax
c8316d			version317:
c8316d 58			pop	rax
c8316e 49898240030000		mov	[r10+832],rax
c83175 6aee			push	qword byte -18
c83177			version318:
c83177 48c7c0eeffffff		mov	rax,dword -18
c8317e 49898248030000		mov	[r10+840],rax
c83185			version319:
c83185 50			push	rax
c83186 53			push	rbx
c83187 48b85080aa4e767f
c8318f 0000			mov	rax,140146102665296
c83191 488b18			mov	rbx,[rax]
c83194 48ffc3			inc	rbx
c83197 488918			mov	[rax],rbx
c8319a 5b			pop	rbx
c8319b 58			pop	rax
c8319c 498d4424f0		lea	rax,[r12-16]
c831a1 49bf0880aa4e767f
c831a9 0000			mov	r15,140146102665224
c831ab 493b4728			cmp	rax,[r15+40]
c831af 7d38			jge	short alloc-ok106
c831b1 48c7c010000000		mov	rax,dword 16
c831b8 57			push	rdi
c831b9 56			push	rsi
c831ba 52			push	rdx
c831bb 51			push	rcx
c831bc 4150			push	r8
c831be 4151			push	r9
c831c0 4152			push	r10
c831c2 4153			push	r11
c831c4 50			push	rax
c831c5 4889e7			mov	rdi,rsp
c831c8 4883e4f0			and	rsp,byte -16
c831cc 4883ec08			sub	rsp,byte 8
c831d0 57			push	rdi
c831d1 e8fa2e6d01		call	gc
c831d6 5c			pop	rsp
c831d7 4989c4			mov	r12,rax
c831da 58			pop	rax
c831db 415b			pop	r11
c831dd 415a			pop	r10
c831df 4159			pop	r9
c831e1 4158			pop	r8
c831e3 59			pop	rcx
c831e4 5a			pop	rdx
c831e5 5e			pop	rsi
c831e6 5f			pop	rdi
c831e7 eb04			jmp	short alloc-end106
c831e9			alloc-ok106:
c831e9 4983ec10			sub	r12,byte 16
c831ed			alloc-end106:
c831ed 48c7c076020000		mov	rax,dword 630
c831f4 49890424			mov	[r12],rax
c831f8 48c7c060b44002		mov	rax,dword 37794912
c831ff 4989442408		mov	[r12+8],rax
c83204 498d442401		lea	rax,[r12+1]
c83209 50			push	rax
c8320a			version320:
c8320a 58			pop	rax
c8320b 49898248030000		mov	[r10+840],rax
c83212 6aee			push	qword byte -18
c83214			version321:
c83214 48c7c0eeffffff		mov	rax,dword -18
c8321b 49898250030000		mov	[r10+848],rax
c83222			version322:
c83222 50			push	rax
c83223 53			push	rbx
c83224 48b85080aa4e767f
c8322c 0000			mov	rax,140146102665296
c8322e 488b18			mov	rbx,[rax]
c83231 48ffc3			inc	rbx
c83234 488918			mov	[rax],rbx
c83237 5b			pop	rbx
c83238 58			pop	rax
c83239 498d4424f0		lea	rax,[r12-16]
c8323e 49bf0880aa4e767f
c83246 0000			mov	r15,140146102665224
c83248 493b4728			cmp	rax,[r15+40]
c8324c 7d38			jge	short alloc-ok107
c8324e 48c7c010000000		mov	rax,dword 16
c83255 57			push	rdi
c83256 56			push	rsi
c83257 52			push	rdx
c83258 51			push	rcx
c83259 4150			push	r8
c8325b 4151			push	r9
c8325d 4152			push	r10
c8325f 4153			push	r11
c83261 50			push	rax
c83262 4889e7			mov	rdi,rsp
c83265 4883e4f0			and	rsp,byte -16
c83269 4883ec08			sub	rsp,byte 8
c8326d 57			push	rdi
c8326e e85d2e6d01		call	gc
c83273 5c			pop	rsp
c83274 4989c4			mov	r12,rax
c83277 58			pop	rax
c83278 415b			pop	r11
c8327a 415a			pop	r10
c8327c 4159			pop	r9
c8327e 4158			pop	r8
c83280 59			pop	rcx
c83281 5a			pop	rdx
c83282 5e			pop	rsi
c83283 5f			pop	rdi
c83284 eb04			jmp	short alloc-end107
c83286			alloc-ok107:
c83286 4983ec10			sub	r12,byte 16
c8328a			alloc-end107:
c8328a 48c7c076020000		mov	rax,dword 630
c83291 49890424			mov	[r12],rax
c83295 48c7c0a0c44002		mov	rax,dword 37799072
c8329c 4989442408		mov	[r12+8],rax
c832a1 498d442401		lea	rax,[r12+1]
c832a6 50			push	rax
c832a7			version323:
c832a7 58			pop	rax
c832a8 49898250030000		mov	[r10+848],rax
c832af 6aee			push	qword byte -18
c832b1			version324:
c832b1 48c7c0eeffffff		mov	rax,dword -18
c832b8 49898258030000		mov	[r10+856],rax
c832bf			version325:
c832bf 50			push	rax
c832c0 53			push	rbx
c832c1 48b85080aa4e767f
c832c9 0000			mov	rax,140146102665296
c832cb 488b18			mov	rbx,[rax]
c832ce 48ffc3			inc	rbx
c832d1 488918			mov	[rax],rbx
c832d4 5b			pop	rbx
c832d5 58			pop	rax
c832d6 498d4424f0		lea	rax,[r12-16]
c832db 49bf0880aa4e767f
c832e3 0000			mov	r15,140146102665224
c832e5 493b4728			cmp	rax,[r15+40]
c832e9 7d38			jge	short alloc-ok108
c832eb 48c7c010000000		mov	rax,dword 16
c832f2 57			push	rdi
c832f3 56			push	rsi
c832f4 52			push	rdx
c832f5 51			push	rcx
c832f6 4150			push	r8
c832f8 4151			push	r9
c832fa 4152			push	r10
c832fc 4153			push	r11
c832fe 50			push	rax
c832ff 4889e7			mov	rdi,rsp
c83302 4883e4f0			and	rsp,byte -16
c83306 4883ec08			sub	rsp,byte 8
c8330a 57			push	rdi
c8330b e8c02d6d01		call	gc
c83310 5c			pop	rsp
c83311 4989c4			mov	r12,rax
c83314 58			pop	rax
c83315 415b			pop	r11
c83317 415a			pop	r10
c83319 4159			pop	r9
c8331b 4158			pop	r8
c8331d 59			pop	rcx
c8331e 5a			pop	rdx
c8331f 5e			pop	rsi
c83320 5f			pop	rdi
c83321 eb04			jmp	short alloc-end108
c83323			alloc-ok108:
c83323 4983ec10			sub	r12,byte 16
c83327			alloc-end108:
c83327 48c7c076020000		mov	rax,dword 630
c8332e 49890424			mov	[r12],rax
c83332 48c7c0e0d44002		mov	rax,dword 37803232
c83339 4989442408		mov	[r12+8],rax
c8333e 498d442401		lea	rax,[r12+1]
c83343 50			push	rax
c83344			version326:
c83344 58			pop	rax
c83345 49898258030000		mov	[r10+856],rax
c8334c 6aee			push	qword byte -18
c8334e			version327:
c8334e 48c7c0eeffffff		mov	rax,dword -18
c83355 49898260030000		mov	[r10+864],rax
c8335c			version328:
c8335c 50			push	rax
c8335d 53			push	rbx
c8335e 48b85080aa4e767f
c83366 0000			mov	rax,140146102665296
c83368 488b18			mov	rbx,[rax]
c8336b 48ffc3			inc	rbx
c8336e 488918			mov	[rax],rbx
c83371 5b			pop	rbx
c83372 58			pop	rax
c83373 498d4424f0		lea	rax,[r12-16]
c83378 49bf0880aa4e767f
c83380 0000			mov	r15,140146102665224
c83382 493b4728			cmp	rax,[r15+40]
c83386 7d38			jge	short alloc-ok109
c83388 48c7c010000000		mov	rax,dword 16
c8338f 57			push	rdi
c83390 56			push	rsi
c83391 52			push	rdx
c83392 51			push	rcx
c83393 4150			push	r8
c83395 4151			push	r9
c83397 4152			push	r10
c83399 4153			push	r11
c8339b 50			push	rax
c8339c 4889e7			mov	rdi,rsp
c8339f 4883e4f0			and	rsp,byte -16
c833a3 4883ec08			sub	rsp,byte 8
c833a7 57			push	rdi
c833a8 e8232d6d01		call	gc
c833ad 5c			pop	rsp
c833ae 4989c4			mov	r12,rax
c833b1 58			pop	rax
c833b2 415b			pop	r11
c833b4 415a			pop	r10
c833b6 4159			pop	r9
c833b8 4158			pop	r8
c833ba 59			pop	rcx
c833bb 5a			pop	rdx
c833bc 5e			pop	rsi
c833bd 5f			pop	rdi
c833be eb04			jmp	short alloc-end109
c833c0			alloc-ok109:
c833c0 4983ec10			sub	r12,byte 16
c833c4			alloc-end109:
c833c4 48c7c076020000		mov	rax,dword 630
c833cb 49890424			mov	[r12],rax
c833cf 48c7c020e54002		mov	rax,dword 37807392
c833d6 4989442408		mov	[r12+8],rax
c833db 498d442401		lea	rax,[r12+1]
c833e0 50			push	rax
c833e1			version329:
c833e1 58			pop	rax
c833e2 49898260030000		mov	[r10+864],rax
c833e9 6aee			push	qword byte -18
c833eb			version330:
c833eb 48c7c0eeffffff		mov	rax,dword -18
c833f2 49898268030000		mov	[r10+872],rax
c833f9			version331:
c833f9 50			push	rax
c833fa 53			push	rbx
c833fb 48b85080aa4e767f
c83403 0000			mov	rax,140146102665296
c83405 488b18			mov	rbx,[rax]
c83408 48ffc3			inc	rbx
c8340b 488918			mov	[rax],rbx
c8340e 5b			pop	rbx
c8340f 58			pop	rax
c83410 498d4424f0		lea	rax,[r12-16]
c83415 49bf0880aa4e767f
c8341d 0000			mov	r15,140146102665224
c8341f 493b4728			cmp	rax,[r15+40]
c83423 7d38			jge	short alloc-ok110
c83425 48c7c010000000		mov	rax,dword 16
c8342c 57			push	rdi
c8342d 56			push	rsi
c8342e 52			push	rdx
c8342f 51			push	rcx
c83430 4150			push	r8
c83432 4151			push	r9
c83434 4152			push	r10
c83436 4153			push	r11
c83438 50			push	rax
c83439 4889e7			mov	rdi,rsp
c8343c 4883e4f0			and	rsp,byte -16
c83440 4883ec08			sub	rsp,byte 8
c83444 57			push	rdi
c83445 e8862c6d01		call	gc
c8344a 5c			pop	rsp
c8344b 4989c4			mov	r12,rax
c8344e 58			pop	rax
c8344f 415b			pop	r11
c83451 415a			pop	r10
c83453 4159			pop	r9
c83455 4158			pop	r8
c83457 59			pop	rcx
c83458 5a			pop	rdx
c83459 5e			pop	rsi
c8345a 5f			pop	rdi
c8345b eb04			jmp	short alloc-end110
c8345d			alloc-ok110:
c8345d 4983ec10			sub	r12,byte 16
c83461			alloc-end110:
c83461 48c7c076020000		mov	rax,dword 630
c83468 49890424			mov	[r12],rax
c8346c 48c7c060f54002		mov	rax,dword 37811552
c83473 4989442408		mov	[r12+8],rax
c83478 498d442401		lea	rax,[r12+1]
c8347d 50			push	rax
c8347e			version332:
c8347e 58			pop	rax
c8347f 49898268030000		mov	[r10+872],rax
c83486 6aee			push	qword byte -18
c83488			version333:
c83488 48c7c0eeffffff		mov	rax,dword -18
c8348f 49898270030000		mov	[r10+880],rax
c83496			version334:
c83496 50			push	rax
c83497 53			push	rbx
c83498 48b85080aa4e767f
c834a0 0000			mov	rax,140146102665296
c834a2 488b18			mov	rbx,[rax]
c834a5 48ffc3			inc	rbx
c834a8 488918			mov	[rax],rbx
c834ab 5b			pop	rbx
c834ac 58			pop	rax
c834ad 498d4424f0		lea	rax,[r12-16]
c834b2 49bf0880aa4e767f
c834ba 0000			mov	r15,140146102665224
c834bc 493b4728			cmp	rax,[r15+40]
c834c0 7d38			jge	short alloc-ok111
c834c2 48c7c010000000		mov	rax,dword 16
c834c9 57			push	rdi
c834ca 56			push	rsi
c834cb 52			push	rdx
c834cc 51			push	rcx
c834cd 4150			push	r8
c834cf 4151			push	r9
c834d1 4152			push	r10
c834d3 4153			push	r11
c834d5 50			push	rax
c834d6 4889e7			mov	rdi,rsp
c834d9 4883e4f0			and	rsp,byte -16
c834dd 4883ec08			sub	rsp,byte 8
c834e1 57			push	rdi
c834e2 e8e92b6d01		call	gc
c834e7 5c			pop	rsp
c834e8 4989c4			mov	r12,rax
c834eb 58			pop	rax
c834ec 415b			pop	r11
c834ee 415a			pop	r10
c834f0 4159			pop	r9
c834f2 4158			pop	r8
c834f4 59			pop	rcx
c834f5 5a			pop	rdx
c834f6 5e			pop	rsi
c834f7 5f			pop	rdi
c834f8 eb04			jmp	short alloc-end111
c834fa			alloc-ok111:
c834fa 4983ec10			sub	r12,byte 16
c834fe			alloc-end111:
c834fe 48c7c076020000		mov	rax,dword 630
c83505 49890424			mov	[r12],rax
c83509 48c7c0a0054102		mov	rax,dword 37815712
c83510 4989442408		mov	[r12+8],rax
c83515 498d442401		lea	rax,[r12+1]
c8351a 50			push	rax
c8351b			version335:
c8351b 58			pop	rax
c8351c 49898270030000		mov	[r10+880],rax
c83523 6aee			push	qword byte -18
c83525			version336:
c83525 48c7c0eeffffff		mov	rax,dword -18
c8352c 49898278030000		mov	[r10+888],rax
c83533			version337:
c83533 50			push	rax
c83534 53			push	rbx
c83535 48b85080aa4e767f
c8353d 0000			mov	rax,140146102665296
c8353f 488b18			mov	rbx,[rax]
c83542 48ffc3			inc	rbx
c83545 488918			mov	[rax],rbx
c83548 5b			pop	rbx
c83549 58			pop	rax
c8354a 498d4424f0		lea	rax,[r12-16]
c8354f 49bf0880aa4e767f
c83557 0000			mov	r15,140146102665224
c83559 493b4728			cmp	rax,[r15+40]
c8355d 7d38			jge	short alloc-ok112
c8355f 48c7c010000000		mov	rax,dword 16
c83566 57			push	rdi
c83567 56			push	rsi
c83568 52			push	rdx
c83569 51			push	rcx
c8356a 4150			push	r8
c8356c 4151			push	r9
c8356e 4152			push	r10
c83570 4153			push	r11
c83572 50			push	rax
c83573 4889e7			mov	rdi,rsp
c83576 4883e4f0			and	rsp,byte -16
c8357a 4883ec08			sub	rsp,byte 8
c8357e 57			push	rdi
c8357f e84c2b6d01		call	gc
c83584 5c			pop	rsp
c83585 4989c4			mov	r12,rax
c83588 58			pop	rax
c83589 415b			pop	r11
c8358b 415a			pop	r10
c8358d 4159			pop	r9
c8358f 4158			pop	r8
c83591 59			pop	rcx
c83592 5a			pop	rdx
c83593 5e			pop	rsi
c83594 5f			pop	rdi
c83595 eb04			jmp	short alloc-end112
c83597			alloc-ok112:
c83597 4983ec10			sub	r12,byte 16
c8359b			alloc-end112:
c8359b 48c7c076020000		mov	rax,dword 630
c835a2 49890424			mov	[r12],rax
c835a6 48c7c0e0154102		mov	rax,dword 37819872
c835ad 4989442408		mov	[r12+8],rax
c835b2 498d442401		lea	rax,[r12+1]
c835b7 50			push	rax
c835b8			version338:
c835b8 58			pop	rax
c835b9 49898278030000		mov	[r10+888],rax
c835c0 6aee			push	qword byte -18
c835c2			version339:
c835c2 48c7c0eeffffff		mov	rax,dword -18
c835c9 49898280030000		mov	[r10+896],rax
c835d0			version340:
c835d0 50			push	rax
c835d1 53			push	rbx
c835d2 48b85080aa4e767f
c835da 0000			mov	rax,140146102665296
c835dc 488b18			mov	rbx,[rax]
c835df 48ffc3			inc	rbx
c835e2 488918			mov	[rax],rbx
c835e5 5b			pop	rbx
c835e6 58			pop	rax
c835e7 498d4424f0		lea	rax,[r12-16]
c835ec 49bf0880aa4e767f
c835f4 0000			mov	r15,140146102665224
c835f6 493b4728			cmp	rax,[r15+40]
c835fa 7d38			jge	short alloc-ok113
c835fc 48c7c010000000		mov	rax,dword 16
c83603 57			push	rdi
c83604 56			push	rsi
c83605 52			push	rdx
c83606 51			push	rcx
c83607 4150			push	r8
c83609 4151			push	r9
c8360b 4152			push	r10
c8360d 4153			push	r11
c8360f 50			push	rax
c83610 4889e7			mov	rdi,rsp
c83613 4883e4f0			and	rsp,byte -16
c83617 4883ec08			sub	rsp,byte 8
c8361b 57			push	rdi
c8361c e8af2a6d01		call	gc
c83621 5c			pop	rsp
c83622 4989c4			mov	r12,rax
c83625 58			pop	rax
c83626 415b			pop	r11
c83628 415a			pop	r10
c8362a 4159			pop	r9
c8362c 4158			pop	r8
c8362e 59			pop	rcx
c8362f 5a			pop	rdx
c83630 5e			pop	rsi
c83631 5f			pop	rdi
c83632 eb04			jmp	short alloc-end113
c83634			alloc-ok113:
c83634 4983ec10			sub	r12,byte 16
c83638			alloc-end113:
c83638 48c7c076020000		mov	rax,dword 630
c8363f 49890424			mov	[r12],rax
c83643 48c7c020264102		mov	rax,dword 37824032
c8364a 4989442408		mov	[r12+8],rax
c8364f 498d442401		lea	rax,[r12+1]
c83654 50			push	rax
c83655			version341:
c83655 58			pop	rax
c83656 49898280030000		mov	[r10+896],rax
c8365d 6aee			push	qword byte -18
c8365f			version342:
c8365f 48c7c0eeffffff		mov	rax,dword -18
c83666 49898288030000		mov	[r10+904],rax
c8366d			version343:
c8366d 50			push	rax
c8366e 53			push	rbx
c8366f 48b85080aa4e767f
c83677 0000			mov	rax,140146102665296
c83679 488b18			mov	rbx,[rax]
c8367c 48ffc3			inc	rbx
c8367f 488918			mov	[rax],rbx
c83682 5b			pop	rbx
c83683 58			pop	rax
c83684 498d4424f0		lea	rax,[r12-16]
c83689 49bf0880aa4e767f
c83691 0000			mov	r15,140146102665224
c83693 493b4728			cmp	rax,[r15+40]
c83697 7d38			jge	short alloc-ok114
c83699 48c7c010000000		mov	rax,dword 16
c836a0 57			push	rdi
c836a1 56			push	rsi
c836a2 52			push	rdx
c836a3 51			push	rcx
c836a4 4150			push	r8
c836a6 4151			push	r9
c836a8 4152			push	r10
c836aa 4153			push	r11
c836ac 50			push	rax
c836ad 4889e7			mov	rdi,rsp
c836b0 4883e4f0			and	rsp,byte -16
c836b4 4883ec08			sub	rsp,byte 8
c836b8 57			push	rdi
c836b9 e8122a6d01		call	gc
c836be 5c			pop	rsp
c836bf 4989c4			mov	r12,rax
c836c2 58			pop	rax
c836c3 415b			pop	r11
c836c5 415a			pop	r10
c836c7 4159			pop	r9
c836c9 4158			pop	r8
c836cb 59			pop	rcx
c836cc 5a			pop	rdx
c836cd 5e			pop	rsi
c836ce 5f			pop	rdi
c836cf eb04			jmp	short alloc-end114
c836d1			alloc-ok114:
c836d1 4983ec10			sub	r12,byte 16
c836d5			alloc-end114:
c836d5 48c7c076020000		mov	rax,dword 630
c836dc 49890424			mov	[r12],rax
c836e0 48c7c060364102		mov	rax,dword 37828192
c836e7 4989442408		mov	[r12+8],rax
c836ec 498d442401		lea	rax,[r12+1]
c836f1 50			push	rax
c836f2			version344:
c836f2 58			pop	rax
c836f3 49898288030000		mov	[r10+904],rax
c836fa 6aee			push	qword byte -18
c836fc			version345:
c836fc 6afe			push	qword byte -2
c836fe			version346:
c836fe 41ffb288030000		push	qword [r10+904]
c83705			version347:
c83705 6afe			push	qword byte -2
c83707			version348:
c83707 48c7c060090000		mov	rax,dword 2400
c8370e 50			push	rax
c8370f			version349:
c8370f 48c7c0c8000000		mov	rax,dword 200
c83716 50			push	rax
c83717			version350:
c83717 41ffb280020000		push	qword [r10+640]
c8371e			version351:
c8371e			version352:
c8371e 48c7c0a0464102		mov	rax,dword 37832352
c83725 4889442418		mov	[rsp+24],rax
c8372a			version353:
c8372a 488b0424			mov	rax,[rsp]
c8372e 49c7c371474102		mov	r11,dword 37832561
c83735 488b4007			mov	rax,[rax+7]
c83739 48c7c708000000		mov	rdi,dword 8
c83740 488b4010			mov	rax,[rax+16]
c83744 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #120
                         stack: (procedure number number retAddr)
                         env: ((x . #<identifier #121
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 0>
#<ctx #120
      stack: (procedure number number retAddr)
      env: ((x . #<identifier #121
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 0>
------------------------------------------------------------------------
c83746				bits 64
c83746 9090		fn_entry_1:
c83748 6af6			push	qword byte -10
c8374a 498d4424e8		lea	rax,[r12-24]
c8374f 49bf0880aa4e767f
c83757 0000			mov	r15,140146102665224
c83759 493b4728			cmp	rax,[r15+40]
c8375d 7d38			jge	short alloc-ok115
c8375f 48c7c018000000		mov	rax,dword 24
c83766 57			push	rdi
c83767 56			push	rsi
c83768 52			push	rdx
c83769 51			push	rcx
c8376a 4150			push	r8
c8376c 4151			push	r9
c8376e 4152			push	r10
c83770 4153			push	r11
c83772 50			push	rax
c83773 4889e7			mov	rdi,rsp
c83776 4883e4f0			and	rsp,byte -16
c8377a 4883ec08			sub	rsp,byte 8
c8377e 57			push	rdi
c8377f e84c296d01		call	gc
c83784 5c			pop	rsp
c83785 4989c4			mov	r12,rax
c83788 58			pop	rax
c83789 415b			pop	r11
c8378b 415a			pop	r10
c8378d 4159			pop	r9
c8378f 4158			pop	r8
c83791 59			pop	rcx
c83792 5a			pop	rdx
c83793 5e			pop	rsi
c83794 5f			pop	rdi
c83795 eb04			jmp	short alloc-end115
c83797			alloc-ok115:
c83797 4983ec18			sub	r12,byte 24
c8379b			alloc-end115:
c8379b 48c7c00e030000		mov	rax,dword 782
c837a2 49890424			mov	[r12],rax
c837a6 488b442410		mov	rax,[rsp+16]
c837ab 4989442408		mov	[r12+8],rax
c837b0 58			pop	rax
c837b1 4989442410		mov	[r12+16],rax
c837b6 498d442401		lea	rax,[r12+1]
c837bb 50			push	rax
c837bc 498d4424e8		lea	rax,[r12-24]
c837c1 49bf0880aa4e767f
c837c9 0000			mov	r15,140146102665224
c837cb 493b4728			cmp	rax,[r15+40]
c837cf 7d38			jge	short alloc-ok116
c837d1 48c7c018000000		mov	rax,dword 24
c837d8 57			push	rdi
c837d9 56			push	rsi
c837da 52			push	rdx
c837db 51			push	rcx
c837dc 4150			push	r8
c837de 4151			push	r9
c837e0 4152			push	r10
c837e2 4153			push	r11
c837e4 50			push	rax
c837e5 4889e7			mov	rdi,rsp
c837e8 4883e4f0			and	rsp,byte -16
c837ec 4883ec08			sub	rsp,byte 8
c837f0 57			push	rdi
c837f1 e8da286d01		call	gc
c837f6 5c			pop	rsp
c837f7 4989c4			mov	r12,rax
c837fa 58			pop	rax
c837fb 415b			pop	r11
c837fd 415a			pop	r10
c837ff 4159			pop	r9
c83801 4158			pop	r8
c83803 59			pop	rcx
c83804 5a			pop	rdx
c83805 5e			pop	rsi
c83806 5f			pop	rdi
c83807 eb04			jmp	short alloc-end116
c83809			alloc-ok116:
c83809 4983ec18			sub	r12,byte 24
c8380d			alloc-end116:
c8380d 48c7c00e030000		mov	rax,dword 782
c83814 49890424			mov	[r12],rax
c83818 488b442418		mov	rax,[rsp+24]
c8381d 4989442408		mov	[r12+8],rax
c83822 58			pop	rax
c83823 4989442410		mov	[r12+16],rax
c83828 498d442401		lea	rax,[r12+1]
c8382d 50			push	rax
c8382e 58			pop	rax
c8382f 4889442410		mov	[rsp+16],rax
c83834 488b0424			mov	rax,[rsp]
c83838 4889442408		mov	[rsp+8],rax
c8383d 4883c408			add	rsp,byte 8
c83841			version354:
c83841 ff742408			push	qword [rsp+8]
c83845			version355:
c83845 58			pop	rax
c83846 4883c410			add	rsp,byte 16
c8384a 5a			pop	rdx
c8384b 488b5a28			mov	rbx,[rdx+40]
c8384f 49c7c328000000		mov	r11,dword 40
c83856 ffe3			jmp	rbx
>>> patching closure 7f74aa8c50f9 at 7f74aa8c5109 : slot contains now label fn_entry_1 (7f764bc83748)
------------------------------------------------------------------------
7f0118				bits 64
7f0118			stub_7f764c7f0118_0:
7f0118 e84aef48ff		call	do_callback_cont_handler
7f011d f185ec0100000000
(obj= #(#<procedure #122>))
------------------------------------------------------------------------
c83858				bits 64
c83858			continuation_1:
c83858 50			push	rax
c83859			version356:
c83859 41ffb2f8020000		push	qword [r10+760]
c83860			version357:
c83860			version358:
c83860 48c7c04086ec01		mov	rax,dword 32278080
c83867 4889442418		mov	[rsp+24],rax
c8386c			version359:
c8386c 488b0424			mov	rax,[rsp]
c83870 49c7c31187ec01		mov	r11,dword 32278289
c83877 488b4007			mov	rax,[rax+7]
c8387b 48c7c708000000		mov	rdi,dword 8
c83882 488b4018			mov	rax,[rax+24]
c83886 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #123
                         stack: (procedure pair procedure retAddr)
                         env: ((fn . #<identifier #124
                                        type: local
                                        offset: 0
                                        pos: (0)
                                        flags: ()
                                        stype: ()>)
                               (args . #<identifier #125
                                          type: local
                                          offset: 1
                                          pos: (1)
                                          flags: ()
                                          stype: ()>)
                               (r . #<identifier #126
                                       type: local
                                       offset: 2
                                       pos: (2)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #123
      stack: (procedure pair procedure retAddr)
      env: ((fn . #<identifier #124
                     type: local
                     offset: 0
                     pos: (0)
                     flags: ()
                     stype: ()>)
            (args . #<identifier #125
                       type: local
                       offset: 1
                       pos: (1)
                       flags: ()
                       stype: ()>)
            (r . #<identifier #126
                    type: local
                    offset: 2
                    pos: (2)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
7f0108				bits 64
7f0108			stub_7f764c7f0108_1:
7f0108 fec1			inc	cl
7f010a			stub_7f764c7f0108_0:
7f010a e82bef48ff		call	do_callback_fn_handler
7f010f b187ec0100000000
(obj= #(#<procedure #127>))
------------------------------------------------------------------------
7f00f8				bits 64
7f00f8			stub_7f764c7f00f8_1:
7f00f8 fec1			inc	cl
7f00fa			stub_7f764c7f00f8_0:
7f00fa e80eef48ff		call	do_callback_handler
7f00ff f197ec0100000000
(obj= #(#<procedure #128>))
------------------------------------------------------------------------
c83888				bits 64
c83888			fn_entry_2:
c83888 488b0424			mov	rax,[rsp]
c8388c 50			push	rax
c8388d 48c7c0f6ffffff		mov	rax,dword -10
c83894 4889442408		mov	[rsp+8],rax
c83899			version360:
c83899 6afe			push	qword byte -2
c8389b 498d4424f0		lea	rax,[r12-16]
c838a0 49bf0880aa4e767f
c838a8 0000			mov	r15,140146102665224
c838aa 493b4728			cmp	rax,[r15+40]
c838ae 7d38			jge	short alloc-ok117
c838b0 48c7c010000000		mov	rax,dword 16
c838b7 57			push	rdi
c838b8 56			push	rsi
c838b9 52			push	rdx
c838ba 51			push	rcx
c838bb 4150			push	r8
c838bd 4151			push	r9
c838bf 4152			push	r10
c838c1 4153			push	r11
c838c3 50			push	rax
c838c4 4889e7			mov	rdi,rsp
c838c7 4883e4f0			and	rsp,byte -16
c838cb 4883ec08			sub	rsp,byte 8
c838cf 57			push	rdi
c838d0 e8fb276d01		call	gc
c838d5 5c			pop	rsp
c838d6 4989c4			mov	r12,rax
c838d9 58			pop	rax
c838da 415b			pop	r11
c838dc 415a			pop	r10
c838de 4159			pop	r9
c838e0 4158			pop	r8
c838e2 59			pop	rcx
c838e3 5a			pop	rdx
c838e4 5e			pop	rsi
c838e5 5f			pop	rdi
c838e6 eb04			jmp	short alloc-end117
c838e8			alloc-ok117:
c838e8 4983ec10			sub	r12,byte 16
c838ec			alloc-end117:
c838ec 488b0424			mov	rax,[rsp]
c838f0 4989442408		mov	[r12+8],rax
c838f5 48c7c016020000		mov	rax,dword 534
c838fc 49890424			mov	[r12],rax
c83900 498d442401		lea	rax,[r12+1]
c83905 48890424			mov	[rsp],rax
c83909			version361:
c83909 50			push	rax
c8390a 53			push	rbx
c8390b 48b85080aa4e767f
c83913 0000			mov	rax,140146102665296
c83915 488b18			mov	rbx,[rax]
c83918 48ffc3			inc	rbx
c8391b 488918			mov	[rax],rbx
c8391e 5b			pop	rbx
c8391f 58			pop	rax
c83920 498d4424e8		lea	rax,[r12-24]
c83925 49bf0880aa4e767f
c8392d 0000			mov	r15,140146102665224
c8392f 493b4728			cmp	rax,[r15+40]
c83933 7d38			jge	short alloc-ok118
c83935 48c7c018000000		mov	rax,dword 24
c8393c 57			push	rdi
c8393d 56			push	rsi
c8393e 52			push	rdx
c8393f 51			push	rcx
c83940 4150			push	r8
c83942 4151			push	r9
c83944 4152			push	r10
c83946 4153			push	r11
c83948 50			push	rax
c83949 4889e7			mov	rdi,rsp
c8394c 4883e4f0			and	rsp,byte -16
c83950 4883ec08			sub	rsp,byte 8
c83954 57			push	rdi
c83955 e876276d01		call	gc
c8395a 5c			pop	rsp
c8395b 4989c4			mov	r12,rax
c8395e 58			pop	rax
c8395f 415b			pop	r11
c83961 415a			pop	r10
c83963 4159			pop	r9
c83965 4158			pop	r8
c83967 59			pop	rcx
c83968 5a			pop	rdx
c83969 5e			pop	rsi
c8396a 5f			pop	rdi
c8396b eb04			jmp	short alloc-end118
c8396d			alloc-ok118:
c8396d 4983ec18			sub	r12,byte 24
c83971			alloc-end118:
c83971 48c7c076030000		mov	rax,dword 886
c83978 49890424			mov	[r12],rax
c8397c 48c7c00088ec01		mov	rax,dword 32278528
c83983 4989442408		mov	[r12+8],rax
c83988 488b0424			mov	rax,[rsp]
c8398c 4989442410		mov	[r12+16],rax
c83991 498d442401		lea	rax,[r12+1]
c83996 50			push	rax
c83997			version362:
c83997 488b0424			mov	rax,[rsp]
c8399b 488b5c2408		mov	rbx,[rsp+8]
c839a0 48894307			mov	[rbx+7],rax
c839a4 4883c408			add	rsp,byte 8
c839a8			version363:
c839a8 ff742410			push	qword [rsp+16]
c839ac			version364:
c839ac 48c7c0faffffff		mov	rax,dword -6
c839b3 48890424			mov	[rsp],rax
c839b7			version365:
c839b7 58			pop	rax
c839b8 4883f8fe			cmp	rax,byte -2
c839bc			patchable_jump1:
c839bc 0f8438c7b600		je	stub_7f764c7f00f8_0
c839c2 e931c7b600		jmp	stub_7f764c7f00f8_1
>>> patching closure 7f74aa8c5009 at 7f74aa8c5021 : slot contains now label fn_entry_2 (7f764bc83888)
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #129
                      stack: (procedure procedure null pair procedure retAddr)
                      env: ((gen-args
                             .
                             #<identifier #130
                                type: local
                                offset: 4
                                pos: (4)
                                flags: (mutable)
                                stype: ()>)
                            (fn . #<identifier #124
                                     type: local
                                     offset: 0
                                     pos: (0)
                                     flags: ()
                                     stype: ()>)
                            (args . #<identifier #125
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>)
                            (r . #<identifier #131
                                    type: local
                                    offset: 2
                                    pos: (2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
7f00e8				bits 64
7f00e8			stub_7f764c7f00e8_0:
7f00e8 e87aef48ff		call	do_callback_cont_handler
7f00ed 9198ec0100000000
(obj= #(#<procedure #132>))
------------------------------------------------------------------------
c839c2				bits 64
c839c2 9090		version366:
c839c4 6afe			push	qword byte -2
c839c6			version367:
c839c6 ff742428			push	qword [rsp+40]
c839ca			version368:
c839ca			version369:
c839ca ff742428			push	qword [rsp+40]
c839ce			version370:
c839ce 5b			pop	rbx
c839cf 58			pop	rax
c839d0 48c7c700000000		mov	rdi,dword 0
c839d7			apply-args-loop1:
c839d7 4883fbf6			cmp	rbx,byte -10
c839db 740c			je	short apply-args-end1
c839dd ff7307			push	qword [rbx+7]
c839e0 488b5b0f			mov	rbx,[rbx+15]
c839e4 48ffc7			inc	rdi
c839e7 ebee			jmp	short apply-args-loop1
c839e9			apply-args-end1:
c839e9 48c1e702			shl	rdi,2
c839ed 50			push	rax
c839ee			version371:
c839ee 48c7c0e098ec01		mov	rax,dword 32282848
c839f5 48d1e7			shl	rdi,1
c839f8 4889443c08		mov	[rsp+rdi+8],rax
c839fd 48d1ef			shr	rdi,1
c83a00			version372:
c83a00 488b0424			mov	rax,[rsp]
c83a04 488b4007			mov	rax,[rax+7]
c83a08 488b4008			mov	rax,[rax+8]
c83a0c ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #133
                         stack: (procedure unknown unknown retAddr)
                         env: ((n . #<identifier #134
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (m . #<identifier #135
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #133
      stack: (procedure unknown unknown retAddr)
      env: ((n . #<identifier #134
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (m . #<identifier #135
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
7f00d8				bits 64
7f00d8			stub_7f764c7f00d8_0:
7f00d8 e830ef48ff		call	do_callback_handler
7f00dd 019aec0100000000
(obj= #(#<procedure #136>))
------------------------------------------------------------------------
7f00c8				bits 64
7f00c8			stub_7f764c7f00c8_0:
7f00c8 e840ef48ff		call	do_callback_handler
7f00cd 519aec0100000000
(obj= #(#<procedure #137>))
------------------------------------------------------------------------
7f00b8				bits 64
7f00b8			stub_7f764c7f00b8_1:
7f00b8 fec1			inc	cl
7f00ba			stub_7f764c7f00b8_0:
7f00ba e84eef48ff		call	do_callback_handler
7f00bf a19aec0100000000
(obj= #(#<procedure #138>))
------------------------------------------------------------------------
c83a0e				bits 64
c83a0e 9090		fn_entry_3:
c83a10 4883ff08			cmp	rdi,byte 8
c83a14 0f85bec6b600		jne	stub_7f764c7f00d8_0
c83a1a			version373:
c83a1a 48c7c028000000		mov	rax,dword 40
c83a21 50			push	rax
c83a22			version374:
c83a22 6af6			push	qword byte -10
c83a24			version375:
c83a24			version376:
c83a24 ff742408			push	qword [rsp+8]
c83a28			version377:
c83a28 48c7c000000000		mov	rax,dword 0
c83a2f 50			push	rax
c83a30			version378:
c83a30			version379:
c83a30			version380:
c83a30 488b442408		mov	rax,[rsp+8]
c83a35 483b0424			cmp	rax,[rsp]
c83a39			label-jump1:
c83a39 0f8589c6b600		jne	stub_7f764c7f00c8_0
c83a3f			version381:
c83a3f 4883c410			add	rsp,byte 16
c83a43 6afa			push	qword byte -6
c83a45			version382:
c83a45 58			pop	rax
c83a46 4883f8fe			cmp	rax,byte -2
c83a4a			patchable_jump2:
c83a4a 0f846ac6b600		je	stub_7f764c7f00b8_0
c83a50 e963c6b600		jmp	stub_7f764c7f00b8_1
>>> patching generic slot of closure 7f74aa8c4ee9: now contains label fn_entry_3 (7f764bc83a10)
GEN VERSION >>> #<ctx #139
                      stack: (number number
                                     null
                                     number
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #140
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #141
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83a39 -> 7f764bc83a55
------------------------------------------------------------------------
c83a55				bits 64
c83a55 909090		version383:
c83a58 4883c410			add	rsp,byte 16
c83a5c 6afe			push	qword byte -2
c83a5e ebe5			jmp	short version382
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #142
                      stack: (null number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #143
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #141
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83a4a -> 7f764bc83a60
------------------------------------------------------------------------
7f00a8				bits 64
7f00a8			stub_7f764c7f00a8_0:
7f00a8 e860ef48ff		call	do_callback_handler
7f00ad d1b8ec0100000000
(obj= #(#<procedure #144>))
------------------------------------------------------------------------
7f0098				bits 64
7f0098			stub_7f764c7f0098_1:
7f0098 fec1			inc	cl
7f009a			stub_7f764c7f0098_0:
7f009a e86eef48ff		call	do_callback_handler
7f009f 21b9ec0100000000
(obj= #(#<procedure #145>))
------------------------------------------------------------------------
c83a60				bits 64
c83a60			version384:
c83a60 ff742408			push	qword [rsp+8]
c83a64			version385:
c83a64 48c7c004000000		mov	rax,dword 4
c83a6b 50			push	rax
c83a6c			version386:
c83a6c			version387:
c83a6c			version388:
c83a6c 58			pop	rax
c83a6d 48290424			sub	[rsp],rax
c83a71 0f8031d0b600		jo	stub_7f764c7f0aa8_0
c83a77			version389:
c83a77 6af6			push	qword byte -10
c83a79			version390:
c83a79 ff742410			push	qword [rsp+16]
c83a7d			version391:
c83a7d 498d4424e8		lea	rax,[r12-24]
c83a82 49bf0880aa4e767f
c83a8a 0000			mov	r15,140146102665224
c83a8c 493b4728			cmp	rax,[r15+40]
c83a90 7d38			jge	short alloc-ok119
c83a92 48c7c018000000		mov	rax,dword 24
c83a99 57			push	rdi
c83a9a 56			push	rsi
c83a9b 52			push	rdx
c83a9c 51			push	rcx
c83a9d 4150			push	r8
c83a9f 4151			push	r9
c83aa1 4152			push	r10
c83aa3 4153			push	r11
c83aa5 50			push	rax
c83aa6 4889e7			mov	rdi,rsp
c83aa9 4883e4f0			and	rsp,byte -16
c83aad 4883ec08			sub	rsp,byte 8
c83ab1 57			push	rdi
c83ab2 e819266d01		call	gc
c83ab7 5c			pop	rsp
c83ab8 4989c4			mov	r12,rax
c83abb 58			pop	rax
c83abc 415b			pop	r11
c83abe 415a			pop	r10
c83ac0 4159			pop	r9
c83ac2 4158			pop	r8
c83ac4 59			pop	rcx
c83ac5 5a			pop	rdx
c83ac6 5e			pop	rsi
c83ac7 5f			pop	rdi
c83ac8 eb04			jmp	short alloc-end119
c83aca			alloc-ok119:
c83aca 4983ec18			sub	r12,byte 24
c83ace			alloc-end119:
c83ace 48c7c00e030000		mov	rax,dword 782
c83ad5 49890424			mov	[r12],rax
c83ad9 5b			pop	rbx
c83ada 58			pop	rax
c83adb 4989442408		mov	[r12+8],rax
c83ae0 49895c2410		mov	[r12+16],rbx
c83ae5 4c89e0			mov	rax,r12
c83ae8 4883c001			add	rax,byte 1
c83aec 50			push	rax
c83aed			version392:
c83aed 488b442408		mov	rax,[rsp+8]
c83af2 4889442418		mov	[rsp+24],rax
c83af7 488b0424			mov	rax,[rsp]
c83afb 4889442410		mov	[rsp+16],rax
c83b00 4883c410			add	rsp,byte 16
c83b04			version393:
c83b04 ff742408			push	qword [rsp+8]
c83b08			version394:
c83b08 48c7c000000000		mov	rax,dword 0
c83b0f 50			push	rax
c83b10			version395:
c83b10			version396:
c83b10			version397:
c83b10 488b442408		mov	rax,[rsp+8]
c83b15 483b0424			cmp	rax,[rsp]
c83b19			label-jump2:
c83b19 0f8589c5b600		jne	stub_7f764c7f00a8_0
c83b1f			version398:
c83b1f 4883c410			add	rsp,byte 16
c83b23 6afa			push	qword byte -6
c83b25			version399:
c83b25 58			pop	rax
c83b26 4883f8fe			cmp	rax,byte -2
c83b2a			patchable_jump3:
c83b2a 0f846ac5b600		je	stub_7f764c7f0098_0
c83b30 e963c5b600		jmp	stub_7f764c7f0098_1
GEN VERSION >>> #<ctx #146
                      stack: (number number
                                     pair
                                     number
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #147
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83b19 -> 7f764bc83b35
------------------------------------------------------------------------
c83b35				bits 64
c83b35 909090		version400:
c83b38 4883c410			add	rsp,byte 16
c83b3c 6afe			push	qword byte -2
c83b3e ebe5			jmp	short version399
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #149
                      stack: (pair number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #150
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83b2a -> 7f764bc83b40
------------------------------------------------------------------------
c83b40				bits 64
c83b40			version401:
c83b40 ff742408			push	qword [rsp+8]
c83b44			version402:
c83b44 48c7c004000000		mov	rax,dword 4
c83b4b 50			push	rax
c83b4c			version403:
c83b4c			version404:
c83b4c			version405:
c83b4c 58			pop	rax
c83b4d 48290424			sub	[rsp],rax
c83b51 0f8051cfb600		jo	stub_7f764c7f0aa8_0
c83b57			version406:
c83b57 6af6			push	qword byte -10
c83b59			version407:
c83b59 ff742410			push	qword [rsp+16]
c83b5d			version408:
c83b5d 498d4424e8		lea	rax,[r12-24]
c83b62 49bf0880aa4e767f
c83b6a 0000			mov	r15,140146102665224
c83b6c 493b4728			cmp	rax,[r15+40]
c83b70 7d38			jge	short alloc-ok120
c83b72 48c7c018000000		mov	rax,dword 24
c83b79 57			push	rdi
c83b7a 56			push	rsi
c83b7b 52			push	rdx
c83b7c 51			push	rcx
c83b7d 4150			push	r8
c83b7f 4151			push	r9
c83b81 4152			push	r10
c83b83 4153			push	r11
c83b85 50			push	rax
c83b86 4889e7			mov	rdi,rsp
c83b89 4883e4f0			and	rsp,byte -16
c83b8d 4883ec08			sub	rsp,byte 8
c83b91 57			push	rdi
c83b92 e839256d01		call	gc
c83b97 5c			pop	rsp
c83b98 4989c4			mov	r12,rax
c83b9b 58			pop	rax
c83b9c 415b			pop	r11
c83b9e 415a			pop	r10
c83ba0 4159			pop	r9
c83ba2 4158			pop	r8
c83ba4 59			pop	rcx
c83ba5 5a			pop	rdx
c83ba6 5e			pop	rsi
c83ba7 5f			pop	rdi
c83ba8 eb04			jmp	short alloc-end120
c83baa			alloc-ok120:
c83baa 4983ec18			sub	r12,byte 24
c83bae			alloc-end120:
c83bae 48c7c00e030000		mov	rax,dword 782
c83bb5 49890424			mov	[r12],rax
c83bb9 5b			pop	rbx
c83bba 58			pop	rax
c83bbb 4989442408		mov	[r12+8],rax
c83bc0 49895c2410		mov	[r12+16],rbx
c83bc5 4c89e0			mov	rax,r12
c83bc8 4883c001			add	rax,byte 1
c83bcc 50			push	rax
c83bcd			version409:
c83bcd 488b442408		mov	rax,[rsp+8]
c83bd2 4889442418		mov	[rsp+24],rax
c83bd7 488b0424			mov	rax,[rsp]
c83bdb 4889442410		mov	[rsp+16],rax
c83be0 4883c410			add	rsp,byte 16
c83be4 e91bffffff		jmp	version393
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #149
                      stack: (pair number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #150
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83b30 -> 7f764bc83be9
------------------------------------------------------------------------
7f0098				bits 64
7f0098			stub_7f764c7f0098_1:
7f0098 fec1			inc	cl
7f009a			stub_7f764c7f0098_0:
7f009a e86eef48ff		call	do_callback_handler
7f009f 61baec0100000000
(obj= #(#<procedure #151>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c83be9				bits 64
c83be9 909090		version410:
c83bec ff3424			push	qword [rsp]
c83bef			version411:
c83bef 58			pop	rax
c83bf0 4883c410			add	rsp,byte 16
c83bf4 50			push	rax
c83bf5			version412:
c83bf5			version413:
c83bf5 ff742418			push	qword [rsp+24]
c83bf9			version414:
c83bf9			version415:
c83bf9 ff3424			push	qword [rsp]
c83bfc			version416:
c83bfc 48c7c000000000		mov	rax,dword 0
c83c03 50			push	rax
c83c04			version417:
c83c04 50			push	rax
c83c05 53			push	rbx
c83c06 48b84080aa4e767f
c83c0e 0000			mov	rax,140146102665280
c83c10 488b18			mov	rbx,[rax]
c83c13 48ffc3			inc	rbx
c83c16 488918			mov	[rax],rbx
c83c19 5b			pop	rbx
c83c1a 58			pop	rax
c83c1b 48c7c003000000		mov	rax,dword 3
c83c22 4823442408		and	rax,[rsp+8]
c83c27			patchable_jump4:
c83c27 0f846dc4b600		je	stub_7f764c7f0098_0
c83c2d e966c4b600		jmp	stub_7f764c7f0098_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc83c27 -> 7f764c7f0098
GEN VERSION >>> #<ctx #152
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #153
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7f0088				bits 64
7f0088			stub_7f764c7f0088_0:
7f0088 e880ef48ff		call	do_callback_handler
7f008d 01bbec0100000000
(obj= #(#<procedure #156>))
------------------------------------------------------------------------
7f0078				bits 64
7f0078			stub_7f764c7f0078_1:
7f0078 fec1			inc	cl
7f007a			stub_7f764c7f0078_0:
7f007a e88eef48ff		call	do_callback_handler
7f007f 51bbec0100000000
(obj= #(#<procedure #157>))
------------------------------------------------------------------------
c83c2d				bits 64
c83c2d 909090		version418:
c83c30			version419:
c83c30 488b442408		mov	rax,[rsp+8]
c83c35 483b0424			cmp	rax,[rsp]
c83c39			label-jump3:
c83c39 0f8549c4b600		jne	stub_7f764c7f0088_0
c83c3f			version420:
c83c3f 4883c410			add	rsp,byte 16
c83c43 6afa			push	qword byte -6
c83c45			version421:
c83c45 58			pop	rax
c83c46 4883f8fe			cmp	rax,byte -2
c83c4a			patchable_jump5:
c83c4a 0f842ac4b600		je	stub_7f764c7f0078_0
c83c50 e923c4b600		jmp	stub_7f764c7f0078_1
GEN VERSION >>> #<ctx #152
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #153
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83c39 -> 7f764bc83c55
------------------------------------------------------------------------
c83c55				bits 64
c83c55 909090		version422:
c83c58 4883c410			add	rsp,byte 16
c83c5c 6afe			push	qword byte -2
c83c5e ebe5			jmp	short version421
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #158
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83c4a -> 7f764bc83c60
------------------------------------------------------------------------
7f0068				bits 64
7f0068			stub_7f764c7f0068_1:
7f0068 fec1			inc	cl
7f006a			stub_7f764c7f0068_0:
7f006a e89eef48ff		call	do_callback_handler
7f006f 41bcec0100000000
(obj= #(#<procedure #160>))
------------------------------------------------------------------------
c83c60				bits 64
c83c60			version423:
c83c60 ff742408			push	qword [rsp+8]
c83c64			version424:
c83c64			version425:
c83c64 58			pop	rax
c83c65 488b4007			mov	rax,[rax+7]
c83c69 50			push	rax
c83c6a			version426:
c83c6a			version427:
c83c6a 50			push	rax
c83c6b 53			push	rbx
c83c6c 48b84080aa4e767f
c83c74 0000			mov	rax,140146102665280
c83c76 488b18			mov	rbx,[rax]
c83c79 48ffc3			inc	rbx
c83c7c 488918			mov	[rax],rbx
c83c7f 5b			pop	rbx
c83c80 58			pop	rax
c83c81 48c7c0f6ffffff		mov	rax,dword -10
c83c88 48390424			cmp	[rsp],rax
c83c8c 48c7c0faffffff		mov	rax,dword -6
c83c93 7407			je	short done1
c83c95 48c7c0feffffff		mov	rax,dword -2
c83c9c			done1:
c83c9c 48890424			mov	[rsp],rax
c83ca0			version428:
c83ca0 58			pop	rax
c83ca1 4883f8fe			cmp	rax,byte -2
c83ca5			patchable_jump6:
c83ca5 0f84bfc3b600		je	stub_7f764c7f0068_0
c83cab e9b8c3b600		jmp	stub_7f764c7f0068_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #161
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #162
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7f0058				bits 64
7f0058			stub_7f764c7f0058_1:
7f0058 fec1			inc	cl
7f005a			stub_7f764c7f0058_0:
7f005a e8aeef48ff		call	do_callback_handler
7f005f e1bcec0100000000
(obj= #(#<procedure #163>))
------------------------------------------------------------------------
c83cab				bits 64
c83cab 90		version429:
c83cac ff742408			push	qword [rsp+8]
c83cb0			version430:
c83cb0			version431:
c83cb0 ff3424			push	qword [rsp]
c83cb3			version432:
c83cb3 48c7c0feffffff		mov	rax,dword -2
c83cba 48890424			mov	[rsp],rax
c83cbe			version433:
c83cbe 58			pop	rax
c83cbf 4883f8fe			cmp	rax,byte -2
c83cc3			patchable_jump7:
c83cc3 0f8491c3b600		je	stub_7f764c7f0058_0
c83cc9 e98ac3b600		jmp	stub_7f764c7f0058_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc83cc3 -> 7f764c7f0058
GEN VERSION >>> #<ctx #164
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #165
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #166
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7f0048				bits 64
7f0048			stub_7f764c7f0048_1:
7f0048 fec1			inc	cl
7f004a			stub_7f764c7f0048_0:
7f004a e8beef48ff		call	do_callback_handler
7f004f 81bdec0100000000
(obj= #(#<procedure #167>))
------------------------------------------------------------------------
c83cc9				bits 64
c83cc9 909090		version434:
c83ccc ff3424			push	qword [rsp]
c83ccf			version435:
c83ccf			version436:
c83ccf 58			pop	rax
c83cd0 488b4007			mov	rax,[rax+7]
c83cd4 50			push	rax
c83cd5			version437:
c83cd5			version438:
c83cd5 50			push	rax
c83cd6 53			push	rbx
c83cd7 48b84080aa4e767f
c83cdf 0000			mov	rax,140146102665280
c83ce1 488b18			mov	rbx,[rax]
c83ce4 48ffc3			inc	rbx
c83ce7 488918			mov	[rax],rbx
c83cea 5b			pop	rbx
c83ceb 58			pop	rax
c83cec 48c7c0f6ffffff		mov	rax,dword -10
c83cf3 48390424			cmp	[rsp],rax
c83cf7 48c7c0faffffff		mov	rax,dword -6
c83cfe 7407			je	short done2
c83d00 48c7c0feffffff		mov	rax,dword -2
c83d07			done2:
c83d07 48890424			mov	[rsp],rax
c83d0b			version439:
c83d0b 58			pop	rax
c83d0c 4883f8fe			cmp	rax,byte -2
c83d10			patchable_jump8:
c83d10 0f8434c3b600		je	stub_7f764c7f0048_0
c83d16 e92dc3b600		jmp	stub_7f764c7f0048_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #168
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #169
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #170
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7f0038				bits 64
7f0038			stub_7f764c7f0038_0:
7f0038 e8d0ef48ff		call	do_callback_handler
7f003d 21beec0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7f0028				bits 64
7f0028			stub_7f764c7f0028_1:
7f0028 fec1			inc	cl
7f002a			stub_7f764c7f0028_0:
7f002a e8deef48ff		call	do_callback_handler
7f002f 71beec0100000000
(obj= #(#<procedure #171>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c83d16				bits 64
c83d16 9090		version440:
c83d18 ff3424			push	qword [rsp]
c83d1b			version441:
c83d1b			version442:
c83d1b 6af6			push	qword byte -10
c83d1d			version443:
c83d1d 6af6			push	qword byte -10
c83d1f			version444:
c83d1f 498d4424e8		lea	rax,[r12-24]
c83d24 49bf0880aa4e767f
c83d2c 0000			mov	r15,140146102665224
c83d2e 493b4728			cmp	rax,[r15+40]
c83d32 7d38			jge	short alloc-ok121
c83d34 48c7c018000000		mov	rax,dword 24
c83d3b 57			push	rdi
c83d3c 56			push	rsi
c83d3d 52			push	rdx
c83d3e 51			push	rcx
c83d3f 4150			push	r8
c83d41 4151			push	r9
c83d43 4152			push	r10
c83d45 4153			push	r11
c83d47 50			push	rax
c83d48 4889e7			mov	rdi,rsp
c83d4b 4883e4f0			and	rsp,byte -16
c83d4f 4883ec08			sub	rsp,byte 8
c83d53 57			push	rdi
c83d54 e877236d01		call	gc
c83d59 5c			pop	rsp
c83d5a 4989c4			mov	r12,rax
c83d5d 58			pop	rax
c83d5e 415b			pop	r11
c83d60 415a			pop	r10
c83d62 4159			pop	r9
c83d64 4158			pop	r8
c83d66 59			pop	rcx
c83d67 5a			pop	rdx
c83d68 5e			pop	rsi
c83d69 5f			pop	rdi
c83d6a eb04			jmp	short alloc-end121
c83d6c			alloc-ok121:
c83d6c 4983ec18			sub	r12,byte 24
c83d70			alloc-end121:
c83d70 48c7c00e030000		mov	rax,dword 782
c83d77 49890424			mov	[r12],rax
c83d7b 5b			pop	rbx
c83d7c 58			pop	rax
c83d7d 4989442408		mov	[r12+8],rax
c83d82 49895c2410		mov	[r12+16],rbx
c83d87 4c89e0			mov	rax,r12
c83d8a 4883c001			add	rax,byte 1
c83d8e 50			push	rax
c83d8f			version445:
c83d8f 58			pop	rax
c83d90 5b			pop	rbx
c83d91 48894307			mov	[rbx+7],rax
c83d95 6aee			push	qword byte -18
c83d97			version446:
c83d97 6afe			push	qword byte -2
c83d99			version447:
c83d99 ff742410			push	qword [rsp+16]
c83d9d			version448:
c83d9d			version449:
c83d9d 58			pop	rax
c83d9e 488b4007			mov	rax,[rax+7]
c83da2 50			push	rax
c83da3			version450:
c83da3 ff742438			push	qword [rsp+56]
c83da7			version451:
c83da7 6af6			push	qword byte -10
c83da9			version452:
c83da9			version453:
c83da9 ff742408			push	qword [rsp+8]
c83dad			version454:
c83dad 48c7c000000000		mov	rax,dword 0
c83db4 50			push	rax
c83db5			version455:
c83db5 50			push	rax
c83db6 53			push	rbx
c83db7 48b84080aa4e767f
c83dbf 0000			mov	rax,140146102665280
c83dc1 488b18			mov	rbx,[rax]
c83dc4 48ffc3			inc	rbx
c83dc7 488918			mov	[rax],rbx
c83dca 5b			pop	rbx
c83dcb 58			pop	rax
c83dcc 48c7c003000000		mov	rax,dword 3
c83dd3 4823442408		and	rax,[rsp+8]
c83dd8			patchable_jump9:
c83dd8 0f844cc2b600		je	stub_7f764c7f0028_0
c83dde e945c2b600		jmp	stub_7f764c7f0028_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc83dd8 -> 7f764c7f0028
GEN VERSION >>> #<ctx #172
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #173
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7f0018				bits 64
7f0018			stub_7f764c7f0018_0:
7f0018 e8f0ef48ff		call	do_callback_handler
7f001d a185ec0100000000
(obj= #(#<procedure #178>))
------------------------------------------------------------------------
7f0008				bits 64
7f0008			stub_7f764c7f0008_1:
7f0008 fec1			inc	cl
7f000a			stub_7f764c7f0008_0:
7f000a e8feef48ff		call	do_callback_handler
7f000f 6187ec0100000000
(obj= #(#<procedure #179>))
------------------------------------------------------------------------
c83dde				bits 64
c83dde 9090		version456:
c83de0			version457:
c83de0 488b442408		mov	rax,[rsp+8]
c83de5 483b0424			cmp	rax,[rsp]
c83de9			label-jump4:
c83de9 0f8529c2b600		jne	stub_7f764c7f0018_0
c83def			version458:
c83def 4883c410			add	rsp,byte 16
c83df3 6afa			push	qword byte -6
c83df5			version459:
c83df5 58			pop	rax
c83df6 4883f8fe			cmp	rax,byte -2
c83dfa			patchable_jump10:
c83dfa 0f840ac2b600		je	stub_7f764c7f0008_0
c83e00 e903c2b600		jmp	stub_7f764c7f0008_1
GEN VERSION >>> #<ctx #172
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #173
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83de9 -> 7f764bc83e05
------------------------------------------------------------------------
c83e05				bits 64
c83e05 909090		version460:
c83e08 4883c410			add	rsp,byte 16
c83e0c 6afe			push	qword byte -2
c83e0e ebe5			jmp	short version459
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #180
                      stack: (null number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #181
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83dfa -> 7f764bc83e10
------------------------------------------------------------------------
7efff8				bits 64
7efff8			stub_7f764c7efff8_0:
7efff8 e810f048ff		call	do_callback_handler
7efffd f19aec0100000000
(obj= #(#<procedure #182>))
------------------------------------------------------------------------
7effe8				bits 64
7effe8			stub_7f764c7effe8_1:
7effe8 fec1			inc	cl
7effea			stub_7f764c7effe8_0:
7effea e81ef048ff		call	do_callback_handler
7effef 419bec0100000000
(obj= #(#<procedure #183>))
------------------------------------------------------------------------
c83e10				bits 64
c83e10			version461:
c83e10 ff742408			push	qword [rsp+8]
c83e14			version462:
c83e14 48c7c004000000		mov	rax,dword 4
c83e1b 50			push	rax
c83e1c			version463:
c83e1c			version464:
c83e1c			version465:
c83e1c 58			pop	rax
c83e1d 48290424			sub	[rsp],rax
c83e21 0f8011c2b600		jo	stub_7f764c7f0038_0
c83e27			version466:
c83e27 6af6			push	qword byte -10
c83e29			version467:
c83e29 ff742410			push	qword [rsp+16]
c83e2d			version468:
c83e2d 498d4424e8		lea	rax,[r12-24]
c83e32 49bf0880aa4e767f
c83e3a 0000			mov	r15,140146102665224
c83e3c 493b4728			cmp	rax,[r15+40]
c83e40 7d38			jge	short alloc-ok122
c83e42 48c7c018000000		mov	rax,dword 24
c83e49 57			push	rdi
c83e4a 56			push	rsi
c83e4b 52			push	rdx
c83e4c 51			push	rcx
c83e4d 4150			push	r8
c83e4f 4151			push	r9
c83e51 4152			push	r10
c83e53 4153			push	r11
c83e55 50			push	rax
c83e56 4889e7			mov	rdi,rsp
c83e59 4883e4f0			and	rsp,byte -16
c83e5d 4883ec08			sub	rsp,byte 8
c83e61 57			push	rdi
c83e62 e869226d01		call	gc
c83e67 5c			pop	rsp
c83e68 4989c4			mov	r12,rax
c83e6b 58			pop	rax
c83e6c 415b			pop	r11
c83e6e 415a			pop	r10
c83e70 4159			pop	r9
c83e72 4158			pop	r8
c83e74 59			pop	rcx
c83e75 5a			pop	rdx
c83e76 5e			pop	rsi
c83e77 5f			pop	rdi
c83e78 eb04			jmp	short alloc-end122
c83e7a			alloc-ok122:
c83e7a 4983ec18			sub	r12,byte 24
c83e7e			alloc-end122:
c83e7e 48c7c00e030000		mov	rax,dword 782
c83e85 49890424			mov	[r12],rax
c83e89 5b			pop	rbx
c83e8a 58			pop	rax
c83e8b 4989442408		mov	[r12+8],rax
c83e90 49895c2410		mov	[r12+16],rbx
c83e95 4c89e0			mov	rax,r12
c83e98 4883c001			add	rax,byte 1
c83e9c 50			push	rax
c83e9d			version469:
c83e9d 488b442408		mov	rax,[rsp+8]
c83ea2 4889442418		mov	[rsp+24],rax
c83ea7 488b0424			mov	rax,[rsp]
c83eab 4889442410		mov	[rsp+16],rax
c83eb0 4883c410			add	rsp,byte 16
c83eb4			version470:
c83eb4 ff742408			push	qword [rsp+8]
c83eb8			version471:
c83eb8 48c7c000000000		mov	rax,dword 0
c83ebf 50			push	rax
c83ec0			version472:
c83ec0			version473:
c83ec0			version474:
c83ec0 488b442408		mov	rax,[rsp+8]
c83ec5 483b0424			cmp	rax,[rsp]
c83ec9			label-jump5:
c83ec9 0f8529c1b600		jne	stub_7f764c7efff8_0
c83ecf			version475:
c83ecf 4883c410			add	rsp,byte 16
c83ed3 6afa			push	qword byte -6
c83ed5			version476:
c83ed5 58			pop	rax
c83ed6 4883f8fe			cmp	rax,byte -2
c83eda			patchable_jump11:
c83eda 0f840ac1b600		je	stub_7f764c7effe8_0
c83ee0 e903c1b600		jmp	stub_7f764c7effe8_1
GEN VERSION >>> #<ctx #184
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #185
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83ec9 -> 7f764bc83ee5
------------------------------------------------------------------------
c83ee5				bits 64
c83ee5 909090		version477:
c83ee8 4883c410			add	rsp,byte 16
c83eec 6afe			push	qword byte -2
c83eee ebe5			jmp	short version476
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #187
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #188
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83eda -> 7f764bc83ef0
------------------------------------------------------------------------
c83ef0				bits 64
c83ef0			version478:
c83ef0 ff742408			push	qword [rsp+8]
c83ef4			version479:
c83ef4 48c7c004000000		mov	rax,dword 4
c83efb 50			push	rax
c83efc			version480:
c83efc			version481:
c83efc			version482:
c83efc 58			pop	rax
c83efd 48290424			sub	[rsp],rax
c83f01 0f8031c1b600		jo	stub_7f764c7f0038_0
c83f07			version483:
c83f07 6af6			push	qword byte -10
c83f09			version484:
c83f09 ff742410			push	qword [rsp+16]
c83f0d			version485:
c83f0d 498d4424e8		lea	rax,[r12-24]
c83f12 49bf0880aa4e767f
c83f1a 0000			mov	r15,140146102665224
c83f1c 493b4728			cmp	rax,[r15+40]
c83f20 7d38			jge	short alloc-ok123
c83f22 48c7c018000000		mov	rax,dword 24
c83f29 57			push	rdi
c83f2a 56			push	rsi
c83f2b 52			push	rdx
c83f2c 51			push	rcx
c83f2d 4150			push	r8
c83f2f 4151			push	r9
c83f31 4152			push	r10
c83f33 4153			push	r11
c83f35 50			push	rax
c83f36 4889e7			mov	rdi,rsp
c83f39 4883e4f0			and	rsp,byte -16
c83f3d 4883ec08			sub	rsp,byte 8
c83f41 57			push	rdi
c83f42 e889216d01		call	gc
c83f47 5c			pop	rsp
c83f48 4989c4			mov	r12,rax
c83f4b 58			pop	rax
c83f4c 415b			pop	r11
c83f4e 415a			pop	r10
c83f50 4159			pop	r9
c83f52 4158			pop	r8
c83f54 59			pop	rcx
c83f55 5a			pop	rdx
c83f56 5e			pop	rsi
c83f57 5f			pop	rdi
c83f58 eb04			jmp	short alloc-end123
c83f5a			alloc-ok123:
c83f5a 4983ec18			sub	r12,byte 24
c83f5e			alloc-end123:
c83f5e 48c7c00e030000		mov	rax,dword 782
c83f65 49890424			mov	[r12],rax
c83f69 5b			pop	rbx
c83f6a 58			pop	rax
c83f6b 4989442408		mov	[r12+8],rax
c83f70 49895c2410		mov	[r12+16],rbx
c83f75 4c89e0			mov	rax,r12
c83f78 4883c001			add	rax,byte 1
c83f7c 50			push	rax
c83f7d			version486:
c83f7d 488b442408		mov	rax,[rsp+8]
c83f82 4889442418		mov	[rsp+24],rax
c83f87 488b0424			mov	rax,[rsp]
c83f8b 4889442410		mov	[rsp+16],rax
c83f90 4883c410			add	rsp,byte 16
c83f94 e91bffffff		jmp	version470
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #187
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #188
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83ee0 -> 7f764bc83f99
------------------------------------------------------------------------
7effe8				bits 64
7effe8			stub_7f764c7effe8_0:
7effe8 e87af048ff		call	do_callback_cont_handler
7effed 11baec0100000000
(obj= #(#<procedure #189>))
------------------------------------------------------------------------
c83f99				bits 64
c83f99 909090		version487:
c83f9c ff3424			push	qword [rsp]
c83f9f			version488:
c83f9f 58			pop	rax
c83fa0 4883c410			add	rsp,byte 16
c83fa4 50			push	rax
c83fa5			version489:
c83fa5 41ffb280030000		push	qword [r10+896]
c83fac			version490:
c83fac			version491:
c83fac 48c7c0e0c11f02		mov	rax,dword 35635680
c83fb3 4889442418		mov	[rsp+24],rax
c83fb8			version492:
c83fb8 488b0424			mov	rax,[rsp]
c83fbc 49c7c3b1baec01		mov	r11,dword 32291505
c83fc3 488b4007			mov	rax,[rax+7]
c83fc7 48c7c708000000		mov	rdi,dword 8
c83fce 488b4020			mov	rax,[rax+32]
c83fd2 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #190
                         stack: (procedure pair unknown retAddr)
                         env: ((x . #<identifier #191
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (y . #<identifier #192
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #190
      stack: (procedure pair unknown retAddr)
      env: ((x . #<identifier #191
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (y . #<identifier #192
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
7effd8				bits 64
7effd8			stub_7f764c7effd8_1:
7effd8 fec1			inc	cl
7effda			stub_7f764c7effd8_0:
7effda e82ef048ff		call	do_callback_handler
7effdf f1bbec0100000000
(obj= #(#<procedure #193>))
------------------------------------------------------------------------
c83fd4				bits 64
c83fd4			fn_entry_4:
c83fd4			version493:
c83fd4 ff742410			push	qword [rsp+16]
c83fd8			version494:
c83fd8			version495:
c83fd8 50			push	rax
c83fd9 53			push	rbx
c83fda 48b84080aa4e767f
c83fe2 0000			mov	rax,140146102665280
c83fe4 488b18			mov	rbx,[rax]
c83fe7 48ffc3			inc	rbx
c83fea 488918			mov	[rax],rbx
c83fed 5b			pop	rbx
c83fee 58			pop	rax
c83fef 48c7c0f6ffffff		mov	rax,dword -10
c83ff6 48390424			cmp	[rsp],rax
c83ffa 48c7c0faffffff		mov	rax,dword -6
c84001 7407			je	short done3
c84003 48c7c0feffffff		mov	rax,dword -2
c8400a			done3:
c8400a 48890424			mov	[rsp],rax
c8400e			version496:
c8400e 58			pop	rax
c8400f 4883f8fe			cmp	rax,byte -2
c84013			patchable_jump12:
c84013 0f84c1bfb600		je	stub_7f764c7effd8_0
c84019 e9babfb600		jmp	stub_7f764c7effd8_1
>>> patching closure 7f74aa8c4ef9 at 7f74aa8c4f19 : slot contains now label fn_entry_4 (7f764bc83fd4)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84013 -> 7f764c7effd8
GEN VERSION >>> #<ctx #194
                      stack: (procedure pair unknown retAddr)
                      env: ((x . #<identifier #195
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #192
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7effc8				bits 64
7effc8			stub_7f764c7effc8_1:
7effc8 fec1			inc	cl
7effca			stub_7f764c7effc8_0:
7effca e83ef048ff		call	do_callback_handler
7effcf 31bdec0100000000
(obj= #(#<procedure #196>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84019				bits 64
c84019 909090		version497:
c8401c ff742410			push	qword [rsp+16]
c84020			version498:
c84020 ff742418			push	qword [rsp+24]
c84024			version499:
c84024 50			push	rax
c84025 53			push	rbx
c84026 48b84080aa4e767f
c8402e 0000			mov	rax,140146102665280
c84030 488b18			mov	rbx,[rax]
c84033 48ffc3			inc	rbx
c84036 488918			mov	[rax],rbx
c84039 5b			pop	rbx
c8403a 58			pop	rax
c8403b 488b0424			mov	rax,[rsp]
c8403f 4889c3			mov	rbx,rax
c84042 4883e003			and	rax,byte 3
c84046 4883f801			cmp	rax,byte 1
c8404a 750e			jne	short patchable_jump13
c8404c 488b43ff			mov	rax,[rbx-1]
c84050 4825f8000000		and	rax,248
c84056 4883f808			cmp	rax,byte 8
c8405a			patchable_jump13:
c8405a 0f846abfb600		je	stub_7f764c7effc8_0
c84060 e963bfb600		jmp	stub_7f764c7effc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8405a -> 7f764c7effc8
GEN VERSION >>> #<ctx #197
                      stack: (pair pair procedure pair pair retAddr)
                      env: ((x . #<identifier #198
                                    type: local
                                    offset: 0
                                    pos: (4 3 0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #192
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7effb8				bits 64
7effb8			stub_7f764c7effb8_1:
7effb8 fec1			inc	cl
7effba			stub_7f764c7effb8_0:
7effba e87bf048ff		call	do_callback_fn_handler
7effbf 01c31f0200000000
(obj= #(#<procedure #199>))
------------------------------------------------------------------------
c84060				bits 64
c84060			version500:
c84060 58			pop	rax
c84061 488b400f			mov	rax,[rax+15]
c84065 50			push	rax
c84066			version501:
c84066 6afe			push	qword byte -2
c84068 498d4424f0		lea	rax,[r12-16]
c8406d 49bf0880aa4e767f
c84075 0000			mov	r15,140146102665224
c84077 493b4728			cmp	rax,[r15+40]
c8407b 7d38			jge	short alloc-ok124
c8407d 48c7c010000000		mov	rax,dword 16
c84084 57			push	rdi
c84085 56			push	rsi
c84086 52			push	rdx
c84087 51			push	rcx
c84088 4150			push	r8
c8408a 4151			push	r9
c8408c 4152			push	r10
c8408e 4153			push	r11
c84090 50			push	rax
c84091 4889e7			mov	rdi,rsp
c84094 4883e4f0			and	rsp,byte -16
c84098 4883ec08			sub	rsp,byte 8
c8409c 57			push	rdi
c8409d e82e206d01		call	gc
c840a2 5c			pop	rsp
c840a3 4989c4			mov	r12,rax
c840a6 58			pop	rax
c840a7 415b			pop	r11
c840a9 415a			pop	r10
c840ab 4159			pop	r9
c840ad 4158			pop	r8
c840af 59			pop	rcx
c840b0 5a			pop	rdx
c840b1 5e			pop	rsi
c840b2 5f			pop	rdi
c840b3 eb04			jmp	short alloc-end124
c840b5			alloc-ok124:
c840b5 4983ec10			sub	r12,byte 16
c840b9			alloc-end124:
c840b9 488b0424			mov	rax,[rsp]
c840bd 4989442408		mov	[r12+8],rax
c840c2 48c7c016020000		mov	rax,dword 534
c840c9 49890424			mov	[r12],rax
c840cd 498d442401		lea	rax,[r12+1]
c840d2 48890424			mov	[rsp],rax
c840d6			version502:
c840d6 50			push	rax
c840d7 53			push	rbx
c840d8 48b85080aa4e767f
c840e0 0000			mov	rax,140146102665296
c840e2 488b18			mov	rbx,[rax]
c840e5 48ffc3			inc	rbx
c840e8 488918			mov	[rax],rbx
c840eb 5b			pop	rbx
c840ec 58			pop	rax
c840ed 498d4424d8		lea	rax,[r12-40]
c840f2 49bf0880aa4e767f
c840fa 0000			mov	r15,140146102665224
c840fc 493b4728			cmp	rax,[r15+40]
c84100 7d38			jge	short alloc-ok125
c84102 48c7c028000000		mov	rax,dword 40
c84109 57			push	rdi
c8410a 56			push	rsi
c8410b 52			push	rdx
c8410c 51			push	rcx
c8410d 4150			push	r8
c8410f 4151			push	r9
c84111 4152			push	r10
c84113 4153			push	r11
c84115 50			push	rax
c84116 4889e7			mov	rdi,rsp
c84119 4883e4f0			and	rsp,byte -16
c8411d 4883ec08			sub	rsp,byte 8
c84121 57			push	rdi
c84122 e8a91f6d01		call	gc
c84127 5c			pop	rsp
c84128 4989c4			mov	r12,rax
c8412b 58			pop	rax
c8412c 415b			pop	r11
c8412e 415a			pop	r10
c84130 4159			pop	r9
c84132 4158			pop	r8
c84134 59			pop	rcx
c84135 5a			pop	rdx
c84136 5e			pop	rsi
c84137 5f			pop	rdi
c84138 eb04			jmp	short alloc-end125
c8413a			alloc-ok125:
c8413a 4983ec28			sub	r12,byte 40
c8413e			alloc-end125:
c8413e 48c7c076050000		mov	rax,dword 1398
c84145 49890424			mov	[r12],rax
c84149 48c7c050c31f02		mov	rax,dword 35636048
c84150 4989442408		mov	[r12+8],rax
c84155 488b442428		mov	rax,[rsp+40]
c8415a 4989442410		mov	[r12+16],rax
c8415f 488b442420		mov	rax,[rsp+32]
c84164 4989442418		mov	[r12+24],rax
c84169 488b0424			mov	rax,[rsp]
c8416d 4989442420		mov	[r12+32],rax
c84172 498d442401		lea	rax,[r12+1]
c84177 50			push	rax
c84178			version503:
c84178 488b0424			mov	rax,[rsp]
c8417c 488b5c2408		mov	rbx,[rsp+8]
c84181 48894307			mov	[rbx+7],rax
c84185 4883c408			add	rsp,byte 8
c84189			version504:
c84189 488b0424			mov	rax,[rsp]
c8418d ff7007			push	qword [rax+7]
c84190			version505:
c84190 58			pop	rax
c84191 4883c408			add	rsp,byte 8
c84195 50			push	rax
c84196			version506:
c84196			version507:
c84196 488b442410		mov	rax,[rsp+16]
c8419b 4889442428		mov	[rsp+40],rax
c841a0 488b442408		mov	rax,[rsp+8]
c841a5 4889442420		mov	[rsp+32],rax
c841aa 488b0424			mov	rax,[rsp]
c841ae 4889442418		mov	[rsp+24],rax
c841b3 4883c418			add	rsp,byte 24
c841b7 488b0424			mov	rax,[rsp]
c841bb 49c7c341d31f02		mov	r11,dword 35640129
c841c2 488b4007			mov	rax,[rax+7]
c841c6 48c7c708000000		mov	rdi,dword 8
c841cd 488b4028			mov	rax,[rax+40]
c841d1 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #200
                         stack: (procedure unknown pair retAddr)
                         env: ((a . #<identifier #201
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (b . #<identifier #202
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>)
                               (x . #<identifier #203
                                       type: free
                                       offset: 0
                                       pos: ()
                                       flags: ()
                                       stype: pair>)
                               (y . #<identifier #204
                                       type: free
                                       offset: 1
                                       pos: ()
                                       flags: ()
                                       stype: pair>)
                               (loop . #<identifier #205
                                          type: free
                                          offset: 2
                                          pos: ()
                                          flags: (mutable)
                                          stype: procedure>))
                         nb-args: 2>
#<ctx #200
      stack: (procedure unknown pair retAddr)
      env: ((a . #<identifier #201
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (b . #<identifier #202
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>)
            (x . #<identifier #203
                    type: free
                    offset: 0
                    pos: ()
                    flags: ()
                    stype: pair>)
            (y . #<identifier #204
                    type: free
                    offset: 1
                    pos: ()
                    flags: ()
                    stype: pair>)
            (loop . #<identifier #205
                       type: free
                       offset: 2
                       pos: ()
                       flags: (mutable)
                       stype: procedure>))
      nb-args: 2>
------------------------------------------------------------------------
7effa8				bits 64
7effa8			stub_7f764c7effa8_1:
7effa8 fec1			inc	cl
7effaa			stub_7f764c7effa8_0:
7effaa e85ef048ff		call	do_callback_handler
7effaf e1d31f0200000000
(obj= #(#<procedure #206>))
------------------------------------------------------------------------
c841d3				bits 64
c841d3 90		fn_entry_5:
c841d4			version508:
c841d4 ff742408			push	qword [rsp+8]
c841d8			version509:
c841d8			version510:
c841d8 50			push	rax
c841d9 53			push	rbx
c841da 48b84080aa4e767f
c841e2 0000			mov	rax,140146102665280
c841e4 488b18			mov	rbx,[rax]
c841e7 48ffc3			inc	rbx
c841ea 488918			mov	[rax],rbx
c841ed 5b			pop	rbx
c841ee 58			pop	rax
c841ef 48c7c0f6ffffff		mov	rax,dword -10
c841f6 48390424			cmp	[rsp],rax
c841fa 48c7c0faffffff		mov	rax,dword -6
c84201 7407			je	short done4
c84203 48c7c0feffffff		mov	rax,dword -2
c8420a			done4:
c8420a 48890424			mov	[rsp],rax
c8420e			version511:
c8420e 58			pop	rax
c8420f 4883f8fe			cmp	rax,byte -2
c84213			patchable_jump14:
c84213 0f8491bdb600		je	stub_7f764c7effa8_0
c84219 e98abdb600		jmp	stub_7f764c7effa8_1
>>> patching closure 7f74aa8c48a1 at 7f74aa8c48c9 : slot contains now label fn_entry_5 (7f764bc841d4)
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #207
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #208
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c84219				bits 64
c84219 909090		version512:
c8421c ff742410			push	qword [rsp+16]
c84220			version513:
c84220			version514:
c84220 488b442408		mov	rax,[rsp+8]
c84225 ff7017			push	qword [rax+23]
c84228			version515:
c84228 58			pop	rax
c84229 5b			pop	rbx
c8422a 4889430f			mov	[rbx+15],rax
c8422e 6aee			push	qword byte -18
c84230			version516:
c84230 488b442408		mov	rax,[rsp+8]
c84235 ff700f			push	qword [rax+15]
c84238			version517:
c84238 58			pop	rax
c84239 4883c408			add	rsp,byte 8
c8423d 50			push	rax
c8423e			version518:
c8423e 58			pop	rax
c8423f 4883c418			add	rsp,byte 24
c84243 5a			pop	rdx
c84244 488b5a28			mov	rbx,[rdx+40]
c84248 49c7c328000000		mov	r11,dword 40
c8424f ffe3			jmp	rbx
------------------------------------------------------------------------
7eff98				bits 64
7eff98			stub_7f764c7eff98_1:
7eff98 fec1			inc	cl
7eff9a			stub_7f764c7eff98_0:
7eff9a e86ef048ff		call	do_callback_handler
7eff9f d1d41f0200000000
(obj= #(#<procedure #209>))
------------------------------------------------------------------------
c84251				bits 64
c84251 909090		continuation_2:
c84254 50			push	rax
c84255			version519:
c84255 ff742410			push	qword [rsp+16]
c84259			version520:
c84259			version521:
c84259 58			pop	rax
c8425a 488b400f			mov	rax,[rax+15]
c8425e 50			push	rax
c8425f			version522:
c8425f 488b0424			mov	rax,[rsp]
c84263 4889442418		mov	[rsp+24],rax
c84268 4883c418			add	rsp,byte 24
c8426c			version523:
c8426c ff3424			push	qword [rsp]
c8426f			version524:
c8426f			version525:
c8426f 50			push	rax
c84270 53			push	rbx
c84271 48b84080aa4e767f
c84279 0000			mov	rax,140146102665280
c8427b 488b18			mov	rbx,[rax]
c8427e 48ffc3			inc	rbx
c84281 488918			mov	[rax],rbx
c84284 5b			pop	rbx
c84285 58			pop	rax
c84286 48c7c0f6ffffff		mov	rax,dword -10
c8428d 48390424			cmp	[rsp],rax
c84291 48c7c0faffffff		mov	rax,dword -6
c84298 7407			je	short done5
c8429a 48c7c0feffffff		mov	rax,dword -2
c842a1			done5:
c842a1 48890424			mov	[rsp],rax
c842a5			version526:
c842a5 58			pop	rax
c842a6 4883f8fe			cmp	rax,byte -2
c842aa			patchable_jump15:
c842aa 0f84eabcb600		je	stub_7f764c7eff98_0
c842b0 e9e3bcb600		jmp	stub_7f764c7eff98_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc842aa -> 7f764c7eff98
GEN VERSION >>> #<ctx #210
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #211
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #212
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff88				bits 64
7eff88			stub_7f764c7eff88_1:
7eff88 fec1			inc	cl
7eff8a			stub_7f764c7eff88_0:
7eff8a e87ef048ff		call	do_callback_handler
7eff8f 71d51f0200000000
(obj= #(#<procedure #213>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c842b0				bits 64
c842b0			version527:
c842b0 ff3424			push	qword [rsp]
c842b3			version528:
c842b3 50			push	rax
c842b4 53			push	rbx
c842b5 48b84080aa4e767f
c842bd 0000			mov	rax,140146102665280
c842bf 488b18			mov	rbx,[rax]
c842c2 48ffc3			inc	rbx
c842c5 488918			mov	[rax],rbx
c842c8 5b			pop	rbx
c842c9 58			pop	rax
c842ca 488b0424			mov	rax,[rsp]
c842ce 4889c3			mov	rbx,rax
c842d1 4883e003			and	rax,byte 3
c842d5 4883f801			cmp	rax,byte 1
c842d9 750e			jne	short patchable_jump16
c842db 488b43ff			mov	rax,[rbx-1]
c842df 4825f8000000		and	rax,248
c842e5 4883f808			cmp	rax,byte 8
c842e9			patchable_jump16:
c842e9 0f849bbcb600		je	stub_7f764c7eff88_0
c842ef e994bcb600		jmp	stub_7f764c7eff88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc842e9 -> 7f764c7eff88
GEN VERSION >>> #<ctx #214
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #215
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #216
                                    type: local
                                    offset: 3
                                    pos: (6 3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc842ef -> 7f764bc83ccf
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #210
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #211
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #212
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc842aa -> 7f764bc842f4
------------------------------------------------------------------------
c842f4				bits 64
c842f4			version529:
c842f4 6afe			push	qword byte -2
c842f6			version530:
c842f6 58			pop	rax
c842f7 4883c408			add	rsp,byte 8
c842fb 50			push	rax
c842fc			version531:
c842fc ff742408			push	qword [rsp+8]
c84300			version532:
c84300 48c7c004000000		mov	rax,dword 4
c84307 50			push	rax
c84308			version533:
c84308			version534:
c84308			version535:
c84308 58			pop	rax
c84309 48290424			sub	[rsp],rax
c8430d 0f80e5c7b600		jo	stub_7f764c7f0af8_0
c84313			version536:
c84313 488b0424			mov	rax,[rsp]
c84317 4889442410		mov	[rsp+16],rax
c8431c 4883c410			add	rsp,byte 16
c84320			version537:
c84320 ff3424			push	qword [rsp]
c84323			version538:
c84323 48c7c000000000		mov	rax,dword 0
c8432a 50			push	rax
c8432b			version539:
c8432b e900f9ffff		jmp	version418
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #161
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #162
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83ca5 -> 7f764bc84330
------------------------------------------------------------------------
7f0068				bits 64
7f0068			stub_7f764c7f0068_1:
7f0068 fec1			inc	cl
7f006a			stub_7f764c7f0068_0:
7f006a e89eef48ff		call	do_callback_handler
7f006f b199ec0100000000
(obj= #(#<procedure #217>))
------------------------------------------------------------------------
c84330				bits 64
c84330			version540:
c84330 ff742408			push	qword [rsp+8]
c84334			version541:
c84334 ff742410			push	qword [rsp+16]
c84338			version542:
c84338			version543:
c84338 58			pop	rax
c84339 488b400f			mov	rax,[rax+15]
c8433d 50			push	rax
c8433e			version544:
c8433e			version545:
c8433e ff3424			push	qword [rsp]
c84341			version546:
c84341			version547:
c84341 50			push	rax
c84342 53			push	rbx
c84343 48b84080aa4e767f
c8434b 0000			mov	rax,140146102665280
c8434d 488b18			mov	rbx,[rax]
c84350 48ffc3			inc	rbx
c84353 488918			mov	[rax],rbx
c84356 5b			pop	rbx
c84357 58			pop	rax
c84358 48c7c0f6ffffff		mov	rax,dword -10
c8435f 48390424			cmp	[rsp],rax
c84363 48c7c0faffffff		mov	rax,dword -6
c8436a 7407			je	short done6
c8436c 48c7c0feffffff		mov	rax,dword -2
c84373			done6:
c84373 48890424			mov	[rsp],rax
c84377			version548:
c84377 58			pop	rax
c84378 4883f8fe			cmp	rax,byte -2
c8437c			patchable_jump17:
c8437c 0f84e8bcb600		je	stub_7f764c7f0068_0
c84382 e9e1bcb600		jmp	stub_7f764c7f0068_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8437c -> 7f764c7f0068
GEN VERSION >>> #<ctx #218
                      stack: (unknown pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #220
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff98				bits 64
7eff98			stub_7f764c7eff98_1:
7eff98 fec1			inc	cl
7eff9a			stub_7f764c7eff98_0:
7eff9a e86ef048ff		call	do_callback_handler
7eff9f 21b9ec0100000000
(obj= #(#<procedure #222>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84382				bits 64
c84382 9090		version549:
c84384 6afe			push	qword byte -2
c84386			version550:
c84386 ff742408			push	qword [rsp+8]
c8438a			version551:
c8438a 50			push	rax
c8438b 53			push	rbx
c8438c 48b84080aa4e767f
c84394 0000			mov	rax,140146102665280
c84396 488b18			mov	rbx,[rax]
c84399 48ffc3			inc	rbx
c8439c 488918			mov	[rax],rbx
c8439f 5b			pop	rbx
c843a0 58			pop	rax
c843a1 488b0424			mov	rax,[rsp]
c843a5 4889c3			mov	rbx,rax
c843a8 4883e003			and	rax,byte 3
c843ac 4883f801			cmp	rax,byte 1
c843b0 750e			jne	short patchable_jump18
c843b2 488b43ff			mov	rax,[rbx-1]
c843b6 4825f8000000		and	rax,248
c843bc 4883f808			cmp	rax,byte 8
c843c0			patchable_jump18:
c843c0 0f84d4bbb600		je	stub_7f764c7eff98_0
c843c6 e9cdbbb600		jmp	stub_7f764c7eff98_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc843c0 -> 7f764c7eff98
GEN VERSION >>> #<ctx #223
                      stack: (pair retAddr
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #224
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff78				bits 64
7eff78			stub_7f764c7eff78_0:
7eff78 e8eaf048ff		call	do_callback_cont_handler
7eff7d c1b9ec0100000000
(obj= #(#<procedure #225>))
------------------------------------------------------------------------
c843c6				bits 64
c843c6 9090		version552:
c843c8 58			pop	rax
c843c9 488b4007			mov	rax,[rax+7]
c843cd 50			push	rax
c843ce			version553:
c843ce 41ffb278020000		push	qword [r10+632]
c843d5			version554:
c843d5			version555:
c843d5 48c7c0909bec01		mov	rax,dword 32283536
c843dc 4889442410		mov	[rsp+16],rax
c843e1			version556:
c843e1 488b0424			mov	rax,[rsp]
c843e5 48c7c704000000		mov	rdi,dword 4
c843ec 488b4007			mov	rax,[rax+7]
c843f0 488b4008			mov	rax,[rax+8]
c843f4 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #226
                         stack: (procedure unknown retAddr)
                         env: ((l . #<identifier #227
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #226
      stack: (procedure unknown retAddr)
      env: ((l . #<identifier #227
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
7eff68				bits 64
7eff68			stub_7f764c7eff68_0:
7eff68 e8a0f048ff		call	do_callback_handler
7eff6d 91bcec0100000000
(obj= #(#<procedure #136>))
------------------------------------------------------------------------
7eff58				bits 64
7eff58			stub_7f764c7eff58_1:
7eff58 fec1			inc	cl
7eff5a			stub_7f764c7eff58_0:
7eff5a e8aef048ff		call	do_callback_handler
7eff5f b1c21f0200000000
(obj= #(#<procedure #228>))
------------------------------------------------------------------------
c843f6				bits 64
c843f6 9090		fn_entry_6:
c843f8 4883ff04			cmp	rdi,byte 4
c843fc 0f8566bbb600		jne	stub_7f764c7eff68_0
c84402			version557:
c84402 ff742408			push	qword [rsp+8]
c84406			version558:
c84406			version559:
c84406 50			push	rax
c84407 53			push	rbx
c84408 48b84080aa4e767f
c84410 0000			mov	rax,140146102665280
c84412 488b18			mov	rbx,[rax]
c84415 48ffc3			inc	rbx
c84418 488918			mov	[rax],rbx
c8441b 5b			pop	rbx
c8441c 58			pop	rax
c8441d 48c7c0f6ffffff		mov	rax,dword -10
c84424 48390424			cmp	[rsp],rax
c84428 48c7c0faffffff		mov	rax,dword -6
c8442f 7407			je	short done7
c84431 48c7c0feffffff		mov	rax,dword -2
c84438			done7:
c84438 48890424			mov	[rsp],rax
c8443c			version560:
c8443c 58			pop	rax
c8443d 4883f8fe			cmp	rax,byte -2
c84441			patchable_jump19:
c84441 0f8413bbb600		je	stub_7f764c7eff58_0
c84447 e90cbbb600		jmp	stub_7f764c7eff58_1
>>> patching generic slot of closure 7f74aa8c5109: now contains label fn_entry_6 (7f764bc843f8)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84441 -> 7f764c7eff58
GEN VERSION >>> #<ctx #229
                      stack: (procedure unknown retAddr)
                      env: ((l . #<identifier #230
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff48				bits 64
7eff48			stub_7f764c7eff48_1:
7eff48 fec1			inc	cl
7eff4a			stub_7f764c7eff48_0:
7eff4a e8bef048ff		call	do_callback_handler
7eff4f 31d41f0200000000
(obj= #(#<procedure #231>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84447				bits 64
c84447 90		version561:
c84448 48c7c004000000		mov	rax,dword 4
c8444f 50			push	rax
c84450			version562:
c84450 6afe			push	qword byte -2
c84452			version563:
c84452 ff742418			push	qword [rsp+24]
c84456			version564:
c84456 50			push	rax
c84457 53			push	rbx
c84458 48b84080aa4e767f
c84460 0000			mov	rax,140146102665280
c84462 488b18			mov	rbx,[rax]
c84465 48ffc3			inc	rbx
c84468 488918			mov	[rax],rbx
c8446b 5b			pop	rbx
c8446c 58			pop	rax
c8446d 488b0424			mov	rax,[rsp]
c84471 4889c3			mov	rbx,rax
c84474 4883e003			and	rax,byte 3
c84478 4883f801			cmp	rax,byte 1
c8447c 750e			jne	short patchable_jump20
c8447e 488b43ff			mov	rax,[rbx-1]
c84482 4825f8000000		and	rax,248
c84488 4883f808			cmp	rax,byte 8
c8448c			patchable_jump20:
c8448c 0f84b8bab600		je	stub_7f764c7eff48_0
c84492 e9b1bab600		jmp	stub_7f764c7eff48_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8448c -> 7f764c7eff48
GEN VERSION >>> #<ctx #232
                      stack: (pair retAddr number procedure pair retAddr)
                      env: ((l . #<identifier #233
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff38				bits 64
7eff38			stub_7f764c7eff38_0:
7eff38 e82af148ff		call	do_callback_cont_handler
7eff3d 619cec0100000000
(obj= #(#<procedure #234>))
------------------------------------------------------------------------
c84492				bits 64
c84492 9090		version565:
c84494 58			pop	rax
c84495 488b400f			mov	rax,[rax+15]
c84499 50			push	rax
c8449a			version566:
c8449a 41ffb278020000		push	qword [r10+632]
c844a1			version567:
c844a1			version568:
c844a1 48c7c0b09cec01		mov	rax,dword 32283824
c844a8 4889442410		mov	[rsp+16],rax
c844ad			version569:
c844ad 488b0424			mov	rax,[rsp]
c844b1 48c7c704000000		mov	rdi,dword 4
c844b8 488b4007			mov	rax,[rax+7]
c844bc 488b4008			mov	rax,[rax+8]
c844c0 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #229
                      stack: (procedure unknown retAddr)
                      env: ((l . #<identifier #230
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f764bc84441 -> 7f764bc844c2
------------------------------------------------------------------------
c844c2				bits 64
c844c2 9090		version570:
c844c4 48c7c000000000		mov	rax,dword 0
c844cb 50			push	rax
c844cc			version571:
c844cc 58			pop	rax
c844cd 4883c410			add	rsp,byte 16
c844d1 5a			pop	rdx
c844d2 488b5a08			mov	rbx,[rdx+8]
c844d6 49c7c308000000		mov	r11,dword 8
c844dd ffe3			jmp	rbx
------------------------------------------------------------------------
c844df				bits 64
c844df 90		continuation_3:
c844e0 50			push	rax
c844e1			version572:
c844e1			version573:
c844e1			version574:
c844e1 58			pop	rax
c844e2 48010424			add	[rsp],rax
c844e6 0f805cc5b600		jo	stub_7f764c7f0a48_0
c844ec ebde			jmp	short version571
------------------------------------------------------------------------
7eff58				bits 64
7eff58			stub_7f764c7eff58_0:
7eff58 e8b0f048ff		call	do_callback_handler
7eff5d 719eec0100000000
(obj= #(#<procedure #235>))
------------------------------------------------------------------------
7eff28				bits 64
7eff28			stub_7f764c7eff28_1:
7eff28 fec1			inc	cl
7eff2a			stub_7f764c7eff28_0:
7eff2a e8def048ff		call	do_callback_handler
7eff2f c19eec0100000000
(obj= #(#<procedure #236>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c844ee				bits 64
c844ee 9090		continuation_4:
c844f0 50			push	rax
c844f1			version575:
c844f1			version576:
c844f1 48c7c008000000		mov	rax,dword 8
c844f8 50			push	rax
c844f9			version577:
c844f9			version578:
c844f9 5b			pop	rbx
c844fa 58			pop	rax
c844fb 48c1f802			sar	rax,2
c844ff 48c1fb02			sar	rbx,2
c84503 4883fb00			cmp	rbx,byte 0
c84507 0f844bbab600		je	stub_7f764c7eff58_0
c8450d 4899			cqo
c8450f 48f7fb			idiv	rbx
c84512 48c1e002			shl	rax,2
c84516 50			push	rax
c84517			version579:
c84517 ff742408			push	qword [rsp+8]
c8451b			version580:
c8451b 50			push	rax
c8451c 53			push	rbx
c8451d 48b84080aa4e767f
c84525 0000			mov	rax,140146102665280
c84527 488b18			mov	rbx,[rax]
c8452a 48ffc3			inc	rbx
c8452d 488918			mov	[rax],rbx
c84530 5b			pop	rbx
c84531 58			pop	rax
c84532 488b0424			mov	rax,[rsp]
c84536 4889c3			mov	rbx,rax
c84539 4883e003			and	rax,byte 3
c8453d 4883f801			cmp	rax,byte 1
c84541 750e			jne	short patchable_jump21
c84543 488b43ff			mov	rax,[rbx-1]
c84547 4825f8000000		and	rax,248
c8454d 4883f808			cmp	rax,byte 8
c84551			patchable_jump21:
c84551 0f84d3b9b600		je	stub_7f764c7eff28_0
c84557 e9ccb9b600		jmp	stub_7f764c7eff28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84551 -> 7f764c7eff28
GEN VERSION >>> #<ctx #237
                      stack: (pair number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #238
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7eff18				bits 64
7eff18			stub_7f764c7eff18_0:
7eff18 e84af148ff		call	do_callback_cont_handler
7eff1d 11d61f0200000000
(obj= #(#<procedure #239>))
------------------------------------------------------------------------
c84557				bits 64
c84557 90		version581:
c84558 58			pop	rax
c84559 488b4007			mov	rax,[rax+7]
c8455d 50			push	rax
c8455e			version582:
c8455e			version583:
c8455e 6afe			push	qword byte -2
c84560			version584:
c84560 ff742410			push	qword [rsp+16]
c84564			version585:
c84564 41ffb218030000		push	qword [r10+792]
c8456b			version586:
c8456b			version587:
c8456b 48c7c0109fec01		mov	rax,dword 32284432
c84572 4889442410		mov	[rsp+16],rax
c84577			version588:
c84577 488b0424			mov	rax,[rsp]
c8457b 49c7c3e19fec01		mov	r11,dword 32284641
c84582 488b4007			mov	rax,[rax+7]
c84586 48c7c704000000		mov	rdi,dword 4
c8458d 488b4030			mov	rax,[rax+48]
c84591 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #240
                         stack: (procedure number retAddr)
                         env: ((x . #<identifier #241
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #240
      stack: (procedure number retAddr)
      env: ((x . #<identifier #241
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
7eff08				bits 64
7eff08			stub_7f764c7eff08_0:
7eff08 e800f148ff		call	do_callback_handler
7eff0d 81a0ec0100000000
(obj= #(#<procedure #242>))
------------------------------------------------------------------------
c84593				bits 64
c84593 90		fn_entry_7:
c84594			version589:
c84594 ff742408			push	qword [rsp+8]
c84598			version590:
c84598 48c7c000000000		mov	rax,dword 0
c8459f 50			push	rax
c845a0			version591:
c845a0			version592:
c845a0			version593:
c845a0 488b442408		mov	rax,[rsp+8]
c845a5 483b0424			cmp	rax,[rsp]
c845a9			label-jump6:
c845a9 0f8559b9b600		jne	stub_7f764c7eff08_0
c845af			version594:
c845af 4883c410			add	rsp,byte 16
c845b3 6afa			push	qword byte -6
c845b5			version595:
c845b5 58			pop	rax
c845b6 4883c410			add	rsp,byte 16
c845ba 5a			pop	rdx
c845bb 488b5a18			mov	rbx,[rdx+24]
c845bf 49c7c318000000		mov	r11,dword 24
c845c6 ffe3			jmp	rbx
>>> patching closure 7f74aa8c4fc9 at 7f74aa8c4ff9 : slot contains now label fn_entry_7 (7f764bc84594)
GEN VERSION >>> #<ctx #243
                      stack: (number number procedure number retAddr)
                      env: ((x . #<identifier #244
                                    type: local
                                    offset: 0
                                    pos: (2 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f764bc845a9 -> 7f764bc845c8
------------------------------------------------------------------------
c845c8				bits 64
c845c8			version596:
c845c8 4883c410			add	rsp,byte 16
c845cc 6afe			push	qword byte -2
c845ce ebe5			jmp	short version595
------------------------------------------------------------------------
7efef8				bits 64
7efef8			stub_7f764c7efef8_1:
7efef8 fec1			inc	cl
7efefa			stub_7f764c7efef8_0:
7efefa e80ef148ff		call	do_callback_handler
7efeff 71a1ec0100000000
(obj= #(#<procedure #245>))
------------------------------------------------------------------------
c845d0				bits 64
c845d0			continuation_5:
c845d0 50			push	rax
c845d1			version597:
c845d1 58			pop	rax
c845d2 4883f8fe			cmp	rax,byte -2
c845d6			patchable_jump22:
c845d6 0f841eb9b600		je	stub_7f764c7efef8_0
c845dc e917b9b600		jmp	stub_7f764c7efef8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc845d6 -> 7f764c7efef8
GEN VERSION >>> #<ctx #246
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #248
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efee8				bits 64
7efee8			stub_7f764c7efee8_1:
7efee8 fec1			inc	cl
7efeea			stub_7f764c7efee8_0:
7efeea e81ef148ff		call	do_callback_handler
7efeef 11a2ec0100000000
(obj= #(#<procedure #250>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c845dc				bits 64
c845dc			version598:
c845dc ff3424			push	qword [rsp]
c845df			version599:
c845df 50			push	rax
c845e0 53			push	rbx
c845e1 48b84080aa4e767f
c845e9 0000			mov	rax,140146102665280
c845eb 488b18			mov	rbx,[rax]
c845ee 48ffc3			inc	rbx
c845f1 488918			mov	[rax],rbx
c845f4 5b			pop	rbx
c845f5 58			pop	rax
c845f6 488b0424			mov	rax,[rsp]
c845fa 4889c3			mov	rbx,rax
c845fd 4883e003			and	rax,byte 3
c84601 4883f801			cmp	rax,byte 1
c84605 750e			jne	short patchable_jump23
c84607 488b43ff			mov	rax,[rbx-1]
c8460b 4825f8000000		and	rax,248
c84611 4883f808			cmp	rax,byte 8
c84615			patchable_jump23:
c84615 0f84cfb8b600		je	stub_7f764c7efee8_0
c8461b e9c8b8b600		jmp	stub_7f764c7efee8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84615 -> 7f764c7efee8
GEN VERSION >>> #<ctx #251
                      stack: (pair pair
                                   number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #252
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8461b				bits 64
c8461b 90		version600:
c8461c ff742428			push	qword [rsp+40]
c84620			version601:
c84620 58			pop	rax
c84621 5b			pop	rbx
c84622 48894307			mov	[rbx+7],rax
c84626 6aee			push	qword byte -18
c84628			version602:
c84628 ff742410			push	qword [rsp+16]
c8462c			version603:
c8462c 48c7c004000000		mov	rax,dword 4
c84633 50			push	rax
c84634			version604:
c84634			version605:
c84634			version606:
c84634 58			pop	rax
c84635 48290424			sub	[rsp],rax
c84639 0f8089c4b600		jo	stub_7f764c7f0ac8_0
c8463f			version607:
c8463f ff742410			push	qword [rsp+16]
c84643			version608:
c84643			version609:
c84643 58			pop	rax
c84644 488b400f			mov	rax,[rax+15]
c84648 50			push	rax
c84649			version610:
c84649 488b442408		mov	rax,[rsp+8]
c8464e 4889442420		mov	[rsp+32],rax
c84653 488b0424			mov	rax,[rsp]
c84657 4889442418		mov	[rsp+24],rax
c8465c 4883c418			add	rsp,byte 24
c84660 e9f9feffff		jmp	version583
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #246
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #248
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc845d6 -> 7f764bc84665
------------------------------------------------------------------------
7efef8				bits 64
7efef8			stub_7f764c7efef8_1:
7efef8 fec1			inc	cl
7efefa			stub_7f764c7efef8_0:
7efefa e80ef148ff		call	do_callback_handler
7efeff 01a3ec0100000000
(obj= #(#<procedure #253>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84665				bits 64
c84665 909090		version611:
c84668 ff3424			push	qword [rsp]
c8466b			version612:
c8466b 58			pop	rax
c8466c 4883c410			add	rsp,byte 16
c84670 50			push	rax
c84671			version613:
c84671 50			push	rax
c84672 53			push	rbx
c84673 48b84080aa4e767f
c8467b 0000			mov	rax,140146102665280
c8467d 488b18			mov	rbx,[rax]
c84680 48ffc3			inc	rbx
c84683 488918			mov	[rax],rbx
c84686 5b			pop	rbx
c84687 58			pop	rax
c84688 488b0424			mov	rax,[rsp]
c8468c 4889c3			mov	rbx,rax
c8468f 4883e003			and	rax,byte 3
c84693 4883f801			cmp	rax,byte 1
c84697 750e			jne	short patchable_jump24
c84699 488b43ff			mov	rax,[rbx-1]
c8469d 4825f8000000		and	rax,248
c846a3 4883f808			cmp	rax,byte 8
c846a7			patchable_jump24:
c846a7 0f844db8b600		je	stub_7f764c7efef8_0
c846ad e946b8b600		jmp	stub_7f764c7efef8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc846a7 -> 7f764c7efef8
GEN VERSION >>> #<ctx #254
                      stack: (pair pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efed8				bits 64
7efed8			stub_7f764c7efed8_0:
7efed8 e88af148ff		call	do_callback_cont_handler
7efedd a1a3ec0100000000
(obj= #(#<procedure #255>))
------------------------------------------------------------------------
c846ad				bits 64
c846ad 909090		version614:
c846b0 6afe			push	qword byte -2
c846b2			version615:
c846b2 ff742418			push	qword [rsp+24]
c846b6			version616:
c846b6			version617:
c846b6 58			pop	rax
c846b7 488b4007			mov	rax,[rax+7]
c846bb 50			push	rax
c846bc			version618:
c846bc 41ffb278020000		push	qword [r10+632]
c846c3			version619:
c846c3			version620:
c846c3 48c7c0f0a3ec01		mov	rax,dword 32285680
c846ca 4889442410		mov	[rsp+16],rax
c846cf			version621:
c846cf 488b0424			mov	rax,[rsp]
c846d3 48c7c704000000		mov	rdi,dword 4
c846da 488b4007			mov	rax,[rax+7]
c846de 488b4008			mov	rax,[rax+8]
c846e2 ffe0			jmp	rax
------------------------------------------------------------------------
7efec8				bits 64
7efec8			stub_7f764c7efec8_0:
7efec8 e840f148ff		call	do_callback_handler
7efecd 11a5ec0100000000
(obj= #(#<procedure #256>))
------------------------------------------------------------------------
7efeb8				bits 64
7efeb8			stub_7f764c7efeb8_0:
7efeb8 e850f148ff		call	do_callback_handler
7efebd 61a5ec0100000000
(obj= #(#<procedure #257>))
------------------------------------------------------------------------
7efea8				bits 64
7efea8			stub_7f764c7efea8_1:
7efea8 fec1			inc	cl
7efeaa			stub_7f764c7efea8_0:
7efeaa e85ef148ff		call	do_callback_handler
7efeaf b1a5ec0100000000
(obj= #(#<procedure #258>))
------------------------------------------------------------------------
c846e4				bits 64
c846e4			continuation_6:
c846e4 50			push	rax
c846e5			version622:
c846e5			version623:
c846e5 48c7c008000000		mov	rax,dword 8
c846ec 50			push	rax
c846ed			version624:
c846ed			version625:
c846ed 5b			pop	rbx
c846ee 58			pop	rax
c846ef 48c1f802			sar	rax,2
c846f3 48c1fb02			sar	rbx,2
c846f7 4883fb00			cmp	rbx,byte 0
c846fb 0f84c7b7b600		je	stub_7f764c7efec8_0
c84701 4899			cqo
c84703 48f7fb			idiv	rbx
c84706 48c1e002			shl	rax,2
c8470a 50			push	rax
c8470b			version626:
c8470b			version627:
c8470b ff3424			push	qword [rsp]
c8470e			version628:
c8470e 48c7c000000000		mov	rax,dword 0
c84715 50			push	rax
c84716			version629:
c84716			version630:
c84716			version631:
c84716 488b442408		mov	rax,[rsp+8]
c8471b 483b0424			cmp	rax,[rsp]
c8471f			label-jump7:
c8471f 0f8593b7b600		jne	stub_7f764c7efeb8_0
c84725			version632:
c84725 4883c410			add	rsp,byte 16
c84729 6afa			push	qword byte -6
c8472b			version633:
c8472b 58			pop	rax
c8472c 4883f8fe			cmp	rax,byte -2
c84730			patchable_jump25:
c84730 0f8474b7b600		je	stub_7f764c7efea8_0
c84736 e96db7b600		jmp	stub_7f764c7efea8_1
GEN VERSION >>> #<ctx #259
                      stack: (number number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #260
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #261
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8471f -> 7f764bc8473b
------------------------------------------------------------------------
c8473b				bits 64
c8473b 90		version634:
c8473c 4883c410			add	rsp,byte 16
c84740 6afe			push	qword byte -2
c84742 ebe7			jmp	short version633
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #262
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #263
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84730 -> 7f764bc84744
------------------------------------------------------------------------
7efe98				bits 64
7efe98			stub_7f764c7efe98_0:
7efe98 e870f148ff		call	do_callback_handler
7efe9d a1a6ec0100000000
(obj= #(#<procedure #265>))
------------------------------------------------------------------------
7efe88				bits 64
7efe88			stub_7f764c7efe88_1:
7efe88 fec1			inc	cl
7efe8a			stub_7f764c7efe88_0:
7efe8a e87ef148ff		call	do_callback_handler
7efe8f 41bcec0100000000
(obj= #(#<procedure #266>))
------------------------------------------------------------------------
c84744				bits 64
c84744			version635:
c84744 ff3424			push	qword [rsp]
c84747			version636:
c84747 ff742420			push	qword [rsp+32]
c8474b			version637:
c8474b			version638:
c8474b 58			pop	rax
c8474c 488b4007			mov	rax,[rax+7]
c84750 50			push	rax
c84751			version639:
c84751			version640:
c84751 ff742408			push	qword [rsp+8]
c84755			version641:
c84755 48c7c004000000		mov	rax,dword 4
c8475c 50			push	rax
c8475d			version642:
c8475d			version643:
c8475d			version644:
c8475d 488b442408		mov	rax,[rsp+8]
c84762 483b0424			cmp	rax,[rsp]
c84766			label-jump8:
c84766 0f852cb7b600		jne	stub_7f764c7efe98_0
c8476c			version645:
c8476c 4883c410			add	rsp,byte 16
c84770 6afa			push	qword byte -6
c84772			version646:
c84772 58			pop	rax
c84773 4883f8fe			cmp	rax,byte -2
c84777			patchable_jump26:
c84777 0f840db7b600		je	stub_7f764c7efe88_0
c8477d e906b7b600		jmp	stub_7f764c7efe88_1
GEN VERSION >>> #<ctx #267
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #268
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84766 -> 7f764bc84782
------------------------------------------------------------------------
c84782				bits 64
c84782 9090		version647:
c84784 4883c410			add	rsp,byte 16
c84788 6afe			push	qword byte -2
c8478a ebe6			jmp	short version646
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #273
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84777 -> 7f764bc8478c
------------------------------------------------------------------------
7efe78				bits 64
7efe78			stub_7f764c7efe78_1:
7efe78 fec1			inc	cl
7efe7a			stub_7f764c7efe78_0:
7efe7a e88ef148ff		call	do_callback_handler
7efe7f d1bdec0100000000
(obj= #(#<procedure #275>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8478c				bits 64
c8478c			version648:
c8478c ff3424			push	qword [rsp]
c8478f			version649:
c8478f 50			push	rax
c84790 53			push	rbx
c84791 48b84080aa4e767f
c84799 0000			mov	rax,140146102665280
c8479b 488b18			mov	rbx,[rax]
c8479e 48ffc3			inc	rbx
c847a1 488918			mov	[rax],rbx
c847a4 5b			pop	rbx
c847a5 58			pop	rax
c847a6 488b0424			mov	rax,[rsp]
c847aa 4889c3			mov	rbx,rax
c847ad 4883e003			and	rax,byte 3
c847b1 4883f801			cmp	rax,byte 1
c847b5 750e			jne	short patchable_jump27
c847b7 488b43ff			mov	rax,[rbx-1]
c847bb 4825f8000000		and	rax,248
c847c1 4883f808			cmp	rax,byte 8
c847c5			patchable_jump27:
c847c5 0f84afb6b600		je	stub_7f764c7efe78_0
c847cb e9a8b6b600		jmp	stub_7f764c7efe78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc847c5 -> 7f764c7efe78
GEN VERSION >>> #<ctx #276
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #277
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c847cb				bits 64
c847cb 90		version650:
c847cc ff742438			push	qword [rsp+56]
c847d0			version651:
c847d0 58			pop	rax
c847d1 5b			pop	rbx
c847d2 48894307			mov	[rbx+7],rax
c847d6 6aee			push	qword byte -18
c847d8			version652:
c847d8 ff742410			push	qword [rsp+16]
c847dc			version653:
c847dc 48c7c004000000		mov	rax,dword 4
c847e3 50			push	rax
c847e4			version654:
c847e4			version655:
c847e4			version656:
c847e4 58			pop	rax
c847e5 48290424			sub	[rsp],rax
c847e9 0f80f9c2b600		jo	stub_7f764c7f0ae8_0
c847ef			version657:
c847ef ff742410			push	qword [rsp+16]
c847f3			version658:
c847f3			version659:
c847f3 58			pop	rax
c847f4 488b400f			mov	rax,[rax+15]
c847f8 50			push	rax
c847f9			version660:
c847f9 488b442408		mov	rax,[rsp+8]
c847fe 4889442420		mov	[rsp+32],rax
c84803 488b0424			mov	rax,[rsp]
c84807 4889442418		mov	[rsp+24],rax
c8480c 4883c418			add	rsp,byte 24
c84810 e93cffffff		jmp	version640
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #273
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8477d -> 7f764bc84815
------------------------------------------------------------------------
7efe88				bits 64
7efe88			stub_7f764c7efe88_1:
7efe88 fec1			inc	cl
7efe8a			stub_7f764c7efe88_0:
7efe8a e87ef148ff		call	do_callback_handler
7efe8f 419bec0100000000
(obj= #(#<procedure #278>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84815				bits 64
c84815 909090		version661:
c84818 ff3424			push	qword [rsp]
c8481b			version662:
c8481b 50			push	rax
c8481c 53			push	rbx
c8481d 48b84080aa4e767f
c84825 0000			mov	rax,140146102665280
c84827 488b18			mov	rbx,[rax]
c8482a 48ffc3			inc	rbx
c8482d 488918			mov	[rax],rbx
c84830 5b			pop	rbx
c84831 58			pop	rax
c84832 488b0424			mov	rax,[rsp]
c84836 4889c3			mov	rbx,rax
c84839 4883e003			and	rax,byte 3
c8483d 4883f801			cmp	rax,byte 1
c84841 750e			jne	short patchable_jump28
c84843 488b43ff			mov	rax,[rbx-1]
c84847 4825f8000000		and	rax,248
c8484d 4883f808			cmp	rax,byte 8
c84851			patchable_jump28:
c84851 0f8433b6b600		je	stub_7f764c7efe88_0
c84857 e92cb6b600		jmp	stub_7f764c7efe88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84851 -> 7f764c7efe88
GEN VERSION >>> #<ctx #279
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #280
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efe68				bits 64
7efe68			stub_7f764c7efe68_1:
7efe68 fec1			inc	cl
7efe6a			stub_7f764c7efe68_0:
7efe6a e89ef148ff		call	do_callback_handler
7efe6f a1bbec0100000000
(obj= #(#<procedure #281>))
------------------------------------------------------------------------
c84857				bits 64
c84857 90		version663:
c84858 58			pop	rax
c84859 488b400f			mov	rax,[rax+15]
c8485d 50			push	rax
c8485e			version664:
c8485e			version665:
c8485e ff742408			push	qword [rsp+8]
c84862			version666:
c84862			version667:
c84862 6af6			push	qword byte -10
c84864			version668:
c84864 58			pop	rax
c84865 5b			pop	rbx
c84866 4889430f			mov	[rbx+15],rax
c8486a 6aee			push	qword byte -18
c8486c			version669:
c8486c ff742408			push	qword [rsp+8]
c84870			version670:
c84870 58			pop	rax
c84871 4883c410			add	rsp,byte 16
c84875 50			push	rax
c84876			version671:
c84876 58			pop	rax
c84877 4883c410			add	rsp,byte 16
c8487b 50			push	rax
c8487c			version672:
c8487c 58			pop	rax
c8487d 4883c408			add	rsp,byte 8
c84881 50			push	rax
c84882			version673:
c84882 58			pop	rax
c84883 5b			pop	rbx
c84884 4889430f			mov	[rbx+15],rax
c84888 6aee			push	qword byte -18
c8488a			version674:
c8488a ff742410			push	qword [rsp+16]
c8488e			version675:
c8488e			version676:
c8488e 58			pop	rax
c8488f 488b400f			mov	rax,[rax+15]
c84893 50			push	rax
c84894			version677:
c84894 ff742410			push	qword [rsp+16]
c84898			version678:
c84898			version679:
c84898 58			pop	rax
c84899 488b400f			mov	rax,[rax+15]
c8489d 50			push	rax
c8489e			version680:
c8489e 488b442408		mov	rax,[rsp+8]
c848a3 4889442420		mov	[rsp+32],rax
c848a8 488b0424			mov	rax,[rsp]
c848ac 4889442418		mov	[rsp+24],rax
c848b1 4883c418			add	rsp,byte 24
c848b5			version681:
c848b5 ff3424			push	qword [rsp]
c848b8			version682:
c848b8			version683:
c848b8 50			push	rax
c848b9 53			push	rbx
c848ba 48b84080aa4e767f
c848c2 0000			mov	rax,140146102665280
c848c4 488b18			mov	rbx,[rax]
c848c7 48ffc3			inc	rbx
c848ca 488918			mov	[rax],rbx
c848cd 5b			pop	rbx
c848ce 58			pop	rax
c848cf 48c7c0f6ffffff		mov	rax,dword -10
c848d6 48390424			cmp	[rsp],rax
c848da 48c7c0faffffff		mov	rax,dword -6
c848e1 7407			je	short done8
c848e3 48c7c0feffffff		mov	rax,dword -2
c848ea			done8:
c848ea 48890424			mov	[rsp],rax
c848ee			version684:
c848ee 58			pop	rax
c848ef 4883f8fe			cmp	rax,byte -2
c848f3			patchable_jump29:
c848f3 0f8471b5b600		je	stub_7f764c7efe68_0
c848f9 e96ab5b600		jmp	stub_7f764c7efe68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc848f3 -> 7f764c7efe68
GEN VERSION >>> #<ctx #282
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #284
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efe58				bits 64
7efe58			stub_7f764c7efe58_1:
7efe58 fec1			inc	cl
7efe5a			stub_7f764c7efe58_0:
7efe5a e8aef148ff		call	do_callback_handler
7efe5f 91d31f0200000000
(obj= #(#<procedure #286>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c848f9				bits 64
c848f9 909090		version685:
c848fc 6afe			push	qword byte -2
c848fe			version686:
c848fe ff742408			push	qword [rsp+8]
c84902			version687:
c84902 50			push	rax
c84903 53			push	rbx
c84904 48b84080aa4e767f
c8490c 0000			mov	rax,140146102665280
c8490e 488b18			mov	rbx,[rax]
c84911 48ffc3			inc	rbx
c84914 488918			mov	[rax],rbx
c84917 5b			pop	rbx
c84918 58			pop	rax
c84919 488b0424			mov	rax,[rsp]
c8491d 4889c3			mov	rbx,rax
c84920 4883e003			and	rax,byte 3
c84924 4883f801			cmp	rax,byte 1
c84928 750e			jne	short patchable_jump30
c8492a 488b43ff			mov	rax,[rbx-1]
c8492e 4825f8000000		and	rax,248
c84934 4883f808			cmp	rax,byte 8
c84938			patchable_jump30:
c84938 0f841cb5b600		je	stub_7f764c7efe58_0
c8493e e915b5b600		jmp	stub_7f764c7efe58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84938 -> 7f764c7efe58
GEN VERSION >>> #<ctx #287
                      stack: (pair retAddr
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #288
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efe48				bits 64
7efe48			stub_7f764c7efe48_0:
7efe48 e81af248ff		call	do_callback_cont_handler
7efe4d 819dec0100000000
(obj= #(#<procedure #289>))
------------------------------------------------------------------------
c8493e				bits 64
c8493e 9090		version688:
c84940 58			pop	rax
c84941 488b4007			mov	rax,[rax+7]
c84945 50			push	rax
c84946			version689:
c84946 41ffb278020000		push	qword [r10+632]
c8494d			version690:
c8494d			version691:
c8494d 48c7c0f0a6ec01		mov	rax,dword 32286448
c84954 4889442410		mov	[rsp+16],rax
c84959			version692:
c84959 488b0424			mov	rax,[rsp]
c8495d 48c7c704000000		mov	rdi,dword 4
c84964 488b4007			mov	rax,[rax+7]
c84968 488b4008			mov	rax,[rax+8]
c8496c ffe0			jmp	rax
------------------------------------------------------------------------
7efe38				bits 64
7efe38			stub_7f764c7efe38_0:
7efe38 e8d0f148ff		call	do_callback_handler
7efe3d 219eec0100000000
(obj= #(#<procedure #290>))
------------------------------------------------------------------------
7efe28				bits 64
7efe28			stub_7f764c7efe28_1:
7efe28 fec1			inc	cl
7efe2a			stub_7f764c7efe28_0:
7efe2a e8def148ff		call	do_callback_handler
7efe2f c1d51f0200000000
(obj= #(#<procedure #291>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8496e				bits 64
c8496e 9090		continuation_7:
c84970 50			push	rax
c84971			version693:
c84971			version694:
c84971 48c7c008000000		mov	rax,dword 8
c84978 50			push	rax
c84979			version695:
c84979			version696:
c84979 5b			pop	rbx
c8497a 58			pop	rax
c8497b 48c1f802			sar	rax,2
c8497f 48c1fb02			sar	rbx,2
c84983 4883fb00			cmp	rbx,byte 0
c84987 0f84abb4b600		je	stub_7f764c7efe38_0
c8498d 4899			cqo
c8498f 48f7fb			idiv	rbx
c84992 48c1e002			shl	rax,2
c84996 50			push	rax
c84997			version697:
c84997 ff742408			push	qword [rsp+8]
c8499b			version698:
c8499b 50			push	rax
c8499c 53			push	rbx
c8499d 48b84080aa4e767f
c849a5 0000			mov	rax,140146102665280
c849a7 488b18			mov	rbx,[rax]
c849aa 48ffc3			inc	rbx
c849ad 488918			mov	[rax],rbx
c849b0 5b			pop	rbx
c849b1 58			pop	rax
c849b2 488b0424			mov	rax,[rsp]
c849b6 4889c3			mov	rbx,rax
c849b9 4883e003			and	rax,byte 3
c849bd 4883f801			cmp	rax,byte 1
c849c1 750e			jne	short patchable_jump31
c849c3 488b43ff			mov	rax,[rbx-1]
c849c7 4825f8000000		and	rax,248
c849cd 4883f808			cmp	rax,byte 8
c849d1			patchable_jump31:
c849d1 0f8453b4b600		je	stub_7f764c7efe28_0
c849d7 e94cb4b600		jmp	stub_7f764c7efe28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc849d1 -> 7f764c7efe28
GEN VERSION >>> #<ctx #292
                      stack: (pair number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #293
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efe18				bits 64
7efe18			stub_7f764c7efe18_0:
7efe18 e84af248ff		call	do_callback_cont_handler
7efe1d d1a0ec0100000000
(obj= #(#<procedure #294>))
------------------------------------------------------------------------
c849d7				bits 64
c849d7 90		version699:
c849d8 58			pop	rax
c849d9 488b4007			mov	rax,[rax+7]
c849dd 50			push	rax
c849de			version700:
c849de			version701:
c849de 6afe			push	qword byte -2
c849e0			version702:
c849e0 ff742410			push	qword [rsp+16]
c849e4			version703:
c849e4 41ffb218030000		push	qword [r10+792]
c849eb			version704:
c849eb			version705:
c849eb 48c7c0c0a7ec01		mov	rax,dword 32286656
c849f2 4889442410		mov	[rsp+16],rax
c849f7			version706:
c849f7 488b0424			mov	rax,[rsp]
c849fb 49c7c3e19fec01		mov	r11,dword 32284641
c84a02 488b4007			mov	rax,[rax+7]
c84a06 48c7c704000000		mov	rdi,dword 4
c84a0d 488b4030			mov	rax,[rax+48]
c84a11 ffe0			jmp	rax
------------------------------------------------------------------------
7efe08				bits 64
7efe08			stub_7f764c7efe08_1:
7efe08 fec1			inc	cl
7efe0a			stub_7f764c7efe08_0:
7efe0a e8fef148ff		call	do_callback_handler
7efe0f 71a1ec0100000000
(obj= #(#<procedure #295>))
------------------------------------------------------------------------
c84a13				bits 64
c84a13 90		continuation_8:
c84a14 50			push	rax
c84a15			version707:
c84a15 58			pop	rax
c84a16 4883f8fe			cmp	rax,byte -2
c84a1a			patchable_jump32:
c84a1a 0f84eab3b600		je	stub_7f764c7efe08_0
c84a20 e9e3b3b600		jmp	stub_7f764c7efe08_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84a1a -> 7f764c7efe08
GEN VERSION >>> #<ctx #296
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #298
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efdf8				bits 64
7efdf8			stub_7f764c7efdf8_1:
7efdf8 fec1			inc	cl
7efdfa			stub_7f764c7efdf8_0:
7efdfa e80ef248ff		call	do_callback_handler
7efdff 61a2ec0100000000
(obj= #(#<procedure #300>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84a20				bits 64
c84a20			version708:
c84a20 ff3424			push	qword [rsp]
c84a23			version709:
c84a23 50			push	rax
c84a24 53			push	rbx
c84a25 48b84080aa4e767f
c84a2d 0000			mov	rax,140146102665280
c84a2f 488b18			mov	rbx,[rax]
c84a32 48ffc3			inc	rbx
c84a35 488918			mov	[rax],rbx
c84a38 5b			pop	rbx
c84a39 58			pop	rax
c84a3a 488b0424			mov	rax,[rsp]
c84a3e 4889c3			mov	rbx,rax
c84a41 4883e003			and	rax,byte 3
c84a45 4883f801			cmp	rax,byte 1
c84a49 750e			jne	short patchable_jump33
c84a4b 488b43ff			mov	rax,[rbx-1]
c84a4f 4825f8000000		and	rax,248
c84a55 4883f808			cmp	rax,byte 8
c84a59			patchable_jump33:
c84a59 0f849bb3b600		je	stub_7f764c7efdf8_0
c84a5f e994b3b600		jmp	stub_7f764c7efdf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84a59 -> 7f764c7efdf8
GEN VERSION >>> #<ctx #301
                      stack: (pair pair
                                   number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #302
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c84a5f				bits 64
c84a5f 90		version710:
c84a60 ff742428			push	qword [rsp+40]
c84a64			version711:
c84a64 58			pop	rax
c84a65 5b			pop	rbx
c84a66 48894307			mov	[rbx+7],rax
c84a6a 6aee			push	qword byte -18
c84a6c			version712:
c84a6c ff742410			push	qword [rsp+16]
c84a70			version713:
c84a70 48c7c004000000		mov	rax,dword 4
c84a77 50			push	rax
c84a78			version714:
c84a78			version715:
c84a78			version716:
c84a78 58			pop	rax
c84a79 48290424			sub	[rsp],rax
c84a7d 0f8045c0b600		jo	stub_7f764c7f0ac8_0
c84a83			version717:
c84a83 ff742410			push	qword [rsp+16]
c84a87			version718:
c84a87			version719:
c84a87 58			pop	rax
c84a88 488b400f			mov	rax,[rax+15]
c84a8c 50			push	rax
c84a8d			version720:
c84a8d 488b442408		mov	rax,[rsp+8]
c84a92 4889442420		mov	[rsp+32],rax
c84a97 488b0424			mov	rax,[rsp]
c84a9b 4889442418		mov	[rsp+24],rax
c84aa0 4883c418			add	rsp,byte 24
c84aa4 e935ffffff		jmp	version701
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #296
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #298
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84a1a -> 7f764bc84aa9
------------------------------------------------------------------------
7efe08				bits 64
7efe08			stub_7f764c7efe08_1:
7efe08 fec1			inc	cl
7efe0a			stub_7f764c7efe08_0:
7efe0a e8fef148ff		call	do_callback_handler
7efe0f c1a4ec0100000000
(obj= #(#<procedure #303>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84aa9				bits 64
c84aa9 909090		version721:
c84aac ff3424			push	qword [rsp]
c84aaf			version722:
c84aaf 58			pop	rax
c84ab0 4883c410			add	rsp,byte 16
c84ab4 50			push	rax
c84ab5			version723:
c84ab5 50			push	rax
c84ab6 53			push	rbx
c84ab7 48b84080aa4e767f
c84abf 0000			mov	rax,140146102665280
c84ac1 488b18			mov	rbx,[rax]
c84ac4 48ffc3			inc	rbx
c84ac7 488918			mov	[rax],rbx
c84aca 5b			pop	rbx
c84acb 58			pop	rax
c84acc 488b0424			mov	rax,[rsp]
c84ad0 4889c3			mov	rbx,rax
c84ad3 4883e003			and	rax,byte 3
c84ad7 4883f801			cmp	rax,byte 1
c84adb 750e			jne	short patchable_jump34
c84add 488b43ff			mov	rax,[rbx-1]
c84ae1 4825f8000000		and	rax,248
c84ae7 4883f808			cmp	rax,byte 8
c84aeb			patchable_jump34:
c84aeb 0f8419b3b600		je	stub_7f764c7efe08_0
c84af1 e912b3b600		jmp	stub_7f764c7efe08_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84aeb -> 7f764c7efe08
GEN VERSION >>> #<ctx #304
                      stack: (pair pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efde8				bits 64
7efde8			stub_7f764c7efde8_1:
7efde8 fec1			inc	cl
7efdea			stub_7f764c7efde8_0:
7efdea e81ef248ff		call	do_callback_handler
7efdef 91a8ec0100000000
(obj= #(#<procedure #305>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84af1				bits 64
c84af1 909090		version724:
c84af4 6afe			push	qword byte -2
c84af6			version725:
c84af6 ff742418			push	qword [rsp+24]
c84afa			version726:
c84afa 50			push	rax
c84afb 53			push	rbx
c84afc 48b84080aa4e767f
c84b04 0000			mov	rax,140146102665280
c84b06 488b18			mov	rbx,[rax]
c84b09 48ffc3			inc	rbx
c84b0c 488918			mov	[rax],rbx
c84b0f 5b			pop	rbx
c84b10 58			pop	rax
c84b11 488b0424			mov	rax,[rsp]
c84b15 4889c3			mov	rbx,rax
c84b18 4883e003			and	rax,byte 3
c84b1c 4883f801			cmp	rax,byte 1
c84b20 750e			jne	short patchable_jump35
c84b22 488b43ff			mov	rax,[rbx-1]
c84b26 4825f8000000		and	rax,248
c84b2c 4883f808			cmp	rax,byte 8
c84b30			patchable_jump35:
c84b30 0f84b4b2b600		je	stub_7f764c7efde8_0
c84b36 e9adb2b600		jmp	stub_7f764c7efde8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84b30 -> 7f764c7efde8
GEN VERSION >>> #<ctx #306
                      stack: (pair retAddr
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #307
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efdd8				bits 64
7efdd8			stub_7f764c7efdd8_0:
7efdd8 e88af248ff		call	do_callback_cont_handler
7efddd 31a9ec0100000000
(obj= #(#<procedure #308>))
------------------------------------------------------------------------
c84b36				bits 64
c84b36 9090		version727:
c84b38 58			pop	rax
c84b39 488b4007			mov	rax,[rax+7]
c84b3d 50			push	rax
c84b3e			version728:
c84b3e 41ffb278020000		push	qword [r10+632]
c84b45			version729:
c84b45			version730:
c84b45 48c7c0f0a3ec01		mov	rax,dword 32285680
c84b4c 4889442410		mov	[rsp+16],rax
c84b51 e979fbffff		jmp	version621
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #282
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #284
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc848f3 -> 7f764bc84b56
------------------------------------------------------------------------
c84b56				bits 64
c84b56 9090		version731:
c84b58 6afe			push	qword byte -2
c84b5a			version732:
c84b5a 58			pop	rax
c84b5b 4883c410			add	rsp,byte 16
c84b5f 50			push	rax
c84b60 e997f7ffff		jmp	version531
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #262
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #263
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84736 -> 7f764bc84b65
------------------------------------------------------------------------
7efea8				bits 64
7efea8			stub_7f764c7efea8_1:
7efea8 fec1			inc	cl
7efeaa			stub_7f764c7efea8_0:
7efeaa e85ef148ff		call	do_callback_handler
7efeaf 41bcec0100000000
(obj= #(#<procedure #309>))
------------------------------------------------------------------------
c84b65				bits 64
c84b65 909090		version733:
c84b68 ff742418			push	qword [rsp+24]
c84b6c			version734:
c84b6c			version735:
c84b6c 6af6			push	qword byte -10
c84b6e			version736:
c84b6e 58			pop	rax
c84b6f 5b			pop	rbx
c84b70 48894307			mov	[rbx+7],rax
c84b74 6aee			push	qword byte -18
c84b76			version737:
c84b76 ff742420			push	qword [rsp+32]
c84b7a			version738:
c84b7a			version739:
c84b7a 58			pop	rax
c84b7b 488b4007			mov	rax,[rax+7]
c84b7f 50			push	rax
c84b80			version740:
c84b80 58			pop	rax
c84b81 4883c408			add	rsp,byte 8
c84b85 50			push	rax
c84b86			version741:
c84b86 58			pop	rax
c84b87 4883c408			add	rsp,byte 8
c84b8b 50			push	rax
c84b8c			version742:
c84b8c 58			pop	rax
c84b8d 5b			pop	rbx
c84b8e 4889430f			mov	[rbx+15],rax
c84b92 6aee			push	qword byte -18
c84b94			version743:
c84b94 ff742410			push	qword [rsp+16]
c84b98			version744:
c84b98			version745:
c84b98 58			pop	rax
c84b99 488b400f			mov	rax,[rax+15]
c84b9d 50			push	rax
c84b9e			version746:
c84b9e ff742410			push	qword [rsp+16]
c84ba2			version747:
c84ba2			version748:
c84ba2 58			pop	rax
c84ba3 488b400f			mov	rax,[rax+15]
c84ba7 50			push	rax
c84ba8			version749:
c84ba8 488b442408		mov	rax,[rsp+8]
c84bad 4889442420		mov	[rsp+32],rax
c84bb2 488b0424			mov	rax,[rsp]
c84bb6 4889442418		mov	[rsp+24],rax
c84bbb 4883c418			add	rsp,byte 24
c84bbf			version750:
c84bbf ff3424			push	qword [rsp]
c84bc2			version751:
c84bc2			version752:
c84bc2 50			push	rax
c84bc3 53			push	rbx
c84bc4 48b84080aa4e767f
c84bcc 0000			mov	rax,140146102665280
c84bce 488b18			mov	rbx,[rax]
c84bd1 48ffc3			inc	rbx
c84bd4 488918			mov	[rax],rbx
c84bd7 5b			pop	rbx
c84bd8 58			pop	rax
c84bd9 48c7c0f6ffffff		mov	rax,dword -10
c84be0 48390424			cmp	[rsp],rax
c84be4 48c7c0faffffff		mov	rax,dword -6
c84beb 7407			je	short done9
c84bed 48c7c0feffffff		mov	rax,dword -2
c84bf4			done9:
c84bf4 48890424			mov	[rsp],rax
c84bf8			version753:
c84bf8 58			pop	rax
c84bf9 4883f8fe			cmp	rax,byte -2
c84bfd			patchable_jump36:
c84bfd 0f84a7b2b600		je	stub_7f764c7efea8_0
c84c03 e9a0b2b600		jmp	stub_7f764c7efea8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84bfd -> 7f764c7efea8
GEN VERSION >>> #<ctx #310
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #312
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efe68				bits 64
7efe68			stub_7f764c7efe68_1:
7efe68 fec1			inc	cl
7efe6a			stub_7f764c7efe68_0:
7efe6a e89ef148ff		call	do_callback_handler
7efe6f 71b9ec0100000000
(obj= #(#<procedure #313>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84c03				bits 64
c84c03 90		version754:
c84c04 6afe			push	qword byte -2
c84c06			version755:
c84c06 ff742408			push	qword [rsp+8]
c84c0a			version756:
c84c0a 50			push	rax
c84c0b 53			push	rbx
c84c0c 48b84080aa4e767f
c84c14 0000			mov	rax,140146102665280
c84c16 488b18			mov	rbx,[rax]
c84c19 48ffc3			inc	rbx
c84c1c 488918			mov	[rax],rbx
c84c1f 5b			pop	rbx
c84c20 58			pop	rax
c84c21 488b0424			mov	rax,[rsp]
c84c25 4889c3			mov	rbx,rax
c84c28 4883e003			and	rax,byte 3
c84c2c 4883f801			cmp	rax,byte 1
c84c30 750e			jne	short patchable_jump37
c84c32 488b43ff			mov	rax,[rbx-1]
c84c36 4825f8000000		and	rax,248
c84c3c 4883f808			cmp	rax,byte 8
c84c40			patchable_jump37:
c84c40 0f8424b2b600		je	stub_7f764c7efe68_0
c84c46 e91db2b600		jmp	stub_7f764c7efe68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84c40 -> 7f764c7efe68
GEN VERSION >>> #<ctx #314
                      stack: (pair retAddr
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #315
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efdc8				bits 64
7efdc8			stub_7f764c7efdc8_0:
7efdc8 e89af248ff		call	do_callback_cont_handler
7efdcd b1c21f0200000000
(obj= #(#<procedure #316>))
------------------------------------------------------------------------
c84c46				bits 64
c84c46 9090		version757:
c84c48 58			pop	rax
c84c49 488b4007			mov	rax,[rax+7]
c84c4d 50			push	rax
c84c4e			version758:
c84c4e 41ffb278020000		push	qword [r10+632]
c84c55			version759:
c84c55			version760:
c84c55 48c7c080d41f02		mov	rax,dword 35640448
c84c5c 4889442410		mov	[rsp+16],rax
c84c61			version761:
c84c61 488b0424			mov	rax,[rsp]
c84c65 48c7c704000000		mov	rdi,dword 4
c84c6c 488b4007			mov	rax,[rax+7]
c84c70 488b4008			mov	rax,[rax+8]
c84c74 ffe0			jmp	rax
------------------------------------------------------------------------
7efdb8				bits 64
7efdb8			stub_7f764c7efdb8_0:
7efdb8 e850f248ff		call	do_callback_handler
7efdbd 31a0ec0100000000
(obj= #(#<procedure #317>))
------------------------------------------------------------------------
7efda8				bits 64
7efda8			stub_7f764c7efda8_1:
7efda8 fec1			inc	cl
7efdaa			stub_7f764c7efda8_0:
7efdaa e85ef248ff		call	do_callback_handler
7efdaf b1a2ec0100000000
(obj= #(#<procedure #318>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84c76				bits 64
c84c76 9090		continuation_9:
c84c78 50			push	rax
c84c79			version762:
c84c79			version763:
c84c79 48c7c008000000		mov	rax,dword 8
c84c80 50			push	rax
c84c81			version764:
c84c81			version765:
c84c81 5b			pop	rbx
c84c82 58			pop	rax
c84c83 48c1f802			sar	rax,2
c84c87 48c1fb02			sar	rbx,2
c84c8b 4883fb00			cmp	rbx,byte 0
c84c8f 0f8423b1b600		je	stub_7f764c7efdb8_0
c84c95 4899			cqo
c84c97 48f7fb			idiv	rbx
c84c9a 48c1e002			shl	rax,2
c84c9e 50			push	rax
c84c9f			version766:
c84c9f ff742408			push	qword [rsp+8]
c84ca3			version767:
c84ca3 50			push	rax
c84ca4 53			push	rbx
c84ca5 48b84080aa4e767f
c84cad 0000			mov	rax,140146102665280
c84caf 488b18			mov	rbx,[rax]
c84cb2 48ffc3			inc	rbx
c84cb5 488918			mov	[rax],rbx
c84cb8 5b			pop	rbx
c84cb9 58			pop	rax
c84cba 488b0424			mov	rax,[rsp]
c84cbe 4889c3			mov	rbx,rax
c84cc1 4883e003			and	rax,byte 3
c84cc5 4883f801			cmp	rax,byte 1
c84cc9 750e			jne	short patchable_jump38
c84ccb 488b43ff			mov	rax,[rbx-1]
c84ccf 4825f8000000		and	rax,248
c84cd5 4883f808			cmp	rax,byte 8
c84cd9			patchable_jump38:
c84cd9 0f84cbb0b600		je	stub_7f764c7efda8_0
c84cdf e9c4b0b600		jmp	stub_7f764c7efda8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84cd9 -> 7f764c7efda8
GEN VERSION >>> #<ctx #319
                      stack: (pair number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #320
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efd98				bits 64
7efd98			stub_7f764c7efd98_0:
7efd98 e8caf248ff		call	do_callback_cont_handler
7efd9d e1a8ec0100000000
(obj= #(#<procedure #321>))
------------------------------------------------------------------------
c84cdf				bits 64
c84cdf 90		version768:
c84ce0 58			pop	rax
c84ce1 488b4007			mov	rax,[rax+7]
c84ce5 50			push	rax
c84ce6			version769:
c84ce6			version770:
c84ce6 6afe			push	qword byte -2
c84ce8			version771:
c84ce8 ff742410			push	qword [rsp+16]
c84cec			version772:
c84cec 41ffb218030000		push	qword [r10+792]
c84cf3			version773:
c84cf3			version774:
c84cf3 48c7c020a1ec01		mov	rax,dword 32284960
c84cfa 4889442410		mov	[rsp+16],rax
c84cff			version775:
c84cff 488b0424			mov	rax,[rsp]
c84d03 49c7c3e19fec01		mov	r11,dword 32284641
c84d0a 488b4007			mov	rax,[rax+7]
c84d0e 48c7c704000000		mov	rdi,dword 4
c84d15 488b4030			mov	rax,[rax+48]
c84d19 ffe0			jmp	rax
------------------------------------------------------------------------
7efd88				bits 64
7efd88			stub_7f764c7efd88_1:
7efd88 fec1			inc	cl
7efd8a			stub_7f764c7efd88_0:
7efd8a e87ef248ff		call	do_callback_handler
7efd8f 3105ec0100000000
(obj= #(#<procedure #322>))
------------------------------------------------------------------------
c84d1b				bits 64
c84d1b 90		continuation_10:
c84d1c 50			push	rax
c84d1d			version776:
c84d1d 58			pop	rax
c84d1e 4883f8fe			cmp	rax,byte -2
c84d22			patchable_jump39:
c84d22 0f8462b0b600		je	stub_7f764c7efd88_0
c84d28 e95bb0b600		jmp	stub_7f764c7efd88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84d22 -> 7f764c7efd88
GEN VERSION >>> #<ctx #323
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #325
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efd78				bits 64
7efd78			stub_7f764c7efd78_1:
7efd78 fec1			inc	cl
7efd7a			stub_7f764c7efd78_0:
7efd7a e88ef248ff		call	do_callback_handler
7efd7f 01a6ec0100000000
(obj= #(#<procedure #327>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84d28				bits 64
c84d28			version777:
c84d28 ff3424			push	qword [rsp]
c84d2b			version778:
c84d2b 50			push	rax
c84d2c 53			push	rbx
c84d2d 48b84080aa4e767f
c84d35 0000			mov	rax,140146102665280
c84d37 488b18			mov	rbx,[rax]
c84d3a 48ffc3			inc	rbx
c84d3d 488918			mov	[rax],rbx
c84d40 5b			pop	rbx
c84d41 58			pop	rax
c84d42 488b0424			mov	rax,[rsp]
c84d46 4889c3			mov	rbx,rax
c84d49 4883e003			and	rax,byte 3
c84d4d 4883f801			cmp	rax,byte 1
c84d51 750e			jne	short patchable_jump40
c84d53 488b43ff			mov	rax,[rbx-1]
c84d57 4825f8000000		and	rax,248
c84d5d 4883f808			cmp	rax,byte 8
c84d61			patchable_jump40:
c84d61 0f8413b0b600		je	stub_7f764c7efd78_0
c84d67 e90cb0b600		jmp	stub_7f764c7efd78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84d61 -> 7f764c7efd78
GEN VERSION >>> #<ctx #328
                      stack: (pair pair
                                   number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #329
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c84d67				bits 64
c84d67 90		version779:
c84d68 ff742428			push	qword [rsp+40]
c84d6c			version780:
c84d6c 58			pop	rax
c84d6d 5b			pop	rbx
c84d6e 48894307			mov	[rbx+7],rax
c84d72 6aee			push	qword byte -18
c84d74			version781:
c84d74 ff742410			push	qword [rsp+16]
c84d78			version782:
c84d78 48c7c004000000		mov	rax,dword 4
c84d7f 50			push	rax
c84d80			version783:
c84d80			version784:
c84d80			version785:
c84d80 58			pop	rax
c84d81 48290424			sub	[rsp],rax
c84d85 0f803dbdb600		jo	stub_7f764c7f0ac8_0
c84d8b			version786:
c84d8b ff742410			push	qword [rsp+16]
c84d8f			version787:
c84d8f			version788:
c84d8f 58			pop	rax
c84d90 488b400f			mov	rax,[rax+15]
c84d94 50			push	rax
c84d95			version789:
c84d95 488b442408		mov	rax,[rsp+8]
c84d9a 4889442420		mov	[rsp+32],rax
c84d9f 488b0424			mov	rax,[rsp]
c84da3 4889442418		mov	[rsp+24],rax
c84da8 4883c418			add	rsp,byte 24
c84dac e935ffffff		jmp	version770
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #323
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #325
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84d22 -> 7f764bc84db1
------------------------------------------------------------------------
7efd88				bits 64
7efd88			stub_7f764c7efd88_1:
7efd88 fec1			inc	cl
7efd8a			stub_7f764c7efd88_0:
7efd8a e87ef248ff		call	do_callback_handler
7efd8f 71aaec0100000000
(obj= #(#<procedure #330>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84db1				bits 64
c84db1 909090		version790:
c84db4 ff3424			push	qword [rsp]
c84db7			version791:
c84db7 58			pop	rax
c84db8 4883c410			add	rsp,byte 16
c84dbc 50			push	rax
c84dbd			version792:
c84dbd 50			push	rax
c84dbe 53			push	rbx
c84dbf 48b84080aa4e767f
c84dc7 0000			mov	rax,140146102665280
c84dc9 488b18			mov	rbx,[rax]
c84dcc 48ffc3			inc	rbx
c84dcf 488918			mov	[rax],rbx
c84dd2 5b			pop	rbx
c84dd3 58			pop	rax
c84dd4 488b0424			mov	rax,[rsp]
c84dd8 4889c3			mov	rbx,rax
c84ddb 4883e003			and	rax,byte 3
c84ddf 4883f801			cmp	rax,byte 1
c84de3 750e			jne	short patchable_jump41
c84de5 488b43ff			mov	rax,[rbx-1]
c84de9 4825f8000000		and	rax,248
c84def 4883f808			cmp	rax,byte 8
c84df3			patchable_jump41:
c84df3 0f8491afb600		je	stub_7f764c7efd88_0
c84df9 e98aafb600		jmp	stub_7f764c7efd88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84df3 -> 7f764c7efd88
GEN VERSION >>> #<ctx #331
                      stack: (pair pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efd68				bits 64
7efd68			stub_7f764c7efd68_1:
7efd68 fec1			inc	cl
7efd6a			stub_7f764c7efd68_0:
7efd6a e89ef248ff		call	do_callback_handler
7efd6f 11abec0100000000
(obj= #(#<procedure #332>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84df9				bits 64
c84df9 909090		version793:
c84dfc 6afe			push	qword byte -2
c84dfe			version794:
c84dfe ff742418			push	qword [rsp+24]
c84e02			version795:
c84e02 50			push	rax
c84e03 53			push	rbx
c84e04 48b84080aa4e767f
c84e0c 0000			mov	rax,140146102665280
c84e0e 488b18			mov	rbx,[rax]
c84e11 48ffc3			inc	rbx
c84e14 488918			mov	[rax],rbx
c84e17 5b			pop	rbx
c84e18 58			pop	rax
c84e19 488b0424			mov	rax,[rsp]
c84e1d 4889c3			mov	rbx,rax
c84e20 4883e003			and	rax,byte 3
c84e24 4883f801			cmp	rax,byte 1
c84e28 750e			jne	short patchable_jump42
c84e2a 488b43ff			mov	rax,[rbx-1]
c84e2e 4825f8000000		and	rax,248
c84e34 4883f808			cmp	rax,byte 8
c84e38			patchable_jump42:
c84e38 0f842cafb600		je	stub_7f764c7efd68_0
c84e3e e925afb600		jmp	stub_7f764c7efd68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84e38 -> 7f764c7efd68
GEN VERSION >>> #<ctx #333
                      stack: (pair retAddr
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #334
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efd58				bits 64
7efd58			stub_7f764c7efd58_0:
7efd58 e80af348ff		call	do_callback_cont_handler
7efd5d b1abec0100000000
(obj= #(#<procedure #335>))
------------------------------------------------------------------------
c84e3e				bits 64
c84e3e 9090		version796:
c84e40 58			pop	rax
c84e41 488b4007			mov	rax,[rax+7]
c84e45 50			push	rax
c84e46			version797:
c84e46 41ffb278020000		push	qword [r10+632]
c84e4d			version798:
c84e4d			version799:
c84e4d 48c7c000acec01		mov	rax,dword 32287744
c84e54 4889442410		mov	[rsp+16],rax
c84e59			version800:
c84e59 488b0424			mov	rax,[rsp]
c84e5d 48c7c704000000		mov	rdi,dword 4
c84e64 488b4007			mov	rax,[rax+7]
c84e68 488b4008			mov	rax,[rax+8]
c84e6c ffe0			jmp	rax
------------------------------------------------------------------------
7efd48				bits 64
7efd48			stub_7f764c7efd48_0:
7efd48 e8c0f248ff		call	do_callback_handler
7efd4d 21adec0100000000
(obj= #(#<procedure #336>))
------------------------------------------------------------------------
7efd38				bits 64
7efd38			stub_7f764c7efd38_0:
7efd38 e8d0f248ff		call	do_callback_handler
7efd3d 71adec0100000000
(obj= #(#<procedure #337>))
------------------------------------------------------------------------
7efd28				bits 64
7efd28			stub_7f764c7efd28_1:
7efd28 fec1			inc	cl
7efd2a			stub_7f764c7efd28_0:
7efd2a e8def248ff		call	do_callback_handler
7efd2f c1adec0100000000
(obj= #(#<procedure #338>))
------------------------------------------------------------------------
c84e6e				bits 64
c84e6e 9090		continuation_11:
c84e70 50			push	rax
c84e71			version801:
c84e71			version802:
c84e71 48c7c008000000		mov	rax,dword 8
c84e78 50			push	rax
c84e79			version803:
c84e79			version804:
c84e79 5b			pop	rbx
c84e7a 58			pop	rax
c84e7b 48c1f802			sar	rax,2
c84e7f 48c1fb02			sar	rbx,2
c84e83 4883fb00			cmp	rbx,byte 0
c84e87 0f84bbaeb600		je	stub_7f764c7efd48_0
c84e8d 4899			cqo
c84e8f 48f7fb			idiv	rbx
c84e92 48c1e002			shl	rax,2
c84e96 50			push	rax
c84e97			version805:
c84e97			version806:
c84e97 ff3424			push	qword [rsp]
c84e9a			version807:
c84e9a 48c7c000000000		mov	rax,dword 0
c84ea1 50			push	rax
c84ea2			version808:
c84ea2			version809:
c84ea2			version810:
c84ea2 488b442408		mov	rax,[rsp+8]
c84ea7 483b0424			cmp	rax,[rsp]
c84eab			label-jump9:
c84eab 0f8587aeb600		jne	stub_7f764c7efd38_0
c84eb1			version811:
c84eb1 4883c410			add	rsp,byte 16
c84eb5 6afa			push	qword byte -6
c84eb7			version812:
c84eb7 58			pop	rax
c84eb8 4883f8fe			cmp	rax,byte -2
c84ebc			patchable_jump43:
c84ebc 0f8468aeb600		je	stub_7f764c7efd28_0
c84ec2 e961aeb600		jmp	stub_7f764c7efd28_1
GEN VERSION >>> #<ctx #339
                      stack: (number number
                                     number
                                     pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #340
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #341
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84eab -> 7f764bc84ec7
------------------------------------------------------------------------
c84ec7				bits 64
c84ec7 90		version813:
c84ec8 4883c410			add	rsp,byte 16
c84ecc 6afe			push	qword byte -2
c84ece ebe7			jmp	short version812
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #342
                      stack: (number pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84ebc -> 7f764bc84ed0
------------------------------------------------------------------------
7efd18				bits 64
7efd18			stub_7f764c7efd18_1:
7efd18 fec1			inc	cl
7efd1a			stub_7f764c7efd18_0:
7efd1a e8eef248ff		call	do_callback_handler
7efd1f b1aeec0100000000
(obj= #(#<procedure #345>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84ed0				bits 64
c84ed0			version814:
c84ed0 ff3424			push	qword [rsp]
c84ed3			version815:
c84ed3 ff742420			push	qword [rsp+32]
c84ed7			version816:
c84ed7 50			push	rax
c84ed8 53			push	rbx
c84ed9 48b84080aa4e767f
c84ee1 0000			mov	rax,140146102665280
c84ee3 488b18			mov	rbx,[rax]
c84ee6 48ffc3			inc	rbx
c84ee9 488918			mov	[rax],rbx
c84eec 5b			pop	rbx
c84eed 58			pop	rax
c84eee 488b0424			mov	rax,[rsp]
c84ef2 4889c3			mov	rbx,rax
c84ef5 4883e003			and	rax,byte 3
c84ef9 4883f801			cmp	rax,byte 1
c84efd 750e			jne	short patchable_jump44
c84eff 488b43ff			mov	rax,[rbx-1]
c84f03 4825f8000000		and	rax,248
c84f09 4883f808			cmp	rax,byte 8
c84f0d			patchable_jump44:
c84f0d 0f8407aeb600		je	stub_7f764c7efd18_0
c84f13 e900aeb600		jmp	stub_7f764c7efd18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84f0d -> 7f764c7efd18
GEN VERSION >>> #<ctx #346
                      stack: (pair number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #348
                                     type: local
                                     offset: 5
                                     pos: (10 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efd08				bits 64
7efd08			stub_7f764c7efd08_0:
7efd08 e800f348ff		call	do_callback_handler
7efd0d 51afec0100000000
(obj= #(#<procedure #350>))
------------------------------------------------------------------------
7efcf8				bits 64
7efcf8			stub_7f764c7efcf8_1:
7efcf8 fec1			inc	cl
7efcfa			stub_7f764c7efcf8_0:
7efcfa e80ef348ff		call	do_callback_handler
7efcff a1afec0100000000
(obj= #(#<procedure #351>))
------------------------------------------------------------------------
c84f13				bits 64
c84f13 90		version817:
c84f14 58			pop	rax
c84f15 488b4007			mov	rax,[rax+7]
c84f19 50			push	rax
c84f1a			version818:
c84f1a			version819:
c84f1a ff742408			push	qword [rsp+8]
c84f1e			version820:
c84f1e 48c7c004000000		mov	rax,dword 4
c84f25 50			push	rax
c84f26			version821:
c84f26			version822:
c84f26			version823:
c84f26 488b442408		mov	rax,[rsp+8]
c84f2b 483b0424			cmp	rax,[rsp]
c84f2f			label-jump10:
c84f2f 0f85d3adb600		jne	stub_7f764c7efd08_0
c84f35			version824:
c84f35 4883c410			add	rsp,byte 16
c84f39 6afa			push	qword byte -6
c84f3b			version825:
c84f3b 58			pop	rax
c84f3c 4883f8fe			cmp	rax,byte -2
c84f40			patchable_jump45:
c84f40 0f84b4adb600		je	stub_7f764c7efcf8_0
c84f46 e9adadb600		jmp	stub_7f764c7efcf8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #352
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efce8				bits 64
7efce8			stub_7f764c7efce8_1:
7efce8 fec1			inc	cl
7efcea			stub_7f764c7efce8_0:
7efcea e81ef348ff		call	do_callback_handler
7efcef 41b0ec0100000000
(obj= #(#<procedure #356>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84f46				bits 64
c84f46 9090		version826:
c84f48 ff3424			push	qword [rsp]
c84f4b			version827:
c84f4b 50			push	rax
c84f4c 53			push	rbx
c84f4d 48b84080aa4e767f
c84f55 0000			mov	rax,140146102665280
c84f57 488b18			mov	rbx,[rax]
c84f5a 48ffc3			inc	rbx
c84f5d 488918			mov	[rax],rbx
c84f60 5b			pop	rbx
c84f61 58			pop	rax
c84f62 488b0424			mov	rax,[rsp]
c84f66 4889c3			mov	rbx,rax
c84f69 4883e003			and	rax,byte 3
c84f6d 4883f801			cmp	rax,byte 1
c84f71 750e			jne	short patchable_jump46
c84f73 488b43ff			mov	rax,[rbx-1]
c84f77 4825f8000000		and	rax,248
c84f7d 4883f808			cmp	rax,byte 8
c84f81			patchable_jump46:
c84f81 0f8463adb600		je	stub_7f764c7efce8_0
c84f87 e95cadb600		jmp	stub_7f764c7efce8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84f81 -> 7f764c7efce8
GEN VERSION >>> #<ctx #357
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #358
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c84f87				bits 64
c84f87 90		version828:
c84f88 58			pop	rax
c84f89 488b400f			mov	rax,[rax+15]
c84f8d 50			push	rax
c84f8e			version829:
c84f8e			version830:
c84f8e ff742408			push	qword [rsp+8]
c84f92			version831:
c84f92			version832:
c84f92 6af6			push	qword byte -10
c84f94			version833:
c84f94 58			pop	rax
c84f95 5b			pop	rbx
c84f96 4889430f			mov	[rbx+15],rax
c84f9a 6aee			push	qword byte -18
c84f9c			version834:
c84f9c ff742408			push	qword [rsp+8]
c84fa0			version835:
c84fa0 58			pop	rax
c84fa1 4883c410			add	rsp,byte 16
c84fa5 50			push	rax
c84fa6			version836:
c84fa6 58			pop	rax
c84fa7 4883c410			add	rsp,byte 16
c84fab 50			push	rax
c84fac e9d5fbffff		jmp	version741
GEN VERSION >>> #<ctx #359
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #360
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84f2f -> 7f764bc84fb1
------------------------------------------------------------------------
c84fb1				bits 64
c84fb1 909090		version837:
c84fb4 4883c410			add	rsp,byte 16
c84fb8 6afe			push	qword byte -2
c84fba e97cffffff		jmp	version825
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #352
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84f40 -> 7f764bc84fbf
------------------------------------------------------------------------
7efcf8				bits 64
7efcf8			stub_7f764c7efcf8_1:
7efcf8 fec1			inc	cl
7efcfa			stub_7f764c7efcf8_0:
7efcfa e80ef348ff		call	do_callback_handler
7efcff 81b1ec0100000000
(obj= #(#<procedure #361>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c84fbf				bits 64
c84fbf 90		version838:
c84fc0 ff3424			push	qword [rsp]
c84fc3			version839:
c84fc3 50			push	rax
c84fc4 53			push	rbx
c84fc5 48b84080aa4e767f
c84fcd 0000			mov	rax,140146102665280
c84fcf 488b18			mov	rbx,[rax]
c84fd2 48ffc3			inc	rbx
c84fd5 488918			mov	[rax],rbx
c84fd8 5b			pop	rbx
c84fd9 58			pop	rax
c84fda 488b0424			mov	rax,[rsp]
c84fde 4889c3			mov	rbx,rax
c84fe1 4883e003			and	rax,byte 3
c84fe5 4883f801			cmp	rax,byte 1
c84fe9 750e			jne	short patchable_jump47
c84feb 488b43ff			mov	rax,[rbx-1]
c84fef 4825f8000000		and	rax,248
c84ff5 4883f808			cmp	rax,byte 8
c84ff9			patchable_jump47:
c84ff9 0f84fbacb600		je	stub_7f764c7efcf8_0
c84fff e9f4acb600		jmp	stub_7f764c7efcf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc84ff9 -> 7f764c7efcf8
GEN VERSION >>> #<ctx #362
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #363
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c84fff				bits 64
c84fff 90		version840:
c85000 ff742438			push	qword [rsp+56]
c85004			version841:
c85004 58			pop	rax
c85005 5b			pop	rbx
c85006 48894307			mov	[rbx+7],rax
c8500a 6aee			push	qword byte -18
c8500c			version842:
c8500c ff742410			push	qword [rsp+16]
c85010			version843:
c85010 48c7c004000000		mov	rax,dword 4
c85017 50			push	rax
c85018			version844:
c85018			version845:
c85018			version846:
c85018 58			pop	rax
c85019 48290424			sub	[rsp],rax
c8501d 0f80c5bab600		jo	stub_7f764c7f0ae8_0
c85023			version847:
c85023 ff742410			push	qword [rsp+16]
c85027			version848:
c85027			version849:
c85027 58			pop	rax
c85028 488b400f			mov	rax,[rax+15]
c8502c 50			push	rax
c8502d			version850:
c8502d 488b442408		mov	rax,[rsp+8]
c85032 4889442420		mov	[rsp+32],rax
c85037 488b0424			mov	rax,[rsp]
c8503b 4889442418		mov	[rsp+24],rax
c85040 4883c418			add	rsp,byte 24
c85044 e9d1feffff		jmp	version819
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #310
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #312
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84bfd -> 7f764bc85049
------------------------------------------------------------------------
7efea8				bits 64
7efea8			stub_7f764c7efea8_0:
7efea8 e860f148ff		call	do_callback_handler
7efead d1a9ec0100000000
(obj= #(#<procedure #364>))
------------------------------------------------------------------------
7efcd8				bits 64
7efcd8			stub_7f764c7efcd8_1:
7efcd8 fec1			inc	cl
7efcda			stub_7f764c7efcd8_0:
7efcda e82ef348ff		call	do_callback_handler
7efcdf 41bcec0100000000
(obj= #(#<procedure #365>))
------------------------------------------------------------------------
c85049				bits 64
c85049 909090		version851:
c8504c 6afe			push	qword byte -2
c8504e			version852:
c8504e 58			pop	rax
c8504f 4883c410			add	rsp,byte 16
c85053 50			push	rax
c85054			version853:
c85054 ff742408			push	qword [rsp+8]
c85058			version854:
c85058 48c7c004000000		mov	rax,dword 4
c8505f 50			push	rax
c85060			version855:
c85060			version856:
c85060			version857:
c85060 58			pop	rax
c85061 48290424			sub	[rsp],rax
c85065 0f808dbab600		jo	stub_7f764c7f0af8_0
c8506b			version858:
c8506b 488b0424			mov	rax,[rsp]
c8506f 4889442410		mov	[rsp+16],rax
c85074 4883c410			add	rsp,byte 16
c85078			version859:
c85078 ff3424			push	qword [rsp]
c8507b			version860:
c8507b 48c7c000000000		mov	rax,dword 0
c85082 50			push	rax
c85083			version861:
c85083			version862:
c85083			version863:
c85083 488b442408		mov	rax,[rsp+8]
c85088 483b0424			cmp	rax,[rsp]
c8508c			label-jump11:
c8508c 0f8516aeb600		jne	stub_7f764c7efea8_0
c85092			version864:
c85092 4883c410			add	rsp,byte 16
c85096 6afa			push	qword byte -6
c85098			version865:
c85098 58			pop	rax
c85099 4883f8fe			cmp	rax,byte -2
c8509d			patchable_jump48:
c8509d 0f8437acb600		je	stub_7f764c7efcd8_0
c850a3 e930acb600		jmp	stub_7f764c7efcd8_1
GEN VERSION >>> #<ctx #366
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #367
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #368
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8508c -> 7f764bc850a8
------------------------------------------------------------------------
c850a8				bits 64
c850a8			version866:
c850a8 4883c410			add	rsp,byte 16
c850ac 6afe			push	qword byte -2
c850ae ebe8			jmp	short version865
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #369
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #368
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8509d -> 7f764bc850b0
------------------------------------------------------------------------
7efcc8				bits 64
7efcc8			stub_7f764c7efcc8_1:
7efcc8 fec1			inc	cl
7efcca			stub_7f764c7efcc8_0:
7efcca e83ef348ff		call	do_callback_handler
7efccf d19dec0100000000
(obj= #(#<procedure #371>))
------------------------------------------------------------------------
c850b0				bits 64
c850b0			version867:
c850b0 ff742408			push	qword [rsp+8]
c850b4			version868:
c850b4			version869:
c850b4 58			pop	rax
c850b5 488b4007			mov	rax,[rax+7]
c850b9 50			push	rax
c850ba			version870:
c850ba			version871:
c850ba 50			push	rax
c850bb 53			push	rbx
c850bc 48b84080aa4e767f
c850c4 0000			mov	rax,140146102665280
c850c6 488b18			mov	rbx,[rax]
c850c9 48ffc3			inc	rbx
c850cc 488918			mov	[rax],rbx
c850cf 5b			pop	rbx
c850d0 58			pop	rax
c850d1 48c7c0f6ffffff		mov	rax,dword -10
c850d8 48390424			cmp	[rsp],rax
c850dc 48c7c0faffffff		mov	rax,dword -6
c850e3 7407			je	short done10
c850e5 48c7c0feffffff		mov	rax,dword -2
c850ec			done10:
c850ec 48890424			mov	[rsp],rax
c850f0			version872:
c850f0 58			pop	rax
c850f1 4883f8fe			cmp	rax,byte -2
c850f5			patchable_jump49:
c850f5 0f84cfabb600		je	stub_7f764c7efcc8_0
c850fb e9c8abb600		jmp	stub_7f764c7efcc8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #372
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #373
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efcb8				bits 64
7efcb8			stub_7f764c7efcb8_1:
7efcb8 fec1			inc	cl
7efcba			stub_7f764c7efcb8_0:
7efcba e84ef348ff		call	do_callback_handler
7efcbf 81a9ec0100000000
(obj= #(#<procedure #374>))
------------------------------------------------------------------------
c850fb				bits 64
c850fb 90		version873:
c850fc ff742408			push	qword [rsp+8]
c85100			version874:
c85100			version875:
c85100 ff3424			push	qword [rsp]
c85103			version876:
c85103 48c7c0feffffff		mov	rax,dword -2
c8510a 48890424			mov	[rsp],rax
c8510e			version877:
c8510e 58			pop	rax
c8510f 4883f8fe			cmp	rax,byte -2
c85113			patchable_jump50:
c85113 0f84a1abb600		je	stub_7f764c7efcb8_0
c85119 e99aabb600		jmp	stub_7f764c7efcb8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85113 -> 7f764c7efcb8
GEN VERSION >>> #<ctx #375
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #376
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #377
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efca8				bits 64
7efca8			stub_7f764c7efca8_1:
7efca8 fec1			inc	cl
7efcaa			stub_7f764c7efca8_0:
7efcaa e85ef348ff		call	do_callback_handler
7efcaf b1a5ec0100000000
(obj= #(#<procedure #378>))
------------------------------------------------------------------------
c85119				bits 64
c85119 909090		version878:
c8511c ff3424			push	qword [rsp]
c8511f			version879:
c8511f			version880:
c8511f 58			pop	rax
c85120 488b4007			mov	rax,[rax+7]
c85124 50			push	rax
c85125			version881:
c85125			version882:
c85125 50			push	rax
c85126 53			push	rbx
c85127 48b84080aa4e767f
c8512f 0000			mov	rax,140146102665280
c85131 488b18			mov	rbx,[rax]
c85134 48ffc3			inc	rbx
c85137 488918			mov	[rax],rbx
c8513a 5b			pop	rbx
c8513b 58			pop	rax
c8513c 48c7c0f6ffffff		mov	rax,dword -10
c85143 48390424			cmp	[rsp],rax
c85147 48c7c0faffffff		mov	rax,dword -6
c8514e 7407			je	short done11
c85150 48c7c0feffffff		mov	rax,dword -2
c85157			done11:
c85157 48890424			mov	[rsp],rax
c8515b			version883:
c8515b 58			pop	rax
c8515c 4883f8fe			cmp	rax,byte -2
c85160			patchable_jump51:
c85160 0f8444abb600		je	stub_7f764c7efca8_0
c85166 e93dabb600		jmp	stub_7f764c7efca8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #379
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #380
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #381
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efc98				bits 64
7efc98			stub_7f764c7efc98_0:
7efc98 e870f348ff		call	do_callback_handler
7efc9d 21aaec0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7efc88				bits 64
7efc88			stub_7f764c7efc88_1:
7efc88 fec1			inc	cl
7efc8a			stub_7f764c7efc88_0:
7efc8a e87ef348ff		call	do_callback_handler
7efc8f c1aaec0100000000
(obj= #(#<procedure #382>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c85166				bits 64
c85166 9090		version884:
c85168 ff3424			push	qword [rsp]
c8516b			version885:
c8516b			version886:
c8516b 6af6			push	qword byte -10
c8516d			version887:
c8516d 6af6			push	qword byte -10
c8516f			version888:
c8516f 498d4424e8		lea	rax,[r12-24]
c85174 49bf0880aa4e767f
c8517c 0000			mov	r15,140146102665224
c8517e 493b4728			cmp	rax,[r15+40]
c85182 7d38			jge	short alloc-ok126
c85184 48c7c018000000		mov	rax,dword 24
c8518b 57			push	rdi
c8518c 56			push	rsi
c8518d 52			push	rdx
c8518e 51			push	rcx
c8518f 4150			push	r8
c85191 4151			push	r9
c85193 4152			push	r10
c85195 4153			push	r11
c85197 50			push	rax
c85198 4889e7			mov	rdi,rsp
c8519b 4883e4f0			and	rsp,byte -16
c8519f 4883ec08			sub	rsp,byte 8
c851a3 57			push	rdi
c851a4 e8270f6d01		call	gc
c851a9 5c			pop	rsp
c851aa 4989c4			mov	r12,rax
c851ad 58			pop	rax
c851ae 415b			pop	r11
c851b0 415a			pop	r10
c851b2 4159			pop	r9
c851b4 4158			pop	r8
c851b6 59			pop	rcx
c851b7 5a			pop	rdx
c851b8 5e			pop	rsi
c851b9 5f			pop	rdi
c851ba eb04			jmp	short alloc-end126
c851bc			alloc-ok126:
c851bc 4983ec18			sub	r12,byte 24
c851c0			alloc-end126:
c851c0 48c7c00e030000		mov	rax,dword 782
c851c7 49890424			mov	[r12],rax
c851cb 5b			pop	rbx
c851cc 58			pop	rax
c851cd 4989442408		mov	[r12+8],rax
c851d2 49895c2410		mov	[r12+16],rbx
c851d7 4c89e0			mov	rax,r12
c851da 4883c001			add	rax,byte 1
c851de 50			push	rax
c851df			version889:
c851df 58			pop	rax
c851e0 5b			pop	rbx
c851e1 48894307			mov	[rbx+7],rax
c851e5 6aee			push	qword byte -18
c851e7			version890:
c851e7 6afe			push	qword byte -2
c851e9			version891:
c851e9 ff742410			push	qword [rsp+16]
c851ed			version892:
c851ed			version893:
c851ed 58			pop	rax
c851ee 488b4007			mov	rax,[rax+7]
c851f2 50			push	rax
c851f3			version894:
c851f3 ff742438			push	qword [rsp+56]
c851f7			version895:
c851f7 6af6			push	qword byte -10
c851f9			version896:
c851f9			version897:
c851f9 ff742408			push	qword [rsp+8]
c851fd			version898:
c851fd 48c7c000000000		mov	rax,dword 0
c85204 50			push	rax
c85205			version899:
c85205 50			push	rax
c85206 53			push	rbx
c85207 48b84080aa4e767f
c8520f 0000			mov	rax,140146102665280
c85211 488b18			mov	rbx,[rax]
c85214 48ffc3			inc	rbx
c85217 488918			mov	[rax],rbx
c8521a 5b			pop	rbx
c8521b 58			pop	rax
c8521c 48c7c003000000		mov	rax,dword 3
c85223 4823442408		and	rax,[rsp+8]
c85228			patchable_jump52:
c85228 0f845caab600		je	stub_7f764c7efc88_0
c8522e e955aab600		jmp	stub_7f764c7efc88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85228 -> 7f764c7efc88
GEN VERSION >>> #<ctx #383
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #384
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efc78				bits 64
7efc78			stub_7f764c7efc78_0:
7efc78 e890f348ff		call	do_callback_handler
7efc7d d1acec0100000000
(obj= #(#<procedure #389>))
------------------------------------------------------------------------
7efc68				bits 64
7efc68			stub_7f764c7efc68_1:
7efc68 fec1			inc	cl
7efc6a			stub_7f764c7efc68_0:
7efc6a e89ef348ff		call	do_callback_handler
7efc6f 11aeec0100000000
(obj= #(#<procedure #390>))
------------------------------------------------------------------------
c8522e				bits 64
c8522e 9090		version900:
c85230			version901:
c85230 488b442408		mov	rax,[rsp+8]
c85235 483b0424			cmp	rax,[rsp]
c85239			label-jump12:
c85239 0f8539aab600		jne	stub_7f764c7efc78_0
c8523f			version902:
c8523f 4883c410			add	rsp,byte 16
c85243 6afa			push	qword byte -6
c85245			version903:
c85245 58			pop	rax
c85246 4883f8fe			cmp	rax,byte -2
c8524a			patchable_jump53:
c8524a 0f841aaab600		je	stub_7f764c7efc68_0
c85250 e913aab600		jmp	stub_7f764c7efc68_1
GEN VERSION >>> #<ctx #383
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #384
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85239 -> 7f764bc85255
------------------------------------------------------------------------
c85255				bits 64
c85255 909090		version904:
c85258 4883c410			add	rsp,byte 16
c8525c 6afe			push	qword byte -2
c8525e ebe5			jmp	short version903
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #391
                      stack: (null number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #392
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8524a -> 7f764bc85260
------------------------------------------------------------------------
7efc58				bits 64
7efc58			stub_7f764c7efc58_0:
7efc58 e8b0f348ff		call	do_callback_handler
7efc5d a1afec0100000000
(obj= #(#<procedure #393>))
------------------------------------------------------------------------
7efc48				bits 64
7efc48			stub_7f764c7efc48_1:
7efc48 fec1			inc	cl
7efc4a			stub_7f764c7efc48_0:
7efc4a e8bef348ff		call	do_callback_handler
7efc4f f1afec0100000000
(obj= #(#<procedure #394>))
------------------------------------------------------------------------
c85260				bits 64
c85260			version905:
c85260 ff742408			push	qword [rsp+8]
c85264			version906:
c85264 48c7c004000000		mov	rax,dword 4
c8526b 50			push	rax
c8526c			version907:
c8526c			version908:
c8526c			version909:
c8526c 58			pop	rax
c8526d 48290424			sub	[rsp],rax
c85271 0f8021aab600		jo	stub_7f764c7efc98_0
c85277			version910:
c85277 6af6			push	qword byte -10
c85279			version911:
c85279 ff742410			push	qword [rsp+16]
c8527d			version912:
c8527d 498d4424e8		lea	rax,[r12-24]
c85282 49bf0880aa4e767f
c8528a 0000			mov	r15,140146102665224
c8528c 493b4728			cmp	rax,[r15+40]
c85290 7d38			jge	short alloc-ok127
c85292 48c7c018000000		mov	rax,dword 24
c85299 57			push	rdi
c8529a 56			push	rsi
c8529b 52			push	rdx
c8529c 51			push	rcx
c8529d 4150			push	r8
c8529f 4151			push	r9
c852a1 4152			push	r10
c852a3 4153			push	r11
c852a5 50			push	rax
c852a6 4889e7			mov	rdi,rsp
c852a9 4883e4f0			and	rsp,byte -16
c852ad 4883ec08			sub	rsp,byte 8
c852b1 57			push	rdi
c852b2 e8190e6d01		call	gc
c852b7 5c			pop	rsp
c852b8 4989c4			mov	r12,rax
c852bb 58			pop	rax
c852bc 415b			pop	r11
c852be 415a			pop	r10
c852c0 4159			pop	r9
c852c2 4158			pop	r8
c852c4 59			pop	rcx
c852c5 5a			pop	rdx
c852c6 5e			pop	rsi
c852c7 5f			pop	rdi
c852c8 eb04			jmp	short alloc-end127
c852ca			alloc-ok127:
c852ca 4983ec18			sub	r12,byte 24
c852ce			alloc-end127:
c852ce 48c7c00e030000		mov	rax,dword 782
c852d5 49890424			mov	[r12],rax
c852d9 5b			pop	rbx
c852da 58			pop	rax
c852db 4989442408		mov	[r12+8],rax
c852e0 49895c2410		mov	[r12+16],rbx
c852e5 4c89e0			mov	rax,r12
c852e8 4883c001			add	rax,byte 1
c852ec 50			push	rax
c852ed			version913:
c852ed 488b442408		mov	rax,[rsp+8]
c852f2 4889442418		mov	[rsp+24],rax
c852f7 488b0424			mov	rax,[rsp]
c852fb 4889442410		mov	[rsp+16],rax
c85300 4883c410			add	rsp,byte 16
c85304			version914:
c85304 ff742408			push	qword [rsp+8]
c85308			version915:
c85308 48c7c000000000		mov	rax,dword 0
c8530f 50			push	rax
c85310			version916:
c85310			version917:
c85310			version918:
c85310 488b442408		mov	rax,[rsp+8]
c85315 483b0424			cmp	rax,[rsp]
c85319			label-jump13:
c85319 0f8539a9b600		jne	stub_7f764c7efc58_0
c8531f			version919:
c8531f 4883c410			add	rsp,byte 16
c85323 6afa			push	qword byte -6
c85325			version920:
c85325 58			pop	rax
c85326 4883f8fe			cmp	rax,byte -2
c8532a			patchable_jump54:
c8532a 0f841aa9b600		je	stub_7f764c7efc48_0
c85330 e913a9b600		jmp	stub_7f764c7efc48_1
GEN VERSION >>> #<ctx #395
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #396
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85319 -> 7f764bc85335
------------------------------------------------------------------------
c85335				bits 64
c85335 909090		version921:
c85338 4883c410			add	rsp,byte 16
c8533c 6afe			push	qword byte -2
c8533e ebe5			jmp	short version920
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #398
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #399
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8532a -> 7f764bc85340
------------------------------------------------------------------------
c85340				bits 64
c85340			version922:
c85340 ff742408			push	qword [rsp+8]
c85344			version923:
c85344 48c7c004000000		mov	rax,dword 4
c8534b 50			push	rax
c8534c			version924:
c8534c			version925:
c8534c			version926:
c8534c 58			pop	rax
c8534d 48290424			sub	[rsp],rax
c85351 0f8041a9b600		jo	stub_7f764c7efc98_0
c85357			version927:
c85357 6af6			push	qword byte -10
c85359			version928:
c85359 ff742410			push	qword [rsp+16]
c8535d			version929:
c8535d 498d4424e8		lea	rax,[r12-24]
c85362 49bf0880aa4e767f
c8536a 0000			mov	r15,140146102665224
c8536c 493b4728			cmp	rax,[r15+40]
c85370 7d38			jge	short alloc-ok128
c85372 48c7c018000000		mov	rax,dword 24
c85379 57			push	rdi
c8537a 56			push	rsi
c8537b 52			push	rdx
c8537c 51			push	rcx
c8537d 4150			push	r8
c8537f 4151			push	r9
c85381 4152			push	r10
c85383 4153			push	r11
c85385 50			push	rax
c85386 4889e7			mov	rdi,rsp
c85389 4883e4f0			and	rsp,byte -16
c8538d 4883ec08			sub	rsp,byte 8
c85391 57			push	rdi
c85392 e8390d6d01		call	gc
c85397 5c			pop	rsp
c85398 4989c4			mov	r12,rax
c8539b 58			pop	rax
c8539c 415b			pop	r11
c8539e 415a			pop	r10
c853a0 4159			pop	r9
c853a2 4158			pop	r8
c853a4 59			pop	rcx
c853a5 5a			pop	rdx
c853a6 5e			pop	rsi
c853a7 5f			pop	rdi
c853a8 eb04			jmp	short alloc-end128
c853aa			alloc-ok128:
c853aa 4983ec18			sub	r12,byte 24
c853ae			alloc-end128:
c853ae 48c7c00e030000		mov	rax,dword 782
c853b5 49890424			mov	[r12],rax
c853b9 5b			pop	rbx
c853ba 58			pop	rax
c853bb 4989442408		mov	[r12+8],rax
c853c0 49895c2410		mov	[r12+16],rbx
c853c5 4c89e0			mov	rax,r12
c853c8 4883c001			add	rax,byte 1
c853cc 50			push	rax
c853cd			version930:
c853cd 488b442408		mov	rax,[rsp+8]
c853d2 4889442418		mov	[rsp+24],rax
c853d7 488b0424			mov	rax,[rsp]
c853db 4889442410		mov	[rsp+16],rax
c853e0 4883c410			add	rsp,byte 16
c853e4 e91bffffff		jmp	version914
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #398
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #399
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85330 -> 7f764bc853e9
------------------------------------------------------------------------
7efc48				bits 64
7efc48			stub_7f764c7efc48_0:
7efc48 e81af448ff		call	do_callback_cont_handler
7efc4d d1b1ec0100000000
(obj= #(#<procedure #400>))
------------------------------------------------------------------------
c853e9				bits 64
c853e9 909090		version931:
c853ec ff3424			push	qword [rsp]
c853ef			version932:
c853ef 58			pop	rax
c853f0 4883c410			add	rsp,byte 16
c853f4 50			push	rax
c853f5			version933:
c853f5 41ffb280030000		push	qword [r10+896]
c853fc			version934:
c853fc			version935:
c853fc 48c7c070b2ec01		mov	rax,dword 32289392
c85403 4889442418		mov	[rsp+24],rax
c85408			version936:
c85408 488b0424			mov	rax,[rsp]
c8540c 49c7c3b1baec01		mov	r11,dword 32291505
c85413 488b4007			mov	rax,[rax+7]
c85417 48c7c708000000		mov	rdi,dword 8
c8541e 488b4020			mov	rax,[rax+32]
c85422 ffe0			jmp	rax
------------------------------------------------------------------------
7efc38				bits 64
7efc38			stub_7f764c7efc38_1:
7efc38 fec1			inc	cl
7efc3a			stub_7f764c7efc38_0:
7efc3a e8cef348ff		call	do_callback_handler
7efc3f 91b3ec0100000000
(obj= #(#<procedure #401>))
------------------------------------------------------------------------
c85424				bits 64
c85424			continuation_12:
c85424 50			push	rax
c85425			version937:
c85425 ff742410			push	qword [rsp+16]
c85429			version938:
c85429			version939:
c85429 58			pop	rax
c8542a 488b400f			mov	rax,[rax+15]
c8542e 50			push	rax
c8542f			version940:
c8542f 488b0424			mov	rax,[rsp]
c85433 4889442418		mov	[rsp+24],rax
c85438 4883c418			add	rsp,byte 24
c8543c			version941:
c8543c ff3424			push	qword [rsp]
c8543f			version942:
c8543f			version943:
c8543f 50			push	rax
c85440 53			push	rbx
c85441 48b84080aa4e767f
c85449 0000			mov	rax,140146102665280
c8544b 488b18			mov	rbx,[rax]
c8544e 48ffc3			inc	rbx
c85451 488918			mov	[rax],rbx
c85454 5b			pop	rbx
c85455 58			pop	rax
c85456 48c7c0f6ffffff		mov	rax,dword -10
c8545d 48390424			cmp	[rsp],rax
c85461 48c7c0faffffff		mov	rax,dword -6
c85468 7407			je	short done12
c8546a 48c7c0feffffff		mov	rax,dword -2
c85471			done12:
c85471 48890424			mov	[rsp],rax
c85475			version944:
c85475 58			pop	rax
c85476 4883f8fe			cmp	rax,byte -2
c8547a			patchable_jump55:
c8547a 0f84baa7b600		je	stub_7f764c7efc38_0
c85480 e9b3a7b600		jmp	stub_7f764c7efc38_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8547a -> 7f764c7efc38
GEN VERSION >>> #<ctx #402
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #403
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #404
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efc28				bits 64
7efc28			stub_7f764c7efc28_1:
7efc28 fec1			inc	cl
7efc2a			stub_7f764c7efc28_0:
7efc2a e8def348ff		call	do_callback_handler
7efc2f 31b4ec0100000000
(obj= #(#<procedure #405>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85480				bits 64
c85480			version945:
c85480 ff3424			push	qword [rsp]
c85483			version946:
c85483 50			push	rax
c85484 53			push	rbx
c85485 48b84080aa4e767f
c8548d 0000			mov	rax,140146102665280
c8548f 488b18			mov	rbx,[rax]
c85492 48ffc3			inc	rbx
c85495 488918			mov	[rax],rbx
c85498 5b			pop	rbx
c85499 58			pop	rax
c8549a 488b0424			mov	rax,[rsp]
c8549e 4889c3			mov	rbx,rax
c854a1 4883e003			and	rax,byte 3
c854a5 4883f801			cmp	rax,byte 1
c854a9 750e			jne	short patchable_jump56
c854ab 488b43ff			mov	rax,[rbx-1]
c854af 4825f8000000		and	rax,248
c854b5 4883f808			cmp	rax,byte 8
c854b9			patchable_jump56:
c854b9 0f846ba7b600		je	stub_7f764c7efc28_0
c854bf e964a7b600		jmp	stub_7f764c7efc28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc854b9 -> 7f764c7efc28
GEN VERSION >>> #<ctx #406
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #407
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #408
                                    type: local
                                    offset: 3
                                    pos: (6 3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc854bf -> 7f764bc8511f
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #379
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #380
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #381
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85160 -> 7f764bc854c4
------------------------------------------------------------------------
7efca8				bits 64
7efca8			stub_7f764c7efca8_0:
7efca8 e860f348ff		call	do_callback_handler
7efcad 21b5ec0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7efc18				bits 64
7efc18			stub_7f764c7efc18_1:
7efc18 fec1			inc	cl
7efc1a			stub_7f764c7efc18_0:
7efc1a e8eef348ff		call	do_callback_handler
7efc1f 71b5ec0100000000
(obj= #(#<procedure #409>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c854c4				bits 64
c854c4			version947:
c854c4 6afe			push	qword byte -2
c854c6			version948:
c854c6 6afe			push	qword byte -2
c854c8			version949:
c854c8 ff742410			push	qword [rsp+16]
c854cc			version950:
c854cc			version951:
c854cc 58			pop	rax
c854cd 488b4007			mov	rax,[rax+7]
c854d1 50			push	rax
c854d2			version952:
c854d2 ff742438			push	qword [rsp+56]
c854d6			version953:
c854d6 6af6			push	qword byte -10
c854d8			version954:
c854d8			version955:
c854d8 ff742408			push	qword [rsp+8]
c854dc			version956:
c854dc 48c7c000000000		mov	rax,dword 0
c854e3 50			push	rax
c854e4			version957:
c854e4 50			push	rax
c854e5 53			push	rbx
c854e6 48b84080aa4e767f
c854ee 0000			mov	rax,140146102665280
c854f0 488b18			mov	rbx,[rax]
c854f3 48ffc3			inc	rbx
c854f6 488918			mov	[rax],rbx
c854f9 5b			pop	rbx
c854fa 58			pop	rax
c854fb 48c7c003000000		mov	rax,dword 3
c85502 4823442408		and	rax,[rsp+8]
c85507			patchable_jump57:
c85507 0f840da7b600		je	stub_7f764c7efc18_0
c8550d e906a7b600		jmp	stub_7f764c7efc18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85507 -> 7f764c7efc18
GEN VERSION >>> #<ctx #410
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #411
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efc08				bits 64
7efc08			stub_7f764c7efc08_0:
7efc08 e800f448ff		call	do_callback_handler
7efc0d 11b6ec0100000000
(obj= #(#<procedure #416>))
------------------------------------------------------------------------
7efbf8				bits 64
7efbf8			stub_7f764c7efbf8_1:
7efbf8 fec1			inc	cl
7efbfa			stub_7f764c7efbf8_0:
7efbfa e80ef448ff		call	do_callback_handler
7efbff 61b6ec0100000000
(obj= #(#<procedure #417>))
------------------------------------------------------------------------
c8550d				bits 64
c8550d 909090		version958:
c85510			version959:
c85510 488b442408		mov	rax,[rsp+8]
c85515 483b0424			cmp	rax,[rsp]
c85519			label-jump14:
c85519 0f85e9a6b600		jne	stub_7f764c7efc08_0
c8551f			version960:
c8551f 4883c410			add	rsp,byte 16
c85523 6afa			push	qword byte -6
c85525			version961:
c85525 58			pop	rax
c85526 4883f8fe			cmp	rax,byte -2
c8552a			patchable_jump58:
c8552a 0f84caa6b600		je	stub_7f764c7efbf8_0
c85530 e9c3a6b600		jmp	stub_7f764c7efbf8_1
GEN VERSION >>> #<ctx #410
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #411
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85519 -> 7f764bc85535
------------------------------------------------------------------------
c85535				bits 64
c85535 909090		version962:
c85538 4883c410			add	rsp,byte 16
c8553c 6afe			push	qword byte -2
c8553e ebe5			jmp	short version961
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #418
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #419
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8552a -> 7f764bc85540
------------------------------------------------------------------------
7efbe8				bits 64
7efbe8			stub_7f764c7efbe8_0:
7efbe8 e820f448ff		call	do_callback_handler
7efbed 51b7ec0100000000
(obj= #(#<procedure #420>))
------------------------------------------------------------------------
7efbd8				bits 64
7efbd8			stub_7f764c7efbd8_1:
7efbd8 fec1			inc	cl
7efbda			stub_7f764c7efbd8_0:
7efbda e82ef448ff		call	do_callback_handler
7efbdf a1b7ec0100000000
(obj= #(#<procedure #421>))
------------------------------------------------------------------------
c85540				bits 64
c85540			version963:
c85540 ff742408			push	qword [rsp+8]
c85544			version964:
c85544 48c7c004000000		mov	rax,dword 4
c8554b 50			push	rax
c8554c			version965:
c8554c			version966:
c8554c			version967:
c8554c 58			pop	rax
c8554d 48290424			sub	[rsp],rax
c85551 0f8051a7b600		jo	stub_7f764c7efca8_0
c85557			version968:
c85557 6af6			push	qword byte -10
c85559			version969:
c85559 ff742410			push	qword [rsp+16]
c8555d			version970:
c8555d 498d4424e8		lea	rax,[r12-24]
c85562 49bf0880aa4e767f
c8556a 0000			mov	r15,140146102665224
c8556c 493b4728			cmp	rax,[r15+40]
c85570 7d38			jge	short alloc-ok129
c85572 48c7c018000000		mov	rax,dword 24
c85579 57			push	rdi
c8557a 56			push	rsi
c8557b 52			push	rdx
c8557c 51			push	rcx
c8557d 4150			push	r8
c8557f 4151			push	r9
c85581 4152			push	r10
c85583 4153			push	r11
c85585 50			push	rax
c85586 4889e7			mov	rdi,rsp
c85589 4883e4f0			and	rsp,byte -16
c8558d 4883ec08			sub	rsp,byte 8
c85591 57			push	rdi
c85592 e8390b6d01		call	gc
c85597 5c			pop	rsp
c85598 4989c4			mov	r12,rax
c8559b 58			pop	rax
c8559c 415b			pop	r11
c8559e 415a			pop	r10
c855a0 4159			pop	r9
c855a2 4158			pop	r8
c855a4 59			pop	rcx
c855a5 5a			pop	rdx
c855a6 5e			pop	rsi
c855a7 5f			pop	rdi
c855a8 eb04			jmp	short alloc-end129
c855aa			alloc-ok129:
c855aa 4983ec18			sub	r12,byte 24
c855ae			alloc-end129:
c855ae 48c7c00e030000		mov	rax,dword 782
c855b5 49890424			mov	[r12],rax
c855b9 5b			pop	rbx
c855ba 58			pop	rax
c855bb 4989442408		mov	[r12+8],rax
c855c0 49895c2410		mov	[r12+16],rbx
c855c5 4c89e0			mov	rax,r12
c855c8 4883c001			add	rax,byte 1
c855cc 50			push	rax
c855cd			version971:
c855cd 488b442408		mov	rax,[rsp+8]
c855d2 4889442418		mov	[rsp+24],rax
c855d7 488b0424			mov	rax,[rsp]
c855db 4889442410		mov	[rsp+16],rax
c855e0 4883c410			add	rsp,byte 16
c855e4			version972:
c855e4 ff742408			push	qword [rsp+8]
c855e8			version973:
c855e8 48c7c000000000		mov	rax,dword 0
c855ef 50			push	rax
c855f0			version974:
c855f0			version975:
c855f0			version976:
c855f0 488b442408		mov	rax,[rsp+8]
c855f5 483b0424			cmp	rax,[rsp]
c855f9			label-jump15:
c855f9 0f85e9a5b600		jne	stub_7f764c7efbe8_0
c855ff			version977:
c855ff 4883c410			add	rsp,byte 16
c85603 6afa			push	qword byte -6
c85605			version978:
c85605 58			pop	rax
c85606 4883f8fe			cmp	rax,byte -2
c8560a			patchable_jump59:
c8560a 0f84caa5b600		je	stub_7f764c7efbd8_0
c85610 e9c3a5b600		jmp	stub_7f764c7efbd8_1
GEN VERSION >>> #<ctx #422
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #423
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc855f9 -> 7f764bc85615
------------------------------------------------------------------------
c85615				bits 64
c85615 909090		version979:
c85618 4883c410			add	rsp,byte 16
c8561c 6afe			push	qword byte -2
c8561e ebe5			jmp	short version978
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #425
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #426
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8560a -> 7f764bc85620
------------------------------------------------------------------------
c85620				bits 64
c85620			version980:
c85620 ff742408			push	qword [rsp+8]
c85624			version981:
c85624 48c7c004000000		mov	rax,dword 4
c8562b 50			push	rax
c8562c			version982:
c8562c			version983:
c8562c			version984:
c8562c 58			pop	rax
c8562d 48290424			sub	[rsp],rax
c85631 0f8071a6b600		jo	stub_7f764c7efca8_0
c85637			version985:
c85637 6af6			push	qword byte -10
c85639			version986:
c85639 ff742410			push	qword [rsp+16]
c8563d			version987:
c8563d 498d4424e8		lea	rax,[r12-24]
c85642 49bf0880aa4e767f
c8564a 0000			mov	r15,140146102665224
c8564c 493b4728			cmp	rax,[r15+40]
c85650 7d38			jge	short alloc-ok130
c85652 48c7c018000000		mov	rax,dword 24
c85659 57			push	rdi
c8565a 56			push	rsi
c8565b 52			push	rdx
c8565c 51			push	rcx
c8565d 4150			push	r8
c8565f 4151			push	r9
c85661 4152			push	r10
c85663 4153			push	r11
c85665 50			push	rax
c85666 4889e7			mov	rdi,rsp
c85669 4883e4f0			and	rsp,byte -16
c8566d 4883ec08			sub	rsp,byte 8
c85671 57			push	rdi
c85672 e8590a6d01		call	gc
c85677 5c			pop	rsp
c85678 4989c4			mov	r12,rax
c8567b 58			pop	rax
c8567c 415b			pop	r11
c8567e 415a			pop	r10
c85680 4159			pop	r9
c85682 4158			pop	r8
c85684 59			pop	rcx
c85685 5a			pop	rdx
c85686 5e			pop	rsi
c85687 5f			pop	rdi
c85688 eb04			jmp	short alloc-end130
c8568a			alloc-ok130:
c8568a 4983ec18			sub	r12,byte 24
c8568e			alloc-end130:
c8568e 48c7c00e030000		mov	rax,dword 782
c85695 49890424			mov	[r12],rax
c85699 5b			pop	rbx
c8569a 58			pop	rax
c8569b 4989442408		mov	[r12+8],rax
c856a0 49895c2410		mov	[r12+16],rbx
c856a5 4c89e0			mov	rax,r12
c856a8 4883c001			add	rax,byte 1
c856ac 50			push	rax
c856ad			version988:
c856ad 488b442408		mov	rax,[rsp+8]
c856b2 4889442418		mov	[rsp+24],rax
c856b7 488b0424			mov	rax,[rsp]
c856bb 4889442410		mov	[rsp+16],rax
c856c0 4883c410			add	rsp,byte 16
c856c4 e91bffffff		jmp	version972
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #425
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #426
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85610 -> 7f764bc856c9
------------------------------------------------------------------------
7efbd8				bits 64
7efbd8			stub_7f764c7efbd8_0:
7efbd8 e88af448ff		call	do_callback_cont_handler
7efbdd 51a3ec0100000000
(obj= #(#<procedure #427>))
------------------------------------------------------------------------
c856c9				bits 64
c856c9 909090		version989:
c856cc ff3424			push	qword [rsp]
c856cf			version990:
c856cf 58			pop	rax
c856d0 4883c410			add	rsp,byte 16
c856d4 50			push	rax
c856d5			version991:
c856d5 41ffb280030000		push	qword [r10+896]
c856dc			version992:
c856dc			version993:
c856dc 48c7c0f0b7ec01		mov	rax,dword 32290800
c856e3 4889442418		mov	[rsp+24],rax
c856e8			version994:
c856e8 488b0424			mov	rax,[rsp]
c856ec 49c7c3b1baec01		mov	r11,dword 32291505
c856f3 488b4007			mov	rax,[rax+7]
c856f7 48c7c708000000		mov	rdi,dword 8
c856fe 488b4020			mov	rax,[rax+32]
c85702 ffe0			jmp	rax
------------------------------------------------------------------------
7efbc8				bits 64
7efbc8			stub_7f764c7efbc8_1:
7efbc8 fec1			inc	cl
7efbca			stub_7f764c7efbc8_0:
7efbca e83ef448ff		call	do_callback_handler
7efbcf b1a5ec0100000000
(obj= #(#<procedure #428>))
------------------------------------------------------------------------
c85704				bits 64
c85704			continuation_13:
c85704 50			push	rax
c85705			version995:
c85705 ff742410			push	qword [rsp+16]
c85709			version996:
c85709			version997:
c85709 58			pop	rax
c8570a 488b400f			mov	rax,[rax+15]
c8570e 50			push	rax
c8570f			version998:
c8570f 488b0424			mov	rax,[rsp]
c85713 4889442418		mov	[rsp+24],rax
c85718 4883c418			add	rsp,byte 24
c8571c			version999:
c8571c ff3424			push	qword [rsp]
c8571f			version1000:
c8571f			version1001:
c8571f 50			push	rax
c85720 53			push	rbx
c85721 48b84080aa4e767f
c85729 0000			mov	rax,140146102665280
c8572b 488b18			mov	rbx,[rax]
c8572e 48ffc3			inc	rbx
c85731 488918			mov	[rax],rbx
c85734 5b			pop	rbx
c85735 58			pop	rax
c85736 48c7c0f6ffffff		mov	rax,dword -10
c8573d 48390424			cmp	[rsp],rax
c85741 48c7c0faffffff		mov	rax,dword -6
c85748 7407			je	short done13
c8574a 48c7c0feffffff		mov	rax,dword -2
c85751			done13:
c85751 48890424			mov	[rsp],rax
c85755			version1002:
c85755 58			pop	rax
c85756 4883f8fe			cmp	rax,byte -2
c8575a			patchable_jump60:
c8575a 0f846aa4b600		je	stub_7f764c7efbc8_0
c85760 e963a4b600		jmp	stub_7f764c7efbc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8575a -> 7f764c7efbc8
GEN VERSION >>> #<ctx #429
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #430
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #431
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efbb8				bits 64
7efbb8			stub_7f764c7efbb8_1:
7efbb8 fec1			inc	cl
7efbba			stub_7f764c7efbb8_0:
7efbba e84ef448ff		call	do_callback_handler
7efbbf 61abec0100000000
(obj= #(#<procedure #432>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85760				bits 64
c85760			version1003:
c85760 ff3424			push	qword [rsp]
c85763			version1004:
c85763 50			push	rax
c85764 53			push	rbx
c85765 48b84080aa4e767f
c8576d 0000			mov	rax,140146102665280
c8576f 488b18			mov	rbx,[rax]
c85772 48ffc3			inc	rbx
c85775 488918			mov	[rax],rbx
c85778 5b			pop	rbx
c85779 58			pop	rax
c8577a 488b0424			mov	rax,[rsp]
c8577e 4889c3			mov	rbx,rax
c85781 4883e003			and	rax,byte 3
c85785 4883f801			cmp	rax,byte 1
c85789 750e			jne	short patchable_jump61
c8578b 488b43ff			mov	rax,[rbx-1]
c8578f 4825f8000000		and	rax,248
c85795 4883f808			cmp	rax,byte 8
c85799			patchable_jump61:
c85799 0f841ba4b600		je	stub_7f764c7efbb8_0
c8579f e914a4b600		jmp	stub_7f764c7efbb8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85799 -> 7f764c7efbb8
GEN VERSION >>> #<ctx #433
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #434
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #435
                                    type: local
                                    offset: 3
                                    pos: (6 5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efba8				bits 64
7efba8			stub_7f764c7efba8_1:
7efba8 fec1			inc	cl
7efbaa			stub_7f764c7efba8_0:
7efbaa e85ef448ff		call	do_callback_handler
7efbaf 01afec0100000000
(obj= #(#<procedure #436>))
------------------------------------------------------------------------
c8579f				bits 64
c8579f 90		version1005:
c857a0 58			pop	rax
c857a1 488b4007			mov	rax,[rax+7]
c857a5 50			push	rax
c857a6			version1006:
c857a6			version1007:
c857a6 50			push	rax
c857a7 53			push	rbx
c857a8 48b84080aa4e767f
c857b0 0000			mov	rax,140146102665280
c857b2 488b18			mov	rbx,[rax]
c857b5 48ffc3			inc	rbx
c857b8 488918			mov	[rax],rbx
c857bb 5b			pop	rbx
c857bc 58			pop	rax
c857bd 48c7c0f6ffffff		mov	rax,dword -10
c857c4 48390424			cmp	[rsp],rax
c857c8 48c7c0faffffff		mov	rax,dword -6
c857cf 7407			je	short done14
c857d1 48c7c0feffffff		mov	rax,dword -2
c857d8			done14:
c857d8 48890424			mov	[rsp],rax
c857dc			version1008:
c857dc 58			pop	rax
c857dd 4883f8fe			cmp	rax,byte -2
c857e1			patchable_jump62:
c857e1 0f84c3a3b600		je	stub_7f764c7efba8_0
c857e7 e9bca3b600		jmp	stub_7f764c7efba8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc857e1 -> 7f764c7efba8
GEN VERSION >>> #<ctx #437
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #438
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #439
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efb98				bits 64
7efb98			stub_7f764c7efb98_0:
7efb98 e870f448ff		call	do_callback_handler
7efb9d 41b3ec0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7efb88				bits 64
7efb88			stub_7f764c7efb88_1:
7efb88 fec1			inc	cl
7efb8a			stub_7f764c7efb88_0:
7efb8a e87ef448ff		call	do_callback_handler
7efb8f e1b3ec0100000000
(obj= #(#<procedure #440>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c857e7				bits 64
c857e7 90		version1009:
c857e8 6afe			push	qword byte -2
c857ea			version1010:
c857ea 6afe			push	qword byte -2
c857ec			version1011:
c857ec ff742410			push	qword [rsp+16]
c857f0			version1012:
c857f0			version1013:
c857f0 58			pop	rax
c857f1 488b4007			mov	rax,[rax+7]
c857f5 50			push	rax
c857f6			version1014:
c857f6 ff742438			push	qword [rsp+56]
c857fa			version1015:
c857fa 6af6			push	qword byte -10
c857fc			version1016:
c857fc			version1017:
c857fc ff742408			push	qword [rsp+8]
c85800			version1018:
c85800 48c7c000000000		mov	rax,dword 0
c85807 50			push	rax
c85808			version1019:
c85808 50			push	rax
c85809 53			push	rbx
c8580a 48b84080aa4e767f
c85812 0000			mov	rax,140146102665280
c85814 488b18			mov	rbx,[rax]
c85817 48ffc3			inc	rbx
c8581a 488918			mov	[rax],rbx
c8581d 5b			pop	rbx
c8581e 58			pop	rax
c8581f 48c7c003000000		mov	rax,dword 3
c85826 4823442408		and	rax,[rsp+8]
c8582b			patchable_jump63:
c8582b 0f8459a3b600		je	stub_7f764c7efb88_0
c85831 e952a3b600		jmp	stub_7f764c7efb88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8582b -> 7f764c7efb88
GEN VERSION >>> #<ctx #441
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #442
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efb78				bits 64
7efb78			stub_7f764c7efb78_0:
7efb78 e890f448ff		call	do_callback_handler
7efb7d b1b6ec0100000000
(obj= #(#<procedure #447>))
------------------------------------------------------------------------
7efb68				bits 64
7efb68			stub_7f764c7efb68_1:
7efb68 fec1			inc	cl
7efb6a			stub_7f764c7efb68_0:
7efb6a e89ef448ff		call	do_callback_handler
7efb6f 81b4ec0100000000
(obj= #(#<procedure #448>))
------------------------------------------------------------------------
c85831				bits 64
c85831 909090		version1020:
c85834			version1021:
c85834 488b442408		mov	rax,[rsp+8]
c85839 483b0424			cmp	rax,[rsp]
c8583d			label-jump16:
c8583d 0f8535a3b600		jne	stub_7f764c7efb78_0
c85843			version1022:
c85843 4883c410			add	rsp,byte 16
c85847 6afa			push	qword byte -6
c85849			version1023:
c85849 58			pop	rax
c8584a 4883f8fe			cmp	rax,byte -2
c8584e			patchable_jump64:
c8584e 0f8416a3b600		je	stub_7f764c7efb68_0
c85854 e90fa3b600		jmp	stub_7f764c7efb68_1
GEN VERSION >>> #<ctx #441
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #442
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8583d -> 7f764bc85859
------------------------------------------------------------------------
c85859				bits 64
c85859 909090		version1024:
c8585c 4883c410			add	rsp,byte 16
c85860 6afe			push	qword byte -2
c85862 ebe5			jmp	short version1023
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #449
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #450
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8584e -> 7f764bc85864
------------------------------------------------------------------------
7efb58				bits 64
7efb58			stub_7f764c7efb58_0:
7efb58 e8b0f448ff		call	do_callback_handler
7efb5d e1b0ec0100000000
(obj= #(#<procedure #451>))
------------------------------------------------------------------------
7efb48				bits 64
7efb48			stub_7f764c7efb48_1:
7efb48 fec1			inc	cl
7efb4a			stub_7f764c7efb48_0:
7efb4a e8bef448ff		call	do_callback_handler
7efb4f 31b1ec0100000000
(obj= #(#<procedure #452>))
------------------------------------------------------------------------
c85864				bits 64
c85864			version1025:
c85864 ff742408			push	qword [rsp+8]
c85868			version1026:
c85868 48c7c004000000		mov	rax,dword 4
c8586f 50			push	rax
c85870			version1027:
c85870			version1028:
c85870			version1029:
c85870 58			pop	rax
c85871 48290424			sub	[rsp],rax
c85875 0f801da3b600		jo	stub_7f764c7efb98_0
c8587b			version1030:
c8587b 6af6			push	qword byte -10
c8587d			version1031:
c8587d ff742410			push	qword [rsp+16]
c85881			version1032:
c85881 498d4424e8		lea	rax,[r12-24]
c85886 49bf0880aa4e767f
c8588e 0000			mov	r15,140146102665224
c85890 493b4728			cmp	rax,[r15+40]
c85894 7d38			jge	short alloc-ok131
c85896 48c7c018000000		mov	rax,dword 24
c8589d 57			push	rdi
c8589e 56			push	rsi
c8589f 52			push	rdx
c858a0 51			push	rcx
c858a1 4150			push	r8
c858a3 4151			push	r9
c858a5 4152			push	r10
c858a7 4153			push	r11
c858a9 50			push	rax
c858aa 4889e7			mov	rdi,rsp
c858ad 4883e4f0			and	rsp,byte -16
c858b1 4883ec08			sub	rsp,byte 8
c858b5 57			push	rdi
c858b6 e815086d01		call	gc
c858bb 5c			pop	rsp
c858bc 4989c4			mov	r12,rax
c858bf 58			pop	rax
c858c0 415b			pop	r11
c858c2 415a			pop	r10
c858c4 4159			pop	r9
c858c6 4158			pop	r8
c858c8 59			pop	rcx
c858c9 5a			pop	rdx
c858ca 5e			pop	rsi
c858cb 5f			pop	rdi
c858cc eb04			jmp	short alloc-end131
c858ce			alloc-ok131:
c858ce 4983ec18			sub	r12,byte 24
c858d2			alloc-end131:
c858d2 48c7c00e030000		mov	rax,dword 782
c858d9 49890424			mov	[r12],rax
c858dd 5b			pop	rbx
c858de 58			pop	rax
c858df 4989442408		mov	[r12+8],rax
c858e4 49895c2410		mov	[r12+16],rbx
c858e9 4c89e0			mov	rax,r12
c858ec 4883c001			add	rax,byte 1
c858f0 50			push	rax
c858f1			version1033:
c858f1 488b442408		mov	rax,[rsp+8]
c858f6 4889442418		mov	[rsp+24],rax
c858fb 488b0424			mov	rax,[rsp]
c858ff 4889442410		mov	[rsp+16],rax
c85904 4883c410			add	rsp,byte 16
c85908			version1034:
c85908 ff742408			push	qword [rsp+8]
c8590c			version1035:
c8590c 48c7c000000000		mov	rax,dword 0
c85913 50			push	rax
c85914			version1036:
c85914			version1037:
c85914			version1038:
c85914 488b442408		mov	rax,[rsp+8]
c85919 483b0424			cmp	rax,[rsp]
c8591d			label-jump17:
c8591d 0f8535a2b600		jne	stub_7f764c7efb58_0
c85923			version1039:
c85923 4883c410			add	rsp,byte 16
c85927 6afa			push	qword byte -6
c85929			version1040:
c85929 58			pop	rax
c8592a 4883f8fe			cmp	rax,byte -2
c8592e			patchable_jump65:
c8592e 0f8416a2b600		je	stub_7f764c7efb48_0
c85934 e90fa2b600		jmp	stub_7f764c7efb48_1
GEN VERSION >>> #<ctx #453
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #454
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8591d -> 7f764bc85939
------------------------------------------------------------------------
c85939				bits 64
c85939 909090		version1041:
c8593c 4883c410			add	rsp,byte 16
c85940 6afe			push	qword byte -2
c85942 ebe5			jmp	short version1040
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #456
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #457
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8592e -> 7f764bc85944
------------------------------------------------------------------------
c85944				bits 64
c85944			version1042:
c85944 ff742408			push	qword [rsp+8]
c85948			version1043:
c85948 48c7c004000000		mov	rax,dword 4
c8594f 50			push	rax
c85950			version1044:
c85950			version1045:
c85950			version1046:
c85950 58			pop	rax
c85951 48290424			sub	[rsp],rax
c85955 0f803da2b600		jo	stub_7f764c7efb98_0
c8595b			version1047:
c8595b 6af6			push	qword byte -10
c8595d			version1048:
c8595d ff742410			push	qword [rsp+16]
c85961			version1049:
c85961 498d4424e8		lea	rax,[r12-24]
c85966 49bf0880aa4e767f
c8596e 0000			mov	r15,140146102665224
c85970 493b4728			cmp	rax,[r15+40]
c85974 7d38			jge	short alloc-ok132
c85976 48c7c018000000		mov	rax,dword 24
c8597d 57			push	rdi
c8597e 56			push	rsi
c8597f 52			push	rdx
c85980 51			push	rcx
c85981 4150			push	r8
c85983 4151			push	r9
c85985 4152			push	r10
c85987 4153			push	r11
c85989 50			push	rax
c8598a 4889e7			mov	rdi,rsp
c8598d 4883e4f0			and	rsp,byte -16
c85991 4883ec08			sub	rsp,byte 8
c85995 57			push	rdi
c85996 e835076d01		call	gc
c8599b 5c			pop	rsp
c8599c 4989c4			mov	r12,rax
c8599f 58			pop	rax
c859a0 415b			pop	r11
c859a2 415a			pop	r10
c859a4 4159			pop	r9
c859a6 4158			pop	r8
c859a8 59			pop	rcx
c859a9 5a			pop	rdx
c859aa 5e			pop	rsi
c859ab 5f			pop	rdi
c859ac eb04			jmp	short alloc-end132
c859ae			alloc-ok132:
c859ae 4983ec18			sub	r12,byte 24
c859b2			alloc-end132:
c859b2 48c7c00e030000		mov	rax,dword 782
c859b9 49890424			mov	[r12],rax
c859bd 5b			pop	rbx
c859be 58			pop	rax
c859bf 4989442408		mov	[r12+8],rax
c859c4 49895c2410		mov	[r12+16],rbx
c859c9 4c89e0			mov	rax,r12
c859cc 4883c001			add	rax,byte 1
c859d0 50			push	rax
c859d1			version1050:
c859d1 488b442408		mov	rax,[rsp+8]
c859d6 4889442418		mov	[rsp+24],rax
c859db 488b0424			mov	rax,[rsp]
c859df 4889442410		mov	[rsp+16],rax
c859e4 4883c410			add	rsp,byte 16
c859e8 e91bffffff		jmp	version1034
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #456
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #457
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85934 -> 7f764bc859ed
------------------------------------------------------------------------
7efb48				bits 64
7efb48			stub_7f764c7efb48_0:
7efb48 e81af548ff		call	do_callback_cont_handler
7efb4d 51e8ec0100000000
(obj= #(#<procedure #458>))
------------------------------------------------------------------------
c859ed				bits 64
c859ed 909090		version1051:
c859f0 ff3424			push	qword [rsp]
c859f3			version1052:
c859f3 58			pop	rax
c859f4 4883c410			add	rsp,byte 16
c859f8 50			push	rax
c859f9			version1053:
c859f9 41ffb280030000		push	qword [r10+896]
c85a00			version1054:
c85a00			version1055:
c85a00 48c7c02050ee01		mov	rax,dword 32395296
c85a07 4889442418		mov	[rsp+24],rax
c85a0c			version1056:
c85a0c 488b0424			mov	rax,[rsp]
c85a10 49c7c3b1baec01		mov	r11,dword 32291505
c85a17 488b4007			mov	rax,[rax+7]
c85a1b 48c7c708000000		mov	rdi,dword 8
c85a22 488b4020			mov	rax,[rax+32]
c85a26 ffe0			jmp	rax
------------------------------------------------------------------------
c85a28				bits 64
c85a28			continuation_14:
c85a28 50			push	rax
c85a29			version1057:
c85a29 ff742410			push	qword [rsp+16]
c85a2d			version1058:
c85a2d			version1059:
c85a2d 58			pop	rax
c85a2e 488b400f			mov	rax,[rax+15]
c85a32 50			push	rax
c85a33			version1060:
c85a33 488b0424			mov	rax,[rsp]
c85a37 4889442418		mov	[rsp+24],rax
c85a3c 4883c418			add	rsp,byte 24
c85a40 e9f7f9ffff		jmp	version941
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #207
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #208
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> patching jump at 7f764bc84213 -> 7f764bc85a45
------------------------------------------------------------------------
7effa8				bits 64
7effa8			stub_7f764c7effa8_1:
7effa8 fec1			inc	cl
7effaa			stub_7f764c7effa8_0:
7effaa e85ef048ff		call	do_callback_handler
7effaf 9151ee0100000000
(obj= #(#<procedure #459>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85a45				bits 64
c85a45 909090		version1061:
c85a48 ff742408			push	qword [rsp+8]
c85a4c			version1062:
c85a4c ff742410			push	qword [rsp+16]
c85a50			version1063:
c85a50 50			push	rax
c85a51 53			push	rbx
c85a52 48b84080aa4e767f
c85a5a 0000			mov	rax,140146102665280
c85a5c 488b18			mov	rbx,[rax]
c85a5f 48ffc3			inc	rbx
c85a62 488918			mov	[rax],rbx
c85a65 5b			pop	rbx
c85a66 58			pop	rax
c85a67 488b0424			mov	rax,[rsp]
c85a6b 4889c3			mov	rbx,rax
c85a6e 4883e003			and	rax,byte 3
c85a72 4883f801			cmp	rax,byte 1
c85a76 750e			jne	short patchable_jump66
c85a78 488b43ff			mov	rax,[rbx-1]
c85a7c 4825f8000000		and	rax,248
c85a82 4883f808			cmp	rax,byte 8
c85a86			patchable_jump66:
c85a86 0f841ea5b600		je	stub_7f764c7effa8_0
c85a8c e917a5b600		jmp	stub_7f764c7effa8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85a86 -> 7f764c7effa8
GEN VERSION >>> #<ctx #460
                      stack: (pair pair procedure pair pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #461
                                    type: local
                                    offset: 1
                                    pos: (4 3 1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c85a8c				bits 64
c85a8c			version1064:
c85a8c 58			pop	rax
c85a8d 488b400f			mov	rax,[rax+15]
c85a91 50			push	rax
c85a92			version1065:
c85a92 488b442410		mov	rax,[rsp+16]
c85a97 488b401f			mov	rax,[rax+31]
c85a9b ff7007			push	qword [rax+7]
c85a9e			version1066:
c85a9e			version1067:
c85a9e 488b442410		mov	rax,[rsp+16]
c85aa3 4889442428		mov	[rsp+40],rax
c85aa8 488b442408		mov	rax,[rsp+8]
c85aad 4889442420		mov	[rsp+32],rax
c85ab2 488b0424			mov	rax,[rsp]
c85ab6 4889442418		mov	[rsp+24],rax
c85abb 4883c418			add	rsp,byte 24
c85abf 488b0424			mov	rax,[rsp]
c85ac3 49c7c341d31f02		mov	r11,dword 35640129
c85aca 488b4007			mov	rax,[rax+7]
c85ace 48c7c708000000		mov	rdi,dword 8
c85ad5 488b4028			mov	rax,[rax+40]
c85ad9 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #429
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #430
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #431
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc8575a -> 7f764bc85adb
------------------------------------------------------------------------
c85adb				bits 64
c85adb 90		version1068:
c85adc 6afe			push	qword byte -2
c85ade			version1069:
c85ade 58			pop	rax
c85adf 4883c408			add	rsp,byte 8
c85ae3 50			push	rax
c85ae4 e96bf5ffff		jmp	version853
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #372
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #373
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc850f5 -> 7f764bc85ae9
------------------------------------------------------------------------
7efcc8				bits 64
7efcc8			stub_7f764c7efcc8_1:
7efcc8 fec1			inc	cl
7efcca			stub_7f764c7efcc8_0:
7efcca e83ef348ff		call	do_callback_handler
7efccf a1d2ee0100000000
(obj= #(#<procedure #462>))
------------------------------------------------------------------------
c85ae9				bits 64
c85ae9 909090		version1070:
c85aec ff742408			push	qword [rsp+8]
c85af0			version1071:
c85af0 ff742410			push	qword [rsp+16]
c85af4			version1072:
c85af4			version1073:
c85af4 58			pop	rax
c85af5 488b400f			mov	rax,[rax+15]
c85af9 50			push	rax
c85afa			version1074:
c85afa			version1075:
c85afa ff3424			push	qword [rsp]
c85afd			version1076:
c85afd			version1077:
c85afd 50			push	rax
c85afe 53			push	rbx
c85aff 48b84080aa4e767f
c85b07 0000			mov	rax,140146102665280
c85b09 488b18			mov	rbx,[rax]
c85b0c 48ffc3			inc	rbx
c85b0f 488918			mov	[rax],rbx
c85b12 5b			pop	rbx
c85b13 58			pop	rax
c85b14 48c7c0f6ffffff		mov	rax,dword -10
c85b1b 48390424			cmp	[rsp],rax
c85b1f 48c7c0faffffff		mov	rax,dword -6
c85b26 7407			je	short done15
c85b28 48c7c0feffffff		mov	rax,dword -2
c85b2f			done15:
c85b2f 48890424			mov	[rsp],rax
c85b33			version1078:
c85b33 58			pop	rax
c85b34 4883f8fe			cmp	rax,byte -2
c85b38			patchable_jump67:
c85b38 0f848ca1b600		je	stub_7f764c7efcc8_0
c85b3e e985a1b600		jmp	stub_7f764c7efcc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85b38 -> 7f764c7efcc8
GEN VERSION >>> #<ctx #463
                      stack: (unknown pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #465
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efbc8				bits 64
7efbc8			stub_7f764c7efbc8_1:
7efbc8 fec1			inc	cl
7efbca			stub_7f764c7efbc8_0:
7efbca e83ef448ff		call	do_callback_handler
7efbcf e1d31f0200000000
(obj= #(#<procedure #467>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85b3e				bits 64
c85b3e 9090		version1079:
c85b40 6afe			push	qword byte -2
c85b42			version1080:
c85b42 ff742408			push	qword [rsp+8]
c85b46			version1081:
c85b46 50			push	rax
c85b47 53			push	rbx
c85b48 48b84080aa4e767f
c85b50 0000			mov	rax,140146102665280
c85b52 488b18			mov	rbx,[rax]
c85b55 48ffc3			inc	rbx
c85b58 488918			mov	[rax],rbx
c85b5b 5b			pop	rbx
c85b5c 58			pop	rax
c85b5d 488b0424			mov	rax,[rsp]
c85b61 4889c3			mov	rbx,rax
c85b64 4883e003			and	rax,byte 3
c85b68 4883f801			cmp	rax,byte 1
c85b6c 750e			jne	short patchable_jump68
c85b6e 488b43ff			mov	rax,[rbx-1]
c85b72 4825f8000000		and	rax,248
c85b78 4883f808			cmp	rax,byte 8
c85b7c			patchable_jump68:
c85b7c 0f8448a0b600		je	stub_7f764c7efbc8_0
c85b82 e941a0b600		jmp	stub_7f764c7efbc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85b7c -> 7f764c7efbc8
GEN VERSION >>> #<ctx #468
                      stack: (pair retAddr
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #469
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efb38				bits 64
7efb38			stub_7f764c7efb38_0:
7efb38 e82af548ff		call	do_callback_cont_handler
7efb3d 01b7ec0100000000
(obj= #(#<procedure #470>))
------------------------------------------------------------------------
c85b82				bits 64
c85b82 9090		version1082:
c85b84 58			pop	rax
c85b85 488b4007			mov	rax,[rax+7]
c85b89 50			push	rax
c85b8a			version1083:
c85b8a 41ffb278020000		push	qword [r10+632]
c85b91			version1084:
c85b91			version1085:
c85b91 48c7c02069ed01		mov	rax,dword 32336160
c85b98 4889442410		mov	[rsp+16],rax
c85b9d			version1086:
c85b9d 488b0424			mov	rax,[rsp]
c85ba1 48c7c704000000		mov	rdi,dword 4
c85ba8 488b4007			mov	rax,[rax+7]
c85bac 488b4008			mov	rax,[rax+8]
c85bb0 ffe0			jmp	rax
------------------------------------------------------------------------
7efb28				bits 64
7efb28			stub_7f764c7efb28_0:
7efb28 e8e0f448ff		call	do_callback_handler
7efb2d 21b2ec0100000000
(obj= #(#<procedure #471>))
------------------------------------------------------------------------
7efb18				bits 64
7efb18			stub_7f764c7efb18_1:
7efb18 fec1			inc	cl
7efb1a			stub_7f764c7efb18_0:
7efb1a e8eef448ff		call	do_callback_handler
7efb1f 4198ec0100000000
(obj= #(#<procedure #472>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85bb2				bits 64
c85bb2 9090		continuation_15:
c85bb4 50			push	rax
c85bb5			version1087:
c85bb5			version1088:
c85bb5 48c7c008000000		mov	rax,dword 8
c85bbc 50			push	rax
c85bbd			version1089:
c85bbd			version1090:
c85bbd 5b			pop	rbx
c85bbe 58			pop	rax
c85bbf 48c1f802			sar	rax,2
c85bc3 48c1fb02			sar	rbx,2
c85bc7 4883fb00			cmp	rbx,byte 0
c85bcb 0f84579fb600		je	stub_7f764c7efb28_0
c85bd1 4899			cqo
c85bd3 48f7fb			idiv	rbx
c85bd6 48c1e002			shl	rax,2
c85bda 50			push	rax
c85bdb			version1091:
c85bdb ff742408			push	qword [rsp+8]
c85bdf			version1092:
c85bdf 50			push	rax
c85be0 53			push	rbx
c85be1 48b84080aa4e767f
c85be9 0000			mov	rax,140146102665280
c85beb 488b18			mov	rbx,[rax]
c85bee 48ffc3			inc	rbx
c85bf1 488918			mov	[rax],rbx
c85bf4 5b			pop	rbx
c85bf5 58			pop	rax
c85bf6 488b0424			mov	rax,[rsp]
c85bfa 4889c3			mov	rbx,rax
c85bfd 4883e003			and	rax,byte 3
c85c01 4883f801			cmp	rax,byte 1
c85c05 750e			jne	short patchable_jump69
c85c07 488b43ff			mov	rax,[rbx-1]
c85c0b 4825f8000000		and	rax,248
c85c11 4883f808			cmp	rax,byte 8
c85c15			patchable_jump69:
c85c15 0f84ff9eb600		je	stub_7f764c7efb18_0
c85c1b e9f89eb600		jmp	stub_7f764c7efb18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85c15 -> 7f764c7efb18
GEN VERSION >>> #<ctx #473
                      stack: (pair number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #474
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efb08				bits 64
7efb08			stub_7f764c7efb08_0:
7efb08 e85af548ff		call	do_callback_cont_handler
7efb0d 3105ec0100000000
(obj= #(#<procedure #475>))
------------------------------------------------------------------------
c85c1b				bits 64
c85c1b 90		version1093:
c85c1c 58			pop	rax
c85c1d 488b4007			mov	rax,[rax+7]
c85c21 50			push	rax
c85c22			version1094:
c85c22			version1095:
c85c22 6afe			push	qword byte -2
c85c24			version1096:
c85c24 ff742410			push	qword [rsp+16]
c85c28			version1097:
c85c28 41ffb218030000		push	qword [r10+792]
c85c2f			version1098:
c85c2f			version1099:
c85c2f 48c7c0f069ed01		mov	rax,dword 32336368
c85c36 4889442410		mov	[rsp+16],rax
c85c3b			version1100:
c85c3b 488b0424			mov	rax,[rsp]
c85c3f 49c7c3e19fec01		mov	r11,dword 32284641
c85c46 488b4007			mov	rax,[rax+7]
c85c4a 48c7c704000000		mov	rdi,dword 4
c85c51 488b4030			mov	rax,[rax+48]
c85c55 ffe0			jmp	rax
------------------------------------------------------------------------
7efaf8				bits 64
7efaf8			stub_7f764c7efaf8_1:
7efaf8 fec1			inc	cl
7efafa			stub_7f764c7efaf8_0:
7efafa e80ef548ff		call	do_callback_handler
7efaff 51a6ec0100000000
(obj= #(#<procedure #476>))
------------------------------------------------------------------------
c85c57				bits 64
c85c57 90		continuation_16:
c85c58 50			push	rax
c85c59			version1101:
c85c59 58			pop	rax
c85c5a 4883f8fe			cmp	rax,byte -2
c85c5e			patchable_jump70:
c85c5e 0f84969eb600		je	stub_7f764c7efaf8_0
c85c64 e98f9eb600		jmp	stub_7f764c7efaf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85c5e -> 7f764c7efaf8
GEN VERSION >>> #<ctx #477
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #479
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efae8				bits 64
7efae8			stub_7f764c7efae8_1:
7efae8 fec1			inc	cl
7efaea			stub_7f764c7efae8_0:
7efaea e81ef548ff		call	do_callback_handler
7efaef f1afec0100000000
(obj= #(#<procedure #481>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85c64				bits 64
c85c64			version1102:
c85c64 ff3424			push	qword [rsp]
c85c67			version1103:
c85c67 50			push	rax
c85c68 53			push	rbx
c85c69 48b84080aa4e767f
c85c71 0000			mov	rax,140146102665280
c85c73 488b18			mov	rbx,[rax]
c85c76 48ffc3			inc	rbx
c85c79 488918			mov	[rax],rbx
c85c7c 5b			pop	rbx
c85c7d 58			pop	rax
c85c7e 488b0424			mov	rax,[rsp]
c85c82 4889c3			mov	rbx,rax
c85c85 4883e003			and	rax,byte 3
c85c89 4883f801			cmp	rax,byte 1
c85c8d 750e			jne	short patchable_jump71
c85c8f 488b43ff			mov	rax,[rbx-1]
c85c93 4825f8000000		and	rax,248
c85c99 4883f808			cmp	rax,byte 8
c85c9d			patchable_jump71:
c85c9d 0f84479eb600		je	stub_7f764c7efae8_0
c85ca3 e9409eb600		jmp	stub_7f764c7efae8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85c9d -> 7f764c7efae8
GEN VERSION >>> #<ctx #482
                      stack: (pair pair
                                   number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #483
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c85ca3				bits 64
c85ca3 90		version1104:
c85ca4 ff742428			push	qword [rsp+40]
c85ca8			version1105:
c85ca8 58			pop	rax
c85ca9 5b			pop	rbx
c85caa 48894307			mov	[rbx+7],rax
c85cae 6aee			push	qword byte -18
c85cb0			version1106:
c85cb0 ff742410			push	qword [rsp+16]
c85cb4			version1107:
c85cb4 48c7c004000000		mov	rax,dword 4
c85cbb 50			push	rax
c85cbc			version1108:
c85cbc			version1109:
c85cbc			version1110:
c85cbc 58			pop	rax
c85cbd 48290424			sub	[rsp],rax
c85cc1 0f8001aeb600		jo	stub_7f764c7f0ac8_0
c85cc7			version1111:
c85cc7 ff742410			push	qword [rsp+16]
c85ccb			version1112:
c85ccb			version1113:
c85ccb 58			pop	rax
c85ccc 488b400f			mov	rax,[rax+15]
c85cd0 50			push	rax
c85cd1			version1114:
c85cd1 488b442408		mov	rax,[rsp+8]
c85cd6 4889442420		mov	[rsp+32],rax
c85cdb 488b0424			mov	rax,[rsp]
c85cdf 4889442418		mov	[rsp+24],rax
c85ce4 4883c418			add	rsp,byte 24
c85ce8 e935ffffff		jmp	version1095
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #477
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #479
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85c5e -> 7f764bc85ced
------------------------------------------------------------------------
7efaf8				bits 64
7efaf8			stub_7f764c7efaf8_1:
7efaf8 fec1			inc	cl
7efafa			stub_7f764c7efaf8_0:
7efafa e80ef548ff		call	do_callback_handler
7efaff 91b0ec0100000000
(obj= #(#<procedure #484>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85ced				bits 64
c85ced 909090		version1115:
c85cf0 ff3424			push	qword [rsp]
c85cf3			version1116:
c85cf3 58			pop	rax
c85cf4 4883c410			add	rsp,byte 16
c85cf8 50			push	rax
c85cf9			version1117:
c85cf9 50			push	rax
c85cfa 53			push	rbx
c85cfb 48b84080aa4e767f
c85d03 0000			mov	rax,140146102665280
c85d05 488b18			mov	rbx,[rax]
c85d08 48ffc3			inc	rbx
c85d0b 488918			mov	[rax],rbx
c85d0e 5b			pop	rbx
c85d0f 58			pop	rax
c85d10 488b0424			mov	rax,[rsp]
c85d14 4889c3			mov	rbx,rax
c85d17 4883e003			and	rax,byte 3
c85d1b 4883f801			cmp	rax,byte 1
c85d1f 750e			jne	short patchable_jump72
c85d21 488b43ff			mov	rax,[rbx-1]
c85d25 4825f8000000		and	rax,248
c85d2b 4883f808			cmp	rax,byte 8
c85d2f			patchable_jump72:
c85d2f 0f84c59db600		je	stub_7f764c7efaf8_0
c85d35 e9be9db600		jmp	stub_7f764c7efaf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85d2f -> 7f764c7efaf8
GEN VERSION >>> #<ctx #485
                      stack: (pair pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efad8				bits 64
7efad8			stub_7f764c7efad8_0:
7efad8 e88af548ff		call	do_callback_cont_handler
7efadd 61e7ec0100000000
(obj= #(#<procedure #486>))
------------------------------------------------------------------------
c85d35				bits 64
c85d35 909090		version1118:
c85d38 6afe			push	qword byte -2
c85d3a			version1119:
c85d3a ff742418			push	qword [rsp+24]
c85d3e			version1120:
c85d3e			version1121:
c85d3e 58			pop	rax
c85d3f 488b4007			mov	rax,[rax+7]
c85d43 50			push	rax
c85d44			version1122:
c85d44 41ffb278020000		push	qword [r10+632]
c85d4b			version1123:
c85d4b			version1124:
c85d4b 48c7c000acec01		mov	rax,dword 32287744
c85d52 4889442410		mov	[rsp+16],rax
c85d57 e9fdf0ffff		jmp	version800
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #342
                      stack: (number pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc84ec2 -> 7f764bc85d5c
------------------------------------------------------------------------
7efd28				bits 64
7efd28			stub_7f764c7efd28_1:
7efd28 fec1			inc	cl
7efd2a			stub_7f764c7efd28_0:
7efd2a e8def248ff		call	do_callback_handler
7efd2f 01e8ec0100000000
(obj= #(#<procedure #487>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c85d5c				bits 64
c85d5c			version1125:
c85d5c ff742418			push	qword [rsp+24]
c85d60			version1126:
c85d60 50			push	rax
c85d61 53			push	rbx
c85d62 48b84080aa4e767f
c85d6a 0000			mov	rax,140146102665280
c85d6c 488b18			mov	rbx,[rax]
c85d6f 48ffc3			inc	rbx
c85d72 488918			mov	[rax],rbx
c85d75 5b			pop	rbx
c85d76 58			pop	rax
c85d77 488b0424			mov	rax,[rsp]
c85d7b 4889c3			mov	rbx,rax
c85d7e 4883e003			and	rax,byte 3
c85d82 4883f801			cmp	rax,byte 1
c85d86 750e			jne	short patchable_jump73
c85d88 488b43ff			mov	rax,[rbx-1]
c85d8c 4825f8000000		and	rax,248
c85d92 4883f808			cmp	rax,byte 8
c85d96			patchable_jump73:
c85d96 0f848e9fb600		je	stub_7f764c7efd28_0
c85d9c e9879fb600		jmp	stub_7f764c7efd28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85d96 -> 7f764c7efd28
GEN VERSION >>> #<ctx #488
                      stack: (pair number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #489
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c85d9c				bits 64
c85d9c			version1127:
c85d9c 6af6			push	qword byte -10
c85d9e			version1128:
c85d9e 58			pop	rax
c85d9f 5b			pop	rbx
c85da0 48894307			mov	[rbx+7],rax
c85da4 6aee			push	qword byte -18
c85da6			version1129:
c85da6 ff742420			push	qword [rsp+32]
c85daa			version1130:
c85daa			version1131:
c85daa 58			pop	rax
c85dab 488b4007			mov	rax,[rax+7]
c85daf 50			push	rax
c85db0			version1132:
c85db0 58			pop	rax
c85db1 4883c408			add	rsp,byte 8
c85db5 50			push	rax
c85db6 e9c1eaffff		jmp	version672
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #168
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #169
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #170
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc83d10 -> 7f764bc85dbb
------------------------------------------------------------------------
7f0048				bits 64
7f0048			stub_7f764c7f0048_0:
7f0048 e8c0ef48ff		call	do_callback_handler
7f004d e151ee0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7efac8				bits 64
7efac8			stub_7f764c7efac8_1:
7efac8 fec1			inc	cl
7efaca			stub_7f764c7efac8_0:
7efaca e83ef548ff		call	do_callback_handler
7efacf 51d2ee0100000000
(obj= #(#<procedure #490>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c85dbb				bits 64
c85dbb 90		version1133:
c85dbc 6afe			push	qword byte -2
c85dbe			version1134:
c85dbe 6afe			push	qword byte -2
c85dc0			version1135:
c85dc0 ff742410			push	qword [rsp+16]
c85dc4			version1136:
c85dc4			version1137:
c85dc4 58			pop	rax
c85dc5 488b4007			mov	rax,[rax+7]
c85dc9 50			push	rax
c85dca			version1138:
c85dca ff742438			push	qword [rsp+56]
c85dce			version1139:
c85dce 6af6			push	qword byte -10
c85dd0			version1140:
c85dd0			version1141:
c85dd0 ff742408			push	qword [rsp+8]
c85dd4			version1142:
c85dd4 48c7c000000000		mov	rax,dword 0
c85ddb 50			push	rax
c85ddc			version1143:
c85ddc 50			push	rax
c85ddd 53			push	rbx
c85dde 48b84080aa4e767f
c85de6 0000			mov	rax,140146102665280
c85de8 488b18			mov	rbx,[rax]
c85deb 48ffc3			inc	rbx
c85dee 488918			mov	[rax],rbx
c85df1 5b			pop	rbx
c85df2 58			pop	rax
c85df3 48c7c003000000		mov	rax,dword 3
c85dfa 4823442408		and	rax,[rsp+8]
c85dff			patchable_jump74:
c85dff 0f84c59cb600		je	stub_7f764c7efac8_0
c85e05 e9be9cb600		jmp	stub_7f764c7efac8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc85dff -> 7f764c7efac8
GEN VERSION >>> #<ctx #491
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #492
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efab8				bits 64
7efab8			stub_7f764c7efab8_0:
7efab8 e850f548ff		call	do_callback_handler
7efabd 116bed0100000000
(obj= #(#<procedure #497>))
------------------------------------------------------------------------
7efaa8				bits 64
7efaa8			stub_7f764c7efaa8_1:
7efaa8 fec1			inc	cl
7efaaa			stub_7f764c7efaa8_0:
7efaaa e85ef548ff		call	do_callback_handler
7efaaf 616bed0100000000
(obj= #(#<procedure #498>))
------------------------------------------------------------------------
c85e05				bits 64
c85e05 909090		version1144:
c85e08			version1145:
c85e08 488b442408		mov	rax,[rsp+8]
c85e0d 483b0424			cmp	rax,[rsp]
c85e11			label-jump18:
c85e11 0f85a19cb600		jne	stub_7f764c7efab8_0
c85e17			version1146:
c85e17 4883c410			add	rsp,byte 16
c85e1b 6afa			push	qword byte -6
c85e1d			version1147:
c85e1d 58			pop	rax
c85e1e 4883f8fe			cmp	rax,byte -2
c85e22			patchable_jump75:
c85e22 0f84829cb600		je	stub_7f764c7efaa8_0
c85e28 e97b9cb600		jmp	stub_7f764c7efaa8_1
GEN VERSION >>> #<ctx #491
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #492
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85e11 -> 7f764bc85e2d
------------------------------------------------------------------------
c85e2d				bits 64
c85e2d 909090		version1148:
c85e30 4883c410			add	rsp,byte 16
c85e34 6afe			push	qword byte -2
c85e36 ebe5			jmp	short version1147
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #499
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #500
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85e22 -> 7f764bc85e38
------------------------------------------------------------------------
7efa98				bits 64
7efa98			stub_7f764c7efa98_0:
7efa98 e870f548ff		call	do_callback_handler
7efa9d 516ced0100000000
(obj= #(#<procedure #501>))
------------------------------------------------------------------------
7efa88				bits 64
7efa88			stub_7f764c7efa88_1:
7efa88 fec1			inc	cl
7efa8a			stub_7f764c7efa88_0:
7efa8a e87ef548ff		call	do_callback_handler
7efa8f a16ced0100000000
(obj= #(#<procedure #502>))
------------------------------------------------------------------------
c85e38				bits 64
c85e38			version1149:
c85e38 ff742408			push	qword [rsp+8]
c85e3c			version1150:
c85e3c 48c7c004000000		mov	rax,dword 4
c85e43 50			push	rax
c85e44			version1151:
c85e44			version1152:
c85e44			version1153:
c85e44 58			pop	rax
c85e45 48290424			sub	[rsp],rax
c85e49 0f80f9a1b600		jo	stub_7f764c7f0048_0
c85e4f			version1154:
c85e4f 6af6			push	qword byte -10
c85e51			version1155:
c85e51 ff742410			push	qword [rsp+16]
c85e55			version1156:
c85e55 498d4424e8		lea	rax,[r12-24]
c85e5a 49bf0880aa4e767f
c85e62 0000			mov	r15,140146102665224
c85e64 493b4728			cmp	rax,[r15+40]
c85e68 7d38			jge	short alloc-ok133
c85e6a 48c7c018000000		mov	rax,dword 24
c85e71 57			push	rdi
c85e72 56			push	rsi
c85e73 52			push	rdx
c85e74 51			push	rcx
c85e75 4150			push	r8
c85e77 4151			push	r9
c85e79 4152			push	r10
c85e7b 4153			push	r11
c85e7d 50			push	rax
c85e7e 4889e7			mov	rdi,rsp
c85e81 4883e4f0			and	rsp,byte -16
c85e85 4883ec08			sub	rsp,byte 8
c85e89 57			push	rdi
c85e8a e841026d01		call	gc
c85e8f 5c			pop	rsp
c85e90 4989c4			mov	r12,rax
c85e93 58			pop	rax
c85e94 415b			pop	r11
c85e96 415a			pop	r10
c85e98 4159			pop	r9
c85e9a 4158			pop	r8
c85e9c 59			pop	rcx
c85e9d 5a			pop	rdx
c85e9e 5e			pop	rsi
c85e9f 5f			pop	rdi
c85ea0 eb04			jmp	short alloc-end133
c85ea2			alloc-ok133:
c85ea2 4983ec18			sub	r12,byte 24
c85ea6			alloc-end133:
c85ea6 48c7c00e030000		mov	rax,dword 782
c85ead 49890424			mov	[r12],rax
c85eb1 5b			pop	rbx
c85eb2 58			pop	rax
c85eb3 4989442408		mov	[r12+8],rax
c85eb8 49895c2410		mov	[r12+16],rbx
c85ebd 4c89e0			mov	rax,r12
c85ec0 4883c001			add	rax,byte 1
c85ec4 50			push	rax
c85ec5			version1157:
c85ec5 488b442408		mov	rax,[rsp+8]
c85eca 4889442418		mov	[rsp+24],rax
c85ecf 488b0424			mov	rax,[rsp]
c85ed3 4889442410		mov	[rsp+16],rax
c85ed8 4883c410			add	rsp,byte 16
c85edc			version1158:
c85edc ff742408			push	qword [rsp+8]
c85ee0			version1159:
c85ee0 48c7c000000000		mov	rax,dword 0
c85ee7 50			push	rax
c85ee8			version1160:
c85ee8			version1161:
c85ee8			version1162:
c85ee8 488b442408		mov	rax,[rsp+8]
c85eed 483b0424			cmp	rax,[rsp]
c85ef1			label-jump19:
c85ef1 0f85a19bb600		jne	stub_7f764c7efa98_0
c85ef7			version1163:
c85ef7 4883c410			add	rsp,byte 16
c85efb 6afa			push	qword byte -6
c85efd			version1164:
c85efd 58			pop	rax
c85efe 4883f8fe			cmp	rax,byte -2
c85f02			patchable_jump76:
c85f02 0f84829bb600		je	stub_7f764c7efa88_0
c85f08 e97b9bb600		jmp	stub_7f764c7efa88_1
GEN VERSION >>> #<ctx #503
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #504
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85ef1 -> 7f764bc85f0d
------------------------------------------------------------------------
c85f0d				bits 64
c85f0d 909090		version1165:
c85f10 4883c410			add	rsp,byte 16
c85f14 6afe			push	qword byte -2
c85f16 ebe5			jmp	short version1164
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #506
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #507
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85f02 -> 7f764bc85f18
------------------------------------------------------------------------
c85f18				bits 64
c85f18			version1166:
c85f18 ff742408			push	qword [rsp+8]
c85f1c			version1167:
c85f1c 48c7c004000000		mov	rax,dword 4
c85f23 50			push	rax
c85f24			version1168:
c85f24			version1169:
c85f24			version1170:
c85f24 58			pop	rax
c85f25 48290424			sub	[rsp],rax
c85f29 0f8019a1b600		jo	stub_7f764c7f0048_0
c85f2f			version1171:
c85f2f 6af6			push	qword byte -10
c85f31			version1172:
c85f31 ff742410			push	qword [rsp+16]
c85f35			version1173:
c85f35 498d4424e8		lea	rax,[r12-24]
c85f3a 49bf0880aa4e767f
c85f42 0000			mov	r15,140146102665224
c85f44 493b4728			cmp	rax,[r15+40]
c85f48 7d38			jge	short alloc-ok134
c85f4a 48c7c018000000		mov	rax,dword 24
c85f51 57			push	rdi
c85f52 56			push	rsi
c85f53 52			push	rdx
c85f54 51			push	rcx
c85f55 4150			push	r8
c85f57 4151			push	r9
c85f59 4152			push	r10
c85f5b 4153			push	r11
c85f5d 50			push	rax
c85f5e 4889e7			mov	rdi,rsp
c85f61 4883e4f0			and	rsp,byte -16
c85f65 4883ec08			sub	rsp,byte 8
c85f69 57			push	rdi
c85f6a e861016d01		call	gc
c85f6f 5c			pop	rsp
c85f70 4989c4			mov	r12,rax
c85f73 58			pop	rax
c85f74 415b			pop	r11
c85f76 415a			pop	r10
c85f78 4159			pop	r9
c85f7a 4158			pop	r8
c85f7c 59			pop	rcx
c85f7d 5a			pop	rdx
c85f7e 5e			pop	rsi
c85f7f 5f			pop	rdi
c85f80 eb04			jmp	short alloc-end134
c85f82			alloc-ok134:
c85f82 4983ec18			sub	r12,byte 24
c85f86			alloc-end134:
c85f86 48c7c00e030000		mov	rax,dword 782
c85f8d 49890424			mov	[r12],rax
c85f91 5b			pop	rbx
c85f92 58			pop	rax
c85f93 4989442408		mov	[r12+8],rax
c85f98 49895c2410		mov	[r12+16],rbx
c85f9d 4c89e0			mov	rax,r12
c85fa0 4883c001			add	rax,byte 1
c85fa4 50			push	rax
c85fa5			version1174:
c85fa5 488b442408		mov	rax,[rsp+8]
c85faa 4889442418		mov	[rsp+24],rax
c85faf 488b0424			mov	rax,[rsp]
c85fb3 4889442410		mov	[rsp+16],rax
c85fb8 4883c410			add	rsp,byte 16
c85fbc e91bffffff		jmp	version1158
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #506
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #507
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f764bc85f08 -> 7f764bc85fc1
------------------------------------------------------------------------
7efa88				bits 64
7efa88			stub_7f764c7efa88_0:
7efa88 e8daf548ff		call	do_callback_cont_handler
7efa8d e16ded0100000000
(obj= #(#<procedure #508>))
------------------------------------------------------------------------
c85fc1				bits 64
c85fc1 909090		version1175:
c85fc4 ff3424			push	qword [rsp]
c85fc7			version1176:
c85fc7 58			pop	rax
c85fc8 4883c410			add	rsp,byte 16
c85fcc 50			push	rax
c85fcd			version1177:
c85fcd 41ffb280030000		push	qword [r10+896]
c85fd4			version1178:
c85fd4			version1179:
c85fd4 48c7c0306eed01		mov	rax,dword 32337456
c85fdb 4889442418		mov	[rsp+24],rax
c85fe0			version1180:
c85fe0 488b0424			mov	rax,[rsp]
c85fe4 49c7c3b1baec01		mov	r11,dword 32291505
c85feb 488b4007			mov	rax,[rax+7]
c85fef 48c7c708000000		mov	rdi,dword 8
c85ff6 488b4020			mov	rax,[rax+32]
c85ffa ffe0			jmp	rax
------------------------------------------------------------------------
7efa78				bits 64
7efa78			stub_7f764c7efa78_1:
7efa78 fec1			inc	cl
7efa7a			stub_7f764c7efa78_0:
7efa7a e88ef548ff		call	do_callback_handler
7efa7f 516fed0100000000
(obj= #(#<procedure #509>))
------------------------------------------------------------------------
c85ffc				bits 64
c85ffc			continuation_17:
c85ffc 50			push	rax
c85ffd			version1181:
c85ffd ff742410			push	qword [rsp+16]
c86001			version1182:
c86001			version1183:
c86001 58			pop	rax
c86002 488b400f			mov	rax,[rax+15]
c86006 50			push	rax
c86007			version1184:
c86007 488b0424			mov	rax,[rsp]
c8600b 4889442418		mov	[rsp+24],rax
c86010 4883c418			add	rsp,byte 24
c86014			version1185:
c86014 ff3424			push	qword [rsp]
c86017			version1186:
c86017			version1187:
c86017 50			push	rax
c86018 53			push	rbx
c86019 48b84080aa4e767f
c86021 0000			mov	rax,140146102665280
c86023 488b18			mov	rbx,[rax]
c86026 48ffc3			inc	rbx
c86029 488918			mov	[rax],rbx
c8602c 5b			pop	rbx
c8602d 58			pop	rax
c8602e 48c7c0f6ffffff		mov	rax,dword -10
c86035 48390424			cmp	[rsp],rax
c86039 48c7c0faffffff		mov	rax,dword -6
c86040 7407			je	short done16
c86042 48c7c0feffffff		mov	rax,dword -2
c86049			done16:
c86049 48890424			mov	[rsp],rax
c8604d			version1188:
c8604d 58			pop	rax
c8604e 4883f8fe			cmp	rax,byte -2
c86052			patchable_jump77:
c86052 0f84229ab600		je	stub_7f764c7efa78_0
c86058 e91b9ab600		jmp	stub_7f764c7efa78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86052 -> 7f764c7efa78
GEN VERSION >>> #<ctx #510
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #511
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #512
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #516
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #517
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #518
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #519
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #520
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #521
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efa68				bits 64
7efa68			stub_7f764c7efa68_1:
7efa68 fec1			inc	cl
7efa6a			stub_7f764c7efa68_0:
7efa6a e89ef548ff		call	do_callback_handler
7efa6f 81bdec0100000000
(obj= #(#<procedure #522>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86058				bits 64
c86058			version1189:
c86058 ff3424			push	qword [rsp]
c8605b			version1190:
c8605b 50			push	rax
c8605c 53			push	rbx
c8605d 48b84080aa4e767f
c86065 0000			mov	rax,140146102665280
c86067 488b18			mov	rbx,[rax]
c8606a 48ffc3			inc	rbx
c8606d 488918			mov	[rax],rbx
c86070 5b			pop	rbx
c86071 58			pop	rax
c86072 488b0424			mov	rax,[rsp]
c86076 4889c3			mov	rbx,rax
c86079 4883e003			and	rax,byte 3
c8607d 4883f801			cmp	rax,byte 1
c86081 750e			jne	short patchable_jump78
c86083 488b43ff			mov	rax,[rbx-1]
c86087 4825f8000000		and	rax,248
c8608d 4883f808			cmp	rax,byte 8
c86091			patchable_jump78:
c86091 0f84d399b600		je	stub_7f764c7efa68_0
c86097 e9cc99b600		jmp	stub_7f764c7efa68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86091 -> 7f764c7efa68
GEN VERSION >>> #<ctx #523
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l . #<identifier #524
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #525
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #527
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #528
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efa58				bits 64
7efa58			stub_7f764c7efa58_1:
7efa58 fec1			inc	cl
7efa5a			stub_7f764c7efa58_0:
7efa5a e8aef548ff		call	do_callback_handler
7efa5f f1d2ee0100000000
(obj= #(#<procedure #529>))
------------------------------------------------------------------------
c86097				bits 64
c86097 90		version1191:
c86098 58			pop	rax
c86099 488b4007			mov	rax,[rax+7]
c8609d 50			push	rax
c8609e			version1192:
c8609e			version1193:
c8609e 50			push	rax
c8609f 53			push	rbx
c860a0 48b84080aa4e767f
c860a8 0000			mov	rax,140146102665280
c860aa 488b18			mov	rbx,[rax]
c860ad 48ffc3			inc	rbx
c860b0 488918			mov	[rax],rbx
c860b3 5b			pop	rbx
c860b4 58			pop	rax
c860b5 48c7c0f6ffffff		mov	rax,dword -10
c860bc 48390424			cmp	[rsp],rax
c860c0 48c7c0faffffff		mov	rax,dword -6
c860c7 7407			je	short done17
c860c9 48c7c0feffffff		mov	rax,dword -2
c860d0			done17:
c860d0 48890424			mov	[rsp],rax
c860d4			version1194:
c860d4 58			pop	rax
c860d5 4883f8fe			cmp	rax,byte -2
c860d9			patchable_jump79:
c860d9 0f847b99b600		je	stub_7f764c7efa58_0
c860df e97499b600		jmp	stub_7f764c7efa58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc860d9 -> 7f764c7efa58
GEN VERSION >>> #<ctx #530
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #524
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #525
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #527
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #528
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efa48				bits 64
7efa48			stub_7f764c7efa48_0:
7efa48 e8c0f548ff		call	do_callback_handler
7efa4d a1b7ec0100000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
7efa38				bits 64
7efa38			stub_7f764c7efa38_1:
7efa38 fec1			inc	cl
7efa3a			stub_7f764c7efa38_0:
7efa3a e8cef548ff		call	do_callback_handler
7efa3f a1bbec0100000000
(obj= #(#<procedure #531>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c860df				bits 64
c860df 90		version1195:
c860e0 6afe			push	qword byte -2
c860e2			version1196:
c860e2 6afe			push	qword byte -2
c860e4			version1197:
c860e4 ff742410			push	qword [rsp+16]
c860e8			version1198:
c860e8 50			push	rax
c860e9 53			push	rbx
c860ea 48b84080aa4e767f
c860f2 0000			mov	rax,140146102665280
c860f4 488b18			mov	rbx,[rax]
c860f7 48ffc3			inc	rbx
c860fa 488918			mov	[rax],rbx
c860fd 5b			pop	rbx
c860fe 58			pop	rax
c860ff 488b0424			mov	rax,[rsp]
c86103 4889c3			mov	rbx,rax
c86106 4883e003			and	rax,byte 3
c8610a 4883f801			cmp	rax,byte 1
c8610e 750e			jne	short patchable_jump80
c86110 488b43ff			mov	rax,[rbx-1]
c86114 4825f8000000		and	rax,248
c8611a 4883f808			cmp	rax,byte 8
c8611e			patchable_jump80:
c8611e 0f841699b600		je	stub_7f764c7efa38_0
c86124 e90f99b600		jmp	stub_7f764c7efa38_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8611e -> 7f764c7efa38
GEN VERSION >>> #<ctx #532
                      stack: (pair retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l . #<identifier #533
                                    type: local
                                    offset: 5
                                    pos: (8)
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #535
                                    type: local
                                    offset: 3
                                    pos: (8)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #537
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efa28				bits 64
7efa28			stub_7f764c7efa28_1:
7efa28 fec1			inc	cl
7efa2a			stub_7f764c7efa28_0:
7efa2a e8def548ff		call	do_callback_handler
7efa2f 51a6ec0100000000
(obj= #(#<procedure #538>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c86124				bits 64
c86124			version1199:
c86124 58			pop	rax
c86125 488b4007			mov	rax,[rax+7]
c86129 50			push	rax
c8612a			version1200:
c8612a ff742438			push	qword [rsp+56]
c8612e			version1201:
c8612e 6af6			push	qword byte -10
c86130			version1202:
c86130			version1203:
c86130 ff742408			push	qword [rsp+8]
c86134			version1204:
c86134 48c7c000000000		mov	rax,dword 0
c8613b 50			push	rax
c8613c			version1205:
c8613c 50			push	rax
c8613d 53			push	rbx
c8613e 48b84080aa4e767f
c86146 0000			mov	rax,140146102665280
c86148 488b18			mov	rbx,[rax]
c8614b 48ffc3			inc	rbx
c8614e 488918			mov	[rax],rbx
c86151 5b			pop	rbx
c86152 58			pop	rax
c86153 48c7c003000000		mov	rax,dword 3
c8615a 4823442408		and	rax,[rsp+8]
c8615f			patchable_jump81:
c8615f 0f84c598b600		je	stub_7f764c7efa28_0
c86165 e9be98b600		jmp	stub_7f764c7efa28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8615f -> 7f764c7efa28
GEN VERSION >>> #<ctx #539
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #540
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #541
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7efa18				bits 64
7efa18			stub_7f764c7efa18_0:
7efa18 e8f0f548ff		call	do_callback_handler
7efa1d c1b5ec0100000000
(obj= #(#<procedure #545>))
------------------------------------------------------------------------
7efa08				bits 64
7efa08			stub_7f764c7efa08_1:
7efa08 fec1			inc	cl
7efa0a			stub_7f764c7efa08_0:
7efa0a e8fef548ff		call	do_callback_handler
7efa0f d1b4ec0100000000
(obj= #(#<procedure #546>))
------------------------------------------------------------------------
c86165				bits 64
c86165 909090		version1206:
c86168			version1207:
c86168 488b442408		mov	rax,[rsp+8]
c8616d 483b0424			cmp	rax,[rsp]
c86171			label-jump20:
c86171 0f85a198b600		jne	stub_7f764c7efa18_0
c86177			version1208:
c86177 4883c410			add	rsp,byte 16
c8617b 6afa			push	qword byte -6
c8617d			version1209:
c8617d 58			pop	rax
c8617e 4883f8fe			cmp	rax,byte -2
c86182			patchable_jump82:
c86182 0f848298b600		je	stub_7f764c7efa08_0
c86188 e97b98b600		jmp	stub_7f764c7efa08_1
GEN VERSION >>> #<ctx #539
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #540
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #541
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86171 -> 7f764bc8618d
------------------------------------------------------------------------
c8618d				bits 64
c8618d 909090		version1210:
c86190 4883c410			add	rsp,byte 16
c86194 6afe			push	qword byte -2
c86196 ebe5			jmp	short version1209
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #547
                      stack: (null number
                                   unknown
                                   retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #548
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #541
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86182 -> 7f764bc86198
------------------------------------------------------------------------
7ef9f8				bits 64
7ef9f8			stub_7f764c7ef9f8_0:
7ef9f8 e810f648ff		call	do_callback_handler
7ef9fd f150ee0100000000
(obj= #(#<procedure #549>))
------------------------------------------------------------------------
7ef9e8				bits 64
7ef9e8			stub_7f764c7ef9e8_1:
7ef9e8 fec1			inc	cl
7ef9ea			stub_7f764c7ef9e8_0:
7ef9ea e81ef648ff		call	do_callback_handler
7ef9ef 4151ee0100000000
(obj= #(#<procedure #550>))
------------------------------------------------------------------------
c86198				bits 64
c86198			version1211:
c86198 ff742408			push	qword [rsp+8]
c8619c			version1212:
c8619c 48c7c004000000		mov	rax,dword 4
c861a3 50			push	rax
c861a4			version1213:
c861a4			version1214:
c861a4			version1215:
c861a4 58			pop	rax
c861a5 48290424			sub	[rsp],rax
c861a9 0f809998b600		jo	stub_7f764c7efa48_0
c861af			version1216:
c861af 6af6			push	qword byte -10
c861b1			version1217:
c861b1 ff742410			push	qword [rsp+16]
c861b5			version1218:
c861b5 498d4424e8		lea	rax,[r12-24]
c861ba 49bf0880aa4e767f
c861c2 0000			mov	r15,140146102665224
c861c4 493b4728			cmp	rax,[r15+40]
c861c8 7d38			jge	short alloc-ok135
c861ca 48c7c018000000		mov	rax,dword 24
c861d1 57			push	rdi
c861d2 56			push	rsi
c861d3 52			push	rdx
c861d4 51			push	rcx
c861d5 4150			push	r8
c861d7 4151			push	r9
c861d9 4152			push	r10
c861db 4153			push	r11
c861dd 50			push	rax
c861de 4889e7			mov	rdi,rsp
c861e1 4883e4f0			and	rsp,byte -16
c861e5 4883ec08			sub	rsp,byte 8
c861e9 57			push	rdi
c861ea e8e1fe6c01		call	gc
c861ef 5c			pop	rsp
c861f0 4989c4			mov	r12,rax
c861f3 58			pop	rax
c861f4 415b			pop	r11
c861f6 415a			pop	r10
c861f8 4159			pop	r9
c861fa 4158			pop	r8
c861fc 59			pop	rcx
c861fd 5a			pop	rdx
c861fe 5e			pop	rsi
c861ff 5f			pop	rdi
c86200 eb04			jmp	short alloc-end135
c86202			alloc-ok135:
c86202 4983ec18			sub	r12,byte 24
c86206			alloc-end135:
c86206 48c7c00e030000		mov	rax,dword 782
c8620d 49890424			mov	[r12],rax
c86211 5b			pop	rbx
c86212 58			pop	rax
c86213 4989442408		mov	[r12+8],rax
c86218 49895c2410		mov	[r12+16],rbx
c8621d 4c89e0			mov	rax,r12
c86220 4883c001			add	rax,byte 1
c86224 50			push	rax
c86225			version1219:
c86225 488b442408		mov	rax,[rsp+8]
c8622a 4889442418		mov	[rsp+24],rax
c8622f 488b0424			mov	rax,[rsp]
c86233 4889442410		mov	[rsp+16],rax
c86238 4883c410			add	rsp,byte 16
c8623c			version1220:
c8623c ff742408			push	qword [rsp+8]
c86240			version1221:
c86240 48c7c000000000		mov	rax,dword 0
c86247 50			push	rax
c86248			version1222:
c86248			version1223:
c86248			version1224:
c86248 488b442408		mov	rax,[rsp+8]
c8624d 483b0424			cmp	rax,[rsp]
c86251			label-jump21:
c86251 0f85a197b600		jne	stub_7f764c7ef9f8_0
c86257			version1225:
c86257 4883c410			add	rsp,byte 16
c8625b 6afa			push	qword byte -6
c8625d			version1226:
c8625d 58			pop	rax
c8625e 4883f8fe			cmp	rax,byte -2
c86262			patchable_jump83:
c86262 0f848297b600		je	stub_7f764c7ef9e8_0
c86268 e97b97b600		jmp	stub_7f764c7ef9e8_1
GEN VERSION >>> #<ctx #551
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #552
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #553
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86251 -> 7f764bc8626d
------------------------------------------------------------------------
c8626d				bits 64
c8626d 909090		version1227:
c86270 4883c410			add	rsp,byte 16
c86274 6afe			push	qword byte -2
c86276 ebe5			jmp	short version1226
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #554
                      stack: (pair number
                                   unknown
                                   retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #555
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #553
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86262 -> 7f764bc86278
------------------------------------------------------------------------
c86278				bits 64
c86278			version1228:
c86278 ff742408			push	qword [rsp+8]
c8627c			version1229:
c8627c 48c7c004000000		mov	rax,dword 4
c86283 50			push	rax
c86284			version1230:
c86284			version1231:
c86284			version1232:
c86284 58			pop	rax
c86285 48290424			sub	[rsp],rax
c86289 0f80b997b600		jo	stub_7f764c7efa48_0
c8628f			version1233:
c8628f 6af6			push	qword byte -10
c86291			version1234:
c86291 ff742410			push	qword [rsp+16]
c86295			version1235:
c86295 498d4424e8		lea	rax,[r12-24]
c8629a 49bf0880aa4e767f
c862a2 0000			mov	r15,140146102665224
c862a4 493b4728			cmp	rax,[r15+40]
c862a8 7d38			jge	short alloc-ok136
c862aa 48c7c018000000		mov	rax,dword 24
c862b1 57			push	rdi
c862b2 56			push	rsi
c862b3 52			push	rdx
c862b4 51			push	rcx
c862b5 4150			push	r8
c862b7 4151			push	r9
c862b9 4152			push	r10
c862bb 4153			push	r11
c862bd 50			push	rax
c862be 4889e7			mov	rdi,rsp
c862c1 4883e4f0			and	rsp,byte -16
c862c5 4883ec08			sub	rsp,byte 8
c862c9 57			push	rdi
c862ca e801fe6c01		call	gc
c862cf 5c			pop	rsp
c862d0 4989c4			mov	r12,rax
c862d3 58			pop	rax
c862d4 415b			pop	r11
c862d6 415a			pop	r10
c862d8 4159			pop	r9
c862da 4158			pop	r8
c862dc 59			pop	rcx
c862dd 5a			pop	rdx
c862de 5e			pop	rsi
c862df 5f			pop	rdi
c862e0 eb04			jmp	short alloc-end136
c862e2			alloc-ok136:
c862e2 4983ec18			sub	r12,byte 24
c862e6			alloc-end136:
c862e6 48c7c00e030000		mov	rax,dword 782
c862ed 49890424			mov	[r12],rax
c862f1 5b			pop	rbx
c862f2 58			pop	rax
c862f3 4989442408		mov	[r12+8],rax
c862f8 49895c2410		mov	[r12+16],rbx
c862fd 4c89e0			mov	rax,r12
c86300 4883c001			add	rax,byte 1
c86304 50			push	rax
c86305			version1236:
c86305 488b442408		mov	rax,[rsp+8]
c8630a 4889442418		mov	[rsp+24],rax
c8630f 488b0424			mov	rax,[rsp]
c86313 4889442410		mov	[rsp+16],rax
c86318 4883c410			add	rsp,byte 16
c8631c e91bffffff		jmp	version1220
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #554
                      stack: (pair number
                                   unknown
                                   retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #555
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #553
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #542
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #534
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #543
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #536
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #544
                                    type: local
                                    offset: 1
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86268 -> 7f764bc86321
------------------------------------------------------------------------
7ef9e8				bits 64
7ef9e8			stub_7f764c7ef9e8_0:
7ef9e8 e87af648ff		call	do_callback_cont_handler
7ef9ed a16ced0100000000
(obj= #(#<procedure #556>))
------------------------------------------------------------------------
c86321				bits 64
c86321 909090		version1237:
c86324 ff3424			push	qword [rsp]
c86327			version1238:
c86327 58			pop	rax
c86328 4883c410			add	rsp,byte 16
c8632c 50			push	rax
c8632d			version1239:
c8632d 41ffb280030000		push	qword [r10+896]
c86334			version1240:
c86334			version1241:
c86334 48c7c0f06fed01		mov	rax,dword 32337904
c8633b 4889442418		mov	[rsp+24],rax
c86340			version1242:
c86340 488b0424			mov	rax,[rsp]
c86344 49c7c3f16ced01		mov	r11,dword 32337137
c8634b 488b4007			mov	rax,[rax+7]
c8634f 48c7c708000000		mov	rdi,dword 8
c86356 488b4038			mov	rax,[rax+56]
c8635a ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #557
                         stack: (unknown unknown unknown unknown)
                         env: ((x . #<identifier #558
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (y . #<identifier #559
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #557
      stack: (unknown unknown unknown unknown)
      env: ((x . #<identifier #558
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (y . #<identifier #559
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
7ef9d8				bits 64
7ef9d8			stub_7f764c7ef9d8_1:
7ef9d8 fec1			inc	cl
7ef9da			stub_7f764c7ef9d8_0:
7ef9da e82ef648ff		call	do_callback_handler
7ef9df 916ded0100000000
(obj= #(#<procedure #560>))
------------------------------------------------------------------------
c8635c				bits 64
c8635c			fn_entry_8:
c8635c			version1243:
c8635c ff742410			push	qword [rsp+16]
c86360			version1244:
c86360			version1245:
c86360 50			push	rax
c86361 53			push	rbx
c86362 48b84080aa4e767f
c8636a 0000			mov	rax,140146102665280
c8636c 488b18			mov	rbx,[rax]
c8636f 48ffc3			inc	rbx
c86372 488918			mov	[rax],rbx
c86375 5b			pop	rbx
c86376 58			pop	rax
c86377 48c7c0f6ffffff		mov	rax,dword -10
c8637e 48390424			cmp	[rsp],rax
c86382 48c7c0faffffff		mov	rax,dword -6
c86389 7407			je	short done18
c8638b 48c7c0feffffff		mov	rax,dword -2
c86392			done18:
c86392 48890424			mov	[rsp],rax
c86396			version1246:
c86396 58			pop	rax
c86397 4883f8fe			cmp	rax,byte -2
c8639b			patchable_jump84:
c8639b 0f843996b600		je	stub_7f764c7ef9d8_0
c863a1 e93296b600		jmp	stub_7f764c7ef9d8_1
>>> patching closure 7f74aa8c4ef9 at 7f74aa8c4f31 : slot contains now label fn_entry_8 (7f764bc8635c)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8639b -> 7f764c7ef9d8
GEN VERSION >>> #<ctx #561
                      stack: (unknown unknown unknown unknown)
                      env: ((x . #<identifier #562
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #559
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef9c8				bits 64
7ef9c8			stub_7f764c7ef9c8_1:
7ef9c8 fec1			inc	cl
7ef9ca			stub_7f764c7ef9c8_0:
7ef9ca e83ef648ff		call	do_callback_handler
7ef9cf c170ed0100000000
(obj= #(#<procedure #563>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c863a1				bits 64
c863a1 909090		version1247:
c863a4 ff742410			push	qword [rsp+16]
c863a8			version1248:
c863a8 ff742418			push	qword [rsp+24]
c863ac			version1249:
c863ac 50			push	rax
c863ad 53			push	rbx
c863ae 48b84080aa4e767f
c863b6 0000			mov	rax,140146102665280
c863b8 488b18			mov	rbx,[rax]
c863bb 48ffc3			inc	rbx
c863be 488918			mov	[rax],rbx
c863c1 5b			pop	rbx
c863c2 58			pop	rax
c863c3 488b0424			mov	rax,[rsp]
c863c7 4889c3			mov	rbx,rax
c863ca 4883e003			and	rax,byte 3
c863ce 4883f801			cmp	rax,byte 1
c863d2 750e			jne	short patchable_jump85
c863d4 488b43ff			mov	rax,[rbx-1]
c863d8 4825f8000000		and	rax,248
c863de 4883f808			cmp	rax,byte 8
c863e2			patchable_jump85:
c863e2 0f84e295b600		je	stub_7f764c7ef9c8_0
c863e8 e9db95b600		jmp	stub_7f764c7ef9c8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc863e2 -> 7f764c7ef9c8
GEN VERSION >>> #<ctx #564
                      stack: (pair pair unknown unknown pair unknown)
                      env: ((x . #<identifier #565
                                    type: local
                                    offset: 0
                                    pos: (4 3 0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #559
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef9b8				bits 64
7ef9b8			stub_7f764c7ef9b8_1:
7ef9b8 fec1			inc	cl
7ef9ba			stub_7f764c7ef9b8_0:
7ef9ba e87bf648ff		call	do_callback_fn_handler
7ef9bf 6171ed0100000000
(obj= #(#<procedure #566>))
------------------------------------------------------------------------
c863e8				bits 64
c863e8			version1250:
c863e8 58			pop	rax
c863e9 488b400f			mov	rax,[rax+15]
c863ed 50			push	rax
c863ee			version1251:
c863ee 6afe			push	qword byte -2
c863f0 498d4424f0		lea	rax,[r12-16]
c863f5 49bf0880aa4e767f
c863fd 0000			mov	r15,140146102665224
c863ff 493b4728			cmp	rax,[r15+40]
c86403 7d38			jge	short alloc-ok137
c86405 48c7c010000000		mov	rax,dword 16
c8640c 57			push	rdi
c8640d 56			push	rsi
c8640e 52			push	rdx
c8640f 51			push	rcx
c86410 4150			push	r8
c86412 4151			push	r9
c86414 4152			push	r10
c86416 4153			push	r11
c86418 50			push	rax
c86419 4889e7			mov	rdi,rsp
c8641c 4883e4f0			and	rsp,byte -16
c86420 4883ec08			sub	rsp,byte 8
c86424 57			push	rdi
c86425 e8a6fc6c01		call	gc
c8642a 5c			pop	rsp
c8642b 4989c4			mov	r12,rax
c8642e 58			pop	rax
c8642f 415b			pop	r11
c86431 415a			pop	r10
c86433 4159			pop	r9
c86435 4158			pop	r8
c86437 59			pop	rcx
c86438 5a			pop	rdx
c86439 5e			pop	rsi
c8643a 5f			pop	rdi
c8643b eb04			jmp	short alloc-end137
c8643d			alloc-ok137:
c8643d 4983ec10			sub	r12,byte 16
c86441			alloc-end137:
c86441 488b0424			mov	rax,[rsp]
c86445 4989442408		mov	[r12+8],rax
c8644a 48c7c016020000		mov	rax,dword 534
c86451 49890424			mov	[r12],rax
c86455 498d442401		lea	rax,[r12+1]
c8645a 48890424			mov	[rsp],rax
c8645e			version1252:
c8645e 50			push	rax
c8645f 53			push	rbx
c86460 48b85080aa4e767f
c86468 0000			mov	rax,140146102665296
c8646a 488b18			mov	rbx,[rax]
c8646d 48ffc3			inc	rbx
c86470 488918			mov	[rax],rbx
c86473 5b			pop	rbx
c86474 58			pop	rax
c86475 498d4424d8		lea	rax,[r12-40]
c8647a 49bf0880aa4e767f
c86482 0000			mov	r15,140146102665224
c86484 493b4728			cmp	rax,[r15+40]
c86488 7d38			jge	short alloc-ok138
c8648a 48c7c028000000		mov	rax,dword 40
c86491 57			push	rdi
c86492 56			push	rsi
c86493 52			push	rdx
c86494 51			push	rcx
c86495 4150			push	r8
c86497 4151			push	r9
c86499 4152			push	r10
c8649b 4153			push	r11
c8649d 50			push	rax
c8649e 4889e7			mov	rdi,rsp
c864a1 4883e4f0			and	rsp,byte -16
c864a5 4883ec08			sub	rsp,byte 8
c864a9 57			push	rdi
c864aa e821fc6c01		call	gc
c864af 5c			pop	rsp
c864b0 4989c4			mov	r12,rax
c864b3 58			pop	rax
c864b4 415b			pop	r11
c864b6 415a			pop	r10
c864b8 4159			pop	r9
c864ba 4158			pop	r8
c864bc 59			pop	rcx
c864bd 5a			pop	rdx
c864be 5e			pop	rsi
c864bf 5f			pop	rdi
c864c0 eb04			jmp	short alloc-end138
c864c2			alloc-ok138:
c864c2 4983ec28			sub	r12,byte 40
c864c6			alloc-end138:
c864c6 48c7c076050000		mov	rax,dword 1398
c864cd 49890424			mov	[r12],rax
c864d1 48c7c0b071ed01		mov	rax,dword 32338352
c864d8 4989442408		mov	[r12+8],rax
c864dd 488b442428		mov	rax,[rsp+40]
c864e2 4989442410		mov	[r12+16],rax
c864e7 488b442420		mov	rax,[rsp+32]
c864ec 4989442418		mov	[r12+24],rax
c864f1 488b0424			mov	rax,[rsp]
c864f5 4989442420		mov	[r12+32],rax
c864fa 498d442401		lea	rax,[r12+1]
c864ff 50			push	rax
c86500			version1253:
c86500 488b0424			mov	rax,[rsp]
c86504 488b5c2408		mov	rbx,[rsp+8]
c86509 48894307			mov	[rbx+7],rax
c8650d 4883c408			add	rsp,byte 8
c86511			version1254:
c86511 488b0424			mov	rax,[rsp]
c86515 ff7007			push	qword [rax+7]
c86518			version1255:
c86518 58			pop	rax
c86519 4883c408			add	rsp,byte 8
c8651d 50			push	rax
c8651e			version1256:
c8651e			version1257:
c8651e 488b442410		mov	rax,[rsp+16]
c86523 4889442428		mov	[rsp+40],rax
c86528 488b442408		mov	rax,[rsp+8]
c8652d 4889442420		mov	[rsp+32],rax
c86532 488b0424			mov	rax,[rsp]
c86536 4889442418		mov	[rsp+24],rax
c8653b 4883c418			add	rsp,byte 24
c8653f 488b0424			mov	rax,[rsp]
c86543 49c7c341d31f02		mov	r11,dword 35640129
c8654a 488b4007			mov	rax,[rax+7]
c8654e 48c7c708000000		mov	rdi,dword 8
c86555 488b4028			mov	rax,[rax+40]
c86559 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #567
                         stack: (procedure unknown pair retAddr)
                         env: ((a . #<identifier #568
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (b . #<identifier #569
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>)
                               (x . #<identifier #570
                                       type: free
                                       offset: 0
                                       pos: ()
                                       flags: ()
                                       stype: pair>)
                               (y . #<identifier #571
                                       type: free
                                       offset: 1
                                       pos: ()
                                       flags: ()
                                       stype: unknown>)
                               (loop . #<identifier #572
                                          type: free
                                          offset: 2
                                          pos: ()
                                          flags: (mutable)
                                          stype: procedure>))
                         nb-args: 2>
#<ctx #567
      stack: (procedure unknown pair retAddr)
      env: ((a . #<identifier #568
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (b . #<identifier #569
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>)
            (x . #<identifier #570
                    type: free
                    offset: 0
                    pos: ()
                    flags: ()
                    stype: pair>)
            (y . #<identifier #571
                    type: free
                    offset: 1
                    pos: ()
                    flags: ()
                    stype: unknown>)
            (loop . #<identifier #572
                       type: free
                       offset: 2
                       pos: ()
                       flags: (mutable)
                       stype: procedure>))
      nb-args: 2>
------------------------------------------------------------------------
7ef9a8				bits 64
7ef9a8			stub_7f764c7ef9a8_1:
7ef9a8 fec1			inc	cl
7ef9aa			stub_7f764c7ef9a8_0:
7ef9aa e85ef648ff		call	do_callback_handler
7ef9af a181ed0100000000
(obj= #(#<procedure #573>))
------------------------------------------------------------------------
c8655b				bits 64
c8655b 90		fn_entry_9:
c8655c			version1258:
c8655c ff742408			push	qword [rsp+8]
c86560			version1259:
c86560			version1260:
c86560 50			push	rax
c86561 53			push	rbx
c86562 48b84080aa4e767f
c8656a 0000			mov	rax,140146102665280
c8656c 488b18			mov	rbx,[rax]
c8656f 48ffc3			inc	rbx
c86572 488918			mov	[rax],rbx
c86575 5b			pop	rbx
c86576 58			pop	rax
c86577 48c7c0f6ffffff		mov	rax,dword -10
c8657e 48390424			cmp	[rsp],rax
c86582 48c7c0faffffff		mov	rax,dword -6
c86589 7407			je	short done19
c8658b 48c7c0feffffff		mov	rax,dword -2
c86592			done19:
c86592 48890424			mov	[rsp],rax
c86596			version1261:
c86596 58			pop	rax
c86597 4883f8fe			cmp	rax,byte -2
c8659b			patchable_jump86:
c8659b 0f840994b600		je	stub_7f764c7ef9a8_0
c865a1 e90294b600		jmp	stub_7f764c7ef9a8_1
>>> patching closure 7f74aa8bdba9 at 7f74aa8bdbd1 : slot contains now label fn_entry_9 (7f764bc8655c)
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #574
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #568
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #575
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #570
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #571
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (loop . #<identifier #572
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c865a1				bits 64
c865a1 909090		version1262:
c865a4 ff742410			push	qword [rsp+16]
c865a8			version1263:
c865a8			version1264:
c865a8 488b442408		mov	rax,[rsp+8]
c865ad ff7017			push	qword [rax+23]
c865b0			version1265:
c865b0 58			pop	rax
c865b1 5b			pop	rbx
c865b2 4889430f			mov	[rbx+15],rax
c865b6 6aee			push	qword byte -18
c865b8			version1266:
c865b8 488b442408		mov	rax,[rsp+8]
c865bd ff700f			push	qword [rax+15]
c865c0			version1267:
c865c0 58			pop	rax
c865c1 4883c408			add	rsp,byte 8
c865c5 50			push	rax
c865c6			version1268:
c865c6 58			pop	rax
c865c7 4883c418			add	rsp,byte 24
c865cb 5a			pop	rdx
c865cc 488b5a28			mov	rbx,[rdx+40]
c865d0 49c7c328000000		mov	r11,dword 40
c865d7 ffe3			jmp	rbx
------------------------------------------------------------------------
7ef998				bits 64
7ef998			stub_7f764c7ef998_1:
7ef998 fec1			inc	cl
7ef99a			stub_7f764c7ef998_0:
7ef99a e86ef648ff		call	do_callback_handler
7ef99f 9182ed0100000000
(obj= #(#<procedure #576>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c865d9				bits 64
c865d9 909090		continuation_18:
c865dc 50			push	rax
c865dd			version1269:
c865dd ff742410			push	qword [rsp+16]
c865e1			version1270:
c865e1 50			push	rax
c865e2 53			push	rbx
c865e3 48b84080aa4e767f
c865eb 0000			mov	rax,140146102665280
c865ed 488b18			mov	rbx,[rax]
c865f0 48ffc3			inc	rbx
c865f3 488918			mov	[rax],rbx
c865f6 5b			pop	rbx
c865f7 58			pop	rax
c865f8 488b0424			mov	rax,[rsp]
c865fc 4889c3			mov	rbx,rax
c865ff 4883e003			and	rax,byte 3
c86603 4883f801			cmp	rax,byte 1
c86607 750e			jne	short patchable_jump87
c86609 488b43ff			mov	rax,[rbx-1]
c8660d 4825f8000000		and	rax,248
c86613 4883f808			cmp	rax,byte 8
c86617			patchable_jump87:
c86617 0f847d93b600		je	stub_7f764c7ef998_0
c8661d e97693b600		jmp	stub_7f764c7ef998_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86617 -> 7f764c7ef998
GEN VERSION >>> #<ctx #577
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l . #<identifier #578
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #579
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #580
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #581
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #582
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #583
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #584
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #585
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #586
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #587
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #588
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8661d				bits 64
c8661d 909090		version1271:
c86620 58			pop	rax
c86621 488b400f			mov	rax,[rax+15]
c86625 50			push	rax
c86626			version1272:
c86626 488b0424			mov	rax,[rsp]
c8662a 4889442418		mov	[rsp+24],rax
c8662f 4883c418			add	rsp,byte 24
c86633 e9dcf9ffff		jmp	version1185
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #574
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #568
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #575
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #570
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #571
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (loop . #<identifier #572
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> patching jump at 7f764bc8659b -> 7f764bc86638
------------------------------------------------------------------------
7ef9a8				bits 64
7ef9a8			stub_7f764c7ef9a8_1:
7ef9a8 fec1			inc	cl
7ef9aa			stub_7f764c7ef9a8_0:
7ef9aa e85ef648ff		call	do_callback_handler
7ef9af c1adec0100000000
(obj= #(#<procedure #589>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86638				bits 64
c86638			version1273:
c86638 ff742408			push	qword [rsp+8]
c8663c			version1274:
c8663c ff742410			push	qword [rsp+16]
c86640			version1275:
c86640 50			push	rax
c86641 53			push	rbx
c86642 48b84080aa4e767f
c8664a 0000			mov	rax,140146102665280
c8664c 488b18			mov	rbx,[rax]
c8664f 48ffc3			inc	rbx
c86652 488918			mov	[rax],rbx
c86655 5b			pop	rbx
c86656 58			pop	rax
c86657 488b0424			mov	rax,[rsp]
c8665b 4889c3			mov	rbx,rax
c8665e 4883e003			and	rax,byte 3
c86662 4883f801			cmp	rax,byte 1
c86666 750e			jne	short patchable_jump88
c86668 488b43ff			mov	rax,[rbx-1]
c8666c 4825f8000000		and	rax,248
c86672 4883f808			cmp	rax,byte 8
c86676			patchable_jump88:
c86676 0f842e93b600		je	stub_7f764c7ef9a8_0
c8667c e92793b600		jmp	stub_7f764c7ef9a8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86676 -> 7f764c7ef9a8
GEN VERSION >>> #<ctx #590
                      stack: (pair pair procedure pair pair retAddr)
                      env: ((a . #<identifier #568
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #591
                                    type: local
                                    offset: 1
                                    pos: (4 3 1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #570
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #571
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (loop . #<identifier #572
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8667c				bits 64
c8667c			version1276:
c8667c 58			pop	rax
c8667d 488b400f			mov	rax,[rax+15]
c86681 50			push	rax
c86682			version1277:
c86682 488b442410		mov	rax,[rsp+16]
c86687 488b401f			mov	rax,[rax+31]
c8668b ff7007			push	qword [rax+7]
c8668e			version1278:
c8668e			version1279:
c8668e 488b442410		mov	rax,[rsp+16]
c86693 4889442428		mov	[rsp+40],rax
c86698 488b442408		mov	rax,[rsp+8]
c8669d 4889442420		mov	[rsp+32],rax
c866a2 488b0424			mov	rax,[rsp]
c866a6 4889442418		mov	[rsp+24],rax
c866ab 4883c418			add	rsp,byte 24
c866af 488b0424			mov	rax,[rsp]
c866b3 49c7c341d31f02		mov	r11,dword 35640129
c866ba 488b4007			mov	rax,[rax+7]
c866be 48c7c708000000		mov	rdi,dword 8
c866c5 488b4028			mov	rax,[rax+40]
c866c9 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #510
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #511
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #512
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86052 -> 7f764bc866cb
------------------------------------------------------------------------
7efa78				bits 64
7efa78			stub_7f764c7efa78_1:
7efa78 fec1			inc	cl
7efa7a			stub_7f764c7efa78_0:
7efa7a e88ef548ff		call	do_callback_handler
7efa7f 61aeec0100000000
(obj= #(#<procedure #592>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c866cb				bits 64
c866cb 90		version1280:
c866cc 6afe			push	qword byte -2
c866ce			version1281:
c866ce 58			pop	rax
c866cf 4883c408			add	rsp,byte 8
c866d3 50			push	rax
c866d4			version1282:
c866d4 ff742408			push	qword [rsp+8]
c866d8			version1283:
c866d8 48c7c004000000		mov	rax,dword 4
c866df 50			push	rax
c866e0			version1284:
c866e0 50			push	rax
c866e1 53			push	rbx
c866e2 48b84080aa4e767f
c866ea 0000			mov	rax,140146102665280
c866ec 488b18			mov	rbx,[rax]
c866ef 48ffc3			inc	rbx
c866f2 488918			mov	[rax],rbx
c866f5 5b			pop	rbx
c866f6 58			pop	rax
c866f7 48c7c003000000		mov	rax,dword 3
c866fe 4823442408		and	rax,[rsp+8]
c86703			patchable_jump89:
c86703 0f847193b600		je	stub_7f764c7efa78_0
c86709 e96a93b600		jmp	stub_7f764c7efa78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86703 -> 7f764c7efa78
GEN VERSION >>> #<ctx #593
                      stack: (number number
                                     boolean
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((i . #<identifier #594
                                    type: local
                                    offset: 4
                                    pos: (6)
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef988				bits 64
7ef988			stub_7f764c7ef988_0:
7ef988 e880f648ff		call	do_callback_handler
7ef98d b1e7ec0100000000
(obj= #(#<procedure #595>))
------------------------------------------------------------------------
7ef978				bits 64
7ef978			stub_7f764c7ef978_1:
7ef978 fec1			inc	cl
7ef97a			stub_7f764c7ef978_0:
7ef97a e88ef648ff		call	do_callback_handler
7ef97f 4151ee0100000000
(obj= #(#<procedure #596>))
------------------------------------------------------------------------
c86709				bits 64
c86709 909090		version1285:
c8670c			version1286:
c8670c 58			pop	rax
c8670d 48290424			sub	[rsp],rax
c86711 0f80e1a3b600		jo	stub_7f764c7f0af8_0
c86717			version1287:
c86717 488b0424			mov	rax,[rsp]
c8671b 4889442410		mov	[rsp+16],rax
c86720 4883c410			add	rsp,byte 16
c86724			version1288:
c86724 ff3424			push	qword [rsp]
c86727			version1289:
c86727 48c7c000000000		mov	rax,dword 0
c8672e 50			push	rax
c8672f			version1290:
c8672f			version1291:
c8672f			version1292:
c8672f 488b442408		mov	rax,[rsp+8]
c86734 483b0424			cmp	rax,[rsp]
c86738			label-jump22:
c86738 0f854a92b600		jne	stub_7f764c7ef988_0
c8673e			version1293:
c8673e 4883c410			add	rsp,byte 16
c86742 6afa			push	qword byte -6
c86744			version1294:
c86744 58			pop	rax
c86745 4883f8fe			cmp	rax,byte -2
c86749			patchable_jump90:
c86749 0f842b92b600		je	stub_7f764c7ef978_0
c8674f e92492b600		jmp	stub_7f764c7ef978_1
GEN VERSION >>> #<ctx #597
                      stack: (number number
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((i . #<identifier #598
                                    type: local
                                    offset: 4
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86738 -> 7f764bc86754
------------------------------------------------------------------------
c86754				bits 64
c86754			version1295:
c86754 4883c410			add	rsp,byte 16
c86758 6afe			push	qword byte -2
c8675a ebe8			jmp	short version1294
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #599
                      stack: (number unknown unknown unknown unknown unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86749 -> 7f764bc8675c
------------------------------------------------------------------------
7ef968				bits 64
7ef968			stub_7f764c7ef968_1:
7ef968 fec1			inc	cl
7ef96a			stub_7f764c7ef968_0:
7ef96a e89ef648ff		call	do_callback_handler
7ef96f 016fed0100000000
(obj= #(#<procedure #601>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8675c				bits 64
c8675c			version1296:
c8675c ff742408			push	qword [rsp+8]
c86760			version1297:
c86760 50			push	rax
c86761 53			push	rbx
c86762 48b84080aa4e767f
c8676a 0000			mov	rax,140146102665280
c8676c 488b18			mov	rbx,[rax]
c8676f 48ffc3			inc	rbx
c86772 488918			mov	[rax],rbx
c86775 5b			pop	rbx
c86776 58			pop	rax
c86777 488b0424			mov	rax,[rsp]
c8677b 4889c3			mov	rbx,rax
c8677e 4883e003			and	rax,byte 3
c86782 4883f801			cmp	rax,byte 1
c86786 750e			jne	short patchable_jump91
c86788 488b43ff			mov	rax,[rbx-1]
c8678c 4825f8000000		and	rax,248
c86792 4883f808			cmp	rax,byte 8
c86796			patchable_jump91:
c86796 0f84ce91b600		je	stub_7f764c7ef968_0
c8679c e9c791b600		jmp	stub_7f764c7ef968_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86796 -> 7f764c7ef968
GEN VERSION >>> #<ctx #602
                      stack: (pair number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #603
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef958				bits 64
7ef958			stub_7f764c7ef958_1:
7ef958 fec1			inc	cl
7ef95a			stub_7f764c7ef958_0:
7ef95a e8aef648ff		call	do_callback_handler
7ef95f a1e8ec0100000000
(obj= #(#<procedure #604>))
------------------------------------------------------------------------
c8679c				bits 64
c8679c			version1298:
c8679c 58			pop	rax
c8679d 488b4007			mov	rax,[rax+7]
c867a1 50			push	rax
c867a2			version1299:
c867a2			version1300:
c867a2 50			push	rax
c867a3 53			push	rbx
c867a4 48b84080aa4e767f
c867ac 0000			mov	rax,140146102665280
c867ae 488b18			mov	rbx,[rax]
c867b1 48ffc3			inc	rbx
c867b4 488918			mov	[rax],rbx
c867b7 5b			pop	rbx
c867b8 58			pop	rax
c867b9 48c7c0f6ffffff		mov	rax,dword -10
c867c0 48390424			cmp	[rsp],rax
c867c4 48c7c0faffffff		mov	rax,dword -6
c867cb 7407			je	short done20
c867cd 48c7c0feffffff		mov	rax,dword -2
c867d4			done20:
c867d4 48890424			mov	[rsp],rax
c867d8			version1301:
c867d8 58			pop	rax
c867d9 4883f8fe			cmp	rax,byte -2
c867dd			patchable_jump92:
c867dd 0f847791b600		je	stub_7f764c7ef958_0
c867e3 e97091b600		jmp	stub_7f764c7ef958_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc867dd -> 7f764c7ef958
GEN VERSION >>> #<ctx #605
                      stack: (number unknown unknown unknown unknown unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #606
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef948				bits 64
7ef948			stub_7f764c7ef948_1:
7ef948 fec1			inc	cl
7ef94a			stub_7f764c7ef948_0:
7ef94a e8bef648ff		call	do_callback_handler
7ef94f 016ced0100000000
(obj= #(#<procedure #607>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c867e3				bits 64
c867e3 90		version1302:
c867e4 ff742408			push	qword [rsp+8]
c867e8			version1303:
c867e8 ff742410			push	qword [rsp+16]
c867ec			version1304:
c867ec 50			push	rax
c867ed 53			push	rbx
c867ee 48b84080aa4e767f
c867f6 0000			mov	rax,140146102665280
c867f8 488b18			mov	rbx,[rax]
c867fb 48ffc3			inc	rbx
c867fe 488918			mov	[rax],rbx
c86801 5b			pop	rbx
c86802 58			pop	rax
c86803 488b0424			mov	rax,[rsp]
c86807 4889c3			mov	rbx,rax
c8680a 4883e003			and	rax,byte 3
c8680e 4883f801			cmp	rax,byte 1
c86812 750e			jne	short patchable_jump93
c86814 488b43ff			mov	rax,[rbx-1]
c86818 4825f8000000		and	rax,248
c8681e 4883f808			cmp	rax,byte 8
c86822			patchable_jump93:
c86822 0f842291b600		je	stub_7f764c7ef948_0
c86828 e91b91b600		jmp	stub_7f764c7ef948_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86822 -> 7f764c7ef948
GEN VERSION >>> #<ctx #608
                      stack: (pair pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #609
                                    type: local
                                    offset: 3
                                    pos: (6 5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef938				bits 64
7ef938			stub_7f764c7ef938_1:
7ef938 fec1			inc	cl
7ef93a			stub_7f764c7ef938_0:
7ef93a e8cef648ff		call	do_callback_handler
7ef93f 4182ed0100000000
(obj= #(#<procedure #610>))
------------------------------------------------------------------------
c86828				bits 64
c86828			version1305:
c86828 58			pop	rax
c86829 488b400f			mov	rax,[rax+15]
c8682d 50			push	rax
c8682e			version1306:
c8682e			version1307:
c8682e ff3424			push	qword [rsp]
c86831			version1308:
c86831			version1309:
c86831 50			push	rax
c86832 53			push	rbx
c86833 48b84080aa4e767f
c8683b 0000			mov	rax,140146102665280
c8683d 488b18			mov	rbx,[rax]
c86840 48ffc3			inc	rbx
c86843 488918			mov	[rax],rbx
c86846 5b			pop	rbx
c86847 58			pop	rax
c86848 48c7c0f6ffffff		mov	rax,dword -10
c8684f 48390424			cmp	[rsp],rax
c86853 48c7c0faffffff		mov	rax,dword -6
c8685a 7407			je	short done21
c8685c 48c7c0feffffff		mov	rax,dword -2
c86863			done21:
c86863 48890424			mov	[rsp],rax
c86867			version1310:
c86867 58			pop	rax
c86868 4883f8fe			cmp	rax,byte -2
c8686c			patchable_jump94:
c8686c 0f84c890b600		je	stub_7f764c7ef938_0
c86872 e9c190b600		jmp	stub_7f764c7ef938_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8686c -> 7f764c7ef938
GEN VERSION >>> #<ctx #611
                      stack: (unknown pair
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #613
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef928				bits 64
7ef928			stub_7f764c7ef928_1:
7ef928 fec1			inc	cl
7ef92a			stub_7f764c7ef928_0:
7ef92a e8def648ff		call	do_callback_handler
7ef92f 8183ed0100000000
(obj= #(#<procedure #615>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86872				bits 64
c86872 9090		version1311:
c86874 6afe			push	qword byte -2
c86876			version1312:
c86876 ff742408			push	qword [rsp+8]
c8687a			version1313:
c8687a 50			push	rax
c8687b 53			push	rbx
c8687c 48b84080aa4e767f
c86884 0000			mov	rax,140146102665280
c86886 488b18			mov	rbx,[rax]
c86889 48ffc3			inc	rbx
c8688c 488918			mov	[rax],rbx
c8688f 5b			pop	rbx
c86890 58			pop	rax
c86891 488b0424			mov	rax,[rsp]
c86895 4889c3			mov	rbx,rax
c86898 4883e003			and	rax,byte 3
c8689c 4883f801			cmp	rax,byte 1
c868a0 750e			jne	short patchable_jump95
c868a2 488b43ff			mov	rax,[rbx-1]
c868a6 4825f8000000		and	rax,248
c868ac 4883f808			cmp	rax,byte 8
c868b0			patchable_jump95:
c868b0 0f847490b600		je	stub_7f764c7ef928_0
c868b6 e96d90b600		jmp	stub_7f764c7ef928_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc868b0 -> 7f764c7ef928
GEN VERSION >>> #<ctx #616
                      stack: (pair retAddr
                                   pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #617
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef918				bits 64
7ef918			stub_7f764c7ef918_0:
7ef918 e84af748ff		call	do_callback_cont_handler
7ef91d 2184ed0100000000
(obj= #(#<procedure #618>))
------------------------------------------------------------------------
c868b6				bits 64
c868b6 9090		version1314:
c868b8 58			pop	rax
c868b9 488b4007			mov	rax,[rax+7]
c868bd 50			push	rax
c868be			version1315:
c868be 41ffb278020000		push	qword [r10+632]
c868c5			version1316:
c868c5			version1317:
c868c5 48c7c07084ed01		mov	rax,dword 32343152
c868cc 4889442410		mov	[rsp+16],rax
c868d1			version1318:
c868d1 488b0424			mov	rax,[rsp]
c868d5 48c7c704000000		mov	rdi,dword 4
c868dc 488b4007			mov	rax,[rax+7]
c868e0 488b4008			mov	rax,[rax+8]
c868e4 ffe0			jmp	rax
------------------------------------------------------------------------
7ef908				bits 64
7ef908			stub_7f764c7ef908_0:
7ef908 e800f748ff		call	do_callback_handler
7ef90d 9185ed0100000000
(obj= #(#<procedure #619>))
------------------------------------------------------------------------
7ef8f8				bits 64
7ef8f8			stub_7f764c7ef8f8_1:
7ef8f8 fec1			inc	cl
7ef8fa			stub_7f764c7ef8f8_0:
7ef8fa e80ef748ff		call	do_callback_handler
7ef8ff e185ed0100000000
(obj= #(#<procedure #620>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c868e6				bits 64
c868e6 9090		continuation_19:
c868e8 50			push	rax
c868e9			version1319:
c868e9			version1320:
c868e9 48c7c008000000		mov	rax,dword 8
c868f0 50			push	rax
c868f1			version1321:
c868f1			version1322:
c868f1 5b			pop	rbx
c868f2 58			pop	rax
c868f3 48c1f802			sar	rax,2
c868f7 48c1fb02			sar	rbx,2
c868fb 4883fb00			cmp	rbx,byte 0
c868ff 0f840390b600		je	stub_7f764c7ef908_0
c86905 4899			cqo
c86907 48f7fb			idiv	rbx
c8690a 48c1e002			shl	rax,2
c8690e 50			push	rax
c8690f			version1323:
c8690f ff742408			push	qword [rsp+8]
c86913			version1324:
c86913 50			push	rax
c86914 53			push	rbx
c86915 48b84080aa4e767f
c8691d 0000			mov	rax,140146102665280
c8691f 488b18			mov	rbx,[rax]
c86922 48ffc3			inc	rbx
c86925 488918			mov	[rax],rbx
c86928 5b			pop	rbx
c86929 58			pop	rax
c8692a 488b0424			mov	rax,[rsp]
c8692e 4889c3			mov	rbx,rax
c86931 4883e003			and	rax,byte 3
c86935 4883f801			cmp	rax,byte 1
c86939 750e			jne	short patchable_jump96
c8693b 488b43ff			mov	rax,[rbx-1]
c8693f 4825f8000000		and	rax,248
c86945 4883f808			cmp	rax,byte 8
c86949			patchable_jump96:
c86949 0f84ab8fb600		je	stub_7f764c7ef8f8_0
c8694f e9a48fb600		jmp	stub_7f764c7ef8f8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86949 -> 7f764c7ef8f8
GEN VERSION >>> #<ctx #621
                      stack: (pair number
                                   pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #622
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef8e8				bits 64
7ef8e8			stub_7f764c7ef8e8_0:
7ef8e8 e87af748ff		call	do_callback_cont_handler
7ef8ed 8186ed0100000000
(obj= #(#<procedure #623>))
------------------------------------------------------------------------
c8694f				bits 64
c8694f 90		version1325:
c86950 58			pop	rax
c86951 488b4007			mov	rax,[rax+7]
c86955 50			push	rax
c86956			version1326:
c86956			version1327:
c86956 6afe			push	qword byte -2
c86958			version1328:
c86958 ff742410			push	qword [rsp+16]
c8695c			version1329:
c8695c 41ffb218030000		push	qword [r10+792]
c86963			version1330:
c86963			version1331:
c86963 48c7c0d086ed01		mov	rax,dword 32343760
c8696a 4889442410		mov	[rsp+16],rax
c8696f			version1332:
c8696f 488b0424			mov	rax,[rsp]
c86973 49c7c3e19fec01		mov	r11,dword 32284641
c8697a 488b4007			mov	rax,[rax+7]
c8697e 48c7c704000000		mov	rdi,dword 4
c86985 488b4030			mov	rax,[rax+48]
c86989 ffe0			jmp	rax
------------------------------------------------------------------------
7ef8d8				bits 64
7ef8d8			stub_7f764c7ef8d8_1:
7ef8d8 fec1			inc	cl
7ef8da			stub_7f764c7ef8d8_0:
7ef8da e82ef748ff		call	do_callback_handler
7ef8df f187ed0100000000
(obj= #(#<procedure #624>))
------------------------------------------------------------------------
c8698b				bits 64
c8698b 90		continuation_20:
c8698c 50			push	rax
c8698d			version1333:
c8698d 58			pop	rax
c8698e 4883f8fe			cmp	rax,byte -2
c86992			patchable_jump97:
c86992 0f84428fb600		je	stub_7f764c7ef8d8_0
c86998 e93b8fb600		jmp	stub_7f764c7ef8d8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86992 -> 7f764c7ef8d8
GEN VERSION >>> #<ctx #625
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #626
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #627
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef8c8				bits 64
7ef8c8			stub_7f764c7ef8c8_1:
7ef8c8 fec1			inc	cl
7ef8ca			stub_7f764c7ef8c8_0:
7ef8ca e83ef748ff		call	do_callback_handler
7ef8cf 9188ed0100000000
(obj= #(#<procedure #629>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86998				bits 64
c86998			version1334:
c86998 ff3424			push	qword [rsp]
c8699b			version1335:
c8699b 50			push	rax
c8699c 53			push	rbx
c8699d 48b84080aa4e767f
c869a5 0000			mov	rax,140146102665280
c869a7 488b18			mov	rbx,[rax]
c869aa 48ffc3			inc	rbx
c869ad 488918			mov	[rax],rbx
c869b0 5b			pop	rbx
c869b1 58			pop	rax
c869b2 488b0424			mov	rax,[rsp]
c869b6 4889c3			mov	rbx,rax
c869b9 4883e003			and	rax,byte 3
c869bd 4883f801			cmp	rax,byte 1
c869c1 750e			jne	short patchable_jump98
c869c3 488b43ff			mov	rax,[rbx-1]
c869c7 4825f8000000		and	rax,248
c869cd 4883f808			cmp	rax,byte 8
c869d1			patchable_jump98:
c869d1 0f84f38eb600		je	stub_7f764c7ef8c8_0
c869d7 e9ec8eb600		jmp	stub_7f764c7ef8c8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc869d1 -> 7f764c7ef8c8
GEN VERSION >>> #<ctx #630
                      stack: (pair pair
                                   number
                                   pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #626
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #631
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c869d7				bits 64
c869d7 90		version1336:
c869d8 ff742428			push	qword [rsp+40]
c869dc			version1337:
c869dc 58			pop	rax
c869dd 5b			pop	rbx
c869de 48894307			mov	[rbx+7],rax
c869e2 6aee			push	qword byte -18
c869e4			version1338:
c869e4 ff742410			push	qword [rsp+16]
c869e8			version1339:
c869e8 48c7c004000000		mov	rax,dword 4
c869ef 50			push	rax
c869f0			version1340:
c869f0			version1341:
c869f0			version1342:
c869f0 58			pop	rax
c869f1 48290424			sub	[rsp],rax
c869f5 0f80cda0b600		jo	stub_7f764c7f0ac8_0
c869fb			version1343:
c869fb ff742410			push	qword [rsp+16]
c869ff			version1344:
c869ff			version1345:
c869ff 58			pop	rax
c86a00 488b400f			mov	rax,[rax+15]
c86a04 50			push	rax
c86a05			version1346:
c86a05 488b442408		mov	rax,[rsp+8]
c86a0a 4889442420		mov	[rsp+32],rax
c86a0f 488b0424			mov	rax,[rsp]
c86a13 4889442418		mov	[rsp+24],rax
c86a18 4883c418			add	rsp,byte 24
c86a1c e935ffffff		jmp	version1327
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #625
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #626
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #627
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86992 -> 7f764bc86a21
------------------------------------------------------------------------
7ef8d8				bits 64
7ef8d8			stub_7f764c7ef8d8_1:
7ef8d8 fec1			inc	cl
7ef8da			stub_7f764c7ef8d8_0:
7ef8da e82ef748ff		call	do_callback_handler
7ef8df 8189ed0100000000
(obj= #(#<procedure #632>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86a21				bits 64
c86a21 909090		version1347:
c86a24 ff3424			push	qword [rsp]
c86a27			version1348:
c86a27 58			pop	rax
c86a28 4883c410			add	rsp,byte 16
c86a2c 50			push	rax
c86a2d			version1349:
c86a2d 50			push	rax
c86a2e 53			push	rbx
c86a2f 48b84080aa4e767f
c86a37 0000			mov	rax,140146102665280
c86a39 488b18			mov	rbx,[rax]
c86a3c 48ffc3			inc	rbx
c86a3f 488918			mov	[rax],rbx
c86a42 5b			pop	rbx
c86a43 58			pop	rax
c86a44 488b0424			mov	rax,[rsp]
c86a48 4889c3			mov	rbx,rax
c86a4b 4883e003			and	rax,byte 3
c86a4f 4883f801			cmp	rax,byte 1
c86a53 750e			jne	short patchable_jump99
c86a55 488b43ff			mov	rax,[rbx-1]
c86a59 4825f8000000		and	rax,248
c86a5f 4883f808			cmp	rax,byte 8
c86a63			patchable_jump99:
c86a63 0f84718eb600		je	stub_7f764c7ef8d8_0
c86a69 e96a8eb600		jmp	stub_7f764c7ef8d8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86a63 -> 7f764c7ef8d8
GEN VERSION >>> #<ctx #633
                      stack: (pair pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef8b8				bits 64
7ef8b8			stub_7f764c7ef8b8_0:
7ef8b8 e8aaf748ff		call	do_callback_cont_handler
7ef8bd 218aed0100000000
(obj= #(#<procedure #634>))
------------------------------------------------------------------------
c86a69				bits 64
c86a69 909090		version1350:
c86a6c 6afe			push	qword byte -2
c86a6e			version1351:
c86a6e ff742418			push	qword [rsp+24]
c86a72			version1352:
c86a72			version1353:
c86a72 58			pop	rax
c86a73 488b4007			mov	rax,[rax+7]
c86a77 50			push	rax
c86a78			version1354:
c86a78 41ffb278020000		push	qword [r10+632]
c86a7f			version1355:
c86a7f			version1356:
c86a7f 48c7c0708aed01		mov	rax,dword 32344688
c86a86 4889442410		mov	[rsp+16],rax
c86a8b			version1357:
c86a8b 488b0424			mov	rax,[rsp]
c86a8f 48c7c704000000		mov	rdi,dword 4
c86a96 488b4007			mov	rax,[rax+7]
c86a9a 488b4008			mov	rax,[rax+8]
c86a9e ffe0			jmp	rax
------------------------------------------------------------------------
7ef8a8				bits 64
7ef8a8			stub_7f764c7ef8a8_0:
7ef8a8 e860f748ff		call	do_callback_handler
7ef8ad 918bed0100000000
(obj= #(#<procedure #635>))
------------------------------------------------------------------------
7ef898				bits 64
7ef898			stub_7f764c7ef898_0:
7ef898 e870f748ff		call	do_callback_handler
7ef89d e18bed0100000000
(obj= #(#<procedure #636>))
------------------------------------------------------------------------
7ef888				bits 64
7ef888			stub_7f764c7ef888_1:
7ef888 fec1			inc	cl
7ef88a			stub_7f764c7ef888_0:
7ef88a e87ef748ff		call	do_callback_handler
7ef88f 318ced0100000000
(obj= #(#<procedure #637>))
------------------------------------------------------------------------
c86aa0				bits 64
c86aa0			continuation_21:
c86aa0 50			push	rax
c86aa1			version1358:
c86aa1			version1359:
c86aa1 48c7c008000000		mov	rax,dword 8
c86aa8 50			push	rax
c86aa9			version1360:
c86aa9			version1361:
c86aa9 5b			pop	rbx
c86aaa 58			pop	rax
c86aab 48c1f802			sar	rax,2
c86aaf 48c1fb02			sar	rbx,2
c86ab3 4883fb00			cmp	rbx,byte 0
c86ab7 0f84eb8db600		je	stub_7f764c7ef8a8_0
c86abd 4899			cqo
c86abf 48f7fb			idiv	rbx
c86ac2 48c1e002			shl	rax,2
c86ac6 50			push	rax
c86ac7			version1362:
c86ac7			version1363:
c86ac7 ff3424			push	qword [rsp]
c86aca			version1364:
c86aca 48c7c000000000		mov	rax,dword 0
c86ad1 50			push	rax
c86ad2			version1365:
c86ad2			version1366:
c86ad2			version1367:
c86ad2 488b442408		mov	rax,[rsp+8]
c86ad7 483b0424			cmp	rax,[rsp]
c86adb			label-jump23:
c86adb 0f85b78db600		jne	stub_7f764c7ef898_0
c86ae1			version1368:
c86ae1 4883c410			add	rsp,byte 16
c86ae5 6afa			push	qword byte -6
c86ae7			version1369:
c86ae7 58			pop	rax
c86ae8 4883f8fe			cmp	rax,byte -2
c86aec			patchable_jump100:
c86aec 0f84988db600		je	stub_7f764c7ef888_0
c86af2 e9918db600		jmp	stub_7f764c7ef888_1
GEN VERSION >>> #<ctx #638
                      stack: (number number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((n . #<identifier #639
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #640
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86adb -> 7f764bc86af7
------------------------------------------------------------------------
c86af7				bits 64
c86af7 90		version1370:
c86af8 4883c410			add	rsp,byte 16
c86afc 6afe			push	qword byte -2
c86afe ebe7			jmp	short version1369
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #641
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((n . #<identifier #642
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #643
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86aec -> 7f764bc86b00
------------------------------------------------------------------------
7ef878				bits 64
7ef878			stub_7f764c7ef878_0:
7ef878 e890f748ff		call	do_callback_handler
7ef87d 218ded0100000000
(obj= #(#<procedure #644>))
------------------------------------------------------------------------
7ef868				bits 64
7ef868			stub_7f764c7ef868_1:
7ef868 fec1			inc	cl
7ef86a			stub_7f764c7ef868_0:
7ef86a e89ef748ff		call	do_callback_handler
7ef86f 718ded0100000000
(obj= #(#<procedure #645>))
------------------------------------------------------------------------
c86b00				bits 64
c86b00			version1371:
c86b00 ff3424			push	qword [rsp]
c86b03			version1372:
c86b03 ff742420			push	qword [rsp+32]
c86b07			version1373:
c86b07			version1374:
c86b07 58			pop	rax
c86b08 488b4007			mov	rax,[rax+7]
c86b0c 50			push	rax
c86b0d			version1375:
c86b0d			version1376:
c86b0d ff742408			push	qword [rsp+8]
c86b11			version1377:
c86b11 48c7c004000000		mov	rax,dword 4
c86b18 50			push	rax
c86b19			version1378:
c86b19			version1379:
c86b19			version1380:
c86b19 488b442408		mov	rax,[rsp+8]
c86b1e 483b0424			cmp	rax,[rsp]
c86b22			label-jump24:
c86b22 0f85508db600		jne	stub_7f764c7ef878_0
c86b28			version1381:
c86b28 4883c410			add	rsp,byte 16
c86b2c 6afa			push	qword byte -6
c86b2e			version1382:
c86b2e 58			pop	rax
c86b2f 4883f8fe			cmp	rax,byte -2
c86b33			patchable_jump101:
c86b33 0f84318db600		je	stub_7f764c7ef868_0
c86b39 e92a8db600		jmp	stub_7f764c7ef868_1
GEN VERSION >>> #<ctx #646
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #647
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #648
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #649
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #650
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #651
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86b22 -> 7f764bc86b3e
------------------------------------------------------------------------
c86b3e				bits 64
c86b3e 9090		version1383:
c86b40 4883c410			add	rsp,byte 16
c86b44 6afe			push	qword byte -2
c86b46 ebe6			jmp	short version1382
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #652
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #653
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #648
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #649
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #650
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #651
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86b33 -> 7f764bc86b48
------------------------------------------------------------------------
7ef858				bits 64
7ef858			stub_7f764c7ef858_1:
7ef858 fec1			inc	cl
7ef85a			stub_7f764c7ef858_0:
7ef85a e8aef748ff		call	do_callback_handler
7ef85f 31b1ec0100000000
(obj= #(#<procedure #654>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86b48				bits 64
c86b48			version1384:
c86b48 ff3424			push	qword [rsp]
c86b4b			version1385:
c86b4b 50			push	rax
c86b4c 53			push	rbx
c86b4d 48b84080aa4e767f
c86b55 0000			mov	rax,140146102665280
c86b57 488b18			mov	rbx,[rax]
c86b5a 48ffc3			inc	rbx
c86b5d 488918			mov	[rax],rbx
c86b60 5b			pop	rbx
c86b61 58			pop	rax
c86b62 488b0424			mov	rax,[rsp]
c86b66 4889c3			mov	rbx,rax
c86b69 4883e003			and	rax,byte 3
c86b6d 4883f801			cmp	rax,byte 1
c86b71 750e			jne	short patchable_jump102
c86b73 488b43ff			mov	rax,[rbx-1]
c86b77 4825f8000000		and	rax,248
c86b7d 4883f808			cmp	rax,byte 8
c86b81			patchable_jump102:
c86b81 0f84d38cb600		je	stub_7f764c7ef858_0
c86b87 e9cc8cb600		jmp	stub_7f764c7ef858_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86b81 -> 7f764c7ef858
GEN VERSION >>> #<ctx #655
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #653
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #656
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #649
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #650
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #651
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c86b87				bits 64
c86b87 90		version1386:
c86b88 ff742438			push	qword [rsp+56]
c86b8c			version1387:
c86b8c 58			pop	rax
c86b8d 5b			pop	rbx
c86b8e 48894307			mov	[rbx+7],rax
c86b92 6aee			push	qword byte -18
c86b94			version1388:
c86b94 ff742410			push	qword [rsp+16]
c86b98			version1389:
c86b98 48c7c004000000		mov	rax,dword 4
c86b9f 50			push	rax
c86ba0			version1390:
c86ba0			version1391:
c86ba0			version1392:
c86ba0 58			pop	rax
c86ba1 48290424			sub	[rsp],rax
c86ba5 0f803d9fb600		jo	stub_7f764c7f0ae8_0
c86bab			version1393:
c86bab ff742410			push	qword [rsp+16]
c86baf			version1394:
c86baf			version1395:
c86baf 58			pop	rax
c86bb0 488b400f			mov	rax,[rax+15]
c86bb4 50			push	rax
c86bb5			version1396:
c86bb5 488b442408		mov	rax,[rsp+8]
c86bba 4889442420		mov	[rsp+32],rax
c86bbf 488b0424			mov	rax,[rsp]
c86bc3 4889442418		mov	[rsp+24],rax
c86bc8 4883c418			add	rsp,byte 24
c86bcc e93cffffff		jmp	version1376
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #652
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #653
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #648
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #649
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #650
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #651
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86b39 -> 7f764bc86bd1
------------------------------------------------------------------------
7ef868				bits 64
7ef868			stub_7f764c7ef868_1:
7ef868 fec1			inc	cl
7ef86a			stub_7f764c7ef868_0:
7ef86a e89ef748ff		call	do_callback_handler
7ef86f 1171ed0100000000
(obj= #(#<procedure #657>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86bd1				bits 64
c86bd1 909090		version1397:
c86bd4 ff3424			push	qword [rsp]
c86bd7			version1398:
c86bd7 50			push	rax
c86bd8 53			push	rbx
c86bd9 48b84080aa4e767f
c86be1 0000			mov	rax,140146102665280
c86be3 488b18			mov	rbx,[rax]
c86be6 48ffc3			inc	rbx
c86be9 488918			mov	[rax],rbx
c86bec 5b			pop	rbx
c86bed 58			pop	rax
c86bee 488b0424			mov	rax,[rsp]
c86bf2 4889c3			mov	rbx,rax
c86bf5 4883e003			and	rax,byte 3
c86bf9 4883f801			cmp	rax,byte 1
c86bfd 750e			jne	short patchable_jump103
c86bff 488b43ff			mov	rax,[rbx-1]
c86c03 4825f8000000		and	rax,248
c86c09 4883f808			cmp	rax,byte 8
c86c0d			patchable_jump103:
c86c0d 0f84578cb600		je	stub_7f764c7ef868_0
c86c13 e9508cb600		jmp	stub_7f764c7ef868_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86c0d -> 7f764c7ef868
GEN VERSION >>> #<ctx #658
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #653
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #659
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #649
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #650
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #651
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef848				bits 64
7ef848			stub_7f764c7ef848_1:
7ef848 fec1			inc	cl
7ef84a			stub_7f764c7ef848_0:
7ef84a e8bef748ff		call	do_callback_handler
7ef84f d183ed0100000000
(obj= #(#<procedure #660>))
------------------------------------------------------------------------
c86c13				bits 64
c86c13 90		version1399:
c86c14 58			pop	rax
c86c15 488b400f			mov	rax,[rax+15]
c86c19 50			push	rax
c86c1a			version1400:
c86c1a			version1401:
c86c1a ff742408			push	qword [rsp+8]
c86c1e			version1402:
c86c1e			version1403:
c86c1e 6af6			push	qword byte -10
c86c20			version1404:
c86c20 58			pop	rax
c86c21 5b			pop	rbx
c86c22 4889430f			mov	[rbx+15],rax
c86c26 6aee			push	qword byte -18
c86c28			version1405:
c86c28 ff742408			push	qword [rsp+8]
c86c2c			version1406:
c86c2c 58			pop	rax
c86c2d 4883c410			add	rsp,byte 16
c86c31 50			push	rax
c86c32			version1407:
c86c32 58			pop	rax
c86c33 4883c410			add	rsp,byte 16
c86c37 50			push	rax
c86c38			version1408:
c86c38 58			pop	rax
c86c39 4883c408			add	rsp,byte 8
c86c3d 50			push	rax
c86c3e			version1409:
c86c3e 58			pop	rax
c86c3f 5b			pop	rbx
c86c40 4889430f			mov	[rbx+15],rax
c86c44 6aee			push	qword byte -18
c86c46			version1410:
c86c46 ff742410			push	qword [rsp+16]
c86c4a			version1411:
c86c4a			version1412:
c86c4a 58			pop	rax
c86c4b 488b400f			mov	rax,[rax+15]
c86c4f 50			push	rax
c86c50			version1413:
c86c50 ff742410			push	qword [rsp+16]
c86c54			version1414:
c86c54			version1415:
c86c54 58			pop	rax
c86c55 488b400f			mov	rax,[rax+15]
c86c59 50			push	rax
c86c5a			version1416:
c86c5a 488b442408		mov	rax,[rsp+8]
c86c5f 4889442420		mov	[rsp+32],rax
c86c64 488b0424			mov	rax,[rsp]
c86c68 4889442418		mov	[rsp+24],rax
c86c6d 4883c418			add	rsp,byte 24
c86c71			version1417:
c86c71 ff3424			push	qword [rsp]
c86c74			version1418:
c86c74			version1419:
c86c74 50			push	rax
c86c75 53			push	rbx
c86c76 48b84080aa4e767f
c86c7e 0000			mov	rax,140146102665280
c86c80 488b18			mov	rbx,[rax]
c86c83 48ffc3			inc	rbx
c86c86 488918			mov	[rax],rbx
c86c89 5b			pop	rbx
c86c8a 58			pop	rax
c86c8b 48c7c0f6ffffff		mov	rax,dword -10
c86c92 48390424			cmp	[rsp],rax
c86c96 48c7c0faffffff		mov	rax,dword -6
c86c9d 7407			je	short done22
c86c9f 48c7c0feffffff		mov	rax,dword -2
c86ca6			done22:
c86ca6 48890424			mov	[rsp],rax
c86caa			version1420:
c86caa 58			pop	rax
c86cab 4883f8fe			cmp	rax,byte -2
c86caf			patchable_jump104:
c86caf 0f84958bb600		je	stub_7f764c7ef848_0
c86cb5 e98e8bb600		jmp	stub_7f764c7ef848_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86caf -> 7f764c7ef848
GEN VERSION >>> #<ctx #661
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #662
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #663
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #664
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #665
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #666
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #667
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #668
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #669
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #670
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #671
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #672
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #673
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #674
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef838				bits 64
7ef838			stub_7f764c7ef838_1:
7ef838 fec1			inc	cl
7ef83a			stub_7f764c7ef838_0:
7ef83a e8cef748ff		call	do_callback_handler
7ef83f 3186ed0100000000
(obj= #(#<procedure #675>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86cb5				bits 64
c86cb5 909090		version1421:
c86cb8 6afe			push	qword byte -2
c86cba			version1422:
c86cba ff742408			push	qword [rsp+8]
c86cbe			version1423:
c86cbe 50			push	rax
c86cbf 53			push	rbx
c86cc0 48b84080aa4e767f
c86cc8 0000			mov	rax,140146102665280
c86cca 488b18			mov	rbx,[rax]
c86ccd 48ffc3			inc	rbx
c86cd0 488918			mov	[rax],rbx
c86cd3 5b			pop	rbx
c86cd4 58			pop	rax
c86cd5 488b0424			mov	rax,[rsp]
c86cd9 4889c3			mov	rbx,rax
c86cdc 4883e003			and	rax,byte 3
c86ce0 4883f801			cmp	rax,byte 1
c86ce4 750e			jne	short patchable_jump105
c86ce6 488b43ff			mov	rax,[rbx-1]
c86cea 4825f8000000		and	rax,248
c86cf0 4883f808			cmp	rax,byte 8
c86cf4			patchable_jump105:
c86cf4 0f84408bb600		je	stub_7f764c7ef838_0
c86cfa e9398bb600		jmp	stub_7f764c7ef838_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86cf4 -> 7f764c7ef838
GEN VERSION >>> #<ctx #676
                      stack: (pair retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #669
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #677
                                     type: local
                                     offset: 6
                                     pos: (8)
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #671
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #672
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #673
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #674
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef828				bits 64
7ef828			stub_7f764c7ef828_0:
7ef828 e83af848ff		call	do_callback_cont_handler
7ef82d 418bed0100000000
(obj= #(#<procedure #678>))
------------------------------------------------------------------------
c86cfa				bits 64
c86cfa 9090		version1424:
c86cfc 58			pop	rax
c86cfd 488b4007			mov	rax,[rax+7]
c86d01 50			push	rax
c86d02			version1425:
c86d02 41ffb278020000		push	qword [r10+632]
c86d09			version1426:
c86d09			version1427:
c86d09 48c7c0a087ed01		mov	rax,dword 32343968
c86d10 4889442410		mov	[rsp+16],rax
c86d15			version1428:
c86d15 488b0424			mov	rax,[rsp]
c86d19 49c7c3818ced01		mov	r11,dword 32345217
c86d20 488b4007			mov	rax,[rax+7]
c86d24 48c7c704000000		mov	rdi,dword 4
c86d2b 488b4040			mov	rax,[rax+64]
c86d2f ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #679
                         stack: (unknown unknown unknown)
                         env: ((l . #<identifier #680
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #679
      stack: (unknown unknown unknown)
      env: ((l . #<identifier #680
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
7ef818				bits 64
7ef818			stub_7f764c7ef818_1:
7ef818 fec1			inc	cl
7ef81a			stub_7f764c7ef818_0:
7ef81a e8eef748ff		call	do_callback_handler
7ef81f a16fed0100000000
(obj= #(#<procedure #681>))
------------------------------------------------------------------------
c86d31				bits 64
c86d31 909090		fn_entry_10:
c86d34			version1429:
c86d34 ff742408			push	qword [rsp+8]
c86d38			version1430:
c86d38			version1431:
c86d38 50			push	rax
c86d39 53			push	rbx
c86d3a 48b84080aa4e767f
c86d42 0000			mov	rax,140146102665280
c86d44 488b18			mov	rbx,[rax]
c86d47 48ffc3			inc	rbx
c86d4a 488918			mov	[rax],rbx
c86d4d 5b			pop	rbx
c86d4e 58			pop	rax
c86d4f 48c7c0f6ffffff		mov	rax,dword -10
c86d56 48390424			cmp	[rsp],rax
c86d5a 48c7c0faffffff		mov	rax,dword -6
c86d61 7407			je	short done23
c86d63 48c7c0feffffff		mov	rax,dword -2
c86d6a			done23:
c86d6a 48890424			mov	[rsp],rax
c86d6e			version1432:
c86d6e 58			pop	rax
c86d6f 4883f8fe			cmp	rax,byte -2
c86d73			patchable_jump106:
c86d73 0f84a18ab600		je	stub_7f764c7ef818_0
c86d79 e99a8ab600		jmp	stub_7f764c7ef818_1
>>> patching closure 7f74aa8c5109 at 7f74aa8c5149 : slot contains now label fn_entry_10 (7f764bc86d34)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86d73 -> 7f764c7ef818
GEN VERSION >>> #<ctx #682
                      stack: (unknown unknown unknown)
                      env: ((l . #<identifier #683
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef808				bits 64
7ef808			stub_7f764c7ef808_1:
7ef808 fec1			inc	cl
7ef80a			stub_7f764c7ef808_0:
7ef80a e8fef748ff		call	do_callback_handler
7ef80f f181ed0100000000
(obj= #(#<procedure #684>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86d79				bits 64
c86d79 909090		version1433:
c86d7c 48c7c004000000		mov	rax,dword 4
c86d83 50			push	rax
c86d84			version1434:
c86d84 6afe			push	qword byte -2
c86d86			version1435:
c86d86 ff742418			push	qword [rsp+24]
c86d8a			version1436:
c86d8a 50			push	rax
c86d8b 53			push	rbx
c86d8c 48b84080aa4e767f
c86d94 0000			mov	rax,140146102665280
c86d96 488b18			mov	rbx,[rax]
c86d99 48ffc3			inc	rbx
c86d9c 488918			mov	[rax],rbx
c86d9f 5b			pop	rbx
c86da0 58			pop	rax
c86da1 488b0424			mov	rax,[rsp]
c86da5 4889c3			mov	rbx,rax
c86da8 4883e003			and	rax,byte 3
c86dac 4883f801			cmp	rax,byte 1
c86db0 750e			jne	short patchable_jump107
c86db2 488b43ff			mov	rax,[rbx-1]
c86db6 4825f8000000		and	rax,248
c86dbc 4883f808			cmp	rax,byte 8
c86dc0			patchable_jump107:
c86dc0 0f84448ab600		je	stub_7f764c7ef808_0
c86dc6 e93d8ab600		jmp	stub_7f764c7ef808_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86dc0 -> 7f764c7ef808
GEN VERSION >>> #<ctx #685
                      stack: (pair retAddr number unknown pair unknown)
                      env: ((l . #<identifier #686
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef7f8				bits 64
7ef7f8			stub_7f764c7ef7f8_0:
7ef7f8 e86af848ff		call	do_callback_cont_handler
7ef7fd 3183ed0100000000
(obj= #(#<procedure #687>))
------------------------------------------------------------------------
c86dc6				bits 64
c86dc6 9090		version1437:
c86dc8 58			pop	rax
c86dc9 488b400f			mov	rax,[rax+15]
c86dcd 50			push	rax
c86dce			version1438:
c86dce 41ffb278020000		push	qword [r10+632]
c86dd5			version1439:
c86dd5			version1440:
c86dd5 48c7c0c08ded01		mov	rax,dword 32345536
c86ddc 4889442410		mov	[rsp+16],rax
c86de1			version1441:
c86de1 488b0424			mov	rax,[rsp]
c86de5 48c7c704000000		mov	rdi,dword 4
c86dec 488b4007			mov	rax,[rax+7]
c86df0 488b4008			mov	rax,[rax+8]
c86df4 ffe0			jmp	rax
------------------------------------------------------------------------
c86df6				bits 64
c86df6 9090		continuation_22:
c86df8 50			push	rax
c86df9			version1442:
c86df9			version1443:
c86df9			version1444:
c86df9 58			pop	rax
c86dfa 48010424			add	[rsp],rax
c86dfe 0f80449cb600		jo	stub_7f764c7f0a48_0
c86e04			version1445:
c86e04 58			pop	rax
c86e05 4883c410			add	rsp,byte 16
c86e09 5a			pop	rdx
c86e0a 488b5a08			mov	rbx,[rdx+8]
c86e0e 49c7c308000000		mov	r11,dword 8
c86e15 ffe3			jmp	rbx
------------------------------------------------------------------------
7ef7e8				bits 64
7ef7e8			stub_7f764c7ef7e8_1:
7ef7e8 fec1			inc	cl
7ef7ea			stub_7f764c7ef7e8_0:
7ef7ea e81ef848ff		call	do_callback_handler
7ef7ef 318fed0100000000
(obj= #(#<procedure #688>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86e17				bits 64
c86e17 90		continuation_23:
c86e18 50			push	rax
c86e19			version1446:
c86e19 50			push	rax
c86e1a 53			push	rbx
c86e1b 48b84080aa4e767f
c86e23 0000			mov	rax,140146102665280
c86e25 488b18			mov	rbx,[rax]
c86e28 48ffc3			inc	rbx
c86e2b 488918			mov	[rax],rbx
c86e2e 5b			pop	rbx
c86e2f 58			pop	rax
c86e30 48c7c003000000		mov	rax,dword 3
c86e37 48230424			and	rax,[rsp]
c86e3b			patchable_jump108:
c86e3b 0f84a989b600		je	stub_7f764c7ef7e8_0
c86e41 e9a289b600		jmp	stub_7f764c7ef7e8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86e3b -> 7f764c7ef7e8
GEN VERSION >>> #<ctx #689
                      stack: (number unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((l1 . #<identifier #690
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #691
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #692
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #693
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #694
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #695
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #696
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #697
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #698
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #699
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #700
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #701
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #702
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef7d8				bits 64
7ef7d8			stub_7f764c7ef7d8_1:
7ef7d8 fec1			inc	cl
7ef7da			stub_7f764c7ef7d8_0:
7ef7da e82ef848ff		call	do_callback_handler
7ef7df d18fed0100000000
(obj= #(#<procedure #703>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86e41				bits 64
c86e41 909090		version1447:
c86e44 48c7c008000000		mov	rax,dword 8
c86e4b 50			push	rax
c86e4c			version1448:
c86e4c 50			push	rax
c86e4d 53			push	rbx
c86e4e 48b84080aa4e767f
c86e56 0000			mov	rax,140146102665280
c86e58 488b18			mov	rbx,[rax]
c86e5b 48ffc3			inc	rbx
c86e5e 488918			mov	[rax],rbx
c86e61 5b			pop	rbx
c86e62 58			pop	rax
c86e63 48c7c003000000		mov	rax,dword 3
c86e6a 48230424			and	rax,[rsp]
c86e6e			patchable_jump109:
c86e6e 0f846689b600		je	stub_7f764c7ef7d8_0
c86e74 e95f89b600		jmp	stub_7f764c7ef7d8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86e6e -> 7f764c7ef7d8
GEN VERSION >>> #<ctx #704
                      stack: (number unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((l1 . #<identifier #705
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #706
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #707
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #708
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #709
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #710
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #711
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #712
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #713
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #714
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #715
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #716
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #717
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef7c8				bits 64
7ef7c8			stub_7f764c7ef7c8_0:
7ef7c8 e840f848ff		call	do_callback_handler
7ef7cd 7190ed0100000000
(obj= #(#<procedure #718>))
------------------------------------------------------------------------
7ef7b8				bits 64
7ef7b8			stub_7f764c7ef7b8_1:
7ef7b8 fec1			inc	cl
7ef7ba			stub_7f764c7ef7b8_0:
7ef7ba e84ef848ff		call	do_callback_handler
7ef7bf c190ed0100000000
(obj= #(#<procedure #719>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86e74				bits 64
c86e74			version1449:
c86e74 5b			pop	rbx
c86e75 58			pop	rax
c86e76 48c1f802			sar	rax,2
c86e7a 48c1fb02			sar	rbx,2
c86e7e 4883fb00			cmp	rbx,byte 0
c86e82 0f844089b600		je	stub_7f764c7ef7c8_0
c86e88 4899			cqo
c86e8a 48f7fb			idiv	rbx
c86e8d 48c1e002			shl	rax,2
c86e91 50			push	rax
c86e92			version1450:
c86e92 ff742408			push	qword [rsp+8]
c86e96			version1451:
c86e96 50			push	rax
c86e97 53			push	rbx
c86e98 48b84080aa4e767f
c86ea0 0000			mov	rax,140146102665280
c86ea2 488b18			mov	rbx,[rax]
c86ea5 48ffc3			inc	rbx
c86ea8 488918			mov	[rax],rbx
c86eab 5b			pop	rbx
c86eac 58			pop	rax
c86ead 488b0424			mov	rax,[rsp]
c86eb1 4889c3			mov	rbx,rax
c86eb4 4883e003			and	rax,byte 3
c86eb8 4883f801			cmp	rax,byte 1
c86ebc 750e			jne	short patchable_jump110
c86ebe 488b43ff			mov	rax,[rbx-1]
c86ec2 4825f8000000		and	rax,248
c86ec8 4883f808			cmp	rax,byte 8
c86ecc			patchable_jump110:
c86ecc 0f84e888b600		je	stub_7f764c7ef7b8_0
c86ed2 e9e188b600		jmp	stub_7f764c7ef7b8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86ecc -> 7f764c7ef7b8
GEN VERSION >>> #<ctx #720
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #721
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #722
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #723
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #724
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #725
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #726
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #727
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #728
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #729
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #730
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #731
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #732
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #733
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef7a8				bits 64
7ef7a8			stub_7f764c7ef7a8_0:
7ef7a8 e8baf848ff		call	do_callback_cont_handler
7ef7ad 6191ed0100000000
(obj= #(#<procedure #734>))
------------------------------------------------------------------------
c86ed2				bits 64
c86ed2 9090		version1452:
c86ed4 58			pop	rax
c86ed5 488b4007			mov	rax,[rax+7]
c86ed9 50			push	rax
c86eda			version1453:
c86eda			version1454:
c86eda 6afe			push	qword byte -2
c86edc			version1455:
c86edc ff742410			push	qword [rsp+16]
c86ee0			version1456:
c86ee0 41ffb218030000		push	qword [r10+792]
c86ee7			version1457:
c86ee7			version1458:
c86ee7 48c7c0b091ed01		mov	rax,dword 32346544
c86eee 4889442410		mov	[rsp+16],rax
c86ef3			version1459:
c86ef3 488b0424			mov	rax,[rsp]
c86ef7 49c7c3818ced01		mov	r11,dword 32345217
c86efe 488b4007			mov	rax,[rax+7]
c86f02 48c7c704000000		mov	rdi,dword 4
c86f09 488b4040			mov	rax,[rax+64]
c86f0d ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #735
                         stack: (unknown unknown unknown)
                         env: ((x . #<identifier #736
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #735
      stack: (unknown unknown unknown)
      env: ((x . #<identifier #736
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
7ef798				bits 64
7ef798			stub_7f764c7ef798_1:
7ef798 fec1			inc	cl
7ef79a			stub_7f764c7ef798_0:
7ef79a e86ef848ff		call	do_callback_handler
7ef79f d192ed0100000000
(obj= #(#<procedure #737>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c86f0f				bits 64
c86f0f 90		fn_entry_11:
c86f10			version1460:
c86f10 ff742408			push	qword [rsp+8]
c86f14			version1461:
c86f14 48c7c000000000		mov	rax,dword 0
c86f1b 50			push	rax
c86f1c			version1462:
c86f1c 50			push	rax
c86f1d 53			push	rbx
c86f1e 48b84080aa4e767f
c86f26 0000			mov	rax,140146102665280
c86f28 488b18			mov	rbx,[rax]
c86f2b 48ffc3			inc	rbx
c86f2e 488918			mov	[rax],rbx
c86f31 5b			pop	rbx
c86f32 58			pop	rax
c86f33 48c7c003000000		mov	rax,dword 3
c86f3a 4823442408		and	rax,[rsp+8]
c86f3f			patchable_jump111:
c86f3f 0f845588b600		je	stub_7f764c7ef798_0
c86f45 e94e88b600		jmp	stub_7f764c7ef798_1
>>> patching closure 7f74aa8c4fc9 at 7f74aa8c5009 : slot contains now label fn_entry_11 (7f764bc86f10)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86f3f -> 7f764c7ef798
GEN VERSION >>> #<ctx #738
                      stack: (number number unknown number unknown)
                      env: ((x . #<identifier #739
                                    type: local
                                    offset: 0
                                    pos: (2 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef788				bits 64
7ef788			stub_7f764c7ef788_0:
7ef788 e880f848ff		call	do_callback_handler
7ef78d 7193ed0100000000
(obj= #(#<procedure #740>))
------------------------------------------------------------------------
c86f45				bits 64
c86f45 909090		version1463:
c86f48			version1464:
c86f48 488b442408		mov	rax,[rsp+8]
c86f4d 483b0424			cmp	rax,[rsp]
c86f51			label-jump25:
c86f51 0f853188b600		jne	stub_7f764c7ef788_0
c86f57			version1465:
c86f57 4883c410			add	rsp,byte 16
c86f5b 6afa			push	qword byte -6
c86f5d			version1466:
c86f5d 58			pop	rax
c86f5e 4883c410			add	rsp,byte 16
c86f62 5a			pop	rdx
c86f63 488b5a18			mov	rbx,[rdx+24]
c86f67 49c7c318000000		mov	r11,dword 24
c86f6e ffe3			jmp	rbx
GEN VERSION >>> #<ctx #738
                      stack: (number number unknown number unknown)
                      env: ((x . #<identifier #739
                                    type: local
                                    offset: 0
                                    pos: (2 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f764bc86f51 -> 7f764bc86f70
------------------------------------------------------------------------
c86f70				bits 64
c86f70			version1467:
c86f70 4883c410			add	rsp,byte 16
c86f74 6afe			push	qword byte -2
c86f76 ebe5			jmp	short version1466
------------------------------------------------------------------------
7ef778				bits 64
7ef778			stub_7f764c7ef778_1:
7ef778 fec1			inc	cl
7ef77a			stub_7f764c7ef778_0:
7ef77a e88ef848ff		call	do_callback_handler
7ef77f 6194ed0100000000
(obj= #(#<procedure #741>))
------------------------------------------------------------------------
c86f78				bits 64
c86f78			continuation_24:
c86f78 50			push	rax
c86f79			version1468:
c86f79 58			pop	rax
c86f7a 4883f8fe			cmp	rax,byte -2
c86f7e			patchable_jump112:
c86f7e 0f84f687b600		je	stub_7f764c7ef778_0
c86f84 e9ef87b600		jmp	stub_7f764c7ef778_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86f7e -> 7f764c7ef778
GEN VERSION >>> #<ctx #742
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #743
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #744
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #745
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #746
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #747
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #748
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #749
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #750
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #751
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #752
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #753
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #754
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #755
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #756
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #757
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #758
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #759
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef768				bits 64
7ef768			stub_7f764c7ef768_1:
7ef768 fec1			inc	cl
7ef76a			stub_7f764c7ef768_0:
7ef76a e89ef848ff		call	do_callback_handler
7ef76f 0195ed0100000000
(obj= #(#<procedure #760>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c86f84				bits 64
c86f84			version1469:
c86f84 ff3424			push	qword [rsp]
c86f87			version1470:
c86f87 50			push	rax
c86f88 53			push	rbx
c86f89 48b84080aa4e767f
c86f91 0000			mov	rax,140146102665280
c86f93 488b18			mov	rbx,[rax]
c86f96 48ffc3			inc	rbx
c86f99 488918			mov	[rax],rbx
c86f9c 5b			pop	rbx
c86f9d 58			pop	rax
c86f9e 488b0424			mov	rax,[rsp]
c86fa2 4889c3			mov	rbx,rax
c86fa5 4883e003			and	rax,byte 3
c86fa9 4883f801			cmp	rax,byte 1
c86fad 750e			jne	short patchable_jump113
c86faf 488b43ff			mov	rax,[rbx-1]
c86fb3 4825f8000000		and	rax,248
c86fb9 4883f808			cmp	rax,byte 8
c86fbd			patchable_jump113:
c86fbd 0f84a787b600		je	stub_7f764c7ef768_0
c86fc3 e9a087b600		jmp	stub_7f764c7ef768_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86fbd -> 7f764c7ef768
GEN VERSION >>> #<ctx #761
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #762
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #763
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #764
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #765
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #766
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #767
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #768
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #769
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #770
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #771
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #772
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #773
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #774
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #775
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #776
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #777
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #778
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef758				bits 64
7ef758			stub_7f764c7ef758_1:
7ef758 fec1			inc	cl
7ef75a			stub_7f764c7ef758_0:
7ef75a e8aef848ff		call	do_callback_handler
7ef75f a195ed0100000000
(obj= #(#<procedure #779>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
c86fc3				bits 64
c86fc3 90		version1471:
c86fc4 ff742428			push	qword [rsp+40]
c86fc8			version1472:
c86fc8 58			pop	rax
c86fc9 5b			pop	rbx
c86fca 48894307			mov	[rbx+7],rax
c86fce 6aee			push	qword byte -18
c86fd0			version1473:
c86fd0 ff742410			push	qword [rsp+16]
c86fd4			version1474:
c86fd4 48c7c004000000		mov	rax,dword 4
c86fdb 50			push	rax
c86fdc			version1475:
c86fdc 50			push	rax
c86fdd 53			push	rbx
c86fde 48b84080aa4e767f
c86fe6 0000			mov	rax,140146102665280
c86fe8 488b18			mov	rbx,[rax]
c86feb 48ffc3			inc	rbx
c86fee 488918			mov	[rax],rbx
c86ff1 5b			pop	rbx
c86ff2 58			pop	rax
c86ff3 48c7c003000000		mov	rax,dword 3
c86ffa 4823442408		and	rax,[rsp+8]
c86fff			patchable_jump114:
c86fff 0f845587b600		je	stub_7f764c7ef758_0
c87005 e94e87b600		jmp	stub_7f764c7ef758_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc86fff -> 7f764c7ef758
GEN VERSION >>> #<ctx #780
                      stack: (unknown number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #781
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #782
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #783
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #784
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #785
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #786
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #787
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #788
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #789
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #790
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #791
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #792
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #793
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #794
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #795
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #796
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #797
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef748				bits 64
7ef748			stub_7f764c7ef748_1:
7ef748 fec1			inc	cl
7ef74a			stub_7f764c7ef748_0:
7ef74a e8bef848ff		call	do_callback_handler
7ef74f 4196ed0100000000
(obj= #(#<procedure #798>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c87005				bits 64
c87005 909090		version1476:
c87008 50			push	rax
c87009 53			push	rbx
c8700a 48b84080aa4e767f
c87012 0000			mov	rax,140146102665280
c87014 488b18			mov	rbx,[rax]
c87017 48ffc3			inc	rbx
c8701a 488918			mov	[rax],rbx
c8701d 5b			pop	rbx
c8701e 58			pop	rax
c8701f 48c7c003000000		mov	rax,dword 3
c87026 48230424			and	rax,[rsp]
c8702a			patchable_jump115:
c8702a 0f841a87b600		je	stub_7f764c7ef748_0
c87030 e91387b600		jmp	stub_7f764c7ef748_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc8702a -> 7f764c7ef748
GEN VERSION >>> #<ctx #799
                      stack: (number unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #790
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #791
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #792
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #793
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #794
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #795
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #796
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #797
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #800
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #801
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #802
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #803
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #804
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #805
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #806
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #807
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #808
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef738				bits 64
7ef738			stub_7f764c7ef738_1:
7ef738 fec1			inc	cl
7ef73a			stub_7f764c7ef738_0:
7ef73a e8cef848ff		call	do_callback_handler
7ef73f e196ed0100000000
(obj= #(#<procedure #809>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c87030				bits 64
c87030			version1477:
c87030 58			pop	rax
c87031 48290424			sub	[rsp],rax
c87035 0f808d9ab600		jo	stub_7f764c7f0ac8_0
c8703b			version1478:
c8703b ff742410			push	qword [rsp+16]
c8703f			version1479:
c8703f 50			push	rax
c87040 53			push	rbx
c87041 48b84080aa4e767f
c87049 0000			mov	rax,140146102665280
c8704b 488b18			mov	rbx,[rax]
c8704e 48ffc3			inc	rbx
c87051 488918			mov	[rax],rbx
c87054 5b			pop	rbx
c87055 58			pop	rax
c87056 488b0424			mov	rax,[rsp]
c8705a 4889c3			mov	rbx,rax
c8705d 4883e003			and	rax,byte 3
c87061 4883f801			cmp	rax,byte 1
c87065 750e			jne	short patchable_jump116
c87067 488b43ff			mov	rax,[rbx-1]
c8706b 4825f8000000		and	rax,248
c87071 4883f808			cmp	rax,byte 8
c87075			patchable_jump116:
c87075 0f84bf86b600		je	stub_7f764c7ef738_0
c8707b e9b886b600		jmp	stub_7f764c7ef738_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87075 -> 7f764c7ef738
GEN VERSION >>> #<ctx #810
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #811
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #812
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #813
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #814
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #815
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #816
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #817
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #818
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #819
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #820
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #821
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #822
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #823
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #824
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #825
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #826
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #827
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8707b				bits 64
c8707b 90		version1480:
c8707c 58			pop	rax
c8707d 488b400f			mov	rax,[rax+15]
c87081 50			push	rax
c87082			version1481:
c87082 488b442408		mov	rax,[rsp+8]
c87087 4889442420		mov	[rsp+32],rax
c8708c 488b0424			mov	rax,[rsp]
c87090 4889442418		mov	[rsp+24],rax
c87095 4883c418			add	rsp,byte 24
c87099 e93cfeffff		jmp	version1454
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #742
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #743
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #744
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #745
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #746
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #747
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #748
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #749
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #750
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #828
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #829
                                    type: local
                                    offset: 7
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (a . #<identifier #830
                                    type: local
                                    offset: 8
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l1 . #<identifier #831
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #832
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #833
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #834
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #835
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #836
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86f7e -> 7f764bc8709e
------------------------------------------------------------------------
7ef778				bits 64
7ef778			stub_7f764c7ef778_1:
7ef778 fec1			inc	cl
7ef77a			stub_7f764c7ef778_0:
7ef77a e88ef848ff		call	do_callback_handler
7ef77f d19dec0100000000
(obj= #(#<procedure #837>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8709e				bits 64
c8709e 9090		version1482:
c870a0 ff3424			push	qword [rsp]
c870a3			version1483:
c870a3 58			pop	rax
c870a4 4883c410			add	rsp,byte 16
c870a8 50			push	rax
c870a9			version1484:
c870a9 50			push	rax
c870aa 53			push	rbx
c870ab 48b84080aa4e767f
c870b3 0000			mov	rax,140146102665280
c870b5 488b18			mov	rbx,[rax]
c870b8 48ffc3			inc	rbx
c870bb 488918			mov	[rax],rbx
c870be 5b			pop	rbx
c870bf 58			pop	rax
c870c0 488b0424			mov	rax,[rsp]
c870c4 4889c3			mov	rbx,rax
c870c7 4883e003			and	rax,byte 3
c870cb 4883f801			cmp	rax,byte 1
c870cf 750e			jne	short patchable_jump117
c870d1 488b43ff			mov	rax,[rbx-1]
c870d5 4825f8000000		and	rax,248
c870db 4883f808			cmp	rax,byte 8
c870df			patchable_jump117:
c870df 0f849586b600		je	stub_7f764c7ef778_0
c870e5 e98e86b600		jmp	stub_7f764c7ef778_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc870df -> 7f764c7ef778
GEN VERSION >>> #<ctx #838
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #839
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #840
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #841
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #842
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #843
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #844
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
GEN VERSION >>> #<ctx #845
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #846
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #850
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef728				bits 64
7ef728			stub_7f764c7ef728_1:
7ef728 fec1			inc	cl
7ef72a			stub_7f764c7ef728_0:
7ef72a e8def848ff		call	do_callback_handler
7ef72f c16aed0100000000
(obj= #(#<procedure #852>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c870e5				bits 64
c870e5 909090		version1485:
c870e8 6afe			push	qword byte -2
c870ea			version1486:
c870ea ff742418			push	qword [rsp+24]
c870ee			version1487:
c870ee 50			push	rax
c870ef 53			push	rbx
c870f0 48b84080aa4e767f
c870f8 0000			mov	rax,140146102665280
c870fa 488b18			mov	rbx,[rax]
c870fd 48ffc3			inc	rbx
c87100 488918			mov	[rax],rbx
c87103 5b			pop	rbx
c87104 58			pop	rax
c87105 488b0424			mov	rax,[rsp]
c87109 4889c3			mov	rbx,rax
c8710c 4883e003			and	rax,byte 3
c87110 4883f801			cmp	rax,byte 1
c87114 750e			jne	short patchable_jump118
c87116 488b43ff			mov	rax,[rbx-1]
c8711a 4825f8000000		and	rax,248
c87120 4883f808			cmp	rax,byte 8
c87124			patchable_jump118:
c87124 0f840086b600		je	stub_7f764c7ef728_0
c8712a e9f985b600		jmp	stub_7f764c7ef728_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87124 -> 7f764c7ef728
GEN VERSION >>> #<ctx #853
                      stack: (pair retAddr
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #854
                                     type: local
                                     offset: 5
                                     pos: (9)
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #850
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef718				bits 64
7ef718			stub_7f764c7ef718_0:
7ef718 e84af948ff		call	do_callback_cont_handler
7ef71d b16bed0100000000
(obj= #(#<procedure #855>))
------------------------------------------------------------------------
c8712a				bits 64
c8712a 9090		version1488:
c8712c 58			pop	rax
c8712d 488b4007			mov	rax,[rax+7]
c87131 50			push	rax
c87132			version1489:
c87132 41ffb278020000		push	qword [r10+632]
c87139			version1490:
c87139			version1491:
c87139 48c7c03097ed01		mov	rax,dword 32347952
c87140 4889442410		mov	[rsp+16],rax
c87145			version1492:
c87145 488b0424			mov	rax,[rsp]
c87149 48c7c704000000		mov	rdi,dword 4
c87150 488b4007			mov	rax,[rax+7]
c87154 488b4008			mov	rax,[rax+8]
c87158 ffe0			jmp	rax
------------------------------------------------------------------------
7ef708				bits 64
7ef708			stub_7f764c7ef708_0:
7ef708 e800f948ff		call	do_callback_handler
7ef70d d189ed0100000000
(obj= #(#<procedure #856>))
------------------------------------------------------------------------
7ef6f8				bits 64
7ef6f8			stub_7f764c7ef6f8_0:
7ef6f8 e810f948ff		call	do_callback_handler
7ef6fd 516fed0100000000
(obj= #(#<procedure #857>))
------------------------------------------------------------------------
7ef6e8				bits 64
7ef6e8			stub_7f764c7ef6e8_1:
7ef6e8 fec1			inc	cl
7ef6ea			stub_7f764c7ef6e8_0:
7ef6ea e81ef948ff		call	do_callback_handler
7ef6ef a181ed0100000000
(obj= #(#<procedure #858>))
------------------------------------------------------------------------
c8715a				bits 64
c8715a 9090		continuation_25:
c8715c 50			push	rax
c8715d			version1493:
c8715d			version1494:
c8715d 48c7c008000000		mov	rax,dword 8
c87164 50			push	rax
c87165			version1495:
c87165			version1496:
c87165 5b			pop	rbx
c87166 58			pop	rax
c87167 48c1f802			sar	rax,2
c8716b 48c1fb02			sar	rbx,2
c8716f 4883fb00			cmp	rbx,byte 0
c87173 0f848f85b600		je	stub_7f764c7ef708_0
c87179 4899			cqo
c8717b 48f7fb			idiv	rbx
c8717e 48c1e002			shl	rax,2
c87182 50			push	rax
c87183			version1497:
c87183			version1498:
c87183 ff3424			push	qword [rsp]
c87186			version1499:
c87186 48c7c000000000		mov	rax,dword 0
c8718d 50			push	rax
c8718e			version1500:
c8718e			version1501:
c8718e			version1502:
c8718e 488b442408		mov	rax,[rsp+8]
c87193 483b0424			cmp	rax,[rsp]
c87197			label-jump26:
c87197 0f855b85b600		jne	stub_7f764c7ef6f8_0
c8719d			version1503:
c8719d 4883c410			add	rsp,byte 16
c871a1 6afa			push	qword byte -6
c871a3			version1504:
c871a3 58			pop	rax
c871a4 4883f8fe			cmp	rax,byte -2
c871a8			patchable_jump119:
c871a8 0f843c85b600		je	stub_7f764c7ef6e8_0
c871ae e93585b600		jmp	stub_7f764c7ef6e8_1
GEN VERSION >>> #<ctx #859
                      stack: (number number
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((n . #<identifier #860
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #846
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #861
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc87197 -> 7f764bc871b3
------------------------------------------------------------------------
c871b3				bits 64
c871b3 90		version1505:
c871b4 4883c410			add	rsp,byte 16
c871b8 6afe			push	qword byte -2
c871ba ebe7			jmp	short version1504
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #862
                      stack: (number unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((n . #<identifier #863
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #846
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #864
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc871a8 -> 7f764bc871bc
------------------------------------------------------------------------
7ef6d8				bits 64
7ef6d8			stub_7f764c7ef6d8_1:
7ef6d8 fec1			inc	cl
7ef6da			stub_7f764c7ef6d8_0:
7ef6da e82ef948ff		call	do_callback_handler
7ef6df 2190ed0100000000
(obj= #(#<procedure #865>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c871bc				bits 64
c871bc			version1506:
c871bc ff3424			push	qword [rsp]
c871bf			version1507:
c871bf ff742420			push	qword [rsp+32]
c871c3			version1508:
c871c3 50			push	rax
c871c4 53			push	rbx
c871c5 48b84080aa4e767f
c871cd 0000			mov	rax,140146102665280
c871cf 488b18			mov	rbx,[rax]
c871d2 48ffc3			inc	rbx
c871d5 488918			mov	[rax],rbx
c871d8 5b			pop	rbx
c871d9 58			pop	rax
c871da 488b0424			mov	rax,[rsp]
c871de 4889c3			mov	rbx,rax
c871e1 4883e003			and	rax,byte 3
c871e5 4883f801			cmp	rax,byte 1
c871e9 750e			jne	short patchable_jump120
c871eb 488b43ff			mov	rax,[rbx-1]
c871ef 4825f8000000		and	rax,248
c871f5 4883f808			cmp	rax,byte 8
c871f9			patchable_jump120:
c871f9 0f84db84b600		je	stub_7f764c7ef6d8_0
c871ff e9d484b600		jmp	stub_7f764c7ef6d8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc871f9 -> 7f764c7ef6d8
GEN VERSION >>> #<ctx #866
                      stack: (pair number
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #868
                                     type: local
                                     offset: 5
                                     pos: (10)
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef6c8				bits 64
7ef6c8			stub_7f764c7ef6c8_0:
7ef6c8 e840f948ff		call	do_callback_handler
7ef6cd 8192ed0100000000
(obj= #(#<procedure #870>))
------------------------------------------------------------------------
7ef6b8				bits 64
7ef6b8			stub_7f764c7ef6b8_1:
7ef6b8 fec1			inc	cl
7ef6ba			stub_7f764c7ef6b8_0:
7ef6ba e84ef948ff		call	do_callback_handler
7ef6bf 2193ed0100000000
(obj= #(#<procedure #871>))
------------------------------------------------------------------------
c871ff				bits 64
c871ff 90		version1509:
c87200 58			pop	rax
c87201 488b4007			mov	rax,[rax+7]
c87205 50			push	rax
c87206			version1510:
c87206			version1511:
c87206 ff742408			push	qword [rsp+8]
c8720a			version1512:
c8720a 48c7c004000000		mov	rax,dword 4
c87211 50			push	rax
c87212			version1513:
c87212			version1514:
c87212			version1515:
c87212 488b442408		mov	rax,[rsp+8]
c87217 483b0424			cmp	rax,[rsp]
c8721b			label-jump27:
c8721b 0f85a784b600		jne	stub_7f764c7ef6c8_0
c87221			version1516:
c87221 4883c410			add	rsp,byte 16
c87225 6afa			push	qword byte -6
c87227			version1517:
c87227 58			pop	rax
c87228 4883f8fe			cmp	rax,byte -2
c8722c			patchable_jump121:
c8722c 0f848884b600		je	stub_7f764c7ef6b8_0
c87232 e98184b600		jmp	stub_7f764c7ef6b8_1
GEN VERSION >>> #<ctx #872
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((j . #<identifier #873
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #874
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #875
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc8721b -> 7f764bc87237
------------------------------------------------------------------------
c87237				bits 64
c87237 90		version1518:
c87238 4883c410			add	rsp,byte 16
c8723c 6afe			push	qword byte -2
c8723e ebe7			jmp	short version1517
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #876
                      stack: (unknown number
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #877
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #874
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #875
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc8722c -> 7f764bc87240
------------------------------------------------------------------------
7ef6a8				bits 64
7ef6a8			stub_7f764c7ef6a8_1:
7ef6a8 fec1			inc	cl
7ef6aa			stub_7f764c7ef6a8_0:
7ef6aa e85ef948ff		call	do_callback_handler
7ef6af f195ed0100000000
(obj= #(#<procedure #878>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c87240				bits 64
c87240			version1519:
c87240 ff3424			push	qword [rsp]
c87243			version1520:
c87243 50			push	rax
c87244 53			push	rbx
c87245 48b84080aa4e767f
c8724d 0000			mov	rax,140146102665280
c8724f 488b18			mov	rbx,[rax]
c87252 48ffc3			inc	rbx
c87255 488918			mov	[rax],rbx
c87258 5b			pop	rbx
c87259 58			pop	rax
c8725a 488b0424			mov	rax,[rsp]
c8725e 4889c3			mov	rbx,rax
c87261 4883e003			and	rax,byte 3
c87265 4883f801			cmp	rax,byte 1
c87269 750e			jne	short patchable_jump122
c8726b 488b43ff			mov	rax,[rbx-1]
c8726f 4825f8000000		and	rax,248
c87275 4883f808			cmp	rax,byte 8
c87279			patchable_jump122:
c87279 0f842b84b600		je	stub_7f764c7ef6a8_0
c8727f e92484b600		jmp	stub_7f764c7ef6a8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87279 -> 7f764c7ef6a8
GEN VERSION >>> #<ctx #879
                      stack: (pair pair
                                   number
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #877
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #880
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #875
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8727f				bits 64
c8727f 90		version1521:
c87280 ff742438			push	qword [rsp+56]
c87284			version1522:
c87284 58			pop	rax
c87285 5b			pop	rbx
c87286 48894307			mov	[rbx+7],rax
c8728a 6aee			push	qword byte -18
c8728c			version1523:
c8728c ff742410			push	qword [rsp+16]
c87290			version1524:
c87290 48c7c004000000		mov	rax,dword 4
c87297 50			push	rax
c87298			version1525:
c87298			version1526:
c87298			version1527:
c87298 58			pop	rax
c87299 48290424			sub	[rsp],rax
c8729d 0f804598b600		jo	stub_7f764c7f0ae8_0
c872a3			version1528:
c872a3 ff742410			push	qword [rsp+16]
c872a7			version1529:
c872a7			version1530:
c872a7 58			pop	rax
c872a8 488b400f			mov	rax,[rax+15]
c872ac 50			push	rax
c872ad			version1531:
c872ad 488b442408		mov	rax,[rsp+8]
c872b2 4889442420		mov	[rsp+32],rax
c872b7 488b0424			mov	rax,[rsp]
c872bb 4889442418		mov	[rsp+24],rax
c872c0 4883c418			add	rsp,byte 24
c872c4 e93dffffff		jmp	version1511
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #876
                      stack: (unknown number
                                      number
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((j . #<identifier #877
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #874
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #875
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc87232 -> 7f764bc872c9
------------------------------------------------------------------------
7ef6b8				bits 64
7ef6b8			stub_7f764c7ef6b8_1:
7ef6b8 fec1			inc	cl
7ef6ba			stub_7f764c7ef6b8_0:
7ef6ba e84ef948ff		call	do_callback_handler
7ef6bf 918eed0100000000
(obj= #(#<procedure #881>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c872c9				bits 64
c872c9 909090		version1532:
c872cc ff3424			push	qword [rsp]
c872cf			version1533:
c872cf 50			push	rax
c872d0 53			push	rbx
c872d1 48b84080aa4e767f
c872d9 0000			mov	rax,140146102665280
c872db 488b18			mov	rbx,[rax]
c872de 48ffc3			inc	rbx
c872e1 488918			mov	[rax],rbx
c872e4 5b			pop	rbx
c872e5 58			pop	rax
c872e6 488b0424			mov	rax,[rsp]
c872ea 4889c3			mov	rbx,rax
c872ed 4883e003			and	rax,byte 3
c872f1 4883f801			cmp	rax,byte 1
c872f5 750e			jne	short patchable_jump123
c872f7 488b43ff			mov	rax,[rbx-1]
c872fb 4825f8000000		and	rax,248
c87301 4883f808			cmp	rax,byte 8
c87305			patchable_jump123:
c87305 0f84af83b600		je	stub_7f764c7ef6b8_0
c8730b e9a883b600		jmp	stub_7f764c7ef6b8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87305 -> 7f764c7ef6b8
GEN VERSION >>> #<ctx #882
                      stack: (pair pair
                                   number
                                   number
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((j . #<identifier #877
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #883
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #867
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #875
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #869
                                    type: local
                                    offset: 0
                                    pos: (9)
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef698				bits 64
7ef698			stub_7f764c7ef698_1:
7ef698 fec1			inc	cl
7ef69a			stub_7f764c7ef698_0:
7ef69a e86ef948ff		call	do_callback_handler
7ef69f c193ed0100000000
(obj= #(#<procedure #884>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8730b				bits 64
c8730b 90		version1534:
c8730c 58			pop	rax
c8730d 488b400f			mov	rax,[rax+15]
c87311 50			push	rax
c87312			version1535:
c87312			version1536:
c87312 ff742408			push	qword [rsp+8]
c87316			version1537:
c87316			version1538:
c87316 6af6			push	qword byte -10
c87318			version1539:
c87318 58			pop	rax
c87319 5b			pop	rbx
c8731a 4889430f			mov	[rbx+15],rax
c8731e 6aee			push	qword byte -18
c87320			version1540:
c87320 ff742408			push	qword [rsp+8]
c87324			version1541:
c87324 58			pop	rax
c87325 4883c410			add	rsp,byte 16
c87329 50			push	rax
c8732a			version1542:
c8732a 58			pop	rax
c8732b 4883c410			add	rsp,byte 16
c8732f 50			push	rax
c87330			version1543:
c87330 58			pop	rax
c87331 4883c408			add	rsp,byte 8
c87335 50			push	rax
c87336			version1544:
c87336 58			pop	rax
c87337 5b			pop	rbx
c87338 4889430f			mov	[rbx+15],rax
c8733c 6aee			push	qword byte -18
c8733e			version1545:
c8733e ff742410			push	qword [rsp+16]
c87342			version1546:
c87342 50			push	rax
c87343 53			push	rbx
c87344 48b84080aa4e767f
c8734c 0000			mov	rax,140146102665280
c8734e 488b18			mov	rbx,[rax]
c87351 48ffc3			inc	rbx
c87354 488918			mov	[rax],rbx
c87357 5b			pop	rbx
c87358 58			pop	rax
c87359 488b0424			mov	rax,[rsp]
c8735d 4889c3			mov	rbx,rax
c87360 4883e003			and	rax,byte 3
c87364 4883f801			cmp	rax,byte 1
c87368 750e			jne	short patchable_jump124
c8736a 488b43ff			mov	rax,[rbx-1]
c8736e 4825f8000000		and	rax,248
c87374 4883f808			cmp	rax,byte 8
c87378			patchable_jump124:
c87378 0f841c83b600		je	stub_7f764c7ef698_0
c8737e e91583b600		jmp	stub_7f764c7ef698_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87378 -> 7f764c7ef698
GEN VERSION >>> #<ctx #885
                      stack: (pair void
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #886
                                     type: local
                                     offset: 5
                                     pos: (8)
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #847
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #887
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
7ef688				bits 64
7ef688			stub_7f764c7ef688_1:
7ef688 fec1			inc	cl
7ef68a			stub_7f764c7ef688_0:
7ef68a e87ef948ff		call	do_callback_handler
7ef68f 0198ed0100000000
(obj= #(#<procedure #888>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c8737e				bits 64
c8737e 9090		version1547:
c87380 58			pop	rax
c87381 488b400f			mov	rax,[rax+15]
c87385 50			push	rax
c87386			version1548:
c87386 ff742410			push	qword [rsp+16]
c8738a			version1549:
c8738a 50			push	rax
c8738b 53			push	rbx
c8738c 48b84080aa4e767f
c87394 0000			mov	rax,140146102665280
c87396 488b18			mov	rbx,[rax]
c87399 48ffc3			inc	rbx
c8739c 488918			mov	[rax],rbx
c8739f 5b			pop	rbx
c873a0 58			pop	rax
c873a1 488b0424			mov	rax,[rsp]
c873a5 4889c3			mov	rbx,rax
c873a8 4883e003			and	rax,byte 3
c873ac 4883f801			cmp	rax,byte 1
c873b0 750e			jne	short patchable_jump125
c873b2 488b43ff			mov	rax,[rbx-1]
c873b6 4825f8000000		and	rax,248
c873bc 4883f808			cmp	rax,byte 8
c873c0			patchable_jump125:
c873c0 0f84c482b600		je	stub_7f764c7ef688_0
c873c6 e9bd82b600		jmp	stub_7f764c7ef688_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc873c0 -> 7f764c7ef688
GEN VERSION >>> #<ctx #889
                      stack: (pair unknown
                                   void
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l1 . #<identifier #890
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #891
                                     type: local
                                     offset: 6
                                     pos: (9)
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #848
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #849
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #887
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #851
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c873c6				bits 64
c873c6 9090		version1550:
c873c8 58			pop	rax
c873c9 488b400f			mov	rax,[rax+15]
c873cd 50			push	rax
c873ce			version1551:
c873ce 488b442408		mov	rax,[rsp+8]
c873d3 4889442420		mov	[rsp+32],rax
c873d8 488b0424			mov	rax,[rsp]
c873dc 4889442418		mov	[rsp+24],rax
c873e1 4883c418			add	rsp,byte 24
c873e5 e987f8ffff		jmp	version1417
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #661
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l1 . #<identifier #662
                                     type: local
                                     offset: 5
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (l2 . #<identifier #663
                                     type: local
                                     offset: 6
                                     pos: ()
                                     flags: ()
                                     stype: unknown>)
                            (i . #<identifier #664
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #665
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #666
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #667
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86caf -> 7f764bc873ea
------------------------------------------------------------------------
c873ea				bits 64
c873ea 9090		version1552:
c873ec 6afe			push	qword byte -2
c873ee			version1553:
c873ee 58			pop	rax
c873ef 4883c410			add	rsp,byte 16
c873f3 50			push	rax
c873f4 e9dbf2ffff		jmp	version1282
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #641
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     unknown
                                     unknown
                                     unknown
                                     unknown
                                     unknown)
                      env: ((n . #<identifier #642
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #612
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #628
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #614
                                    type: local
                                    offset: 3
                                    pos: (5)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #643
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc86af2 -> 7f764bc873f9
------------------------------------------------------------------------
c873f9				bits 64
c873f9 909090		version1554:
c873fc ff742418			push	qword [rsp+24]
c87400			version1555:
c87400			version1556:
c87400 6af6			push	qword byte -10
c87402			version1557:
c87402 58			pop	rax
c87403 5b			pop	rbx
c87404 48894307			mov	[rbx+7],rax
c87408 6aee			push	qword byte -18
c8740a			version1558:
c8740a ff742420			push	qword [rsp+32]
c8740e			version1559:
c8740e			version1560:
c8740e 58			pop	rax
c8740f 488b4007			mov	rax,[rax+7]
c87413 50			push	rax
c87414			version1561:
c87414 58			pop	rax
c87415 4883c408			add	rsp,byte 8
c87419 50			push	rax
c8741a e919f8ffff		jmp	version1408
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #605
                      stack: (number unknown unknown unknown unknown unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #606
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc867dd -> 7f764bc8741f
------------------------------------------------------------------------
c8741f				bits 64
c8741f 90		version1562:
c87420 ff742408			push	qword [rsp+8]
c87424			version1563:
c87424 e9ebebffff		jmp	version1185
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #530
                      stack: (unknown unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown
                                      unknown)
                      env: ((l . #<identifier #524
                                    type: local
                                    offset: 5
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #525
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #527
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #528
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc860d9 -> 7f764bc87429
------------------------------------------------------------------------
7efa58				bits 64
7efa58			stub_7f764c7efa58_1:
7efa58 fec1			inc	cl
7efa5a			stub_7f764c7efa58_0:
7efa5a e8aef548ff		call	do_callback_handler
7efa5f e199ed0100000000
(obj= #(#<procedure #892>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
c87429				bits 64
c87429 909090		version1564:
c8742c ff3424			push	qword [rsp]
c8742f			version1565:
c8742f 50			push	rax
c87430 53			push	rbx
c87431 48b84080aa4e767f
c87439 0000			mov	rax,140146102665280
c8743b 488b18			mov	rbx,[rax]
c8743e 48ffc3			inc	rbx
c87441 488918			mov	[rax],rbx
c87444 5b			pop	rbx
c87445 58			pop	rax
c87446 488b0424			mov	rax,[rsp]
c8744a 4889c3			mov	rbx,rax
c8744d 4883e003			and	rax,byte 3
c87451 4883f801			cmp	rax,byte 1
c87455 750e			jne	short patchable_jump126
c87457 488b43ff			mov	rax,[rbx-1]
c8745b 4825f8000000		and	rax,248
c87461 4883f808			cmp	rax,byte 8
c87465			patchable_jump126:
c87465 0f84ef85b600		je	stub_7f764c7efa58_0
c8746b e9e885b600		jmp	stub_7f764c7efa58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f764bc87465 -> 7f764c7efa58
GEN VERSION >>> #<ctx #893
                      stack: (pair unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown
                                   unknown)
                      env: ((l . #<identifier #894
                                    type: local
                                    offset: 5
                                    pos: (6)
                                    flags: ()
                                    stype: unknown>)
                            (i . #<identifier #525
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #895
                                    type: local
                                    offset: 3
                                    pos: (6)
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #527
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #528
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
c8746b				bits 64
c8746b 90		version1566:
c8746c 6af6			push	qword byte -10
c8746e			version1567:
c8746e 6af6			push	qword byte -10
c87470			version1568:
c87470 498d4424e8		lea	rax,[r12-24]
c87475 49bf0880aa4e767f
c8747d 0000			mov	r15,140146102665224
c8747f 493b4728			cmp	rax,[r15+40]
c87483 7d38			jge	short alloc-ok139
c87485 48c7c018000000		mov	rax,dword 24
c8748c 57			push	rdi
c8748d 56			push	rsi
c8748e 52			push	rdx
c8748f 51			push	rcx
c87490 4150			push	r8
c87492 4151			push	r9
c87494 4152			push	r10
c87496 4153			push	r11
c87498 50			push	rax
c87499 4889e7			mov	rdi,rsp
c8749c 4883e4f0			and	rsp,byte -16
c874a0 4883ec08			sub	rsp,byte 8
c874a4 57			push	rdi
c874a5 e826ec6c01		call	gc
c874aa 5c			pop	rsp
c874ab 4989c4			mov	r12,rax
c874ae 58			pop	rax
c874af 415b			pop	r11
c874b1 415a			pop	r10
c874b3 4159			pop	r9
c874b5 4158			pop	r8
c874b7 59			pop	rcx
c874b8 5a			pop	rdx
c874b9 5e			pop	rsi
c874ba 5f			pop	rdi
c874bb eb04			jmp	short alloc-end139
c874bd			alloc-ok139:
c874bd 4983ec18			sub	r12,byte 24
c874c1			alloc-end139:
c874c1 48c7c00e030000		mov	rax,dword 782
c874c8 49890424			mov	[r12],rax
c874cc 5b			pop	rbx
c874cd 58			pop	rax
c874ce 4989442408		mov	[r12+8],rax
c874d3 49895c2410		mov	[r12+16],rbx
c874d8 4c89e0			mov	rax,r12
c874db 4883c001			add	rax,byte 1
c874df 50			push	rax
c874e0			version1569:
c874e0 58			pop	rax
c874e1 5b			pop	rbx
c874e2 48894307			mov	[rbx+7],rax
c874e6 6aee			push	qword byte -18
c874e8 e9f5ebffff		jmp	version1196
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #599
                      stack: (number unknown unknown unknown unknown unknown)
                      env: ((i . #<identifier #600
                                    type: local
                                    offset: 4
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (l . #<identifier #513
                                    type: local
                                    offset: 3
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (n . #<identifier #514
                                    type: local
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: unknown>)
                            (m . #<identifier #515
                                    type: local
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: unknown>))
                      nb-args: 2>
>>> patching jump at 7f764bc8674f -> 7f764bc874ed
------------------------------------------------------------------------
c874ed				bits 64
c874ed 909090		version1570:
c874f0 ff742408			push	qword [rsp+8]
c874f4			version1571:
c874f4 58			pop	rax
c874f5 4883c408			add	rsp,byte 8
c874f9 50			push	rax
c874fa			version1572:
c874fa 58			pop	rax
c874fb 4883c408			add	rsp,byte 8
c874ff 50			push	rax
c87500			version1573:
c87500 58			pop	rax
c87501 4883c418			add	rsp,byte 24
c87505 5a			pop	rdx
c87506 488b5a70			mov	rbx,[rdx+112]
c8750a 49c7c370000000		mov	r11,dword 112
c87511 ffe3			jmp	rbx
------------------------------------------------------------------------
c87513				bits 64
c87513 90		continuation_26:
c87514 50			push	rax
c87515			version1574:
c87515 58			pop	rax
c87516 4883c408			add	rsp,byte 8
c8751a 50			push	rax
c8751b			version1575:
c8751b 58			pop	rax
c8751c 4883c420			add	rsp,byte 32
c87520 5a			pop	rdx
c87521 488b5a70			mov	rbx,[rdx+112]
c87525 49c7c370000000		mov	r11,dword 112
c8752c ffe3			jmp	rbx
------------------------------------------------------------------------
c8752e				bits 64
c8752e 9090		continuation_27:
c87530 50			push	rax
c87531			version1576:
c87531 58			pop	rax
c87532 4881c490030000		add	rsp,912
c87539 415f			pop	r15
c8753b 415e			pop	r14
c8753d 415d			pop	r13
c8753f 415c			pop	r12
c87541 415b			pop	r11
c87543 415a			pop	r10
c87545 4159			pop	r9
c87547 4158			pop	r8
c87549 5f			pop	rdi
c8754a 5e			pop	rsi
c8754b 5d			pop	rbp
c8754c 5a			pop	rdx
c8754d 59			pop	rcx
c8754e 5b			pop	rbx
c8754f 58			pop	rax
c87550 5c			pop	rsp
c87551 c3			ret
Closures: 975
Executed tests: 681558
Code size (bytes): 34122
Stub size (bytes): 5248
Total size (bytes): 39370
Global table size: 7
Number of cctables: 117
Number of crtables: 27
CC table space: 6.55199
CR table space: 3.45599
Min versions number: 0
Max versions number: 6
-------------------------
Number of stubs for each number of version
#versions;#stubs;#ret;#entry
0;4852;177;242
1;621;5;5
2;166;4;3
3;41;0;0
4;67;0;0
6;45;0;0
-------------------------
