------------------------------------------------------------------------
197008				bits 64
197008 e987000000		jmp	rtlib_skip
19700d			do_callback_handler:
19700d 57			push	rdi
19700e 56			push	rsi
19700f 52			push	rdx
197010 51			push	rcx
197011 4150			push	r8
197013 4151			push	r9
197015 4152			push	r10
197017 4153			push	r11
197019 50			push	rax
19701a 4889e7			mov	rdi,rsp
19701d 4883e4f0			and	rsp,byte -16
197021 4883ec08			sub	rsp,byte 8
197025 57			push	rdi
197026 e838746d01		call	do_callback
19702b 5c			pop	rsp
19702c 58			pop	rax
19702d 415b			pop	r11
19702f 415a			pop	r10
197031 4159			pop	r9
197033 4158			pop	r8
197035 59			pop	rcx
197036 5a			pop	rdx
197037 5e			pop	rsi
197038 5f			pop	rdi
197039 c3			ret
19703a			do_callback_fn_handler:
19703a 57			push	rdi
19703b 56			push	rsi
19703c 52			push	rdx
19703d 51			push	rcx
19703e 4150			push	r8
197040 4151			push	r9
197042 4152			push	r10
197044 4153			push	r11
197046 50			push	rax
197047 4889e7			mov	rdi,rsp
19704a 4883e4f0			and	rsp,byte -16
19704e 4883ec08			sub	rsp,byte 8
197052 57			push	rdi
197053 e823756d01		call	do_callback_fn
197058 5c			pop	rsp
197059 58			pop	rax
19705a 415b			pop	r11
19705c 415a			pop	r10
19705e 4159			pop	r9
197060 4158			pop	r8
197062 59			pop	rcx
197063 5a			pop	rdx
197064 5e			pop	rsi
197065 5f			pop	rdi
197066 c3			ret
197067			do_callback_cont_handler:
197067 57			push	rdi
197068 56			push	rsi
197069 52			push	rdx
19706a 51			push	rcx
19706b 4150			push	r8
19706d 4151			push	r9
19706f 4152			push	r10
197071 4153			push	r11
197073 50			push	rax
197074 4889e7			mov	rdi,rsp
197077 4883e4f0			and	rsp,byte -16
19707b 4883ec08			sub	rsp,byte 8
19707f 57			push	rdi
197080 e80e766d01		call	do_callback_cont
197085 5c			pop	rsp
197086 58			pop	rax
197087 415b			pop	r11
197089 415a			pop	r10
19708b 4159			pop	r9
19708d 4158			pop	r8
19708f 59			pop	rcx
197090 5a			pop	rdx
197091 5e			pop	rsi
197092 5f			pop	rdi
197093 c3			ret
197094			rtlib_skip:
197094 54			push	rsp
197095 50			push	rax
197096 53			push	rbx
197097 51			push	rcx
197098 52			push	rdx
197099 55			push	rbp
19709a 56			push	rsi
19709b 57			push	rdi
19709c 4150			push	r8
19709e 4151			push	r9
1970a0 4152			push	r10
1970a2 4153			push	r11
1970a4 4154			push	r12
1970a6 4155			push	r13
1970a8 4156			push	r14
1970aa 4157			push	r15
1970ac 50			push	rax
1970ad 53			push	rbx
1970ae 48b83800fcb0937f
1970b6 0000			mov	rax,140272306225208
1970b8 48c7c300000000		mov	rbx,dword 0
1970bf 488918			mov	[rax],rbx
1970c2 5b			pop	rbx
1970c3 58			pop	rax
1970c4 50			push	rax
1970c5 53			push	rbx
1970c6 48b84000fcb0937f
1970ce 0000			mov	rax,140272306225216
1970d0 48c7c300000000		mov	rbx,dword 0
1970d7 488918			mov	[rax],rbx
1970da 5b			pop	rbx
1970db 58			pop	rax
1970dc 50			push	rax
1970dd 53			push	rbx
1970de 48b84800fcb0937f
1970e6 0000			mov	rax,140272306225224
1970e8 48c7c300000000		mov	rbx,dword 0
1970ef 488918			mov	[rax],rbx
1970f2 5b			pop	rbx
1970f3 58			pop	rax
1970f4 50			push	rax
1970f5 53			push	rbx
1970f6 48b85000fcb0937f
1970fe 0000			mov	rax,140272306225232
197100 48c7c300000000		mov	rbx,dword 0
197107 488918			mov	[rax],rbx
19710a 5b			pop	rbx
19710b 58			pop	rax
19710c 50			push	rax
19710d 53			push	rbx
19710e 48b85800fcb0937f
197116 0000			mov	rax,140272306225240
197118 48c7c300000000		mov	rbx,dword 0
19711f 488918			mov	[rax],rbx
197122 5b			pop	rbx
197123 58			pop	rax
197124 50			push	rax
197125 53			push	rbx
197126 48b86000fcb0937f
19712e 0000			mov	rax,140272306225248
197130 48c7c300000000		mov	rbx,dword 0
197137 488918			mov	[rax],rbx
19713a 5b			pop	rbx
19713b 58			pop	rax
19713c 48b80800fcb0937f
197144 0000			mov	rax,140272306225160
197146 488920			mov	[rax],rsp
197149 48b90850a26b907f
197151 0000			mov	rcx,140258257817608
197153 48894828			mov	[rax+40],rcx
197157 48c7c100000000		mov	rcx,dword 0
19715e 49bc08d6dd0c927f
197166 0000			mov	r12,140265257817608
197168 49ba8000fcb0937f
197170 0000			mov	r10,140272306225280
------------------------------------------------------------------------
d08af8				bits 64
d08af8			stub_7f93aed08af8_0:
d08af8 e810e548ff		call	do_callback_handler
d08afd a1d23b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08ae8				bits 64
d08ae8			stub_7f93aed08ae8_0:
d08ae8 e820e548ff		call	do_callback_handler
d08aed 5180380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08ad8				bits 64
d08ad8			stub_7f93aed08ad8_0:
d08ad8 e830e548ff		call	do_callback_handler
d08add 71a0390200000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
d08ac8				bits 64
d08ac8			stub_7f93aed08ac8_0:
d08ac8 e840e548ff		call	do_callback_handler
d08acd c1a0390200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08ab8				bits 64
d08ab8			stub_7f93aed08ab8_0:
d08ab8 e850e548ff		call	do_callback_handler
d08abd 11a1390200000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
d08aa8				bits 64
d08aa8			stub_7f93aed08aa8_0:
d08aa8 e860e548ff		call	do_callback_handler
d08aad 61a1390200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a98				bits 64
d08a98			stub_7f93aed08a98_0:
d08a98 e870e548ff		call	do_callback_handler
d08a9d b1a1390200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a88				bits 64
d08a88			stub_7f93aed08a88_0:
d08a88 e880e548ff		call	do_callback_handler
d08a8d 01a2390200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a78				bits 64
d08a78			stub_7f93aed08a78_0:
d08a78 e890e548ff		call	do_callback_handler
d08a7d 51a2390200000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
d08a68				bits 64
d08a68			stub_7f93aed08a68_0:
d08a68 e8a0e548ff		call	do_callback_handler
d08a6d a1a2390200000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
d08a58				bits 64
d08a58			stub_7f93aed08a58_0:
d08a58 e8b0e548ff		call	do_callback_handler
d08a5d 51d33b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a48				bits 64
d08a48			stub_7f93aed08a48_0:
d08a48 e8c0e548ff		call	do_callback_handler
d08a4d a1d33b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a38				bits 64
d08a38			stub_7f93aed08a38_0:
d08a38 e8d0e548ff		call	do_callback_handler
d08a3d f1d33b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a28				bits 64
d08a28			stub_7f93aed08a28_0:
d08a28 e8e0e548ff		call	do_callback_handler
d08a2d 41d43b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a18				bits 64
d08a18			stub_7f93aed08a18_0:
d08a18 e8f0e548ff		call	do_callback_handler
d08a1d f1d23b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08a08				bits 64
d08a08			stub_7f93aed08a08_0:
d08a08 e800e648ff		call	do_callback_handler
d08a0d 51a3390200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089f8				bits 64
d089f8			stub_7f93aed089f8_0:
d089f8 e810e648ff		call	do_callback_handler
d089fd c143380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089e8				bits 64
d089e8			stub_7f93aed089e8_0:
d089e8 e820e648ff		call	do_callback_handler
d089ed 1144380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089d8				bits 64
d089d8			stub_7f93aed089d8_0:
d089d8 e830e648ff		call	do_callback_handler
d089dd 6144380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089c8				bits 64
d089c8			stub_7f93aed089c8_0:
d089c8 e840e648ff		call	do_callback_handler
d089cd b144380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089b8				bits 64
d089b8			stub_7f93aed089b8_0:
d089b8 e850e648ff		call	do_callback_handler
d089bd 0145380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d089a8				bits 64
d089a8			stub_7f93aed089a8_0:
d089a8 e860e648ff		call	do_callback_handler
d089ad 5145380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08998				bits 64
d08998			stub_7f93aed08998_0:
d08998 e870e648ff		call	do_callback_handler
d0899d a145380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08988				bits 64
d08988			stub_7f93aed08988_0:
d08988 e880e648ff		call	do_callback_handler
d0898d 91d43b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08978				bits 64
d08978			stub_7f93aed08978_0:
d08978 e890e648ff		call	do_callback_handler
d0897d e1d43b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08968				bits 64
d08968			stub_7f93aed08968_0:
d08968 e8a0e648ff		call	do_callback_handler
d0896d 31d53b0200000000
(obj= #(#<procedure #3>))
------------------------------------------------------------------------
d08958				bits 64
d08958			stub_7f93aed08958_0:
d08958 e8b0e648ff		call	do_callback_handler
d0895d 81d53b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08948				bits 64
d08948			stub_7f93aed08948_0:
d08948 e8c0e648ff		call	do_callback_handler
d0894d d1d53b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08938				bits 64
d08938			stub_7f93aed08938_0:
d08938 e8d0e648ff		call	do_callback_handler
d0893d 21d63b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08928				bits 64
d08928			stub_7f93aed08928_0:
d08928 e8e0e648ff		call	do_callback_handler
d0892d 71d63b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08918				bits 64
d08918			stub_7f93aed08918_0:
d08918 e8f0e648ff		call	do_callback_handler
d0891d c1d63b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08908				bits 64
d08908			stub_7f93aed08908_0:
d08908 e800e748ff		call	do_callback_handler
d0890d 11d73b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088f8				bits 64
d088f8			stub_7f93aed088f8_0:
d088f8 e810e748ff		call	do_callback_handler
d088fd 61d73b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088e8				bits 64
d088e8			stub_7f93aed088e8_0:
d088e8 e820e748ff		call	do_callback_handler
d088ed b1d73b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088d8				bits 64
d088d8			stub_7f93aed088d8_0:
d088d8 e830e748ff		call	do_callback_handler
d088dd 01d83b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088c8				bits 64
d088c8			stub_7f93aed088c8_0:
d088c8 e840e748ff		call	do_callback_handler
d088cd 51d83b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088b8				bits 64
d088b8			stub_7f93aed088b8_0:
d088b8 e850e748ff		call	do_callback_handler
d088bd a1d83b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d088a8				bits 64
d088a8			stub_7f93aed088a8_0:
d088a8 e860e748ff		call	do_callback_handler
d088ad f1d83b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08898				bits 64
d08898			stub_7f93aed08898_0:
d08898 e870e748ff		call	do_callback_handler
d0889d 41d93b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08888				bits 64
d08888			stub_7f93aed08888_0:
d08888 e880e748ff		call	do_callback_handler
d0888d 0143380200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08878				bits 64
d08878			stub_7f93aed08878_0:
d08878 e890e748ff		call	do_callback_handler
d0887d 41da3b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08868				bits 64
d08868			stub_7f93aed08868_0:
d08868 e8a0e748ff		call	do_callback_handler
d0886d 91da3b0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08858				bits 64
d08858			stub_7f93aed08858_0:
d08858 e8b0e748ff		call	do_callback_handler
d0885d e1da3b0200000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #4 stack: () env: () nb-args: -1>
>>> patching jump at 7f93ae197172 -> 7f93ae197172
------------------------------------------------------------------------
d08848				bits 64
d08848			stub_7f93aed08848_1:
d08848 fec1			inc	cl
d0884a			stub_7f93aed08848_0:
d0884a e8ebe748ff		call	do_callback_fn_handler
d0884f 31db3b0200000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
d08838				bits 64
d08838			stub_7f93aed08838_1:
d08838 fec1			inc	cl
d0883a			stub_7f93aed08838_0:
d0883a e8fbe748ff		call	do_callback_fn_handler
d0883f 01dc3b0200000000
(obj= #(#<procedure #6>))
------------------------------------------------------------------------
d08828				bits 64
d08828			stub_7f93aed08828_1:
d08828 fec1			inc	cl
d0882a			stub_7f93aed08828_0:
d0882a e80be848ff		call	do_callback_fn_handler
d0882f 51dc3b0200000000
(obj= #(#<procedure #7>))
------------------------------------------------------------------------
d08818				bits 64
d08818			stub_7f93aed08818_1:
d08818 fec1			inc	cl
d0881a			stub_7f93aed08818_0:
d0881a e81be848ff		call	do_callback_fn_handler
d0881f a1dc3b0200000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
d08808				bits 64
d08808			stub_7f93aed08808_1:
d08808 fec1			inc	cl
d0880a			stub_7f93aed08808_0:
d0880a e82be848ff		call	do_callback_fn_handler
d0880f f1dc3b0200000000
(obj= #(#<procedure #9>))
------------------------------------------------------------------------
d087f8				bits 64
d087f8			stub_7f93aed087f8_1:
d087f8 fec1			inc	cl
d087fa			stub_7f93aed087f8_0:
d087fa e83be848ff		call	do_callback_fn_handler
d087ff 41dd3b0200000000
(obj= #(#<procedure #10>))
------------------------------------------------------------------------
d087e8				bits 64
d087e8			stub_7f93aed087e8_1:
d087e8 fec1			inc	cl
d087ea			stub_7f93aed087e8_0:
d087ea e84be848ff		call	do_callback_fn_handler
d087ef 91dd3b0200000000
(obj= #(#<procedure #11>))
------------------------------------------------------------------------
d087d8				bits 64
d087d8			stub_7f93aed087d8_1:
d087d8 fec1			inc	cl
d087da			stub_7f93aed087d8_0:
d087da e85be848ff		call	do_callback_fn_handler
d087df e1dd3b0200000000
(obj= #(#<procedure #12>))
------------------------------------------------------------------------
d087c8				bits 64
d087c8			stub_7f93aed087c8_1:
d087c8 fec1			inc	cl
d087ca			stub_7f93aed087c8_0:
d087ca e86be848ff		call	do_callback_fn_handler
d087cf 31de3b0200000000
(obj= #(#<procedure #13>))
------------------------------------------------------------------------
d087b8				bits 64
d087b8			stub_7f93aed087b8_1:
d087b8 fec1			inc	cl
d087ba			stub_7f93aed087b8_0:
d087ba e87be848ff		call	do_callback_fn_handler
d087bf 81de3b0200000000
(obj= #(#<procedure #14>))
------------------------------------------------------------------------
d087a8				bits 64
d087a8			stub_7f93aed087a8_1:
d087a8 fec1			inc	cl
d087aa			stub_7f93aed087a8_0:
d087aa e88be848ff		call	do_callback_fn_handler
d087af d1de3b0200000000
(obj= #(#<procedure #15>))
------------------------------------------------------------------------
d08798				bits 64
d08798			stub_7f93aed08798_1:
d08798 fec1			inc	cl
d0879a			stub_7f93aed08798_0:
d0879a e89be848ff		call	do_callback_fn_handler
d0879f 8137390200000000
(obj= #(#<procedure #16>))
------------------------------------------------------------------------
d08788				bits 64
d08788			stub_7f93aed08788_1:
d08788 fec1			inc	cl
d0878a			stub_7f93aed08788_0:
d0878a e8abe848ff		call	do_callback_fn_handler
d0878f d137390200000000
(obj= #(#<procedure #17>))
------------------------------------------------------------------------
d08778				bits 64
d08778			stub_7f93aed08778_1:
d08778 fec1			inc	cl
d0877a			stub_7f93aed08778_0:
d0877a e8bbe848ff		call	do_callback_fn_handler
d0877f 2138390200000000
(obj= #(#<procedure #18>))
------------------------------------------------------------------------
d08768				bits 64
d08768			stub_7f93aed08768_1:
d08768 fec1			inc	cl
d0876a			stub_7f93aed08768_0:
d0876a e8cbe848ff		call	do_callback_fn_handler
d0876f 7138390200000000
(obj= #(#<procedure #19>))
------------------------------------------------------------------------
d08758				bits 64
d08758			stub_7f93aed08758_1:
d08758 fec1			inc	cl
d0875a			stub_7f93aed08758_0:
d0875a e8dbe848ff		call	do_callback_fn_handler
d0875f c138390200000000
(obj= #(#<procedure #20>))
------------------------------------------------------------------------
d08748				bits 64
d08748			stub_7f93aed08748_1:
d08748 fec1			inc	cl
d0874a			stub_7f93aed08748_0:
d0874a e8ebe848ff		call	do_callback_fn_handler
d0874f 1139390200000000
(obj= #(#<procedure #21>))
------------------------------------------------------------------------
d08738				bits 64
d08738			stub_7f93aed08738_1:
d08738 fec1			inc	cl
d0873a			stub_7f93aed08738_0:
d0873a e8fbe848ff		call	do_callback_fn_handler
d0873f 6139390200000000
(obj= #(#<procedure #22>))
------------------------------------------------------------------------
d08728				bits 64
d08728			stub_7f93aed08728_1:
d08728 fec1			inc	cl
d0872a			stub_7f93aed08728_0:
d0872a e80be948ff		call	do_callback_fn_handler
d0872f b139390200000000
(obj= #(#<procedure #23>))
------------------------------------------------------------------------
d08718				bits 64
d08718			stub_7f93aed08718_1:
d08718 fec1			inc	cl
d0871a			stub_7f93aed08718_0:
d0871a e81be948ff		call	do_callback_fn_handler
d0871f 013a390200000000
(obj= #(#<procedure #24>))
------------------------------------------------------------------------
d08708				bits 64
d08708			stub_7f93aed08708_1:
d08708 fec1			inc	cl
d0870a			stub_7f93aed08708_0:
d0870a e82be948ff		call	do_callback_fn_handler
d0870f 513a390200000000
(obj= #(#<procedure #25>))
------------------------------------------------------------------------
d086f8				bits 64
d086f8			stub_7f93aed086f8_1:
d086f8 fec1			inc	cl
d086fa			stub_7f93aed086f8_0:
d086fa e83be948ff		call	do_callback_fn_handler
d086ff a13a390200000000
(obj= #(#<procedure #26>))
------------------------------------------------------------------------
d086e8				bits 64
d086e8			stub_7f93aed086e8_1:
d086e8 fec1			inc	cl
d086ea			stub_7f93aed086e8_0:
d086ea e84be948ff		call	do_callback_fn_handler
d086ef f13a390200000000
(obj= #(#<procedure #27>))
------------------------------------------------------------------------
d086d8				bits 64
d086d8			stub_7f93aed086d8_1:
d086d8 fec1			inc	cl
d086da			stub_7f93aed086d8_0:
d086da e85be948ff		call	do_callback_fn_handler
d086df 413b390200000000
(obj= #(#<procedure #28>))
------------------------------------------------------------------------
d086c8				bits 64
d086c8			stub_7f93aed086c8_1:
d086c8 fec1			inc	cl
d086ca			stub_7f93aed086c8_0:
d086ca e86be948ff		call	do_callback_fn_handler
d086cf 913b390200000000
(obj= #(#<procedure #29>))
------------------------------------------------------------------------
d086b8				bits 64
d086b8			stub_7f93aed086b8_1:
d086b8 fec1			inc	cl
d086ba			stub_7f93aed086b8_0:
d086ba e87be948ff		call	do_callback_fn_handler
d086bf e13b390200000000
(obj= #(#<procedure #30>))
------------------------------------------------------------------------
d086a8				bits 64
d086a8			stub_7f93aed086a8_1:
d086a8 fec1			inc	cl
d086aa			stub_7f93aed086a8_0:
d086aa e88be948ff		call	do_callback_fn_handler
d086af 313c390200000000
(obj= #(#<procedure #31>))
------------------------------------------------------------------------
d08698				bits 64
d08698			stub_7f93aed08698_1:
d08698 fec1			inc	cl
d0869a			stub_7f93aed08698_0:
d0869a e89be948ff		call	do_callback_fn_handler
d0869f 813c390200000000
(obj= #(#<procedure #32>))
------------------------------------------------------------------------
d08688				bits 64
d08688			stub_7f93aed08688_1:
d08688 fec1			inc	cl
d0868a			stub_7f93aed08688_0:
d0868a e8abe948ff		call	do_callback_fn_handler
d0868f 21df3b0200000000
(obj= #(#<procedure #33>))
------------------------------------------------------------------------
d08678				bits 64
d08678			stub_7f93aed08678_1:
d08678 fec1			inc	cl
d0867a			stub_7f93aed08678_0:
d0867a e8bbe948ff		call	do_callback_fn_handler
d0867f 71df3b0200000000
(obj= #(#<procedure #34>))
------------------------------------------------------------------------
d08668				bits 64
d08668			stub_7f93aed08668_1:
d08668 fec1			inc	cl
d0866a			stub_7f93aed08668_0:
d0866a e8cbe948ff		call	do_callback_fn_handler
d0866f c1df3b0200000000
(obj= #(#<procedure #35>))
------------------------------------------------------------------------
d08658				bits 64
d08658			stub_7f93aed08658_1:
d08658 fec1			inc	cl
d0865a			stub_7f93aed08658_0:
d0865a e8dbe948ff		call	do_callback_fn_handler
d0865f 11e03b0200000000
(obj= #(#<procedure #36>))
------------------------------------------------------------------------
d08648				bits 64
d08648			stub_7f93aed08648_1:
d08648 fec1			inc	cl
d0864a			stub_7f93aed08648_0:
d0864a e8ebe948ff		call	do_callback_fn_handler
d0864f 61e03b0200000000
(obj= #(#<procedure #37>))
------------------------------------------------------------------------
d08638				bits 64
d08638			stub_7f93aed08638_1:
d08638 fec1			inc	cl
d0863a			stub_7f93aed08638_0:
d0863a e8fbe948ff		call	do_callback_fn_handler
d0863f b1e03b0200000000
(obj= #(#<procedure #38>))
------------------------------------------------------------------------
d08628				bits 64
d08628			stub_7f93aed08628_1:
d08628 fec1			inc	cl
d0862a			stub_7f93aed08628_0:
d0862a e80bea48ff		call	do_callback_fn_handler
d0862f 01e13b0200000000
(obj= #(#<procedure #39>))
------------------------------------------------------------------------
d08618				bits 64
d08618			stub_7f93aed08618_1:
d08618 fec1			inc	cl
d0861a			stub_7f93aed08618_0:
d0861a e81bea48ff		call	do_callback_fn_handler
d0861f 51e13b0200000000
(obj= #(#<procedure #40>))
------------------------------------------------------------------------
d08608				bits 64
d08608			stub_7f93aed08608_1:
d08608 fec1			inc	cl
d0860a			stub_7f93aed08608_0:
d0860a e82bea48ff		call	do_callback_fn_handler
d0860f a1e13b0200000000
(obj= #(#<procedure #41>))
------------------------------------------------------------------------
d085f8				bits 64
d085f8			stub_7f93aed085f8_1:
d085f8 fec1			inc	cl
d085fa			stub_7f93aed085f8_0:
d085fa e83bea48ff		call	do_callback_fn_handler
d085ff f1e13b0200000000
(obj= #(#<procedure #42>))
------------------------------------------------------------------------
d085e8				bits 64
d085e8			stub_7f93aed085e8_1:
d085e8 fec1			inc	cl
d085ea			stub_7f93aed085e8_0:
d085ea e84bea48ff		call	do_callback_fn_handler
d085ef 41e23b0200000000
(obj= #(#<procedure #43>))
------------------------------------------------------------------------
d085d8				bits 64
d085d8			stub_7f93aed085d8_1:
d085d8 fec1			inc	cl
d085da			stub_7f93aed085d8_0:
d085da e85bea48ff		call	do_callback_fn_handler
d085df 91e23b0200000000
(obj= #(#<procedure #44>))
------------------------------------------------------------------------
d085c8				bits 64
d085c8			stub_7f93aed085c8_1:
d085c8 fec1			inc	cl
d085ca			stub_7f93aed085c8_0:
d085ca e86bea48ff		call	do_callback_fn_handler
d085cf e1e23b0200000000
(obj= #(#<procedure #45>))
------------------------------------------------------------------------
d085b8				bits 64
d085b8			stub_7f93aed085b8_1:
d085b8 fec1			inc	cl
d085ba			stub_7f93aed085b8_0:
d085ba e87bea48ff		call	do_callback_fn_handler
d085bf 31e33b0200000000
(obj= #(#<procedure #46>))
------------------------------------------------------------------------
d085a8				bits 64
d085a8			stub_7f93aed085a8_1:
d085a8 fec1			inc	cl
d085aa			stub_7f93aed085a8_0:
d085aa e88bea48ff		call	do_callback_fn_handler
d085af 81e33b0200000000
(obj= #(#<procedure #47>))
------------------------------------------------------------------------
d08598				bits 64
d08598			stub_7f93aed08598_1:
d08598 fec1			inc	cl
d0859a			stub_7f93aed08598_0:
d0859a e89bea48ff		call	do_callback_fn_handler
d0859f d1e33b0200000000
(obj= #(#<procedure #48>))
------------------------------------------------------------------------
d08588				bits 64
d08588			stub_7f93aed08588_1:
d08588 fec1			inc	cl
d0858a			stub_7f93aed08588_0:
d0858a e8abea48ff		call	do_callback_fn_handler
d0858f 21e43b0200000000
(obj= #(#<procedure #49>))
------------------------------------------------------------------------
d08578				bits 64
d08578			stub_7f93aed08578_1:
d08578 fec1			inc	cl
d0857a			stub_7f93aed08578_0:
d0857a e8bbea48ff		call	do_callback_fn_handler
d0857f d184ae0200000000
(obj= #(#<procedure #50>))
------------------------------------------------------------------------
d08568				bits 64
d08568			stub_7f93aed08568_1:
d08568 fec1			inc	cl
d0856a			stub_7f93aed08568_0:
d0856a e8cbea48ff		call	do_callback_fn_handler
d0856f 1195ae0200000000
(obj= #(#<procedure #51>))
------------------------------------------------------------------------
d08558				bits 64
d08558			stub_7f93aed08558_1:
d08558 fec1			inc	cl
d0855a			stub_7f93aed08558_0:
d0855a e8dbea48ff		call	do_callback_fn_handler
d0855f 51a5ae0200000000
(obj= #(#<procedure #52>))
------------------------------------------------------------------------
d08548				bits 64
d08548			stub_7f93aed08548_1:
d08548 fec1			inc	cl
d0854a			stub_7f93aed08548_0:
d0854a e8ebea48ff		call	do_callback_fn_handler
d0854f 91b5ae0200000000
(obj= #(#<procedure #53>))
------------------------------------------------------------------------
d08538				bits 64
d08538			stub_7f93aed08538_1:
d08538 fec1			inc	cl
d0853a			stub_7f93aed08538_0:
d0853a e8fbea48ff		call	do_callback_fn_handler
d0853f d1c5ae0200000000
(obj= #(#<procedure #54>))
------------------------------------------------------------------------
d08528				bits 64
d08528			stub_7f93aed08528_1:
d08528 fec1			inc	cl
d0852a			stub_7f93aed08528_0:
d0852a e80beb48ff		call	do_callback_fn_handler
d0852f 11d6ae0200000000
(obj= #(#<procedure #55>))
------------------------------------------------------------------------
d08518				bits 64
d08518			stub_7f93aed08518_1:
d08518 fec1			inc	cl
d0851a			stub_7f93aed08518_0:
d0851a e81beb48ff		call	do_callback_fn_handler
d0851f 51e6ae0200000000
(obj= #(#<procedure #56>))
------------------------------------------------------------------------
d08508				bits 64
d08508			stub_7f93aed08508_1:
d08508 fec1			inc	cl
d0850a			stub_7f93aed08508_0:
d0850a e82beb48ff		call	do_callback_fn_handler
d0850f 91f6ae0200000000
(obj= #(#<procedure #57>))
------------------------------------------------------------------------
d084f8				bits 64
d084f8			stub_7f93aed084f8_1:
d084f8 fec1			inc	cl
d084fa			stub_7f93aed084f8_0:
d084fa e83beb48ff		call	do_callback_fn_handler
d084ff d106af0200000000
(obj= #(#<procedure #58>))
------------------------------------------------------------------------
d084e8				bits 64
d084e8			stub_7f93aed084e8_1:
d084e8 fec1			inc	cl
d084ea			stub_7f93aed084e8_0:
d084ea e84beb48ff		call	do_callback_fn_handler
d084ef 1117af0200000000
(obj= #(#<procedure #59>))
------------------------------------------------------------------------
d084d8				bits 64
d084d8			stub_7f93aed084d8_1:
d084d8 fec1			inc	cl
d084da			stub_7f93aed084d8_0:
d084da e85beb48ff		call	do_callback_fn_handler
d084df 5127af0200000000
(obj= #(#<procedure #60>))
------------------------------------------------------------------------
d084c8				bits 64
d084c8			stub_7f93aed084c8_1:
d084c8 fec1			inc	cl
d084ca			stub_7f93aed084c8_0:
d084ca e86beb48ff		call	do_callback_fn_handler
d084cf 9137af0200000000
(obj= #(#<procedure #61>))
------------------------------------------------------------------------
d084b8				bits 64
d084b8			stub_7f93aed084b8_1:
d084b8 fec1			inc	cl
d084ba			stub_7f93aed084b8_0:
d084ba e87beb48ff		call	do_callback_fn_handler
d084bf d147af0200000000
(obj= #(#<procedure #62>))
------------------------------------------------------------------------
d084a8				bits 64
d084a8			stub_7f93aed084a8_1:
d084a8 fec1			inc	cl
d084aa			stub_7f93aed084a8_0:
d084aa e88beb48ff		call	do_callback_fn_handler
d084af 1158af0200000000
(obj= #(#<procedure #63>))
------------------------------------------------------------------------
d08498				bits 64
d08498			stub_7f93aed08498_1:
d08498 fec1			inc	cl
d0849a			stub_7f93aed08498_0:
d0849a e89beb48ff		call	do_callback_fn_handler
d0849f 5168af0200000000
(obj= #(#<procedure #64>))
------------------------------------------------------------------------
d08488				bits 64
d08488			stub_7f93aed08488_1:
d08488 fec1			inc	cl
d0848a			stub_7f93aed08488_0:
d0848a e8abeb48ff		call	do_callback_fn_handler
d0848f 9178af0200000000
(obj= #(#<procedure #65>))
------------------------------------------------------------------------
d08478				bits 64
d08478			stub_7f93aed08478_1:
d08478 fec1			inc	cl
d0847a			stub_7f93aed08478_0:
d0847a e8bbeb48ff		call	do_callback_fn_handler
d0847f d188af0200000000
(obj= #(#<procedure #66>))
------------------------------------------------------------------------
d08468				bits 64
d08468			stub_7f93aed08468_1:
d08468 fec1			inc	cl
d0846a			stub_7f93aed08468_0:
d0846a e8cbeb48ff		call	do_callback_fn_handler
d0846f 1199af0200000000
(obj= #(#<procedure #67>))
------------------------------------------------------------------------
d08458				bits 64
d08458			stub_7f93aed08458_1:
d08458 fec1			inc	cl
d0845a			stub_7f93aed08458_0:
d0845a e8dbeb48ff		call	do_callback_fn_handler
d0845f 51a9af0200000000
(obj= #(#<procedure #68>))
------------------------------------------------------------------------
d08448				bits 64
d08448			stub_7f93aed08448_1:
d08448 fec1			inc	cl
d0844a			stub_7f93aed08448_0:
d0844a e8ebeb48ff		call	do_callback_fn_handler
d0844f 91b9af0200000000
(obj= #(#<procedure #69>))
------------------------------------------------------------------------
d08438				bits 64
d08438			stub_7f93aed08438_1:
d08438 fec1			inc	cl
d0843a			stub_7f93aed08438_0:
d0843a e8fbeb48ff		call	do_callback_fn_handler
d0843f d1c9af0200000000
(obj= #(#<procedure #70>))
------------------------------------------------------------------------
d08428				bits 64
d08428			stub_7f93aed08428_1:
d08428 fec1			inc	cl
d0842a			stub_7f93aed08428_0:
d0842a e80bec48ff		call	do_callback_fn_handler
d0842f 11daaf0200000000
(obj= #(#<procedure #71>))
------------------------------------------------------------------------
d08418				bits 64
d08418			stub_7f93aed08418_1:
d08418 fec1			inc	cl
d0841a			stub_7f93aed08418_0:
d0841a e81bec48ff		call	do_callback_fn_handler
d0841f 51eaaf0200000000
(obj= #(#<procedure #72>))
------------------------------------------------------------------------
d08408				bits 64
d08408			stub_7f93aed08408_1:
d08408 fec1			inc	cl
d0840a			stub_7f93aed08408_0:
d0840a e82bec48ff		call	do_callback_fn_handler
d0840f 91faaf0200000000
(obj= #(#<procedure #73>))
------------------------------------------------------------------------
d083f8				bits 64
d083f8			stub_7f93aed083f8_1:
d083f8 fec1			inc	cl
d083fa			stub_7f93aed083f8_0:
d083fa e83bec48ff		call	do_callback_fn_handler
d083ff 510bd00200000000
(obj= #(#<procedure #74>))
------------------------------------------------------------------------
d083e8				bits 64
d083e8			stub_7f93aed083e8_1:
d083e8 fec1			inc	cl
d083ea			stub_7f93aed083e8_0:
d083ea e84bec48ff		call	do_callback_fn_handler
d083ef b19bd00200000000
(obj= #(#<procedure #75>))
------------------------------------------------------------------------
d083d8				bits 64
d083d8			stub_7f93aed083d8_1:
d083d8 fec1			inc	cl
d083da			stub_7f93aed083d8_0:
d083da e85bec48ff		call	do_callback_fn_handler
d083df f1abd00200000000
(obj= #(#<procedure #76>))
------------------------------------------------------------------------
d083c8				bits 64
d083c8			stub_7f93aed083c8_1:
d083c8 fec1			inc	cl
d083ca			stub_7f93aed083c8_0:
d083ca e86bec48ff		call	do_callback_fn_handler
d083cf 31bcd00200000000
(obj= #(#<procedure #77>))
------------------------------------------------------------------------
d083b8				bits 64
d083b8			stub_7f93aed083b8_1:
d083b8 fec1			inc	cl
d083ba			stub_7f93aed083b8_0:
d083ba e87bec48ff		call	do_callback_fn_handler
d083bf 71ccd00200000000
(obj= #(#<procedure #78>))
------------------------------------------------------------------------
d083a8				bits 64
d083a8			stub_7f93aed083a8_1:
d083a8 fec1			inc	cl
d083aa			stub_7f93aed083a8_0:
d083aa e88bec48ff		call	do_callback_fn_handler
d083af b1dcd00200000000
(obj= #(#<procedure #79>))
------------------------------------------------------------------------
d08398				bits 64
d08398			stub_7f93aed08398_1:
d08398 fec1			inc	cl
d0839a			stub_7f93aed08398_0:
d0839a e89bec48ff		call	do_callback_fn_handler
d0839f f1ecd00200000000
(obj= #(#<procedure #80>))
------------------------------------------------------------------------
d08388				bits 64
d08388			stub_7f93aed08388_1:
d08388 fec1			inc	cl
d0838a			stub_7f93aed08388_0:
d0838a e8abec48ff		call	do_callback_fn_handler
d0838f 31fdd00200000000
(obj= #(#<procedure #81>))
------------------------------------------------------------------------
d08378				bits 64
d08378			stub_7f93aed08378_1:
d08378 fec1			inc	cl
d0837a			stub_7f93aed08378_0:
d0837a e8bbec48ff		call	do_callback_fn_handler
d0837f 710dd10200000000
(obj= #(#<procedure #82>))
------------------------------------------------------------------------
d08368				bits 64
d08368			stub_7f93aed08368_1:
d08368 fec1			inc	cl
d0836a			stub_7f93aed08368_0:
d0836a e8cbec48ff		call	do_callback_fn_handler
d0836f b11dd10200000000
(obj= #(#<procedure #83>))
------------------------------------------------------------------------
d08358				bits 64
d08358			stub_7f93aed08358_1:
d08358 fec1			inc	cl
d0835a			stub_7f93aed08358_0:
d0835a e8dbec48ff		call	do_callback_fn_handler
d0835f f12dd10200000000
(obj= #(#<procedure #84>))
------------------------------------------------------------------------
d08348				bits 64
d08348			stub_7f93aed08348_1:
d08348 fec1			inc	cl
d0834a			stub_7f93aed08348_0:
d0834a e8ebec48ff		call	do_callback_fn_handler
d0834f 313ed10200000000
(obj= #(#<procedure #85>))
------------------------------------------------------------------------
d08338				bits 64
d08338			stub_7f93aed08338_1:
d08338 fec1			inc	cl
d0833a			stub_7f93aed08338_0:
d0833a e8fbec48ff		call	do_callback_fn_handler
d0833f 714ed10200000000
(obj= #(#<procedure #86>))
------------------------------------------------------------------------
d08328				bits 64
d08328			stub_7f93aed08328_1:
d08328 fec1			inc	cl
d0832a			stub_7f93aed08328_0:
d0832a e80bed48ff		call	do_callback_fn_handler
d0832f b15ed10200000000
(obj= #(#<procedure #87>))
------------------------------------------------------------------------
d08318				bits 64
d08318			stub_7f93aed08318_1:
d08318 fec1			inc	cl
d0831a			stub_7f93aed08318_0:
d0831a e81bed48ff		call	do_callback_fn_handler
d0831f f16ed10200000000
(obj= #(#<procedure #88>))
------------------------------------------------------------------------
d08308				bits 64
d08308			stub_7f93aed08308_1:
d08308 fec1			inc	cl
d0830a			stub_7f93aed08308_0:
d0830a e82bed48ff		call	do_callback_fn_handler
d0830f 317fd10200000000
(obj= #(#<procedure #89>))
------------------------------------------------------------------------
d082f8				bits 64
d082f8			stub_7f93aed082f8_1:
d082f8 fec1			inc	cl
d082fa			stub_7f93aed082f8_0:
d082fa e83bed48ff		call	do_callback_fn_handler
d082ff 718fd10200000000
(obj= #(#<procedure #90>))
------------------------------------------------------------------------
d082e8				bits 64
d082e8			stub_7f93aed082e8_1:
d082e8 fec1			inc	cl
d082ea			stub_7f93aed082e8_0:
d082ea e84bed48ff		call	do_callback_fn_handler
d082ef b19fd10200000000
(obj= #(#<procedure #91>))
------------------------------------------------------------------------
d082d8				bits 64
d082d8			stub_7f93aed082d8_1:
d082d8 fec1			inc	cl
d082da			stub_7f93aed082d8_0:
d082da e85bed48ff		call	do_callback_fn_handler
d082df f1afd10200000000
(obj= #(#<procedure #92>))
------------------------------------------------------------------------
d082c8				bits 64
d082c8			stub_7f93aed082c8_1:
d082c8 fec1			inc	cl
d082ca			stub_7f93aed082c8_0:
d082ca e86bed48ff		call	do_callback_fn_handler
d082cf 31c0d10200000000
(obj= #(#<procedure #93>))
------------------------------------------------------------------------
d082b8				bits 64
d082b8			stub_7f93aed082b8_1:
d082b8 fec1			inc	cl
d082ba			stub_7f93aed082b8_0:
d082ba e87bed48ff		call	do_callback_fn_handler
d082bf 71d0d10200000000
(obj= #(#<procedure #94>))
------------------------------------------------------------------------
d082a8				bits 64
d082a8			stub_7f93aed082a8_1:
d082a8 fec1			inc	cl
d082aa			stub_7f93aed082a8_0:
d082aa e88bed48ff		call	do_callback_fn_handler
d082af b1e0d10200000000
(obj= #(#<procedure #95>))
------------------------------------------------------------------------
d08298				bits 64
d08298			stub_7f93aed08298_1:
d08298 fec1			inc	cl
d0829a			stub_7f93aed08298_0:
d0829a e89bed48ff		call	do_callback_fn_handler
d0829f f1f0d10200000000
(obj= #(#<procedure #96>))
------------------------------------------------------------------------
d08288				bits 64
d08288			stub_7f93aed08288_1:
d08288 fec1			inc	cl
d0828a			stub_7f93aed08288_0:
d0828a e8abed48ff		call	do_callback_fn_handler
d0828f 3101d20200000000
(obj= #(#<procedure #97>))
------------------------------------------------------------------------
d08278				bits 64
d08278			stub_7f93aed08278_1:
d08278 fec1			inc	cl
d0827a			stub_7f93aed08278_0:
d0827a e8bbed48ff		call	do_callback_fn_handler
d0827f f125d20200000000
(obj= #(#<procedure #98>))
------------------------------------------------------------------------
d08268				bits 64
d08268			stub_7f93aed08268_1:
d08268 fec1			inc	cl
d0826a			stub_7f93aed08268_0:
d0826a e8cbed48ff		call	do_callback_fn_handler
d0826f 3136d20200000000
(obj= #(#<procedure #99>))
------------------------------------------------------------------------
d08258				bits 64
d08258			stub_7f93aed08258_1:
d08258 fec1			inc	cl
d0825a			stub_7f93aed08258_0:
d0825a e8dbed48ff		call	do_callback_fn_handler
d0825f 7146d20200000000
(obj= #(#<procedure #100>))
------------------------------------------------------------------------
d08248				bits 64
d08248			stub_7f93aed08248_1:
d08248 fec1			inc	cl
d0824a			stub_7f93aed08248_0:
d0824a e8ebed48ff		call	do_callback_fn_handler
d0824f b156d20200000000
(obj= #(#<procedure #101>))
------------------------------------------------------------------------
d08238				bits 64
d08238			stub_7f93aed08238_1:
d08238 fec1			inc	cl
d0823a			stub_7f93aed08238_0:
d0823a e8fbed48ff		call	do_callback_fn_handler
d0823f 3171d20200000000
(obj= #(#<procedure #102>))
------------------------------------------------------------------------
d08228				bits 64
d08228			stub_7f93aed08228_1:
d08228 fec1			inc	cl
d0822a			stub_7f93aed08228_0:
d0822a e80bee48ff		call	do_callback_fn_handler
d0822f 7181d20200000000
(obj= #(#<procedure #103>))
------------------------------------------------------------------------
d08218				bits 64
d08218			stub_7f93aed08218_1:
d08218 fec1			inc	cl
d0821a			stub_7f93aed08218_0:
d0821a e81bee48ff		call	do_callback_fn_handler
d0821f b191d20200000000
(obj= #(#<procedure #104>))
------------------------------------------------------------------------
d08208				bits 64
d08208			stub_7f93aed08208_1:
d08208 fec1			inc	cl
d0820a			stub_7f93aed08208_0:
d0820a e82bee48ff		call	do_callback_fn_handler
d0820f f1a1d20200000000
(obj= #(#<procedure #105>))
------------------------------------------------------------------------
d081f8				bits 64
d081f8			stub_7f93aed081f8_1:
d081f8 fec1			inc	cl
d081fa			stub_7f93aed081f8_0:
d081fa e83bee48ff		call	do_callback_fn_handler
d081ff 31b2d20200000000
(obj= #(#<procedure #106>))
------------------------------------------------------------------------
d081e8				bits 64
d081e8			stub_7f93aed081e8_1:
d081e8 fec1			inc	cl
d081ea			stub_7f93aed081e8_0:
d081ea e84bee48ff		call	do_callback_fn_handler
d081ef 71c2d20200000000
(obj= #(#<procedure #107>))
------------------------------------------------------------------------
d081d8				bits 64
d081d8			stub_7f93aed081d8_1:
d081d8 fec1			inc	cl
d081da			stub_7f93aed081d8_0:
d081da e85bee48ff		call	do_callback_fn_handler
d081df 31d3f20200000000
(obj= #(#<procedure #108>))
------------------------------------------------------------------------
d081c8				bits 64
d081c8			stub_7f93aed081c8_1:
d081c8 fec1			inc	cl
d081ca			stub_7f93aed081c8_0:
d081ca e86bee48ff		call	do_callback_fn_handler
d081cf 71e3f20200000000
(obj= #(#<procedure #109>))
------------------------------------------------------------------------
d081b8				bits 64
d081b8			stub_7f93aed081b8_1:
d081b8 fec1			inc	cl
d081ba			stub_7f93aed081b8_0:
d081ba e87bee48ff		call	do_callback_fn_handler
d081bf b1f3f20200000000
(obj= #(#<procedure #110>))
------------------------------------------------------------------------
d081a8				bits 64
d081a8			stub_7f93aed081a8_1:
d081a8 fec1			inc	cl
d081aa			stub_7f93aed081a8_0:
d081aa e88bee48ff		call	do_callback_fn_handler
d081af f103f30200000000
(obj= #(#<procedure #111>))
------------------------------------------------------------------------
d08198				bits 64
d08198			stub_7f93aed08198_1:
d08198 fec1			inc	cl
d0819a			stub_7f93aed08198_0:
d0819a e89bee48ff		call	do_callback_fn_handler
d0819f 3114f30200000000
(obj= #(#<procedure #112>))
------------------------------------------------------------------------
d08188				bits 64
d08188			stub_7f93aed08188_1:
d08188 fec1			inc	cl
d0818a			stub_7f93aed08188_0:
d0818a e8abee48ff		call	do_callback_fn_handler
d0818f 7124f30200000000
(obj= #(#<procedure #113>))
------------------------------------------------------------------------
d08178				bits 64
d08178			stub_7f93aed08178_1:
d08178 fec1			inc	cl
d0817a			stub_7f93aed08178_0:
d0817a e8bbee48ff		call	do_callback_fn_handler
d0817f b134f30200000000
(obj= #(#<procedure #114>))
------------------------------------------------------------------------
d08168				bits 64
d08168			stub_7f93aed08168_1:
d08168 fec1			inc	cl
d0816a			stub_7f93aed08168_0:
d0816a e8cbee48ff		call	do_callback_fn_handler
d0816f f144f30200000000
(obj= #(#<procedure #115>))
------------------------------------------------------------------------
d08158				bits 64
d08158			stub_7f93aed08158_1:
d08158 fec1			inc	cl
d0815a			stub_7f93aed08158_0:
d0815a e8dbee48ff		call	do_callback_fn_handler
d0815f 3155f30200000000
(obj= #(#<procedure #116>))
------------------------------------------------------------------------
d08148				bits 64
d08148			stub_7f93aed08148_1:
d08148 fec1			inc	cl
d0814a			stub_7f93aed08148_0:
d0814a e8ebee48ff		call	do_callback_fn_handler
d0814f 7165f30200000000
(obj= #(#<procedure #117>))
------------------------------------------------------------------------
d08138				bits 64
d08138			stub_7f93aed08138_1:
d08138 fec1			inc	cl
d0813a			stub_7f93aed08138_0:
d0813a e8fbee48ff		call	do_callback_fn_handler
d0813f b175f30200000000
(obj= #(#<procedure #118>))
------------------------------------------------------------------------
d08128				bits 64
d08128			stub_7f93aed08128_0:
d08128 e83aef48ff		call	do_callback_cont_handler
d0812d f185f30200000000
(obj= #(#<procedure #119>))
------------------------------------------------------------------------
197172				bits 64
197172 9090		version1:
197174 48c7c0eeffffff		mov	rax,dword -18
19717b 498902			mov	[r10],rax
19717e			version2:
19717e 50			push	rax
19717f 53			push	rbx
197180 48b85000fcb0937f
197188 0000			mov	rax,140272306225232
19718a 488b18			mov	rbx,[rax]
19718d 48ffc3			inc	rbx
197190 488918			mov	[rax],rbx
197193 5b			pop	rbx
197194 58			pop	rax
197195 498d4424f0		lea	rax,[r12-16]
19719a 49bf0800fcb0937f
1971a2 0000			mov	r15,140272306225160
1971a4 493b4728			cmp	rax,[r15+40]
1971a8 7d38			jge	short alloc-ok1
1971aa 48c7c010000000		mov	rax,dword 16
1971b1 57			push	rdi
1971b2 56			push	rsi
1971b3 52			push	rdx
1971b4 51			push	rcx
1971b5 4150			push	r8
1971b7 4151			push	r9
1971b9 4152			push	r10
1971bb 4153			push	r11
1971bd 50			push	rax
1971be 4889e7			mov	rdi,rsp
1971c1 4883e4f0			and	rsp,byte -16
1971c5 4883ec08			sub	rsp,byte 8
1971c9 57			push	rdi
1971ca e8016f6d01		call	gc
1971cf 5c			pop	rsp
1971d0 4989c4			mov	r12,rax
1971d3 58			pop	rax
1971d4 415b			pop	r11
1971d6 415a			pop	r10
1971d8 4159			pop	r9
1971da 4158			pop	r8
1971dc 59			pop	rcx
1971dd 5a			pop	rdx
1971de 5e			pop	rsi
1971df 5f			pop	rdi
1971e0 eb04			jmp	short alloc-end1
1971e2			alloc-ok1:
1971e2 4983ec10			sub	r12,byte 16
1971e6			alloc-end1:
1971e6 48c7c076020000		mov	rax,dword 630
1971ed 49890424			mov	[r12],rax
1971f1 48c7c030883802		mov	rax,dword 37259312
1971f8 4989442408		mov	[r12+8],rax
1971fd 498d442401		lea	rax,[r12+1]
197202 50			push	rax
197203			version3:
197203 58			pop	rax
197204 498902			mov	[r10],rax
197207 6aee			push	qword byte -18
197209			version4:
197209 48c7c0eeffffff		mov	rax,dword -18
197210 49894208			mov	[r10+8],rax
197214			version5:
197214 50			push	rax
197215 53			push	rbx
197216 48b85000fcb0937f
19721e 0000			mov	rax,140272306225232
197220 488b18			mov	rbx,[rax]
197223 48ffc3			inc	rbx
197226 488918			mov	[rax],rbx
197229 5b			pop	rbx
19722a 58			pop	rax
19722b 498d4424f0		lea	rax,[r12-16]
197230 49bf0800fcb0937f
197238 0000			mov	r15,140272306225160
19723a 493b4728			cmp	rax,[r15+40]
19723e 7d38			jge	short alloc-ok2
197240 48c7c010000000		mov	rax,dword 16
197247 57			push	rdi
197248 56			push	rsi
197249 52			push	rdx
19724a 51			push	rcx
19724b 4150			push	r8
19724d 4151			push	r9
19724f 4152			push	r10
197251 4153			push	r11
197253 50			push	rax
197254 4889e7			mov	rdi,rsp
197257 4883e4f0			and	rsp,byte -16
19725b 4883ec08			sub	rsp,byte 8
19725f 57			push	rdi
197260 e86b6e6d01		call	gc
197265 5c			pop	rsp
197266 4989c4			mov	r12,rax
197269 58			pop	rax
19726a 415b			pop	r11
19726c 415a			pop	r10
19726e 4159			pop	r9
197270 4158			pop	r8
197272 59			pop	rcx
197273 5a			pop	rdx
197274 5e			pop	rsi
197275 5f			pop	rdi
197276 eb04			jmp	short alloc-end2
197278			alloc-ok2:
197278 4983ec10			sub	r12,byte 16
19727c			alloc-end2:
19727c 48c7c076020000		mov	rax,dword 630
197283 49890424			mov	[r12],rax
197287 48c7c020983802		mov	rax,dword 37263392
19728e 4989442408		mov	[r12+8],rax
197293 498d442401		lea	rax,[r12+1]
197298 50			push	rax
197299			version6:
197299 58			pop	rax
19729a 49894208			mov	[r10+8],rax
19729e 6aee			push	qword byte -18
1972a0			version7:
1972a0 48c7c0eeffffff		mov	rax,dword -18
1972a7 49894210			mov	[r10+16],rax
1972ab			version8:
1972ab 50			push	rax
1972ac 53			push	rbx
1972ad 48b85000fcb0937f
1972b5 0000			mov	rax,140272306225232
1972b7 488b18			mov	rbx,[rax]
1972ba 48ffc3			inc	rbx
1972bd 488918			mov	[rax],rbx
1972c0 5b			pop	rbx
1972c1 58			pop	rax
1972c2 498d4424f0		lea	rax,[r12-16]
1972c7 49bf0800fcb0937f
1972cf 0000			mov	r15,140272306225160
1972d1 493b4728			cmp	rax,[r15+40]
1972d5 7d38			jge	short alloc-ok3
1972d7 48c7c010000000		mov	rax,dword 16
1972de 57			push	rdi
1972df 56			push	rsi
1972e0 52			push	rdx
1972e1 51			push	rcx
1972e2 4150			push	r8
1972e4 4151			push	r9
1972e6 4152			push	r10
1972e8 4153			push	r11
1972ea 50			push	rax
1972eb 4889e7			mov	rdi,rsp
1972ee 4883e4f0			and	rsp,byte -16
1972f2 4883ec08			sub	rsp,byte 8
1972f6 57			push	rdi
1972f7 e8d46d6d01		call	gc
1972fc 5c			pop	rsp
1972fd 4989c4			mov	r12,rax
197300 58			pop	rax
197301 415b			pop	r11
197303 415a			pop	r10
197305 4159			pop	r9
197307 4158			pop	r8
197309 59			pop	rcx
19730a 5a			pop	rdx
19730b 5e			pop	rsi
19730c 5f			pop	rdi
19730d eb04			jmp	short alloc-end3
19730f			alloc-ok3:
19730f 4983ec10			sub	r12,byte 16
197313			alloc-end3:
197313 48c7c076020000		mov	rax,dword 630
19731a 49890424			mov	[r12],rax
19731e 48c7c010a83802		mov	rax,dword 37267472
197325 4989442408		mov	[r12+8],rax
19732a 498d442401		lea	rax,[r12+1]
19732f 50			push	rax
197330			version9:
197330 58			pop	rax
197331 49894210			mov	[r10+16],rax
197335 6aee			push	qword byte -18
197337			version10:
197337 48c7c0eeffffff		mov	rax,dword -18
19733e 49894218			mov	[r10+24],rax
197342			version11:
197342 50			push	rax
197343 53			push	rbx
197344 48b85000fcb0937f
19734c 0000			mov	rax,140272306225232
19734e 488b18			mov	rbx,[rax]
197351 48ffc3			inc	rbx
197354 488918			mov	[rax],rbx
197357 5b			pop	rbx
197358 58			pop	rax
197359 498d4424f0		lea	rax,[r12-16]
19735e 49bf0800fcb0937f
197366 0000			mov	r15,140272306225160
197368 493b4728			cmp	rax,[r15+40]
19736c 7d38			jge	short alloc-ok4
19736e 48c7c010000000		mov	rax,dword 16
197375 57			push	rdi
197376 56			push	rsi
197377 52			push	rdx
197378 51			push	rcx
197379 4150			push	r8
19737b 4151			push	r9
19737d 4152			push	r10
19737f 4153			push	r11
197381 50			push	rax
197382 4889e7			mov	rdi,rsp
197385 4883e4f0			and	rsp,byte -16
197389 4883ec08			sub	rsp,byte 8
19738d 57			push	rdi
19738e e83d6d6d01		call	gc
197393 5c			pop	rsp
197394 4989c4			mov	r12,rax
197397 58			pop	rax
197398 415b			pop	r11
19739a 415a			pop	r10
19739c 4159			pop	r9
19739e 4158			pop	r8
1973a0 59			pop	rcx
1973a1 5a			pop	rdx
1973a2 5e			pop	rsi
1973a3 5f			pop	rdi
1973a4 eb04			jmp	short alloc-end4
1973a6			alloc-ok4:
1973a6 4983ec10			sub	r12,byte 16
1973aa			alloc-end4:
1973aa 48c7c076020000		mov	rax,dword 630
1973b1 49890424			mov	[r12],rax
1973b5 48c7c000b83802		mov	rax,dword 37271552
1973bc 4989442408		mov	[r12+8],rax
1973c1 498d442401		lea	rax,[r12+1]
1973c6 50			push	rax
1973c7			version12:
1973c7 58			pop	rax
1973c8 49894218			mov	[r10+24],rax
1973cc 6aee			push	qword byte -18
1973ce			version13:
1973ce 48c7c0eeffffff		mov	rax,dword -18
1973d5 49894220			mov	[r10+32],rax
1973d9			version14:
1973d9 50			push	rax
1973da 53			push	rbx
1973db 48b85000fcb0937f
1973e3 0000			mov	rax,140272306225232
1973e5 488b18			mov	rbx,[rax]
1973e8 48ffc3			inc	rbx
1973eb 488918			mov	[rax],rbx
1973ee 5b			pop	rbx
1973ef 58			pop	rax
1973f0 498d4424f0		lea	rax,[r12-16]
1973f5 49bf0800fcb0937f
1973fd 0000			mov	r15,140272306225160
1973ff 493b4728			cmp	rax,[r15+40]
197403 7d38			jge	short alloc-ok5
197405 48c7c010000000		mov	rax,dword 16
19740c 57			push	rdi
19740d 56			push	rsi
19740e 52			push	rdx
19740f 51			push	rcx
197410 4150			push	r8
197412 4151			push	r9
197414 4152			push	r10
197416 4153			push	r11
197418 50			push	rax
197419 4889e7			mov	rdi,rsp
19741c 4883e4f0			and	rsp,byte -16
197420 4883ec08			sub	rsp,byte 8
197424 57			push	rdi
197425 e8a66c6d01		call	gc
19742a 5c			pop	rsp
19742b 4989c4			mov	r12,rax
19742e 58			pop	rax
19742f 415b			pop	r11
197431 415a			pop	r10
197433 4159			pop	r9
197435 4158			pop	r8
197437 59			pop	rcx
197438 5a			pop	rdx
197439 5e			pop	rsi
19743a 5f			pop	rdi
19743b eb04			jmp	short alloc-end5
19743d			alloc-ok5:
19743d 4983ec10			sub	r12,byte 16
197441			alloc-end5:
197441 48c7c076020000		mov	rax,dword 630
197448 49890424			mov	[r12],rax
19744c 48c7c0f0c73802		mov	rax,dword 37275632
197453 4989442408		mov	[r12+8],rax
197458 498d442401		lea	rax,[r12+1]
19745d 50			push	rax
19745e			version15:
19745e 58			pop	rax
19745f 49894220			mov	[r10+32],rax
197463 6aee			push	qword byte -18
197465			version16:
197465 48c7c0eeffffff		mov	rax,dword -18
19746c 49894228			mov	[r10+40],rax
197470			version17:
197470 50			push	rax
197471 53			push	rbx
197472 48b85000fcb0937f
19747a 0000			mov	rax,140272306225232
19747c 488b18			mov	rbx,[rax]
19747f 48ffc3			inc	rbx
197482 488918			mov	[rax],rbx
197485 5b			pop	rbx
197486 58			pop	rax
197487 498d4424f0		lea	rax,[r12-16]
19748c 49bf0800fcb0937f
197494 0000			mov	r15,140272306225160
197496 493b4728			cmp	rax,[r15+40]
19749a 7d38			jge	short alloc-ok6
19749c 48c7c010000000		mov	rax,dword 16
1974a3 57			push	rdi
1974a4 56			push	rsi
1974a5 52			push	rdx
1974a6 51			push	rcx
1974a7 4150			push	r8
1974a9 4151			push	r9
1974ab 4152			push	r10
1974ad 4153			push	r11
1974af 50			push	rax
1974b0 4889e7			mov	rdi,rsp
1974b3 4883e4f0			and	rsp,byte -16
1974b7 4883ec08			sub	rsp,byte 8
1974bb 57			push	rdi
1974bc e80f6c6d01		call	gc
1974c1 5c			pop	rsp
1974c2 4989c4			mov	r12,rax
1974c5 58			pop	rax
1974c6 415b			pop	r11
1974c8 415a			pop	r10
1974ca 4159			pop	r9
1974cc 4158			pop	r8
1974ce 59			pop	rcx
1974cf 5a			pop	rdx
1974d0 5e			pop	rsi
1974d1 5f			pop	rdi
1974d2 eb04			jmp	short alloc-end6
1974d4			alloc-ok6:
1974d4 4983ec10			sub	r12,byte 16
1974d8			alloc-end6:
1974d8 48c7c076020000		mov	rax,dword 630
1974df 49890424			mov	[r12],rax
1974e3 48c7c0e0d73802		mov	rax,dword 37279712
1974ea 4989442408		mov	[r12+8],rax
1974ef 498d442401		lea	rax,[r12+1]
1974f4 50			push	rax
1974f5			version18:
1974f5 58			pop	rax
1974f6 49894228			mov	[r10+40],rax
1974fa 6aee			push	qword byte -18
1974fc			version19:
1974fc 48c7c0eeffffff		mov	rax,dword -18
197503 49894230			mov	[r10+48],rax
197507			version20:
197507 50			push	rax
197508 53			push	rbx
197509 48b85000fcb0937f
197511 0000			mov	rax,140272306225232
197513 488b18			mov	rbx,[rax]
197516 48ffc3			inc	rbx
197519 488918			mov	[rax],rbx
19751c 5b			pop	rbx
19751d 58			pop	rax
19751e 498d4424f0		lea	rax,[r12-16]
197523 49bf0800fcb0937f
19752b 0000			mov	r15,140272306225160
19752d 493b4728			cmp	rax,[r15+40]
197531 7d38			jge	short alloc-ok7
197533 48c7c010000000		mov	rax,dword 16
19753a 57			push	rdi
19753b 56			push	rsi
19753c 52			push	rdx
19753d 51			push	rcx
19753e 4150			push	r8
197540 4151			push	r9
197542 4152			push	r10
197544 4153			push	r11
197546 50			push	rax
197547 4889e7			mov	rdi,rsp
19754a 4883e4f0			and	rsp,byte -16
19754e 4883ec08			sub	rsp,byte 8
197552 57			push	rdi
197553 e8786b6d01		call	gc
197558 5c			pop	rsp
197559 4989c4			mov	r12,rax
19755c 58			pop	rax
19755d 415b			pop	r11
19755f 415a			pop	r10
197561 4159			pop	r9
197563 4158			pop	r8
197565 59			pop	rcx
197566 5a			pop	rdx
197567 5e			pop	rsi
197568 5f			pop	rdi
197569 eb04			jmp	short alloc-end7
19756b			alloc-ok7:
19756b 4983ec10			sub	r12,byte 16
19756f			alloc-end7:
19756f 48c7c076020000		mov	rax,dword 630
197576 49890424			mov	[r12],rax
19757a 48c7c0d0e73802		mov	rax,dword 37283792
197581 4989442408		mov	[r12+8],rax
197586 498d442401		lea	rax,[r12+1]
19758b 50			push	rax
19758c			version21:
19758c 58			pop	rax
19758d 49894230			mov	[r10+48],rax
197591 6aee			push	qword byte -18
197593			version22:
197593 48c7c0eeffffff		mov	rax,dword -18
19759a 49894238			mov	[r10+56],rax
19759e			version23:
19759e 50			push	rax
19759f 53			push	rbx
1975a0 48b85000fcb0937f
1975a8 0000			mov	rax,140272306225232
1975aa 488b18			mov	rbx,[rax]
1975ad 48ffc3			inc	rbx
1975b0 488918			mov	[rax],rbx
1975b3 5b			pop	rbx
1975b4 58			pop	rax
1975b5 498d4424f0		lea	rax,[r12-16]
1975ba 49bf0800fcb0937f
1975c2 0000			mov	r15,140272306225160
1975c4 493b4728			cmp	rax,[r15+40]
1975c8 7d38			jge	short alloc-ok8
1975ca 48c7c010000000		mov	rax,dword 16
1975d1 57			push	rdi
1975d2 56			push	rsi
1975d3 52			push	rdx
1975d4 51			push	rcx
1975d5 4150			push	r8
1975d7 4151			push	r9
1975d9 4152			push	r10
1975db 4153			push	r11
1975dd 50			push	rax
1975de 4889e7			mov	rdi,rsp
1975e1 4883e4f0			and	rsp,byte -16
1975e5 4883ec08			sub	rsp,byte 8
1975e9 57			push	rdi
1975ea e8e16a6d01		call	gc
1975ef 5c			pop	rsp
1975f0 4989c4			mov	r12,rax
1975f3 58			pop	rax
1975f4 415b			pop	r11
1975f6 415a			pop	r10
1975f8 4159			pop	r9
1975fa 4158			pop	r8
1975fc 59			pop	rcx
1975fd 5a			pop	rdx
1975fe 5e			pop	rsi
1975ff 5f			pop	rdi
197600 eb04			jmp	short alloc-end8
197602			alloc-ok8:
197602 4983ec10			sub	r12,byte 16
197606			alloc-end8:
197606 48c7c076020000		mov	rax,dword 630
19760d 49890424			mov	[r12],rax
197611 48c7c0c0f73802		mov	rax,dword 37287872
197618 4989442408		mov	[r12+8],rax
19761d 498d442401		lea	rax,[r12+1]
197622 50			push	rax
197623			version24:
197623 58			pop	rax
197624 49894238			mov	[r10+56],rax
197628 6aee			push	qword byte -18
19762a			version25:
19762a 48c7c0eeffffff		mov	rax,dword -18
197631 49894240			mov	[r10+64],rax
197635			version26:
197635 50			push	rax
197636 53			push	rbx
197637 48b85000fcb0937f
19763f 0000			mov	rax,140272306225232
197641 488b18			mov	rbx,[rax]
197644 48ffc3			inc	rbx
197647 488918			mov	[rax],rbx
19764a 5b			pop	rbx
19764b 58			pop	rax
19764c 498d4424f0		lea	rax,[r12-16]
197651 49bf0800fcb0937f
197659 0000			mov	r15,140272306225160
19765b 493b4728			cmp	rax,[r15+40]
19765f 7d38			jge	short alloc-ok9
197661 48c7c010000000		mov	rax,dword 16
197668 57			push	rdi
197669 56			push	rsi
19766a 52			push	rdx
19766b 51			push	rcx
19766c 4150			push	r8
19766e 4151			push	r9
197670 4152			push	r10
197672 4153			push	r11
197674 50			push	rax
197675 4889e7			mov	rdi,rsp
197678 4883e4f0			and	rsp,byte -16
19767c 4883ec08			sub	rsp,byte 8
197680 57			push	rdi
197681 e84a6a6d01		call	gc
197686 5c			pop	rsp
197687 4989c4			mov	r12,rax
19768a 58			pop	rax
19768b 415b			pop	r11
19768d 415a			pop	r10
19768f 4159			pop	r9
197691 4158			pop	r8
197693 59			pop	rcx
197694 5a			pop	rdx
197695 5e			pop	rsi
197696 5f			pop	rdi
197697 eb04			jmp	short alloc-end9
197699			alloc-ok9:
197699 4983ec10			sub	r12,byte 16
19769d			alloc-end9:
19769d 48c7c076020000		mov	rax,dword 630
1976a4 49890424			mov	[r12],rax
1976a8 48c7c0b0073902		mov	rax,dword 37291952
1976af 4989442408		mov	[r12+8],rax
1976b4 498d442401		lea	rax,[r12+1]
1976b9 50			push	rax
1976ba			version27:
1976ba 58			pop	rax
1976bb 49894240			mov	[r10+64],rax
1976bf 6aee			push	qword byte -18
1976c1			version28:
1976c1 48c7c0eeffffff		mov	rax,dword -18
1976c8 49894248			mov	[r10+72],rax
1976cc			version29:
1976cc 50			push	rax
1976cd 53			push	rbx
1976ce 48b85000fcb0937f
1976d6 0000			mov	rax,140272306225232
1976d8 488b18			mov	rbx,[rax]
1976db 48ffc3			inc	rbx
1976de 488918			mov	[rax],rbx
1976e1 5b			pop	rbx
1976e2 58			pop	rax
1976e3 498d4424f0		lea	rax,[r12-16]
1976e8 49bf0800fcb0937f
1976f0 0000			mov	r15,140272306225160
1976f2 493b4728			cmp	rax,[r15+40]
1976f6 7d38			jge	short alloc-ok10
1976f8 48c7c010000000		mov	rax,dword 16
1976ff 57			push	rdi
197700 56			push	rsi
197701 52			push	rdx
197702 51			push	rcx
197703 4150			push	r8
197705 4151			push	r9
197707 4152			push	r10
197709 4153			push	r11
19770b 50			push	rax
19770c 4889e7			mov	rdi,rsp
19770f 4883e4f0			and	rsp,byte -16
197713 4883ec08			sub	rsp,byte 8
197717 57			push	rdi
197718 e8b3696d01		call	gc
19771d 5c			pop	rsp
19771e 4989c4			mov	r12,rax
197721 58			pop	rax
197722 415b			pop	r11
197724 415a			pop	r10
197726 4159			pop	r9
197728 4158			pop	r8
19772a 59			pop	rcx
19772b 5a			pop	rdx
19772c 5e			pop	rsi
19772d 5f			pop	rdi
19772e eb04			jmp	short alloc-end10
197730			alloc-ok10:
197730 4983ec10			sub	r12,byte 16
197734			alloc-end10:
197734 48c7c076020000		mov	rax,dword 630
19773b 49890424			mov	[r12],rax
19773f 48c7c0a0173902		mov	rax,dword 37296032
197746 4989442408		mov	[r12+8],rax
19774b 498d442401		lea	rax,[r12+1]
197750 50			push	rax
197751			version30:
197751 58			pop	rax
197752 49894248			mov	[r10+72],rax
197756 6aee			push	qword byte -18
197758			version31:
197758 48c7c0eeffffff		mov	rax,dword -18
19775f 49894250			mov	[r10+80],rax
197763			version32:
197763 50			push	rax
197764 53			push	rbx
197765 48b85000fcb0937f
19776d 0000			mov	rax,140272306225232
19776f 488b18			mov	rbx,[rax]
197772 48ffc3			inc	rbx
197775 488918			mov	[rax],rbx
197778 5b			pop	rbx
197779 58			pop	rax
19777a 498d4424f0		lea	rax,[r12-16]
19777f 49bf0800fcb0937f
197787 0000			mov	r15,140272306225160
197789 493b4728			cmp	rax,[r15+40]
19778d 7d38			jge	short alloc-ok11
19778f 48c7c010000000		mov	rax,dword 16
197796 57			push	rdi
197797 56			push	rsi
197798 52			push	rdx
197799 51			push	rcx
19779a 4150			push	r8
19779c 4151			push	r9
19779e 4152			push	r10
1977a0 4153			push	r11
1977a2 50			push	rax
1977a3 4889e7			mov	rdi,rsp
1977a6 4883e4f0			and	rsp,byte -16
1977aa 4883ec08			sub	rsp,byte 8
1977ae 57			push	rdi
1977af e81c696d01		call	gc
1977b4 5c			pop	rsp
1977b5 4989c4			mov	r12,rax
1977b8 58			pop	rax
1977b9 415b			pop	r11
1977bb 415a			pop	r10
1977bd 4159			pop	r9
1977bf 4158			pop	r8
1977c1 59			pop	rcx
1977c2 5a			pop	rdx
1977c3 5e			pop	rsi
1977c4 5f			pop	rdi
1977c5 eb04			jmp	short alloc-end11
1977c7			alloc-ok11:
1977c7 4983ec10			sub	r12,byte 16
1977cb			alloc-end11:
1977cb 48c7c076020000		mov	rax,dword 630
1977d2 49890424			mov	[r12],rax
1977d6 48c7c090273902		mov	rax,dword 37300112
1977dd 4989442408		mov	[r12+8],rax
1977e2 498d442401		lea	rax,[r12+1]
1977e7 50			push	rax
1977e8			version33:
1977e8 58			pop	rax
1977e9 49894250			mov	[r10+80],rax
1977ed 6aee			push	qword byte -18
1977ef			version34:
1977ef 48c7c0eeffffff		mov	rax,dword -18
1977f6 49894258			mov	[r10+88],rax
1977fa			version35:
1977fa 50			push	rax
1977fb 53			push	rbx
1977fc 48b85000fcb0937f
197804 0000			mov	rax,140272306225232
197806 488b18			mov	rbx,[rax]
197809 48ffc3			inc	rbx
19780c 488918			mov	[rax],rbx
19780f 5b			pop	rbx
197810 58			pop	rax
197811 498d4424f0		lea	rax,[r12-16]
197816 49bf0800fcb0937f
19781e 0000			mov	r15,140272306225160
197820 493b4728			cmp	rax,[r15+40]
197824 7d38			jge	short alloc-ok12
197826 48c7c010000000		mov	rax,dword 16
19782d 57			push	rdi
19782e 56			push	rsi
19782f 52			push	rdx
197830 51			push	rcx
197831 4150			push	r8
197833 4151			push	r9
197835 4152			push	r10
197837 4153			push	r11
197839 50			push	rax
19783a 4889e7			mov	rdi,rsp
19783d 4883e4f0			and	rsp,byte -16
197841 4883ec08			sub	rsp,byte 8
197845 57			push	rdi
197846 e885686d01		call	gc
19784b 5c			pop	rsp
19784c 4989c4			mov	r12,rax
19784f 58			pop	rax
197850 415b			pop	r11
197852 415a			pop	r10
197854 4159			pop	r9
197856 4158			pop	r8
197858 59			pop	rcx
197859 5a			pop	rdx
19785a 5e			pop	rsi
19785b 5f			pop	rdi
19785c eb04			jmp	short alloc-end12
19785e			alloc-ok12:
19785e 4983ec10			sub	r12,byte 16
197862			alloc-end12:
197862 48c7c076020000		mov	rax,dword 630
197869 49890424			mov	[r12],rax
19786d 48c7c010e67b02		mov	rax,dword 41674256
197874 4989442408		mov	[r12+8],rax
197879 498d442401		lea	rax,[r12+1]
19787e 50			push	rax
19787f			version36:
19787f 58			pop	rax
197880 49894258			mov	[r10+88],rax
197884 6aee			push	qword byte -18
197886			version37:
197886 48c7c0eeffffff		mov	rax,dword -18
19788d 49894260			mov	[r10+96],rax
197891			version38:
197891 50			push	rax
197892 53			push	rbx
197893 48b85000fcb0937f
19789b 0000			mov	rax,140272306225232
19789d 488b18			mov	rbx,[rax]
1978a0 48ffc3			inc	rbx
1978a3 488918			mov	[rax],rbx
1978a6 5b			pop	rbx
1978a7 58			pop	rax
1978a8 498d4424f0		lea	rax,[r12-16]
1978ad 49bf0800fcb0937f
1978b5 0000			mov	r15,140272306225160
1978b7 493b4728			cmp	rax,[r15+40]
1978bb 7d38			jge	short alloc-ok13
1978bd 48c7c010000000		mov	rax,dword 16
1978c4 57			push	rdi
1978c5 56			push	rsi
1978c6 52			push	rdx
1978c7 51			push	rcx
1978c8 4150			push	r8
1978ca 4151			push	r9
1978cc 4152			push	r10
1978ce 4153			push	r11
1978d0 50			push	rax
1978d1 4889e7			mov	rdi,rsp
1978d4 4883e4f0			and	rsp,byte -16
1978d8 4883ec08			sub	rsp,byte 8
1978dc 57			push	rdi
1978dd e8ee676d01		call	gc
1978e2 5c			pop	rsp
1978e3 4989c4			mov	r12,rax
1978e6 58			pop	rax
1978e7 415b			pop	r11
1978e9 415a			pop	r10
1978eb 4159			pop	r9
1978ed 4158			pop	r8
1978ef 59			pop	rcx
1978f0 5a			pop	rdx
1978f1 5e			pop	rsi
1978f2 5f			pop	rdi
1978f3 eb04			jmp	short alloc-end13
1978f5			alloc-ok13:
1978f5 4983ec10			sub	r12,byte 16
1978f9			alloc-end13:
1978f9 48c7c076020000		mov	rax,dword 630
197900 49890424			mov	[r12],rax
197904 48c7c000f67b02		mov	rax,dword 41678336
19790b 4989442408		mov	[r12+8],rax
197910 498d442401		lea	rax,[r12+1]
197915 50			push	rax
197916			version39:
197916 58			pop	rax
197917 49894260			mov	[r10+96],rax
19791b 6aee			push	qword byte -18
19791d			version40:
19791d 48c7c0eeffffff		mov	rax,dword -18
197924 49894268			mov	[r10+104],rax
197928			version41:
197928 50			push	rax
197929 53			push	rbx
19792a 48b85000fcb0937f
197932 0000			mov	rax,140272306225232
197934 488b18			mov	rbx,[rax]
197937 48ffc3			inc	rbx
19793a 488918			mov	[rax],rbx
19793d 5b			pop	rbx
19793e 58			pop	rax
19793f 498d4424f0		lea	rax,[r12-16]
197944 49bf0800fcb0937f
19794c 0000			mov	r15,140272306225160
19794e 493b4728			cmp	rax,[r15+40]
197952 7d38			jge	short alloc-ok14
197954 48c7c010000000		mov	rax,dword 16
19795b 57			push	rdi
19795c 56			push	rsi
19795d 52			push	rdx
19795e 51			push	rcx
19795f 4150			push	r8
197961 4151			push	r9
197963 4152			push	r10
197965 4153			push	r11
197967 50			push	rax
197968 4889e7			mov	rdi,rsp
19796b 4883e4f0			and	rsp,byte -16
19796f 4883ec08			sub	rsp,byte 8
197973 57			push	rdi
197974 e857676d01		call	gc
197979 5c			pop	rsp
19797a 4989c4			mov	r12,rax
19797d 58			pop	rax
19797e 415b			pop	r11
197980 415a			pop	r10
197982 4159			pop	r9
197984 4158			pop	r8
197986 59			pop	rcx
197987 5a			pop	rdx
197988 5e			pop	rsi
197989 5f			pop	rdi
19798a eb04			jmp	short alloc-end14
19798c			alloc-ok14:
19798c 4983ec10			sub	r12,byte 16
197990			alloc-end14:
197990 48c7c076020000		mov	rax,dword 630
197997 49890424			mov	[r12],rax
19799b 48c7c0f0057c02		mov	rax,dword 41682416
1979a2 4989442408		mov	[r12+8],rax
1979a7 498d442401		lea	rax,[r12+1]
1979ac 50			push	rax
1979ad			version42:
1979ad 58			pop	rax
1979ae 49894268			mov	[r10+104],rax
1979b2 6aee			push	qword byte -18
1979b4			version43:
1979b4 48c7c0eeffffff		mov	rax,dword -18
1979bb 49894270			mov	[r10+112],rax
1979bf			version44:
1979bf 50			push	rax
1979c0 53			push	rbx
1979c1 48b85000fcb0937f
1979c9 0000			mov	rax,140272306225232
1979cb 488b18			mov	rbx,[rax]
1979ce 48ffc3			inc	rbx
1979d1 488918			mov	[rax],rbx
1979d4 5b			pop	rbx
1979d5 58			pop	rax
1979d6 498d4424f0		lea	rax,[r12-16]
1979db 49bf0800fcb0937f
1979e3 0000			mov	r15,140272306225160
1979e5 493b4728			cmp	rax,[r15+40]
1979e9 7d38			jge	short alloc-ok15
1979eb 48c7c010000000		mov	rax,dword 16
1979f2 57			push	rdi
1979f3 56			push	rsi
1979f4 52			push	rdx
1979f5 51			push	rcx
1979f6 4150			push	r8
1979f8 4151			push	r9
1979fa 4152			push	r10
1979fc 4153			push	r11
1979fe 50			push	rax
1979ff 4889e7			mov	rdi,rsp
197a02 4883e4f0			and	rsp,byte -16
197a06 4883ec08			sub	rsp,byte 8
197a0a 57			push	rdi
197a0b e8c0666d01		call	gc
197a10 5c			pop	rsp
197a11 4989c4			mov	r12,rax
197a14 58			pop	rax
197a15 415b			pop	r11
197a17 415a			pop	r10
197a19 4159			pop	r9
197a1b 4158			pop	r8
197a1d 59			pop	rcx
197a1e 5a			pop	rdx
197a1f 5e			pop	rsi
197a20 5f			pop	rdi
197a21 eb04			jmp	short alloc-end15
197a23			alloc-ok15:
197a23 4983ec10			sub	r12,byte 16
197a27			alloc-end15:
197a27 48c7c076020000		mov	rax,dword 630
197a2e 49890424			mov	[r12],rax
197a32 48c7c0e0157c02		mov	rax,dword 41686496
197a39 4989442408		mov	[r12+8],rax
197a3e 498d442401		lea	rax,[r12+1]
197a43 50			push	rax
197a44			version45:
197a44 58			pop	rax
197a45 49894270			mov	[r10+112],rax
197a49 6aee			push	qword byte -18
197a4b			version46:
197a4b 48c7c0eeffffff		mov	rax,dword -18
197a52 49894278			mov	[r10+120],rax
197a56			version47:
197a56 50			push	rax
197a57 53			push	rbx
197a58 48b85000fcb0937f
197a60 0000			mov	rax,140272306225232
197a62 488b18			mov	rbx,[rax]
197a65 48ffc3			inc	rbx
197a68 488918			mov	[rax],rbx
197a6b 5b			pop	rbx
197a6c 58			pop	rax
197a6d 498d4424f0		lea	rax,[r12-16]
197a72 49bf0800fcb0937f
197a7a 0000			mov	r15,140272306225160
197a7c 493b4728			cmp	rax,[r15+40]
197a80 7d38			jge	short alloc-ok16
197a82 48c7c010000000		mov	rax,dword 16
197a89 57			push	rdi
197a8a 56			push	rsi
197a8b 52			push	rdx
197a8c 51			push	rcx
197a8d 4150			push	r8
197a8f 4151			push	r9
197a91 4152			push	r10
197a93 4153			push	r11
197a95 50			push	rax
197a96 4889e7			mov	rdi,rsp
197a99 4883e4f0			and	rsp,byte -16
197a9d 4883ec08			sub	rsp,byte 8
197aa1 57			push	rdi
197aa2 e829666d01		call	gc
197aa7 5c			pop	rsp
197aa8 4989c4			mov	r12,rax
197aab 58			pop	rax
197aac 415b			pop	r11
197aae 415a			pop	r10
197ab0 4159			pop	r9
197ab2 4158			pop	r8
197ab4 59			pop	rcx
197ab5 5a			pop	rdx
197ab6 5e			pop	rsi
197ab7 5f			pop	rdi
197ab8 eb04			jmp	short alloc-end16
197aba			alloc-ok16:
197aba 4983ec10			sub	r12,byte 16
197abe			alloc-end16:
197abe 48c7c076020000		mov	rax,dword 630
197ac5 49890424			mov	[r12],rax
197ac9 48c7c0d0257c02		mov	rax,dword 41690576
197ad0 4989442408		mov	[r12+8],rax
197ad5 498d442401		lea	rax,[r12+1]
197ada 50			push	rax
197adb			version48:
197adb 58			pop	rax
197adc 49894278			mov	[r10+120],rax
197ae0 6aee			push	qword byte -18
197ae2			version49:
197ae2 48c7c0eeffffff		mov	rax,dword -18
197ae9 49898280000000		mov	[r10+128],rax
197af0			version50:
197af0 50			push	rax
197af1 53			push	rbx
197af2 48b85000fcb0937f
197afa 0000			mov	rax,140272306225232
197afc 488b18			mov	rbx,[rax]
197aff 48ffc3			inc	rbx
197b02 488918			mov	[rax],rbx
197b05 5b			pop	rbx
197b06 58			pop	rax
197b07 498d4424f0		lea	rax,[r12-16]
197b0c 49bf0800fcb0937f
197b14 0000			mov	r15,140272306225160
197b16 493b4728			cmp	rax,[r15+40]
197b1a 7d38			jge	short alloc-ok17
197b1c 48c7c010000000		mov	rax,dword 16
197b23 57			push	rdi
197b24 56			push	rsi
197b25 52			push	rdx
197b26 51			push	rcx
197b27 4150			push	r8
197b29 4151			push	r9
197b2b 4152			push	r10
197b2d 4153			push	r11
197b2f 50			push	rax
197b30 4889e7			mov	rdi,rsp
197b33 4883e4f0			and	rsp,byte -16
197b37 4883ec08			sub	rsp,byte 8
197b3b 57			push	rdi
197b3c e88f656d01		call	gc
197b41 5c			pop	rsp
197b42 4989c4			mov	r12,rax
197b45 58			pop	rax
197b46 415b			pop	r11
197b48 415a			pop	r10
197b4a 4159			pop	r9
197b4c 4158			pop	r8
197b4e 59			pop	rcx
197b4f 5a			pop	rdx
197b50 5e			pop	rsi
197b51 5f			pop	rdi
197b52 eb04			jmp	short alloc-end17
197b54			alloc-ok17:
197b54 4983ec10			sub	r12,byte 16
197b58			alloc-end17:
197b58 48c7c076020000		mov	rax,dword 630
197b5f 49890424			mov	[r12],rax
197b63 48c7c0c0357c02		mov	rax,dword 41694656
197b6a 4989442408		mov	[r12+8],rax
197b6f 498d442401		lea	rax,[r12+1]
197b74 50			push	rax
197b75			version51:
197b75 58			pop	rax
197b76 49898280000000		mov	[r10+128],rax
197b7d 6aee			push	qword byte -18
197b7f			version52:
197b7f 48c7c0eeffffff		mov	rax,dword -18
197b86 49898288000000		mov	[r10+136],rax
197b8d			version53:
197b8d 50			push	rax
197b8e 53			push	rbx
197b8f 48b85000fcb0937f
197b97 0000			mov	rax,140272306225232
197b99 488b18			mov	rbx,[rax]
197b9c 48ffc3			inc	rbx
197b9f 488918			mov	[rax],rbx
197ba2 5b			pop	rbx
197ba3 58			pop	rax
197ba4 498d4424f0		lea	rax,[r12-16]
197ba9 49bf0800fcb0937f
197bb1 0000			mov	r15,140272306225160
197bb3 493b4728			cmp	rax,[r15+40]
197bb7 7d38			jge	short alloc-ok18
197bb9 48c7c010000000		mov	rax,dword 16
197bc0 57			push	rdi
197bc1 56			push	rsi
197bc2 52			push	rdx
197bc3 51			push	rcx
197bc4 4150			push	r8
197bc6 4151			push	r9
197bc8 4152			push	r10
197bca 4153			push	r11
197bcc 50			push	rax
197bcd 4889e7			mov	rdi,rsp
197bd0 4883e4f0			and	rsp,byte -16
197bd4 4883ec08			sub	rsp,byte 8
197bd8 57			push	rdi
197bd9 e8f2646d01		call	gc
197bde 5c			pop	rsp
197bdf 4989c4			mov	r12,rax
197be2 58			pop	rax
197be3 415b			pop	r11
197be5 415a			pop	r10
197be7 4159			pop	r9
197be9 4158			pop	r8
197beb 59			pop	rcx
197bec 5a			pop	rdx
197bed 5e			pop	rsi
197bee 5f			pop	rdi
197bef eb04			jmp	short alloc-end18
197bf1			alloc-ok18:
197bf1 4983ec10			sub	r12,byte 16
197bf5			alloc-end18:
197bf5 48c7c076020000		mov	rax,dword 630
197bfc 49890424			mov	[r12],rax
197c00 48c7c0b0457c02		mov	rax,dword 41698736
197c07 4989442408		mov	[r12+8],rax
197c0c 498d442401		lea	rax,[r12+1]
197c11 50			push	rax
197c12			version54:
197c12 58			pop	rax
197c13 49898288000000		mov	[r10+136],rax
197c1a 6aee			push	qword byte -18
197c1c			version55:
197c1c 48c7c0eeffffff		mov	rax,dword -18
197c23 49898290000000		mov	[r10+144],rax
197c2a			version56:
197c2a 50			push	rax
197c2b 53			push	rbx
197c2c 48b85000fcb0937f
197c34 0000			mov	rax,140272306225232
197c36 488b18			mov	rbx,[rax]
197c39 48ffc3			inc	rbx
197c3c 488918			mov	[rax],rbx
197c3f 5b			pop	rbx
197c40 58			pop	rax
197c41 498d4424f0		lea	rax,[r12-16]
197c46 49bf0800fcb0937f
197c4e 0000			mov	r15,140272306225160
197c50 493b4728			cmp	rax,[r15+40]
197c54 7d38			jge	short alloc-ok19
197c56 48c7c010000000		mov	rax,dword 16
197c5d 57			push	rdi
197c5e 56			push	rsi
197c5f 52			push	rdx
197c60 51			push	rcx
197c61 4150			push	r8
197c63 4151			push	r9
197c65 4152			push	r10
197c67 4153			push	r11
197c69 50			push	rax
197c6a 4889e7			mov	rdi,rsp
197c6d 4883e4f0			and	rsp,byte -16
197c71 4883ec08			sub	rsp,byte 8
197c75 57			push	rdi
197c76 e855646d01		call	gc
197c7b 5c			pop	rsp
197c7c 4989c4			mov	r12,rax
197c7f 58			pop	rax
197c80 415b			pop	r11
197c82 415a			pop	r10
197c84 4159			pop	r9
197c86 4158			pop	r8
197c88 59			pop	rcx
197c89 5a			pop	rdx
197c8a 5e			pop	rsi
197c8b 5f			pop	rdi
197c8c eb04			jmp	short alloc-end19
197c8e			alloc-ok19:
197c8e 4983ec10			sub	r12,byte 16
197c92			alloc-end19:
197c92 48c7c076020000		mov	rax,dword 630
197c99 49890424			mov	[r12],rax
197c9d 48c7c0a0557c02		mov	rax,dword 41702816
197ca4 4989442408		mov	[r12+8],rax
197ca9 498d442401		lea	rax,[r12+1]
197cae 50			push	rax
197caf			version57:
197caf 58			pop	rax
197cb0 49898290000000		mov	[r10+144],rax
197cb7 6aee			push	qword byte -18
197cb9			version58:
197cb9 48c7c0eeffffff		mov	rax,dword -18
197cc0 49898298000000		mov	[r10+152],rax
197cc7			version59:
197cc7 50			push	rax
197cc8 53			push	rbx
197cc9 48b85000fcb0937f
197cd1 0000			mov	rax,140272306225232
197cd3 488b18			mov	rbx,[rax]
197cd6 48ffc3			inc	rbx
197cd9 488918			mov	[rax],rbx
197cdc 5b			pop	rbx
197cdd 58			pop	rax
197cde 498d4424f0		lea	rax,[r12-16]
197ce3 49bf0800fcb0937f
197ceb 0000			mov	r15,140272306225160
197ced 493b4728			cmp	rax,[r15+40]
197cf1 7d38			jge	short alloc-ok20
197cf3 48c7c010000000		mov	rax,dword 16
197cfa 57			push	rdi
197cfb 56			push	rsi
197cfc 52			push	rdx
197cfd 51			push	rcx
197cfe 4150			push	r8
197d00 4151			push	r9
197d02 4152			push	r10
197d04 4153			push	r11
197d06 50			push	rax
197d07 4889e7			mov	rdi,rsp
197d0a 4883e4f0			and	rsp,byte -16
197d0e 4883ec08			sub	rsp,byte 8
197d12 57			push	rdi
197d13 e8b8636d01		call	gc
197d18 5c			pop	rsp
197d19 4989c4			mov	r12,rax
197d1c 58			pop	rax
197d1d 415b			pop	r11
197d1f 415a			pop	r10
197d21 4159			pop	r9
197d23 4158			pop	r8
197d25 59			pop	rcx
197d26 5a			pop	rdx
197d27 5e			pop	rsi
197d28 5f			pop	rdi
197d29 eb04			jmp	short alloc-end20
197d2b			alloc-ok20:
197d2b 4983ec10			sub	r12,byte 16
197d2f			alloc-end20:
197d2f 48c7c076020000		mov	rax,dword 630
197d36 49890424			mov	[r12],rax
197d3a 48c7c090657c02		mov	rax,dword 41706896
197d41 4989442408		mov	[r12+8],rax
197d46 498d442401		lea	rax,[r12+1]
197d4b 50			push	rax
197d4c			version60:
197d4c 58			pop	rax
197d4d 49898298000000		mov	[r10+152],rax
197d54 6aee			push	qword byte -18
197d56			version61:
197d56 48c7c0eeffffff		mov	rax,dword -18
197d5d 498982a0000000		mov	[r10+160],rax
197d64			version62:
197d64 50			push	rax
197d65 53			push	rbx
197d66 48b85000fcb0937f
197d6e 0000			mov	rax,140272306225232
197d70 488b18			mov	rbx,[rax]
197d73 48ffc3			inc	rbx
197d76 488918			mov	[rax],rbx
197d79 5b			pop	rbx
197d7a 58			pop	rax
197d7b 498d4424f0		lea	rax,[r12-16]
197d80 49bf0800fcb0937f
197d88 0000			mov	r15,140272306225160
197d8a 493b4728			cmp	rax,[r15+40]
197d8e 7d38			jge	short alloc-ok21
197d90 48c7c010000000		mov	rax,dword 16
197d97 57			push	rdi
197d98 56			push	rsi
197d99 52			push	rdx
197d9a 51			push	rcx
197d9b 4150			push	r8
197d9d 4151			push	r9
197d9f 4152			push	r10
197da1 4153			push	r11
197da3 50			push	rax
197da4 4889e7			mov	rdi,rsp
197da7 4883e4f0			and	rsp,byte -16
197dab 4883ec08			sub	rsp,byte 8
197daf 57			push	rdi
197db0 e81b636d01		call	gc
197db5 5c			pop	rsp
197db6 4989c4			mov	r12,rax
197db9 58			pop	rax
197dba 415b			pop	r11
197dbc 415a			pop	r10
197dbe 4159			pop	r9
197dc0 4158			pop	r8
197dc2 59			pop	rcx
197dc3 5a			pop	rdx
197dc4 5e			pop	rsi
197dc5 5f			pop	rdi
197dc6 eb04			jmp	short alloc-end21
197dc8			alloc-ok21:
197dc8 4983ec10			sub	r12,byte 16
197dcc			alloc-end21:
197dcc 48c7c076020000		mov	rax,dword 630
197dd3 49890424			mov	[r12],rax
197dd7 48c7c0c0758c02		mov	rax,dword 42759616
197dde 4989442408		mov	[r12+8],rax
197de3 498d442401		lea	rax,[r12+1]
197de8 50			push	rax
197de9			version63:
197de9 58			pop	rax
197dea 498982a0000000		mov	[r10+160],rax
197df1 6aee			push	qword byte -18
197df3			version64:
197df3 48c7c0eeffffff		mov	rax,dword -18
197dfa 498982a8000000		mov	[r10+168],rax
197e01			version65:
197e01 50			push	rax
197e02 53			push	rbx
197e03 48b85000fcb0937f
197e0b 0000			mov	rax,140272306225232
197e0d 488b18			mov	rbx,[rax]
197e10 48ffc3			inc	rbx
197e13 488918			mov	[rax],rbx
197e16 5b			pop	rbx
197e17 58			pop	rax
197e18 498d4424f0		lea	rax,[r12-16]
197e1d 49bf0800fcb0937f
197e25 0000			mov	r15,140272306225160
197e27 493b4728			cmp	rax,[r15+40]
197e2b 7d38			jge	short alloc-ok22
197e2d 48c7c010000000		mov	rax,dword 16
197e34 57			push	rdi
197e35 56			push	rsi
197e36 52			push	rdx
197e37 51			push	rcx
197e38 4150			push	r8
197e3a 4151			push	r9
197e3c 4152			push	r10
197e3e 4153			push	r11
197e40 50			push	rax
197e41 4889e7			mov	rdi,rsp
197e44 4883e4f0			and	rsp,byte -16
197e48 4883ec08			sub	rsp,byte 8
197e4c 57			push	rdi
197e4d e87e626d01		call	gc
197e52 5c			pop	rsp
197e53 4989c4			mov	r12,rax
197e56 58			pop	rax
197e57 415b			pop	r11
197e59 415a			pop	r10
197e5b 4159			pop	r9
197e5d 4158			pop	r8
197e5f 59			pop	rcx
197e60 5a			pop	rdx
197e61 5e			pop	rsi
197e62 5f			pop	rdi
197e63 eb04			jmp	short alloc-end22
197e65			alloc-ok22:
197e65 4983ec10			sub	r12,byte 16
197e69			alloc-end22:
197e69 48c7c076020000		mov	rax,dword 630
197e70 49890424			mov	[r12],rax
197e74 48c7c0b0858c02		mov	rax,dword 42763696
197e7b 4989442408		mov	[r12+8],rax
197e80 498d442401		lea	rax,[r12+1]
197e85 50			push	rax
197e86			version66:
197e86 58			pop	rax
197e87 498982a8000000		mov	[r10+168],rax
197e8e 6aee			push	qword byte -18
197e90			version67:
197e90 48c7c0eeffffff		mov	rax,dword -18
197e97 498982b0000000		mov	[r10+176],rax
197e9e			version68:
197e9e 50			push	rax
197e9f 53			push	rbx
197ea0 48b85000fcb0937f
197ea8 0000			mov	rax,140272306225232
197eaa 488b18			mov	rbx,[rax]
197ead 48ffc3			inc	rbx
197eb0 488918			mov	[rax],rbx
197eb3 5b			pop	rbx
197eb4 58			pop	rax
197eb5 498d4424f0		lea	rax,[r12-16]
197eba 49bf0800fcb0937f
197ec2 0000			mov	r15,140272306225160
197ec4 493b4728			cmp	rax,[r15+40]
197ec8 7d38			jge	short alloc-ok23
197eca 48c7c010000000		mov	rax,dword 16
197ed1 57			push	rdi
197ed2 56			push	rsi
197ed3 52			push	rdx
197ed4 51			push	rcx
197ed5 4150			push	r8
197ed7 4151			push	r9
197ed9 4152			push	r10
197edb 4153			push	r11
197edd 50			push	rax
197ede 4889e7			mov	rdi,rsp
197ee1 4883e4f0			and	rsp,byte -16
197ee5 4883ec08			sub	rsp,byte 8
197ee9 57			push	rdi
197eea e8e1616d01		call	gc
197eef 5c			pop	rsp
197ef0 4989c4			mov	r12,rax
197ef3 58			pop	rax
197ef4 415b			pop	r11
197ef6 415a			pop	r10
197ef8 4159			pop	r9
197efa 4158			pop	r8
197efc 59			pop	rcx
197efd 5a			pop	rdx
197efe 5e			pop	rsi
197eff 5f			pop	rdi
197f00 eb04			jmp	short alloc-end23
197f02			alloc-ok23:
197f02 4983ec10			sub	r12,byte 16
197f06			alloc-end23:
197f06 48c7c076020000		mov	rax,dword 630
197f0d 49890424			mov	[r12],rax
197f11 48c7c0a0958c02		mov	rax,dword 42767776
197f18 4989442408		mov	[r12+8],rax
197f1d 498d442401		lea	rax,[r12+1]
197f22 50			push	rax
197f23			version69:
197f23 58			pop	rax
197f24 498982b0000000		mov	[r10+176],rax
197f2b 6aee			push	qword byte -18
197f2d			version70:
197f2d 48c7c0eeffffff		mov	rax,dword -18
197f34 498982b8000000		mov	[r10+184],rax
197f3b			version71:
197f3b 50			push	rax
197f3c 53			push	rbx
197f3d 48b85000fcb0937f
197f45 0000			mov	rax,140272306225232
197f47 488b18			mov	rbx,[rax]
197f4a 48ffc3			inc	rbx
197f4d 488918			mov	[rax],rbx
197f50 5b			pop	rbx
197f51 58			pop	rax
197f52 498d4424f0		lea	rax,[r12-16]
197f57 49bf0800fcb0937f
197f5f 0000			mov	r15,140272306225160
197f61 493b4728			cmp	rax,[r15+40]
197f65 7d38			jge	short alloc-ok24
197f67 48c7c010000000		mov	rax,dword 16
197f6e 57			push	rdi
197f6f 56			push	rsi
197f70 52			push	rdx
197f71 51			push	rcx
197f72 4150			push	r8
197f74 4151			push	r9
197f76 4152			push	r10
197f78 4153			push	r11
197f7a 50			push	rax
197f7b 4889e7			mov	rdi,rsp
197f7e 4883e4f0			and	rsp,byte -16
197f82 4883ec08			sub	rsp,byte 8
197f86 57			push	rdi
197f87 e844616d01		call	gc
197f8c 5c			pop	rsp
197f8d 4989c4			mov	r12,rax
197f90 58			pop	rax
197f91 415b			pop	r11
197f93 415a			pop	r10
197f95 4159			pop	r9
197f97 4158			pop	r8
197f99 59			pop	rcx
197f9a 5a			pop	rdx
197f9b 5e			pop	rsi
197f9c 5f			pop	rdi
197f9d eb04			jmp	short alloc-end24
197f9f			alloc-ok24:
197f9f 4983ec10			sub	r12,byte 16
197fa3			alloc-end24:
197fa3 48c7c076020000		mov	rax,dword 630
197faa 49890424			mov	[r12],rax
197fae 48c7c090a58c02		mov	rax,dword 42771856
197fb5 4989442408		mov	[r12+8],rax
197fba 498d442401		lea	rax,[r12+1]
197fbf 50			push	rax
197fc0			version72:
197fc0 58			pop	rax
197fc1 498982b8000000		mov	[r10+184],rax
197fc8 6aee			push	qword byte -18
197fca			version73:
197fca 48c7c0eeffffff		mov	rax,dword -18
197fd1 498982c0000000		mov	[r10+192],rax
197fd8			version74:
197fd8 50			push	rax
197fd9 53			push	rbx
197fda 48b85000fcb0937f
197fe2 0000			mov	rax,140272306225232
197fe4 488b18			mov	rbx,[rax]
197fe7 48ffc3			inc	rbx
197fea 488918			mov	[rax],rbx
197fed 5b			pop	rbx
197fee 58			pop	rax
197fef 498d4424f0		lea	rax,[r12-16]
197ff4 49bf0800fcb0937f
197ffc 0000			mov	r15,140272306225160
197ffe 493b4728			cmp	rax,[r15+40]
198002 7d38			jge	short alloc-ok25
198004 48c7c010000000		mov	rax,dword 16
19800b 57			push	rdi
19800c 56			push	rsi
19800d 52			push	rdx
19800e 51			push	rcx
19800f 4150			push	r8
198011 4151			push	r9
198013 4152			push	r10
198015 4153			push	r11
198017 50			push	rax
198018 4889e7			mov	rdi,rsp
19801b 4883e4f0			and	rsp,byte -16
19801f 4883ec08			sub	rsp,byte 8
198023 57			push	rdi
198024 e8a7606d01		call	gc
198029 5c			pop	rsp
19802a 4989c4			mov	r12,rax
19802d 58			pop	rax
19802e 415b			pop	r11
198030 415a			pop	r10
198032 4159			pop	r9
198034 4158			pop	r8
198036 59			pop	rcx
198037 5a			pop	rdx
198038 5e			pop	rsi
198039 5f			pop	rdi
19803a eb04			jmp	short alloc-end25
19803c			alloc-ok25:
19803c 4983ec10			sub	r12,byte 16
198040			alloc-end25:
198040 48c7c076020000		mov	rax,dword 630
198047 49890424			mov	[r12],rax
19804b 48c7c0a0358d02		mov	rax,dword 42808736
198052 4989442408		mov	[r12+8],rax
198057 498d442401		lea	rax,[r12+1]
19805c 50			push	rax
19805d			version75:
19805d 58			pop	rax
19805e 498982c0000000		mov	[r10+192],rax
198065 6aee			push	qword byte -18
198067			version76:
198067 48c7c0eeffffff		mov	rax,dword -18
19806e 498982c8000000		mov	[r10+200],rax
198075			version77:
198075 50			push	rax
198076 53			push	rbx
198077 48b85000fcb0937f
19807f 0000			mov	rax,140272306225232
198081 488b18			mov	rbx,[rax]
198084 48ffc3			inc	rbx
198087 488918			mov	[rax],rbx
19808a 5b			pop	rbx
19808b 58			pop	rax
19808c 498d4424f0		lea	rax,[r12-16]
198091 49bf0800fcb0937f
198099 0000			mov	r15,140272306225160
19809b 493b4728			cmp	rax,[r15+40]
19809f 7d38			jge	short alloc-ok26
1980a1 48c7c010000000		mov	rax,dword 16
1980a8 57			push	rdi
1980a9 56			push	rsi
1980aa 52			push	rdx
1980ab 51			push	rcx
1980ac 4150			push	r8
1980ae 4151			push	r9
1980b0 4152			push	r10
1980b2 4153			push	r11
1980b4 50			push	rax
1980b5 4889e7			mov	rdi,rsp
1980b8 4883e4f0			and	rsp,byte -16
1980bc 4883ec08			sub	rsp,byte 8
1980c0 57			push	rdi
1980c1 e80a606d01		call	gc
1980c6 5c			pop	rsp
1980c7 4989c4			mov	r12,rax
1980ca 58			pop	rax
1980cb 415b			pop	r11
1980cd 415a			pop	r10
1980cf 4159			pop	r9
1980d1 4158			pop	r8
1980d3 59			pop	rcx
1980d4 5a			pop	rdx
1980d5 5e			pop	rsi
1980d6 5f			pop	rdi
1980d7 eb04			jmp	short alloc-end26
1980d9			alloc-ok26:
1980d9 4983ec10			sub	r12,byte 16
1980dd			alloc-end26:
1980dd 48c7c076020000		mov	rax,dword 630
1980e4 49890424			mov	[r12],rax
1980e8 48c7c090458d02		mov	rax,dword 42812816
1980ef 4989442408		mov	[r12+8],rax
1980f4 498d442401		lea	rax,[r12+1]
1980f9 50			push	rax
1980fa			version78:
1980fa 58			pop	rax
1980fb 498982c8000000		mov	[r10+200],rax
198102 6aee			push	qword byte -18
198104			version79:
198104 48c7c0eeffffff		mov	rax,dword -18
19810b 498982d0000000		mov	[r10+208],rax
198112			version80:
198112 50			push	rax
198113 53			push	rbx
198114 48b85000fcb0937f
19811c 0000			mov	rax,140272306225232
19811e 488b18			mov	rbx,[rax]
198121 48ffc3			inc	rbx
198124 488918			mov	[rax],rbx
198127 5b			pop	rbx
198128 58			pop	rax
198129 498d4424f0		lea	rax,[r12-16]
19812e 49bf0800fcb0937f
198136 0000			mov	r15,140272306225160
198138 493b4728			cmp	rax,[r15+40]
19813c 7d38			jge	short alloc-ok27
19813e 48c7c010000000		mov	rax,dword 16
198145 57			push	rdi
198146 56			push	rsi
198147 52			push	rdx
198148 51			push	rcx
198149 4150			push	r8
19814b 4151			push	r9
19814d 4152			push	r10
19814f 4153			push	r11
198151 50			push	rax
198152 4889e7			mov	rdi,rsp
198155 4883e4f0			and	rsp,byte -16
198159 4883ec08			sub	rsp,byte 8
19815d 57			push	rdi
19815e e86d5f6d01		call	gc
198163 5c			pop	rsp
198164 4989c4			mov	r12,rax
198167 58			pop	rax
198168 415b			pop	r11
19816a 415a			pop	r10
19816c 4159			pop	r9
19816e 4158			pop	r8
198170 59			pop	rcx
198171 5a			pop	rdx
198172 5e			pop	rsi
198173 5f			pop	rdi
198174 eb04			jmp	short alloc-end27
198176			alloc-ok27:
198176 4983ec10			sub	r12,byte 16
19817a			alloc-end27:
19817a 48c7c076020000		mov	rax,dword 630
198181 49890424			mov	[r12],rax
198185 48c7c080558d02		mov	rax,dword 42816896
19818c 4989442408		mov	[r12+8],rax
198191 498d442401		lea	rax,[r12+1]
198196 50			push	rax
198197			version81:
198197 58			pop	rax
198198 498982d0000000		mov	[r10+208],rax
19819f 6aee			push	qword byte -18
1981a1			version82:
1981a1 48c7c0eeffffff		mov	rax,dword -18
1981a8 498982d8000000		mov	[r10+216],rax
1981af			version83:
1981af 50			push	rax
1981b0 53			push	rbx
1981b1 48b85000fcb0937f
1981b9 0000			mov	rax,140272306225232
1981bb 488b18			mov	rbx,[rax]
1981be 48ffc3			inc	rbx
1981c1 488918			mov	[rax],rbx
1981c4 5b			pop	rbx
1981c5 58			pop	rax
1981c6 498d4424f0		lea	rax,[r12-16]
1981cb 49bf0800fcb0937f
1981d3 0000			mov	r15,140272306225160
1981d5 493b4728			cmp	rax,[r15+40]
1981d9 7d38			jge	short alloc-ok28
1981db 48c7c010000000		mov	rax,dword 16
1981e2 57			push	rdi
1981e3 56			push	rsi
1981e4 52			push	rdx
1981e5 51			push	rcx
1981e6 4150			push	r8
1981e8 4151			push	r9
1981ea 4152			push	r10
1981ec 4153			push	r11
1981ee 50			push	rax
1981ef 4889e7			mov	rdi,rsp
1981f2 4883e4f0			and	rsp,byte -16
1981f6 4883ec08			sub	rsp,byte 8
1981fa 57			push	rdi
1981fb e8d05e6d01		call	gc
198200 5c			pop	rsp
198201 4989c4			mov	r12,rax
198204 58			pop	rax
198205 415b			pop	r11
198207 415a			pop	r10
198209 4159			pop	r9
19820b 4158			pop	r8
19820d 59			pop	rcx
19820e 5a			pop	rdx
19820f 5e			pop	rsi
198210 5f			pop	rdi
198211 eb04			jmp	short alloc-end28
198213			alloc-ok28:
198213 4983ec10			sub	r12,byte 16
198217			alloc-end28:
198217 48c7c076020000		mov	rax,dword 630
19821e 49890424			mov	[r12],rax
198222 48c7c070658d02		mov	rax,dword 42820976
198229 4989442408		mov	[r12+8],rax
19822e 498d442401		lea	rax,[r12+1]
198233 50			push	rax
198234			version84:
198234 58			pop	rax
198235 498982d8000000		mov	[r10+216],rax
19823c 6aee			push	qword byte -18
19823e			version85:
19823e 48c7c0eeffffff		mov	rax,dword -18
198245 498982e0000000		mov	[r10+224],rax
19824c			version86:
19824c 50			push	rax
19824d 53			push	rbx
19824e 48b85000fcb0937f
198256 0000			mov	rax,140272306225232
198258 488b18			mov	rbx,[rax]
19825b 48ffc3			inc	rbx
19825e 488918			mov	[rax],rbx
198261 5b			pop	rbx
198262 58			pop	rax
198263 498d4424f0		lea	rax,[r12-16]
198268 49bf0800fcb0937f
198270 0000			mov	r15,140272306225160
198272 493b4728			cmp	rax,[r15+40]
198276 7d38			jge	short alloc-ok29
198278 48c7c010000000		mov	rax,dword 16
19827f 57			push	rdi
198280 56			push	rsi
198281 52			push	rdx
198282 51			push	rcx
198283 4150			push	r8
198285 4151			push	r9
198287 4152			push	r10
198289 4153			push	r11
19828b 50			push	rax
19828c 4889e7			mov	rdi,rsp
19828f 4883e4f0			and	rsp,byte -16
198293 4883ec08			sub	rsp,byte 8
198297 57			push	rdi
198298 e8335e6d01		call	gc
19829d 5c			pop	rsp
19829e 4989c4			mov	r12,rax
1982a1 58			pop	rax
1982a2 415b			pop	r11
1982a4 415a			pop	r10
1982a6 4159			pop	r9
1982a8 4158			pop	r8
1982aa 59			pop	rcx
1982ab 5a			pop	rdx
1982ac 5e			pop	rsi
1982ad 5f			pop	rdi
1982ae eb04			jmp	short alloc-end29
1982b0			alloc-ok29:
1982b0 4983ec10			sub	r12,byte 16
1982b4			alloc-end29:
1982b4 48c7c076020000		mov	rax,dword 630
1982bb 49890424			mov	[r12],rax
1982bf 48c7c060758d02		mov	rax,dword 42825056
1982c6 4989442408		mov	[r12+8],rax
1982cb 498d442401		lea	rax,[r12+1]
1982d0 50			push	rax
1982d1			version87:
1982d1 58			pop	rax
1982d2 498982e0000000		mov	[r10+224],rax
1982d9 6aee			push	qword byte -18
1982db			version88:
1982db 48c7c0eeffffff		mov	rax,dword -18
1982e2 498982e8000000		mov	[r10+232],rax
1982e9			version89:
1982e9 50			push	rax
1982ea 53			push	rbx
1982eb 48b85000fcb0937f
1982f3 0000			mov	rax,140272306225232
1982f5 488b18			mov	rbx,[rax]
1982f8 48ffc3			inc	rbx
1982fb 488918			mov	[rax],rbx
1982fe 5b			pop	rbx
1982ff 58			pop	rax
198300 498d4424f0		lea	rax,[r12-16]
198305 49bf0800fcb0937f
19830d 0000			mov	r15,140272306225160
19830f 493b4728			cmp	rax,[r15+40]
198313 7d38			jge	short alloc-ok30
198315 48c7c010000000		mov	rax,dword 16
19831c 57			push	rdi
19831d 56			push	rsi
19831e 52			push	rdx
19831f 51			push	rcx
198320 4150			push	r8
198322 4151			push	r9
198324 4152			push	r10
198326 4153			push	r11
198328 50			push	rax
198329 4889e7			mov	rdi,rsp
19832c 4883e4f0			and	rsp,byte -16
198330 4883ec08			sub	rsp,byte 8
198334 57			push	rdi
198335 e8965d6d01		call	gc
19833a 5c			pop	rsp
19833b 4989c4			mov	r12,rax
19833e 58			pop	rax
19833f 415b			pop	r11
198341 415a			pop	r10
198343 4159			pop	r9
198345 4158			pop	r8
198347 59			pop	rcx
198348 5a			pop	rdx
198349 5e			pop	rsi
19834a 5f			pop	rdi
19834b eb04			jmp	short alloc-end30
19834d			alloc-ok30:
19834d 4983ec10			sub	r12,byte 16
198351			alloc-end30:
198351 48c7c076020000		mov	rax,dword 630
198358 49890424			mov	[r12],rax
19835c 48c7c050858d02		mov	rax,dword 42829136
198363 4989442408		mov	[r12+8],rax
198368 498d442401		lea	rax,[r12+1]
19836d 50			push	rax
19836e			version90:
19836e 58			pop	rax
19836f 498982e8000000		mov	[r10+232],rax
198376 6aee			push	qword byte -18
198378			version91:
198378 48c7c0eeffffff		mov	rax,dword -18
19837f 498982f0000000		mov	[r10+240],rax
198386			version92:
198386 50			push	rax
198387 53			push	rbx
198388 48b85000fcb0937f
198390 0000			mov	rax,140272306225232
198392 488b18			mov	rbx,[rax]
198395 48ffc3			inc	rbx
198398 488918			mov	[rax],rbx
19839b 5b			pop	rbx
19839c 58			pop	rax
19839d 498d4424f0		lea	rax,[r12-16]
1983a2 49bf0800fcb0937f
1983aa 0000			mov	r15,140272306225160
1983ac 493b4728			cmp	rax,[r15+40]
1983b0 7d38			jge	short alloc-ok31
1983b2 48c7c010000000		mov	rax,dword 16
1983b9 57			push	rdi
1983ba 56			push	rsi
1983bb 52			push	rdx
1983bc 51			push	rcx
1983bd 4150			push	r8
1983bf 4151			push	r9
1983c1 4152			push	r10
1983c3 4153			push	r11
1983c5 50			push	rax
1983c6 4889e7			mov	rdi,rsp
1983c9 4883e4f0			and	rsp,byte -16
1983cd 4883ec08			sub	rsp,byte 8
1983d1 57			push	rdi
1983d2 e8f95c6d01		call	gc
1983d7 5c			pop	rsp
1983d8 4989c4			mov	r12,rax
1983db 58			pop	rax
1983dc 415b			pop	r11
1983de 415a			pop	r10
1983e0 4159			pop	r9
1983e2 4158			pop	r8
1983e4 59			pop	rcx
1983e5 5a			pop	rdx
1983e6 5e			pop	rsi
1983e7 5f			pop	rdi
1983e8 eb04			jmp	short alloc-end31
1983ea			alloc-ok31:
1983ea 4983ec10			sub	r12,byte 16
1983ee			alloc-end31:
1983ee 48c7c076020000		mov	rax,dword 630
1983f5 49890424			mov	[r12],rax
1983f9 48c7c040958d02		mov	rax,dword 42833216
198400 4989442408		mov	[r12+8],rax
198405 498d442401		lea	rax,[r12+1]
19840a 50			push	rax
19840b			version93:
19840b 58			pop	rax
19840c 498982f0000000		mov	[r10+240],rax
198413 6aee			push	qword byte -18
198415			version94:
198415 48c7c0eeffffff		mov	rax,dword -18
19841c 498982f8000000		mov	[r10+248],rax
198423			version95:
198423 50			push	rax
198424 53			push	rbx
198425 48b85000fcb0937f
19842d 0000			mov	rax,140272306225232
19842f 488b18			mov	rbx,[rax]
198432 48ffc3			inc	rbx
198435 488918			mov	[rax],rbx
198438 5b			pop	rbx
198439 58			pop	rax
19843a 498d4424f0		lea	rax,[r12-16]
19843f 49bf0800fcb0937f
198447 0000			mov	r15,140272306225160
198449 493b4728			cmp	rax,[r15+40]
19844d 7d38			jge	short alloc-ok32
19844f 48c7c010000000		mov	rax,dword 16
198456 57			push	rdi
198457 56			push	rsi
198458 52			push	rdx
198459 51			push	rcx
19845a 4150			push	r8
19845c 4151			push	r9
19845e 4152			push	r10
198460 4153			push	r11
198462 50			push	rax
198463 4889e7			mov	rdi,rsp
198466 4883e4f0			and	rsp,byte -16
19846a 4883ec08			sub	rsp,byte 8
19846e 57			push	rdi
19846f e85c5c6d01		call	gc
198474 5c			pop	rsp
198475 4989c4			mov	r12,rax
198478 58			pop	rax
198479 415b			pop	r11
19847b 415a			pop	r10
19847d 4159			pop	r9
19847f 4158			pop	r8
198481 59			pop	rcx
198482 5a			pop	rdx
198483 5e			pop	rsi
198484 5f			pop	rdi
198485 eb04			jmp	short alloc-end32
198487			alloc-ok32:
198487 4983ec10			sub	r12,byte 16
19848b			alloc-end32:
19848b 48c7c076020000		mov	rax,dword 630
198492 49890424			mov	[r12],rax
198496 48c7c030a58d02		mov	rax,dword 42837296
19849d 4989442408		mov	[r12+8],rax
1984a2 498d442401		lea	rax,[r12+1]
1984a7 50			push	rax
1984a8			version96:
1984a8 58			pop	rax
1984a9 498982f8000000		mov	[r10+248],rax
1984b0 6aee			push	qword byte -18
1984b2			version97:
1984b2 48c7c0eeffffff		mov	rax,dword -18
1984b9 49898200010000		mov	[r10+256],rax
1984c0			version98:
1984c0 50			push	rax
1984c1 53			push	rbx
1984c2 48b85000fcb0937f
1984ca 0000			mov	rax,140272306225232
1984cc 488b18			mov	rbx,[rax]
1984cf 48ffc3			inc	rbx
1984d2 488918			mov	[rax],rbx
1984d5 5b			pop	rbx
1984d6 58			pop	rax
1984d7 498d4424f0		lea	rax,[r12-16]
1984dc 49bf0800fcb0937f
1984e4 0000			mov	r15,140272306225160
1984e6 493b4728			cmp	rax,[r15+40]
1984ea 7d38			jge	short alloc-ok33
1984ec 48c7c010000000		mov	rax,dword 16
1984f3 57			push	rdi
1984f4 56			push	rsi
1984f5 52			push	rdx
1984f6 51			push	rcx
1984f7 4150			push	r8
1984f9 4151			push	r9
1984fb 4152			push	r10
1984fd 4153			push	r11
1984ff 50			push	rax
198500 4889e7			mov	rdi,rsp
198503 4883e4f0			and	rsp,byte -16
198507 4883ec08			sub	rsp,byte 8
19850b 57			push	rdi
19850c e8bf5b6d01		call	gc
198511 5c			pop	rsp
198512 4989c4			mov	r12,rax
198515 58			pop	rax
198516 415b			pop	r11
198518 415a			pop	r10
19851a 4159			pop	r9
19851c 4158			pop	r8
19851e 59			pop	rcx
19851f 5a			pop	rdx
198520 5e			pop	rsi
198521 5f			pop	rdi
198522 eb04			jmp	short alloc-end33
198524			alloc-ok33:
198524 4983ec10			sub	r12,byte 16
198528			alloc-end33:
198528 48c7c076020000		mov	rax,dword 630
19852f 49890424			mov	[r12],rax
198533 48c7c020b58d02		mov	rax,dword 42841376
19853a 4989442408		mov	[r12+8],rax
19853f 498d442401		lea	rax,[r12+1]
198544 50			push	rax
198545			version99:
198545 58			pop	rax
198546 49898200010000		mov	[r10+256],rax
19854d 6aee			push	qword byte -18
19854f			version100:
19854f 48c7c0eeffffff		mov	rax,dword -18
198556 49898208010000		mov	[r10+264],rax
19855d			version101:
19855d 50			push	rax
19855e 53			push	rbx
19855f 48b85000fcb0937f
198567 0000			mov	rax,140272306225232
198569 488b18			mov	rbx,[rax]
19856c 48ffc3			inc	rbx
19856f 488918			mov	[rax],rbx
198572 5b			pop	rbx
198573 58			pop	rax
198574 498d4424f0		lea	rax,[r12-16]
198579 49bf0800fcb0937f
198581 0000			mov	r15,140272306225160
198583 493b4728			cmp	rax,[r15+40]
198587 7d38			jge	short alloc-ok34
198589 48c7c010000000		mov	rax,dword 16
198590 57			push	rdi
198591 56			push	rsi
198592 52			push	rdx
198593 51			push	rcx
198594 4150			push	r8
198596 4151			push	r9
198598 4152			push	r10
19859a 4153			push	r11
19859c 50			push	rax
19859d 4889e7			mov	rdi,rsp
1985a0 4883e4f0			and	rsp,byte -16
1985a4 4883ec08			sub	rsp,byte 8
1985a8 57			push	rdi
1985a9 e8225b6d01		call	gc
1985ae 5c			pop	rsp
1985af 4989c4			mov	r12,rax
1985b2 58			pop	rax
1985b3 415b			pop	r11
1985b5 415a			pop	r10
1985b7 4159			pop	r9
1985b9 4158			pop	r8
1985bb 59			pop	rcx
1985bc 5a			pop	rdx
1985bd 5e			pop	rsi
1985be 5f			pop	rdi
1985bf eb04			jmp	short alloc-end34
1985c1			alloc-ok34:
1985c1 4983ec10			sub	r12,byte 16
1985c5			alloc-end34:
1985c5 48c7c076020000		mov	rax,dword 630
1985cc 49890424			mov	[r12],rax
1985d0 48c7c010c58d02		mov	rax,dword 42845456
1985d7 4989442408		mov	[r12+8],rax
1985dc 498d442401		lea	rax,[r12+1]
1985e1 50			push	rax
1985e2			version102:
1985e2 58			pop	rax
1985e3 49898208010000		mov	[r10+264],rax
1985ea 6aee			push	qword byte -18
1985ec			version103:
1985ec 48c7c0eeffffff		mov	rax,dword -18
1985f3 49898210010000		mov	[r10+272],rax
1985fa			version104:
1985fa 50			push	rax
1985fb 53			push	rbx
1985fc 48b85000fcb0937f
198604 0000			mov	rax,140272306225232
198606 488b18			mov	rbx,[rax]
198609 48ffc3			inc	rbx
19860c 488918			mov	[rax],rbx
19860f 5b			pop	rbx
198610 58			pop	rax
198611 498d4424f0		lea	rax,[r12-16]
198616 49bf0800fcb0937f
19861e 0000			mov	r15,140272306225160
198620 493b4728			cmp	rax,[r15+40]
198624 7d38			jge	short alloc-ok35
198626 48c7c010000000		mov	rax,dword 16
19862d 57			push	rdi
19862e 56			push	rsi
19862f 52			push	rdx
198630 51			push	rcx
198631 4150			push	r8
198633 4151			push	r9
198635 4152			push	r10
198637 4153			push	r11
198639 50			push	rax
19863a 4889e7			mov	rdi,rsp
19863d 4883e4f0			and	rsp,byte -16
198641 4883ec08			sub	rsp,byte 8
198645 57			push	rdi
198646 e8855a6d01		call	gc
19864b 5c			pop	rsp
19864c 4989c4			mov	r12,rax
19864f 58			pop	rax
198650 415b			pop	r11
198652 415a			pop	r10
198654 4159			pop	r9
198656 4158			pop	r8
198658 59			pop	rcx
198659 5a			pop	rdx
19865a 5e			pop	rsi
19865b 5f			pop	rdi
19865c eb04			jmp	short alloc-end35
19865e			alloc-ok35:
19865e 4983ec10			sub	r12,byte 16
198662			alloc-end35:
198662 48c7c076020000		mov	rax,dword 630
198669 49890424			mov	[r12],rax
19866d 48c7c000d58d02		mov	rax,dword 42849536
198674 4989442408		mov	[r12+8],rax
198679 498d442401		lea	rax,[r12+1]
19867e 50			push	rax
19867f			version105:
19867f 58			pop	rax
198680 49898210010000		mov	[r10+272],rax
198687 6aee			push	qword byte -18
198689			version106:
198689 48c7c0eeffffff		mov	rax,dword -18
198690 49898218010000		mov	[r10+280],rax
198697			version107:
198697 50			push	rax
198698 53			push	rbx
198699 48b85000fcb0937f
1986a1 0000			mov	rax,140272306225232
1986a3 488b18			mov	rbx,[rax]
1986a6 48ffc3			inc	rbx
1986a9 488918			mov	[rax],rbx
1986ac 5b			pop	rbx
1986ad 58			pop	rax
1986ae 498d4424f0		lea	rax,[r12-16]
1986b3 49bf0800fcb0937f
1986bb 0000			mov	r15,140272306225160
1986bd 493b4728			cmp	rax,[r15+40]
1986c1 7d38			jge	short alloc-ok36
1986c3 48c7c010000000		mov	rax,dword 16
1986ca 57			push	rdi
1986cb 56			push	rsi
1986cc 52			push	rdx
1986cd 51			push	rcx
1986ce 4150			push	r8
1986d0 4151			push	r9
1986d2 4152			push	r10
1986d4 4153			push	r11
1986d6 50			push	rax
1986d7 4889e7			mov	rdi,rsp
1986da 4883e4f0			and	rsp,byte -16
1986de 4883ec08			sub	rsp,byte 8
1986e2 57			push	rdi
1986e3 e8e8596d01		call	gc
1986e8 5c			pop	rsp
1986e9 4989c4			mov	r12,rax
1986ec 58			pop	rax
1986ed 415b			pop	r11
1986ef 415a			pop	r10
1986f1 4159			pop	r9
1986f3 4158			pop	r8
1986f5 59			pop	rcx
1986f6 5a			pop	rdx
1986f7 5e			pop	rsi
1986f8 5f			pop	rdi
1986f9 eb04			jmp	short alloc-end36
1986fb			alloc-ok36:
1986fb 4983ec10			sub	r12,byte 16
1986ff			alloc-end36:
1986ff 48c7c076020000		mov	rax,dword 630
198706 49890424			mov	[r12],rax
19870a 48c7c0f0e48d02		mov	rax,dword 42853616
198711 4989442408		mov	[r12+8],rax
198716 498d442401		lea	rax,[r12+1]
19871b 50			push	rax
19871c			version108:
19871c 58			pop	rax
19871d 49898218010000		mov	[r10+280],rax
198724 6aee			push	qword byte -18
198726			version109:
198726 48c7c0eeffffff		mov	rax,dword -18
19872d 49898220010000		mov	[r10+288],rax
198734			version110:
198734 50			push	rax
198735 53			push	rbx
198736 48b85000fcb0937f
19873e 0000			mov	rax,140272306225232
198740 488b18			mov	rbx,[rax]
198743 48ffc3			inc	rbx
198746 488918			mov	[rax],rbx
198749 5b			pop	rbx
19874a 58			pop	rax
19874b 498d4424f0		lea	rax,[r12-16]
198750 49bf0800fcb0937f
198758 0000			mov	r15,140272306225160
19875a 493b4728			cmp	rax,[r15+40]
19875e 7d38			jge	short alloc-ok37
198760 48c7c010000000		mov	rax,dword 16
198767 57			push	rdi
198768 56			push	rsi
198769 52			push	rdx
19876a 51			push	rcx
19876b 4150			push	r8
19876d 4151			push	r9
19876f 4152			push	r10
198771 4153			push	r11
198773 50			push	rax
198774 4889e7			mov	rdi,rsp
198777 4883e4f0			and	rsp,byte -16
19877b 4883ec08			sub	rsp,byte 8
19877f 57			push	rdi
198780 e84b596d01		call	gc
198785 5c			pop	rsp
198786 4989c4			mov	r12,rax
198789 58			pop	rax
19878a 415b			pop	r11
19878c 415a			pop	r10
19878e 4159			pop	r9
198790 4158			pop	r8
198792 59			pop	rcx
198793 5a			pop	rdx
198794 5e			pop	rsi
198795 5f			pop	rdi
198796 eb04			jmp	short alloc-end37
198798			alloc-ok37:
198798 4983ec10			sub	r12,byte 16
19879c			alloc-end37:
19879c 48c7c076020000		mov	rax,dword 630
1987a3 49890424			mov	[r12],rax
1987a7 48c7c0e0f48d02		mov	rax,dword 42857696
1987ae 4989442408		mov	[r12+8],rax
1987b3 498d442401		lea	rax,[r12+1]
1987b8 50			push	rax
1987b9			version111:
1987b9 58			pop	rax
1987ba 49898220010000		mov	[r10+288],rax
1987c1 6aee			push	qword byte -18
1987c3			version112:
1987c3 48c7c0eeffffff		mov	rax,dword -18
1987ca 49898228010000		mov	[r10+296],rax
1987d1			version113:
1987d1 50			push	rax
1987d2 53			push	rbx
1987d3 48b85000fcb0937f
1987db 0000			mov	rax,140272306225232
1987dd 488b18			mov	rbx,[rax]
1987e0 48ffc3			inc	rbx
1987e3 488918			mov	[rax],rbx
1987e6 5b			pop	rbx
1987e7 58			pop	rax
1987e8 498d4424f0		lea	rax,[r12-16]
1987ed 49bf0800fcb0937f
1987f5 0000			mov	r15,140272306225160
1987f7 493b4728			cmp	rax,[r15+40]
1987fb 7d38			jge	short alloc-ok38
1987fd 48c7c010000000		mov	rax,dword 16
198804 57			push	rdi
198805 56			push	rsi
198806 52			push	rdx
198807 51			push	rcx
198808 4150			push	r8
19880a 4151			push	r9
19880c 4152			push	r10
19880e 4153			push	r11
198810 50			push	rax
198811 4889e7			mov	rdi,rsp
198814 4883e4f0			and	rsp,byte -16
198818 4883ec08			sub	rsp,byte 8
19881c 57			push	rdi
19881d e8ae586d01		call	gc
198822 5c			pop	rsp
198823 4989c4			mov	r12,rax
198826 58			pop	rax
198827 415b			pop	r11
198829 415a			pop	r10
19882b 4159			pop	r9
19882d 4158			pop	r8
19882f 59			pop	rcx
198830 5a			pop	rdx
198831 5e			pop	rsi
198832 5f			pop	rdi
198833 eb04			jmp	short alloc-end38
198835			alloc-ok38:
198835 4983ec10			sub	r12,byte 16
198839			alloc-end38:
198839 48c7c076020000		mov	rax,dword 630
198840 49890424			mov	[r12],rax
198844 48c7c0d0048e02		mov	rax,dword 42861776
19884b 4989442408		mov	[r12+8],rax
198850 498d442401		lea	rax,[r12+1]
198855 50			push	rax
198856			version114:
198856 58			pop	rax
198857 49898228010000		mov	[r10+296],rax
19885e 6aee			push	qword byte -18
198860			version115:
198860 48c7c0eeffffff		mov	rax,dword -18
198867 49898230010000		mov	[r10+304],rax
19886e			version116:
19886e 50			push	rax
19886f 53			push	rbx
198870 48b85000fcb0937f
198878 0000			mov	rax,140272306225232
19887a 488b18			mov	rbx,[rax]
19887d 48ffc3			inc	rbx
198880 488918			mov	[rax],rbx
198883 5b			pop	rbx
198884 58			pop	rax
198885 498d4424f0		lea	rax,[r12-16]
19888a 49bf0800fcb0937f
198892 0000			mov	r15,140272306225160
198894 493b4728			cmp	rax,[r15+40]
198898 7d38			jge	short alloc-ok39
19889a 48c7c010000000		mov	rax,dword 16
1988a1 57			push	rdi
1988a2 56			push	rsi
1988a3 52			push	rdx
1988a4 51			push	rcx
1988a5 4150			push	r8
1988a7 4151			push	r9
1988a9 4152			push	r10
1988ab 4153			push	r11
1988ad 50			push	rax
1988ae 4889e7			mov	rdi,rsp
1988b1 4883e4f0			and	rsp,byte -16
1988b5 4883ec08			sub	rsp,byte 8
1988b9 57			push	rdi
1988ba e811586d01		call	gc
1988bf 5c			pop	rsp
1988c0 4989c4			mov	r12,rax
1988c3 58			pop	rax
1988c4 415b			pop	r11
1988c6 415a			pop	r10
1988c8 4159			pop	r9
1988ca 4158			pop	r8
1988cc 59			pop	rcx
1988cd 5a			pop	rdx
1988ce 5e			pop	rsi
1988cf 5f			pop	rdi
1988d0 eb04			jmp	short alloc-end39
1988d2			alloc-ok39:
1988d2 4983ec10			sub	r12,byte 16
1988d6			alloc-end39:
1988d6 48c7c076020000		mov	rax,dword 630
1988dd 49890424			mov	[r12],rax
1988e1 48c7c0c0148e02		mov	rax,dword 42865856
1988e8 4989442408		mov	[r12+8],rax
1988ed 498d442401		lea	rax,[r12+1]
1988f2 50			push	rax
1988f3			version117:
1988f3 58			pop	rax
1988f4 49898230010000		mov	[r10+304],rax
1988fb 6aee			push	qword byte -18
1988fd			version118:
1988fd 48c7c0eeffffff		mov	rax,dword -18
198904 49898238010000		mov	[r10+312],rax
19890b			version119:
19890b 50			push	rax
19890c 53			push	rbx
19890d 48b85000fcb0937f
198915 0000			mov	rax,140272306225232
198917 488b18			mov	rbx,[rax]
19891a 48ffc3			inc	rbx
19891d 488918			mov	[rax],rbx
198920 5b			pop	rbx
198921 58			pop	rax
198922 498d4424f0		lea	rax,[r12-16]
198927 49bf0800fcb0937f
19892f 0000			mov	r15,140272306225160
198931 493b4728			cmp	rax,[r15+40]
198935 7d38			jge	short alloc-ok40
198937 48c7c010000000		mov	rax,dword 16
19893e 57			push	rdi
19893f 56			push	rsi
198940 52			push	rdx
198941 51			push	rcx
198942 4150			push	r8
198944 4151			push	r9
198946 4152			push	r10
198948 4153			push	r11
19894a 50			push	rax
19894b 4889e7			mov	rdi,rsp
19894e 4883e4f0			and	rsp,byte -16
198952 4883ec08			sub	rsp,byte 8
198956 57			push	rdi
198957 e874576d01		call	gc
19895c 5c			pop	rsp
19895d 4989c4			mov	r12,rax
198960 58			pop	rax
198961 415b			pop	r11
198963 415a			pop	r10
198965 4159			pop	r9
198967 4158			pop	r8
198969 59			pop	rcx
19896a 5a			pop	rdx
19896b 5e			pop	rsi
19896c 5f			pop	rdi
19896d eb04			jmp	short alloc-end40
19896f			alloc-ok40:
19896f 4983ec10			sub	r12,byte 16
198973			alloc-end40:
198973 48c7c076020000		mov	rax,dword 630
19897a 49890424			mov	[r12],rax
19897e 48c7c0b0248e02		mov	rax,dword 42869936
198985 4989442408		mov	[r12+8],rax
19898a 498d442401		lea	rax,[r12+1]
19898f 50			push	rax
198990			version120:
198990 58			pop	rax
198991 49898238010000		mov	[r10+312],rax
198998 6aee			push	qword byte -18
19899a			version121:
19899a 48c7c0eeffffff		mov	rax,dword -18
1989a1 49898240010000		mov	[r10+320],rax
1989a8			version122:
1989a8 50			push	rax
1989a9 53			push	rbx
1989aa 48b85000fcb0937f
1989b2 0000			mov	rax,140272306225232
1989b4 488b18			mov	rbx,[rax]
1989b7 48ffc3			inc	rbx
1989ba 488918			mov	[rax],rbx
1989bd 5b			pop	rbx
1989be 58			pop	rax
1989bf 498d4424f0		lea	rax,[r12-16]
1989c4 49bf0800fcb0937f
1989cc 0000			mov	r15,140272306225160
1989ce 493b4728			cmp	rax,[r15+40]
1989d2 7d38			jge	short alloc-ok41
1989d4 48c7c010000000		mov	rax,dword 16
1989db 57			push	rdi
1989dc 56			push	rsi
1989dd 52			push	rdx
1989de 51			push	rcx
1989df 4150			push	r8
1989e1 4151			push	r9
1989e3 4152			push	r10
1989e5 4153			push	r11
1989e7 50			push	rax
1989e8 4889e7			mov	rdi,rsp
1989eb 4883e4f0			and	rsp,byte -16
1989ef 4883ec08			sub	rsp,byte 8
1989f3 57			push	rdi
1989f4 e8d7566d01		call	gc
1989f9 5c			pop	rsp
1989fa 4989c4			mov	r12,rax
1989fd 58			pop	rax
1989fe 415b			pop	r11
198a00 415a			pop	r10
198a02 4159			pop	r9
198a04 4158			pop	r8
198a06 59			pop	rcx
198a07 5a			pop	rdx
198a08 5e			pop	rsi
198a09 5f			pop	rdi
198a0a eb04			jmp	short alloc-end41
198a0c			alloc-ok41:
198a0c 4983ec10			sub	r12,byte 16
198a10			alloc-end41:
198a10 48c7c076020000		mov	rax,dword 630
198a17 49890424			mov	[r12],rax
198a1b 48c7c0a0348e02		mov	rax,dword 42874016
198a22 4989442408		mov	[r12+8],rax
198a27 498d442401		lea	rax,[r12+1]
198a2c 50			push	rax
198a2d			version123:
198a2d 58			pop	rax
198a2e 49898240010000		mov	[r10+320],rax
198a35 6aee			push	qword byte -18
198a37			version124:
198a37 48c7c0eeffffff		mov	rax,dword -18
198a3e 49898248010000		mov	[r10+328],rax
198a45			version125:
198a45 50			push	rax
198a46 53			push	rbx
198a47 48b85000fcb0937f
198a4f 0000			mov	rax,140272306225232
198a51 488b18			mov	rbx,[rax]
198a54 48ffc3			inc	rbx
198a57 488918			mov	[rax],rbx
198a5a 5b			pop	rbx
198a5b 58			pop	rax
198a5c 498d4424f0		lea	rax,[r12-16]
198a61 49bf0800fcb0937f
198a69 0000			mov	r15,140272306225160
198a6b 493b4728			cmp	rax,[r15+40]
198a6f 7d38			jge	short alloc-ok42
198a71 48c7c010000000		mov	rax,dword 16
198a78 57			push	rdi
198a79 56			push	rsi
198a7a 52			push	rdx
198a7b 51			push	rcx
198a7c 4150			push	r8
198a7e 4151			push	r9
198a80 4152			push	r10
198a82 4153			push	r11
198a84 50			push	rax
198a85 4889e7			mov	rdi,rsp
198a88 4883e4f0			and	rsp,byte -16
198a8c 4883ec08			sub	rsp,byte 8
198a90 57			push	rdi
198a91 e83a566d01		call	gc
198a96 5c			pop	rsp
198a97 4989c4			mov	r12,rax
198a9a 58			pop	rax
198a9b 415b			pop	r11
198a9d 415a			pop	r10
198a9f 4159			pop	r9
198aa1 4158			pop	r8
198aa3 59			pop	rcx
198aa4 5a			pop	rdx
198aa5 5e			pop	rsi
198aa6 5f			pop	rdi
198aa7 eb04			jmp	short alloc-end42
198aa9			alloc-ok42:
198aa9 4983ec10			sub	r12,byte 16
198aad			alloc-end42:
198aad 48c7c076020000		mov	rax,dword 630
198ab4 49890424			mov	[r12],rax
198ab8 48c7c01045ae02		mov	rax,dword 44975376
198abf 4989442408		mov	[r12+8],rax
198ac4 498d442401		lea	rax,[r12+1]
198ac9 50			push	rax
198aca			version126:
198aca 58			pop	rax
198acb 49898248010000		mov	[r10+328],rax
198ad2 6aee			push	qword byte -18
198ad4			version127:
198ad4 48c7c0eeffffff		mov	rax,dword -18
198adb 49898250010000		mov	[r10+336],rax
198ae2			version128:
198ae2 50			push	rax
198ae3 53			push	rbx
198ae4 48b85000fcb0937f
198aec 0000			mov	rax,140272306225232
198aee 488b18			mov	rbx,[rax]
198af1 48ffc3			inc	rbx
198af4 488918			mov	[rax],rbx
198af7 5b			pop	rbx
198af8 58			pop	rax
198af9 498d4424f0		lea	rax,[r12-16]
198afe 49bf0800fcb0937f
198b06 0000			mov	r15,140272306225160
198b08 493b4728			cmp	rax,[r15+40]
198b0c 7d38			jge	short alloc-ok43
198b0e 48c7c010000000		mov	rax,dword 16
198b15 57			push	rdi
198b16 56			push	rsi
198b17 52			push	rdx
198b18 51			push	rcx
198b19 4150			push	r8
198b1b 4151			push	r9
198b1d 4152			push	r10
198b1f 4153			push	r11
198b21 50			push	rax
198b22 4889e7			mov	rdi,rsp
198b25 4883e4f0			and	rsp,byte -16
198b29 4883ec08			sub	rsp,byte 8
198b2d 57			push	rdi
198b2e e89d556d01		call	gc
198b33 5c			pop	rsp
198b34 4989c4			mov	r12,rax
198b37 58			pop	rax
198b38 415b			pop	r11
198b3a 415a			pop	r10
198b3c 4159			pop	r9
198b3e 4158			pop	r8
198b40 59			pop	rcx
198b41 5a			pop	rdx
198b42 5e			pop	rsi
198b43 5f			pop	rdi
198b44 eb04			jmp	short alloc-end43
198b46			alloc-ok43:
198b46 4983ec10			sub	r12,byte 16
198b4a			alloc-end43:
198b4a 48c7c076020000		mov	rax,dword 630
198b51 49890424			mov	[r12],rax
198b55 48c7c00055ae02		mov	rax,dword 44979456
198b5c 4989442408		mov	[r12+8],rax
198b61 498d442401		lea	rax,[r12+1]
198b66 50			push	rax
198b67			version129:
198b67 58			pop	rax
198b68 49898250010000		mov	[r10+336],rax
198b6f 6aee			push	qword byte -18
198b71			version130:
198b71 48c7c0eeffffff		mov	rax,dword -18
198b78 49898258010000		mov	[r10+344],rax
198b7f			version131:
198b7f 50			push	rax
198b80 53			push	rbx
198b81 48b85000fcb0937f
198b89 0000			mov	rax,140272306225232
198b8b 488b18			mov	rbx,[rax]
198b8e 48ffc3			inc	rbx
198b91 488918			mov	[rax],rbx
198b94 5b			pop	rbx
198b95 58			pop	rax
198b96 498d4424f0		lea	rax,[r12-16]
198b9b 49bf0800fcb0937f
198ba3 0000			mov	r15,140272306225160
198ba5 493b4728			cmp	rax,[r15+40]
198ba9 7d38			jge	short alloc-ok44
198bab 48c7c010000000		mov	rax,dword 16
198bb2 57			push	rdi
198bb3 56			push	rsi
198bb4 52			push	rdx
198bb5 51			push	rcx
198bb6 4150			push	r8
198bb8 4151			push	r9
198bba 4152			push	r10
198bbc 4153			push	r11
198bbe 50			push	rax
198bbf 4889e7			mov	rdi,rsp
198bc2 4883e4f0			and	rsp,byte -16
198bc6 4883ec08			sub	rsp,byte 8
198bca 57			push	rdi
198bcb e800556d01		call	gc
198bd0 5c			pop	rsp
198bd1 4989c4			mov	r12,rax
198bd4 58			pop	rax
198bd5 415b			pop	r11
198bd7 415a			pop	r10
198bd9 4159			pop	r9
198bdb 4158			pop	r8
198bdd 59			pop	rcx
198bde 5a			pop	rdx
198bdf 5e			pop	rsi
198be0 5f			pop	rdi
198be1 eb04			jmp	short alloc-end44
198be3			alloc-ok44:
198be3 4983ec10			sub	r12,byte 16
198be7			alloc-end44:
198be7 48c7c076020000		mov	rax,dword 630
198bee 49890424			mov	[r12],rax
198bf2 48c7c0f064ae02		mov	rax,dword 44983536
198bf9 4989442408		mov	[r12+8],rax
198bfe 498d442401		lea	rax,[r12+1]
198c03 50			push	rax
198c04			version132:
198c04 58			pop	rax
198c05 49898258010000		mov	[r10+344],rax
198c0c 6aee			push	qword byte -18
198c0e			version133:
198c0e 48c7c0eeffffff		mov	rax,dword -18
198c15 49898260010000		mov	[r10+352],rax
198c1c			version134:
198c1c 50			push	rax
198c1d 53			push	rbx
198c1e 48b85000fcb0937f
198c26 0000			mov	rax,140272306225232
198c28 488b18			mov	rbx,[rax]
198c2b 48ffc3			inc	rbx
198c2e 488918			mov	[rax],rbx
198c31 5b			pop	rbx
198c32 58			pop	rax
198c33 498d4424f0		lea	rax,[r12-16]
198c38 49bf0800fcb0937f
198c40 0000			mov	r15,140272306225160
198c42 493b4728			cmp	rax,[r15+40]
198c46 7d38			jge	short alloc-ok45
198c48 48c7c010000000		mov	rax,dword 16
198c4f 57			push	rdi
198c50 56			push	rsi
198c51 52			push	rdx
198c52 51			push	rcx
198c53 4150			push	r8
198c55 4151			push	r9
198c57 4152			push	r10
198c59 4153			push	r11
198c5b 50			push	rax
198c5c 4889e7			mov	rdi,rsp
198c5f 4883e4f0			and	rsp,byte -16
198c63 4883ec08			sub	rsp,byte 8
198c67 57			push	rdi
198c68 e863546d01		call	gc
198c6d 5c			pop	rsp
198c6e 4989c4			mov	r12,rax
198c71 58			pop	rax
198c72 415b			pop	r11
198c74 415a			pop	r10
198c76 4159			pop	r9
198c78 4158			pop	r8
198c7a 59			pop	rcx
198c7b 5a			pop	rdx
198c7c 5e			pop	rsi
198c7d 5f			pop	rdi
198c7e eb04			jmp	short alloc-end45
198c80			alloc-ok45:
198c80 4983ec10			sub	r12,byte 16
198c84			alloc-end45:
198c84 48c7c076020000		mov	rax,dword 630
198c8b 49890424			mov	[r12],rax
198c8f 48c7c0e074ae02		mov	rax,dword 44987616
198c96 4989442408		mov	[r12+8],rax
198c9b 498d442401		lea	rax,[r12+1]
198ca0 50			push	rax
198ca1			version135:
198ca1 58			pop	rax
198ca2 49898260010000		mov	[r10+352],rax
198ca9 6aee			push	qword byte -18
198cab			version136:
198cab 48c7c0eeffffff		mov	rax,dword -18
198cb2 49898268010000		mov	[r10+360],rax
198cb9			version137:
198cb9 50			push	rax
198cba 53			push	rbx
198cbb 48b85000fcb0937f
198cc3 0000			mov	rax,140272306225232
198cc5 488b18			mov	rbx,[rax]
198cc8 48ffc3			inc	rbx
198ccb 488918			mov	[rax],rbx
198cce 5b			pop	rbx
198ccf 58			pop	rax
198cd0 498d4424f0		lea	rax,[r12-16]
198cd5 49bf0800fcb0937f
198cdd 0000			mov	r15,140272306225160
198cdf 493b4728			cmp	rax,[r15+40]
198ce3 7d38			jge	short alloc-ok46
198ce5 48c7c010000000		mov	rax,dword 16
198cec 57			push	rdi
198ced 56			push	rsi
198cee 52			push	rdx
198cef 51			push	rcx
198cf0 4150			push	r8
198cf2 4151			push	r9
198cf4 4152			push	r10
198cf6 4153			push	r11
198cf8 50			push	rax
198cf9 4889e7			mov	rdi,rsp
198cfc 4883e4f0			and	rsp,byte -16
198d00 4883ec08			sub	rsp,byte 8
198d04 57			push	rdi
198d05 e8c6536d01		call	gc
198d0a 5c			pop	rsp
198d0b 4989c4			mov	r12,rax
198d0e 58			pop	rax
198d0f 415b			pop	r11
198d11 415a			pop	r10
198d13 4159			pop	r9
198d15 4158			pop	r8
198d17 59			pop	rcx
198d18 5a			pop	rdx
198d19 5e			pop	rsi
198d1a 5f			pop	rdi
198d1b eb04			jmp	short alloc-end46
198d1d			alloc-ok46:
198d1d 4983ec10			sub	r12,byte 16
198d21			alloc-end46:
198d21 48c7c076020000		mov	rax,dword 630
198d28 49890424			mov	[r12],rax
198d2c 48c7c02085ae02		mov	rax,dword 44991776
198d33 4989442408		mov	[r12+8],rax
198d38 498d442401		lea	rax,[r12+1]
198d3d 50			push	rax
198d3e			version138:
198d3e 58			pop	rax
198d3f 49898268010000		mov	[r10+360],rax
198d46 6aee			push	qword byte -18
198d48			version139:
198d48 48c7c0eeffffff		mov	rax,dword -18
198d4f 49898270010000		mov	[r10+368],rax
198d56			version140:
198d56 50			push	rax
198d57 53			push	rbx
198d58 48b85000fcb0937f
198d60 0000			mov	rax,140272306225232
198d62 488b18			mov	rbx,[rax]
198d65 48ffc3			inc	rbx
198d68 488918			mov	[rax],rbx
198d6b 5b			pop	rbx
198d6c 58			pop	rax
198d6d 498d4424f0		lea	rax,[r12-16]
198d72 49bf0800fcb0937f
198d7a 0000			mov	r15,140272306225160
198d7c 493b4728			cmp	rax,[r15+40]
198d80 7d38			jge	short alloc-ok47
198d82 48c7c010000000		mov	rax,dword 16
198d89 57			push	rdi
198d8a 56			push	rsi
198d8b 52			push	rdx
198d8c 51			push	rcx
198d8d 4150			push	r8
198d8f 4151			push	r9
198d91 4152			push	r10
198d93 4153			push	r11
198d95 50			push	rax
198d96 4889e7			mov	rdi,rsp
198d99 4883e4f0			and	rsp,byte -16
198d9d 4883ec08			sub	rsp,byte 8
198da1 57			push	rdi
198da2 e829536d01		call	gc
198da7 5c			pop	rsp
198da8 4989c4			mov	r12,rax
198dab 58			pop	rax
198dac 415b			pop	r11
198dae 415a			pop	r10
198db0 4159			pop	r9
198db2 4158			pop	r8
198db4 59			pop	rcx
198db5 5a			pop	rdx
198db6 5e			pop	rsi
198db7 5f			pop	rdi
198db8 eb04			jmp	short alloc-end47
198dba			alloc-ok47:
198dba 4983ec10			sub	r12,byte 16
198dbe			alloc-end47:
198dbe 48c7c076020000		mov	rax,dword 630
198dc5 49890424			mov	[r12],rax
198dc9 48c7c06095ae02		mov	rax,dword 44995936
198dd0 4989442408		mov	[r12+8],rax
198dd5 498d442401		lea	rax,[r12+1]
198dda 50			push	rax
198ddb			version141:
198ddb 58			pop	rax
198ddc 49898270010000		mov	[r10+368],rax
198de3 6aee			push	qword byte -18
198de5			version142:
198de5 48c7c0eeffffff		mov	rax,dword -18
198dec 49898278010000		mov	[r10+376],rax
198df3			version143:
198df3 50			push	rax
198df4 53			push	rbx
198df5 48b85000fcb0937f
198dfd 0000			mov	rax,140272306225232
198dff 488b18			mov	rbx,[rax]
198e02 48ffc3			inc	rbx
198e05 488918			mov	[rax],rbx
198e08 5b			pop	rbx
198e09 58			pop	rax
198e0a 498d4424f0		lea	rax,[r12-16]
198e0f 49bf0800fcb0937f
198e17 0000			mov	r15,140272306225160
198e19 493b4728			cmp	rax,[r15+40]
198e1d 7d38			jge	short alloc-ok48
198e1f 48c7c010000000		mov	rax,dword 16
198e26 57			push	rdi
198e27 56			push	rsi
198e28 52			push	rdx
198e29 51			push	rcx
198e2a 4150			push	r8
198e2c 4151			push	r9
198e2e 4152			push	r10
198e30 4153			push	r11
198e32 50			push	rax
198e33 4889e7			mov	rdi,rsp
198e36 4883e4f0			and	rsp,byte -16
198e3a 4883ec08			sub	rsp,byte 8
198e3e 57			push	rdi
198e3f e88c526d01		call	gc
198e44 5c			pop	rsp
198e45 4989c4			mov	r12,rax
198e48 58			pop	rax
198e49 415b			pop	r11
198e4b 415a			pop	r10
198e4d 4159			pop	r9
198e4f 4158			pop	r8
198e51 59			pop	rcx
198e52 5a			pop	rdx
198e53 5e			pop	rsi
198e54 5f			pop	rdi
198e55 eb04			jmp	short alloc-end48
198e57			alloc-ok48:
198e57 4983ec10			sub	r12,byte 16
198e5b			alloc-end48:
198e5b 48c7c076020000		mov	rax,dword 630
198e62 49890424			mov	[r12],rax
198e66 48c7c0a0a5ae02		mov	rax,dword 45000096
198e6d 4989442408		mov	[r12+8],rax
198e72 498d442401		lea	rax,[r12+1]
198e77 50			push	rax
198e78			version144:
198e78 58			pop	rax
198e79 49898278010000		mov	[r10+376],rax
198e80 6aee			push	qword byte -18
198e82			version145:
198e82 48c7c0eeffffff		mov	rax,dword -18
198e89 49898280010000		mov	[r10+384],rax
198e90			version146:
198e90 50			push	rax
198e91 53			push	rbx
198e92 48b85000fcb0937f
198e9a 0000			mov	rax,140272306225232
198e9c 488b18			mov	rbx,[rax]
198e9f 48ffc3			inc	rbx
198ea2 488918			mov	[rax],rbx
198ea5 5b			pop	rbx
198ea6 58			pop	rax
198ea7 498d4424f0		lea	rax,[r12-16]
198eac 49bf0800fcb0937f
198eb4 0000			mov	r15,140272306225160
198eb6 493b4728			cmp	rax,[r15+40]
198eba 7d38			jge	short alloc-ok49
198ebc 48c7c010000000		mov	rax,dword 16
198ec3 57			push	rdi
198ec4 56			push	rsi
198ec5 52			push	rdx
198ec6 51			push	rcx
198ec7 4150			push	r8
198ec9 4151			push	r9
198ecb 4152			push	r10
198ecd 4153			push	r11
198ecf 50			push	rax
198ed0 4889e7			mov	rdi,rsp
198ed3 4883e4f0			and	rsp,byte -16
198ed7 4883ec08			sub	rsp,byte 8
198edb 57			push	rdi
198edc e8ef516d01		call	gc
198ee1 5c			pop	rsp
198ee2 4989c4			mov	r12,rax
198ee5 58			pop	rax
198ee6 415b			pop	r11
198ee8 415a			pop	r10
198eea 4159			pop	r9
198eec 4158			pop	r8
198eee 59			pop	rcx
198eef 5a			pop	rdx
198ef0 5e			pop	rsi
198ef1 5f			pop	rdi
198ef2 eb04			jmp	short alloc-end49
198ef4			alloc-ok49:
198ef4 4983ec10			sub	r12,byte 16
198ef8			alloc-end49:
198ef8 48c7c076020000		mov	rax,dword 630
198eff 49890424			mov	[r12],rax
198f03 48c7c0e0b5ae02		mov	rax,dword 45004256
198f0a 4989442408		mov	[r12+8],rax
198f0f 498d442401		lea	rax,[r12+1]
198f14 50			push	rax
198f15			version147:
198f15 58			pop	rax
198f16 49898280010000		mov	[r10+384],rax
198f1d 6aee			push	qword byte -18
198f1f			version148:
198f1f 48c7c0eeffffff		mov	rax,dword -18
198f26 49898288010000		mov	[r10+392],rax
198f2d			version149:
198f2d 50			push	rax
198f2e 53			push	rbx
198f2f 48b85000fcb0937f
198f37 0000			mov	rax,140272306225232
198f39 488b18			mov	rbx,[rax]
198f3c 48ffc3			inc	rbx
198f3f 488918			mov	[rax],rbx
198f42 5b			pop	rbx
198f43 58			pop	rax
198f44 498d4424f0		lea	rax,[r12-16]
198f49 49bf0800fcb0937f
198f51 0000			mov	r15,140272306225160
198f53 493b4728			cmp	rax,[r15+40]
198f57 7d38			jge	short alloc-ok50
198f59 48c7c010000000		mov	rax,dword 16
198f60 57			push	rdi
198f61 56			push	rsi
198f62 52			push	rdx
198f63 51			push	rcx
198f64 4150			push	r8
198f66 4151			push	r9
198f68 4152			push	r10
198f6a 4153			push	r11
198f6c 50			push	rax
198f6d 4889e7			mov	rdi,rsp
198f70 4883e4f0			and	rsp,byte -16
198f74 4883ec08			sub	rsp,byte 8
198f78 57			push	rdi
198f79 e852516d01		call	gc
198f7e 5c			pop	rsp
198f7f 4989c4			mov	r12,rax
198f82 58			pop	rax
198f83 415b			pop	r11
198f85 415a			pop	r10
198f87 4159			pop	r9
198f89 4158			pop	r8
198f8b 59			pop	rcx
198f8c 5a			pop	rdx
198f8d 5e			pop	rsi
198f8e 5f			pop	rdi
198f8f eb04			jmp	short alloc-end50
198f91			alloc-ok50:
198f91 4983ec10			sub	r12,byte 16
198f95			alloc-end50:
198f95 48c7c076020000		mov	rax,dword 630
198f9c 49890424			mov	[r12],rax
198fa0 48c7c020c6ae02		mov	rax,dword 45008416
198fa7 4989442408		mov	[r12+8],rax
198fac 498d442401		lea	rax,[r12+1]
198fb1 50			push	rax
198fb2			version150:
198fb2 58			pop	rax
198fb3 49898288010000		mov	[r10+392],rax
198fba 6aee			push	qword byte -18
198fbc			version151:
198fbc 48c7c0eeffffff		mov	rax,dword -18
198fc3 49898290010000		mov	[r10+400],rax
198fca			version152:
198fca 50			push	rax
198fcb 53			push	rbx
198fcc 48b85000fcb0937f
198fd4 0000			mov	rax,140272306225232
198fd6 488b18			mov	rbx,[rax]
198fd9 48ffc3			inc	rbx
198fdc 488918			mov	[rax],rbx
198fdf 5b			pop	rbx
198fe0 58			pop	rax
198fe1 498d4424f0		lea	rax,[r12-16]
198fe6 49bf0800fcb0937f
198fee 0000			mov	r15,140272306225160
198ff0 493b4728			cmp	rax,[r15+40]
198ff4 7d38			jge	short alloc-ok51
198ff6 48c7c010000000		mov	rax,dword 16
198ffd 57			push	rdi
198ffe 56			push	rsi
198fff 52			push	rdx
199000 51			push	rcx
199001 4150			push	r8
199003 4151			push	r9
199005 4152			push	r10
199007 4153			push	r11
199009 50			push	rax
19900a 4889e7			mov	rdi,rsp
19900d 4883e4f0			and	rsp,byte -16
199011 4883ec08			sub	rsp,byte 8
199015 57			push	rdi
199016 e8b5506d01		call	gc
19901b 5c			pop	rsp
19901c 4989c4			mov	r12,rax
19901f 58			pop	rax
199020 415b			pop	r11
199022 415a			pop	r10
199024 4159			pop	r9
199026 4158			pop	r8
199028 59			pop	rcx
199029 5a			pop	rdx
19902a 5e			pop	rsi
19902b 5f			pop	rdi
19902c eb04			jmp	short alloc-end51
19902e			alloc-ok51:
19902e 4983ec10			sub	r12,byte 16
199032			alloc-end51:
199032 48c7c076020000		mov	rax,dword 630
199039 49890424			mov	[r12],rax
19903d 48c7c060d6ae02		mov	rax,dword 45012576
199044 4989442408		mov	[r12+8],rax
199049 498d442401		lea	rax,[r12+1]
19904e 50			push	rax
19904f			version153:
19904f 58			pop	rax
199050 49898290010000		mov	[r10+400],rax
199057 6aee			push	qword byte -18
199059			version154:
199059 48c7c0eeffffff		mov	rax,dword -18
199060 49898298010000		mov	[r10+408],rax
199067			version155:
199067 50			push	rax
199068 53			push	rbx
199069 48b85000fcb0937f
199071 0000			mov	rax,140272306225232
199073 488b18			mov	rbx,[rax]
199076 48ffc3			inc	rbx
199079 488918			mov	[rax],rbx
19907c 5b			pop	rbx
19907d 58			pop	rax
19907e 498d4424f0		lea	rax,[r12-16]
199083 49bf0800fcb0937f
19908b 0000			mov	r15,140272306225160
19908d 493b4728			cmp	rax,[r15+40]
199091 7d38			jge	short alloc-ok52
199093 48c7c010000000		mov	rax,dword 16
19909a 57			push	rdi
19909b 56			push	rsi
19909c 52			push	rdx
19909d 51			push	rcx
19909e 4150			push	r8
1990a0 4151			push	r9
1990a2 4152			push	r10
1990a4 4153			push	r11
1990a6 50			push	rax
1990a7 4889e7			mov	rdi,rsp
1990aa 4883e4f0			and	rsp,byte -16
1990ae 4883ec08			sub	rsp,byte 8
1990b2 57			push	rdi
1990b3 e818506d01		call	gc
1990b8 5c			pop	rsp
1990b9 4989c4			mov	r12,rax
1990bc 58			pop	rax
1990bd 415b			pop	r11
1990bf 415a			pop	r10
1990c1 4159			pop	r9
1990c3 4158			pop	r8
1990c5 59			pop	rcx
1990c6 5a			pop	rdx
1990c7 5e			pop	rsi
1990c8 5f			pop	rdi
1990c9 eb04			jmp	short alloc-end52
1990cb			alloc-ok52:
1990cb 4983ec10			sub	r12,byte 16
1990cf			alloc-end52:
1990cf 48c7c076020000		mov	rax,dword 630
1990d6 49890424			mov	[r12],rax
1990da 48c7c0a0e6ae02		mov	rax,dword 45016736
1990e1 4989442408		mov	[r12+8],rax
1990e6 498d442401		lea	rax,[r12+1]
1990eb 50			push	rax
1990ec			version156:
1990ec 58			pop	rax
1990ed 49898298010000		mov	[r10+408],rax
1990f4 6aee			push	qword byte -18
1990f6			version157:
1990f6 48c7c0eeffffff		mov	rax,dword -18
1990fd 498982a0010000		mov	[r10+416],rax
199104			version158:
199104 50			push	rax
199105 53			push	rbx
199106 48b85000fcb0937f
19910e 0000			mov	rax,140272306225232
199110 488b18			mov	rbx,[rax]
199113 48ffc3			inc	rbx
199116 488918			mov	[rax],rbx
199119 5b			pop	rbx
19911a 58			pop	rax
19911b 498d4424f0		lea	rax,[r12-16]
199120 49bf0800fcb0937f
199128 0000			mov	r15,140272306225160
19912a 493b4728			cmp	rax,[r15+40]
19912e 7d38			jge	short alloc-ok53
199130 48c7c010000000		mov	rax,dword 16
199137 57			push	rdi
199138 56			push	rsi
199139 52			push	rdx
19913a 51			push	rcx
19913b 4150			push	r8
19913d 4151			push	r9
19913f 4152			push	r10
199141 4153			push	r11
199143 50			push	rax
199144 4889e7			mov	rdi,rsp
199147 4883e4f0			and	rsp,byte -16
19914b 4883ec08			sub	rsp,byte 8
19914f 57			push	rdi
199150 e87b4f6d01		call	gc
199155 5c			pop	rsp
199156 4989c4			mov	r12,rax
199159 58			pop	rax
19915a 415b			pop	r11
19915c 415a			pop	r10
19915e 4159			pop	r9
199160 4158			pop	r8
199162 59			pop	rcx
199163 5a			pop	rdx
199164 5e			pop	rsi
199165 5f			pop	rdi
199166 eb04			jmp	short alloc-end53
199168			alloc-ok53:
199168 4983ec10			sub	r12,byte 16
19916c			alloc-end53:
19916c 48c7c076020000		mov	rax,dword 630
199173 49890424			mov	[r12],rax
199177 48c7c0e0f6ae02		mov	rax,dword 45020896
19917e 4989442408		mov	[r12+8],rax
199183 498d442401		lea	rax,[r12+1]
199188 50			push	rax
199189			version159:
199189 58			pop	rax
19918a 498982a0010000		mov	[r10+416],rax
199191 6aee			push	qword byte -18
199193			version160:
199193 48c7c0eeffffff		mov	rax,dword -18
19919a 498982a8010000		mov	[r10+424],rax
1991a1			version161:
1991a1			version162:
1991a1 50			push	rax
1991a2 53			push	rbx
1991a3 48b85000fcb0937f
1991ab 0000			mov	rax,140272306225232
1991ad 488b18			mov	rbx,[rax]
1991b0 48ffc3			inc	rbx
1991b3 488918			mov	[rax],rbx
1991b6 5b			pop	rbx
1991b7 58			pop	rax
1991b8 498d4424f0		lea	rax,[r12-16]
1991bd 49bf0800fcb0937f
1991c5 0000			mov	r15,140272306225160
1991c7 493b4728			cmp	rax,[r15+40]
1991cb 7d38			jge	short alloc-ok54
1991cd 48c7c010000000		mov	rax,dword 16
1991d4 57			push	rdi
1991d5 56			push	rsi
1991d6 52			push	rdx
1991d7 51			push	rcx
1991d8 4150			push	r8
1991da 4151			push	r9
1991dc 4152			push	r10
1991de 4153			push	r11
1991e0 50			push	rax
1991e1 4889e7			mov	rdi,rsp
1991e4 4883e4f0			and	rsp,byte -16
1991e8 4883ec08			sub	rsp,byte 8
1991ec 57			push	rdi
1991ed e8de4e6d01		call	gc
1991f2 5c			pop	rsp
1991f3 4989c4			mov	r12,rax
1991f6 58			pop	rax
1991f7 415b			pop	r11
1991f9 415a			pop	r10
1991fb 4159			pop	r9
1991fd 4158			pop	r8
1991ff 59			pop	rcx
199200 5a			pop	rdx
199201 5e			pop	rsi
199202 5f			pop	rdi
199203 eb04			jmp	short alloc-end54
199205			alloc-ok54:
199205 4983ec10			sub	r12,byte 16
199209			alloc-end54:
199209 48c7c076020000		mov	rax,dword 630
199210 49890424			mov	[r12],rax
199214 48c7c02007af02		mov	rax,dword 45025056
19921b 4989442408		mov	[r12+8],rax
199220 498d442401		lea	rax,[r12+1]
199225 50			push	rax
199226			version163:
199226 58			pop	rax
199227 498982a8010000		mov	[r10+424],rax
19922e 6aee			push	qword byte -18
199230			version164:
199230 48c7c0eeffffff		mov	rax,dword -18
199237 498982b0010000		mov	[r10+432],rax
19923e			version165:
19923e			version166:
19923e 50			push	rax
19923f 53			push	rbx
199240 48b85000fcb0937f
199248 0000			mov	rax,140272306225232
19924a 488b18			mov	rbx,[rax]
19924d 48ffc3			inc	rbx
199250 488918			mov	[rax],rbx
199253 5b			pop	rbx
199254 58			pop	rax
199255 498d4424f0		lea	rax,[r12-16]
19925a 49bf0800fcb0937f
199262 0000			mov	r15,140272306225160
199264 493b4728			cmp	rax,[r15+40]
199268 7d38			jge	short alloc-ok55
19926a 48c7c010000000		mov	rax,dword 16
199271 57			push	rdi
199272 56			push	rsi
199273 52			push	rdx
199274 51			push	rcx
199275 4150			push	r8
199277 4151			push	r9
199279 4152			push	r10
19927b 4153			push	r11
19927d 50			push	rax
19927e 4889e7			mov	rdi,rsp
199281 4883e4f0			and	rsp,byte -16
199285 4883ec08			sub	rsp,byte 8
199289 57			push	rdi
19928a e8414e6d01		call	gc
19928f 5c			pop	rsp
199290 4989c4			mov	r12,rax
199293 58			pop	rax
199294 415b			pop	r11
199296 415a			pop	r10
199298 4159			pop	r9
19929a 4158			pop	r8
19929c 59			pop	rcx
19929d 5a			pop	rdx
19929e 5e			pop	rsi
19929f 5f			pop	rdi
1992a0 eb04			jmp	short alloc-end55
1992a2			alloc-ok55:
1992a2 4983ec10			sub	r12,byte 16
1992a6			alloc-end55:
1992a6 48c7c076020000		mov	rax,dword 630
1992ad 49890424			mov	[r12],rax
1992b1 48c7c06017af02		mov	rax,dword 45029216
1992b8 4989442408		mov	[r12+8],rax
1992bd 498d442401		lea	rax,[r12+1]
1992c2 50			push	rax
1992c3			version167:
1992c3 58			pop	rax
1992c4 498982b0010000		mov	[r10+432],rax
1992cb 6aee			push	qword byte -18
1992cd			version168:
1992cd 48c7c0eeffffff		mov	rax,dword -18
1992d4 498982b8010000		mov	[r10+440],rax
1992db			version169:
1992db 50			push	rax
1992dc 53			push	rbx
1992dd 48b85000fcb0937f
1992e5 0000			mov	rax,140272306225232
1992e7 488b18			mov	rbx,[rax]
1992ea 48ffc3			inc	rbx
1992ed 488918			mov	[rax],rbx
1992f0 5b			pop	rbx
1992f1 58			pop	rax
1992f2 498d4424f0		lea	rax,[r12-16]
1992f7 49bf0800fcb0937f
1992ff 0000			mov	r15,140272306225160
199301 493b4728			cmp	rax,[r15+40]
199305 7d38			jge	short alloc-ok56
199307 48c7c010000000		mov	rax,dword 16
19930e 57			push	rdi
19930f 56			push	rsi
199310 52			push	rdx
199311 51			push	rcx
199312 4150			push	r8
199314 4151			push	r9
199316 4152			push	r10
199318 4153			push	r11
19931a 50			push	rax
19931b 4889e7			mov	rdi,rsp
19931e 4883e4f0			and	rsp,byte -16
199322 4883ec08			sub	rsp,byte 8
199326 57			push	rdi
199327 e8a44d6d01		call	gc
19932c 5c			pop	rsp
19932d 4989c4			mov	r12,rax
199330 58			pop	rax
199331 415b			pop	r11
199333 415a			pop	r10
199335 4159			pop	r9
199337 4158			pop	r8
199339 59			pop	rcx
19933a 5a			pop	rdx
19933b 5e			pop	rsi
19933c 5f			pop	rdi
19933d eb04			jmp	short alloc-end56
19933f			alloc-ok56:
19933f 4983ec10			sub	r12,byte 16
199343			alloc-end56:
199343 48c7c076020000		mov	rax,dword 630
19934a 49890424			mov	[r12],rax
19934e 48c7c0a027af02		mov	rax,dword 45033376
199355 4989442408		mov	[r12+8],rax
19935a 498d442401		lea	rax,[r12+1]
19935f 50			push	rax
199360			version170:
199360 58			pop	rax
199361 498982b8010000		mov	[r10+440],rax
199368 6aee			push	qword byte -18
19936a			version171:
19936a 48c7c0eeffffff		mov	rax,dword -18
199371 498982c0010000		mov	[r10+448],rax
199378			version172:
199378 50			push	rax
199379 53			push	rbx
19937a 48b85000fcb0937f
199382 0000			mov	rax,140272306225232
199384 488b18			mov	rbx,[rax]
199387 48ffc3			inc	rbx
19938a 488918			mov	[rax],rbx
19938d 5b			pop	rbx
19938e 58			pop	rax
19938f 498d4424f0		lea	rax,[r12-16]
199394 49bf0800fcb0937f
19939c 0000			mov	r15,140272306225160
19939e 493b4728			cmp	rax,[r15+40]
1993a2 7d38			jge	short alloc-ok57
1993a4 48c7c010000000		mov	rax,dword 16
1993ab 57			push	rdi
1993ac 56			push	rsi
1993ad 52			push	rdx
1993ae 51			push	rcx
1993af 4150			push	r8
1993b1 4151			push	r9
1993b3 4152			push	r10
1993b5 4153			push	r11
1993b7 50			push	rax
1993b8 4889e7			mov	rdi,rsp
1993bb 4883e4f0			and	rsp,byte -16
1993bf 4883ec08			sub	rsp,byte 8
1993c3 57			push	rdi
1993c4 e8074d6d01		call	gc
1993c9 5c			pop	rsp
1993ca 4989c4			mov	r12,rax
1993cd 58			pop	rax
1993ce 415b			pop	r11
1993d0 415a			pop	r10
1993d2 4159			pop	r9
1993d4 4158			pop	r8
1993d6 59			pop	rcx
1993d7 5a			pop	rdx
1993d8 5e			pop	rsi
1993d9 5f			pop	rdi
1993da eb04			jmp	short alloc-end57
1993dc			alloc-ok57:
1993dc 4983ec10			sub	r12,byte 16
1993e0			alloc-end57:
1993e0 48c7c076020000		mov	rax,dword 630
1993e7 49890424			mov	[r12],rax
1993eb 48c7c0e037af02		mov	rax,dword 45037536
1993f2 4989442408		mov	[r12+8],rax
1993f7 498d442401		lea	rax,[r12+1]
1993fc 50			push	rax
1993fd			version173:
1993fd 58			pop	rax
1993fe 498982c0010000		mov	[r10+448],rax
199405 6aee			push	qword byte -18
199407			version174:
199407 48c7c0eeffffff		mov	rax,dword -18
19940e 498982c8010000		mov	[r10+456],rax
199415			version175:
199415 50			push	rax
199416 53			push	rbx
199417 48b85000fcb0937f
19941f 0000			mov	rax,140272306225232
199421 488b18			mov	rbx,[rax]
199424 48ffc3			inc	rbx
199427 488918			mov	[rax],rbx
19942a 5b			pop	rbx
19942b 58			pop	rax
19942c 498d4424f0		lea	rax,[r12-16]
199431 49bf0800fcb0937f
199439 0000			mov	r15,140272306225160
19943b 493b4728			cmp	rax,[r15+40]
19943f 7d38			jge	short alloc-ok58
199441 48c7c010000000		mov	rax,dword 16
199448 57			push	rdi
199449 56			push	rsi
19944a 52			push	rdx
19944b 51			push	rcx
19944c 4150			push	r8
19944e 4151			push	r9
199450 4152			push	r10
199452 4153			push	r11
199454 50			push	rax
199455 4889e7			mov	rdi,rsp
199458 4883e4f0			and	rsp,byte -16
19945c 4883ec08			sub	rsp,byte 8
199460 57			push	rdi
199461 e86a4c6d01		call	gc
199466 5c			pop	rsp
199467 4989c4			mov	r12,rax
19946a 58			pop	rax
19946b 415b			pop	r11
19946d 415a			pop	r10
19946f 4159			pop	r9
199471 4158			pop	r8
199473 59			pop	rcx
199474 5a			pop	rdx
199475 5e			pop	rsi
199476 5f			pop	rdi
199477 eb04			jmp	short alloc-end58
199479			alloc-ok58:
199479 4983ec10			sub	r12,byte 16
19947d			alloc-end58:
19947d 48c7c076020000		mov	rax,dword 630
199484 49890424			mov	[r12],rax
199488 48c7c02048af02		mov	rax,dword 45041696
19948f 4989442408		mov	[r12+8],rax
199494 498d442401		lea	rax,[r12+1]
199499 50			push	rax
19949a			version176:
19949a 58			pop	rax
19949b 498982c8010000		mov	[r10+456],rax
1994a2 6aee			push	qword byte -18
1994a4			version177:
1994a4 48c7c0eeffffff		mov	rax,dword -18
1994ab 498982d0010000		mov	[r10+464],rax
1994b2			version178:
1994b2 50			push	rax
1994b3 53			push	rbx
1994b4 48b85000fcb0937f
1994bc 0000			mov	rax,140272306225232
1994be 488b18			mov	rbx,[rax]
1994c1 48ffc3			inc	rbx
1994c4 488918			mov	[rax],rbx
1994c7 5b			pop	rbx
1994c8 58			pop	rax
1994c9 498d4424f0		lea	rax,[r12-16]
1994ce 49bf0800fcb0937f
1994d6 0000			mov	r15,140272306225160
1994d8 493b4728			cmp	rax,[r15+40]
1994dc 7d38			jge	short alloc-ok59
1994de 48c7c010000000		mov	rax,dword 16
1994e5 57			push	rdi
1994e6 56			push	rsi
1994e7 52			push	rdx
1994e8 51			push	rcx
1994e9 4150			push	r8
1994eb 4151			push	r9
1994ed 4152			push	r10
1994ef 4153			push	r11
1994f1 50			push	rax
1994f2 4889e7			mov	rdi,rsp
1994f5 4883e4f0			and	rsp,byte -16
1994f9 4883ec08			sub	rsp,byte 8
1994fd 57			push	rdi
1994fe e8cd4b6d01		call	gc
199503 5c			pop	rsp
199504 4989c4			mov	r12,rax
199507 58			pop	rax
199508 415b			pop	r11
19950a 415a			pop	r10
19950c 4159			pop	r9
19950e 4158			pop	r8
199510 59			pop	rcx
199511 5a			pop	rdx
199512 5e			pop	rsi
199513 5f			pop	rdi
199514 eb04			jmp	short alloc-end59
199516			alloc-ok59:
199516 4983ec10			sub	r12,byte 16
19951a			alloc-end59:
19951a 48c7c076020000		mov	rax,dword 630
199521 49890424			mov	[r12],rax
199525 48c7c06058af02		mov	rax,dword 45045856
19952c 4989442408		mov	[r12+8],rax
199531 498d442401		lea	rax,[r12+1]
199536 50			push	rax
199537			version179:
199537 58			pop	rax
199538 498982d0010000		mov	[r10+464],rax
19953f 6aee			push	qword byte -18
199541			version180:
199541 48c7c0eeffffff		mov	rax,dword -18
199548 498982d8010000		mov	[r10+472],rax
19954f			version181:
19954f 50			push	rax
199550 53			push	rbx
199551 48b85000fcb0937f
199559 0000			mov	rax,140272306225232
19955b 488b18			mov	rbx,[rax]
19955e 48ffc3			inc	rbx
199561 488918			mov	[rax],rbx
199564 5b			pop	rbx
199565 58			pop	rax
199566 498d4424f0		lea	rax,[r12-16]
19956b 49bf0800fcb0937f
199573 0000			mov	r15,140272306225160
199575 493b4728			cmp	rax,[r15+40]
199579 7d38			jge	short alloc-ok60
19957b 48c7c010000000		mov	rax,dword 16
199582 57			push	rdi
199583 56			push	rsi
199584 52			push	rdx
199585 51			push	rcx
199586 4150			push	r8
199588 4151			push	r9
19958a 4152			push	r10
19958c 4153			push	r11
19958e 50			push	rax
19958f 4889e7			mov	rdi,rsp
199592 4883e4f0			and	rsp,byte -16
199596 4883ec08			sub	rsp,byte 8
19959a 57			push	rdi
19959b e8304b6d01		call	gc
1995a0 5c			pop	rsp
1995a1 4989c4			mov	r12,rax
1995a4 58			pop	rax
1995a5 415b			pop	r11
1995a7 415a			pop	r10
1995a9 4159			pop	r9
1995ab 4158			pop	r8
1995ad 59			pop	rcx
1995ae 5a			pop	rdx
1995af 5e			pop	rsi
1995b0 5f			pop	rdi
1995b1 eb04			jmp	short alloc-end60
1995b3			alloc-ok60:
1995b3 4983ec10			sub	r12,byte 16
1995b7			alloc-end60:
1995b7 48c7c076020000		mov	rax,dword 630
1995be 49890424			mov	[r12],rax
1995c2 48c7c0a068af02		mov	rax,dword 45050016
1995c9 4989442408		mov	[r12+8],rax
1995ce 498d442401		lea	rax,[r12+1]
1995d3 50			push	rax
1995d4			version182:
1995d4 58			pop	rax
1995d5 498982d8010000		mov	[r10+472],rax
1995dc 6aee			push	qword byte -18
1995de			version183:
1995de 48c7c0eeffffff		mov	rax,dword -18
1995e5 498982e0010000		mov	[r10+480],rax
1995ec			version184:
1995ec 50			push	rax
1995ed 53			push	rbx
1995ee 48b85000fcb0937f
1995f6 0000			mov	rax,140272306225232
1995f8 488b18			mov	rbx,[rax]
1995fb 48ffc3			inc	rbx
1995fe 488918			mov	[rax],rbx
199601 5b			pop	rbx
199602 58			pop	rax
199603 498d4424f0		lea	rax,[r12-16]
199608 49bf0800fcb0937f
199610 0000			mov	r15,140272306225160
199612 493b4728			cmp	rax,[r15+40]
199616 7d38			jge	short alloc-ok61
199618 48c7c010000000		mov	rax,dword 16
19961f 57			push	rdi
199620 56			push	rsi
199621 52			push	rdx
199622 51			push	rcx
199623 4150			push	r8
199625 4151			push	r9
199627 4152			push	r10
199629 4153			push	r11
19962b 50			push	rax
19962c 4889e7			mov	rdi,rsp
19962f 4883e4f0			and	rsp,byte -16
199633 4883ec08			sub	rsp,byte 8
199637 57			push	rdi
199638 e8934a6d01		call	gc
19963d 5c			pop	rsp
19963e 4989c4			mov	r12,rax
199641 58			pop	rax
199642 415b			pop	r11
199644 415a			pop	r10
199646 4159			pop	r9
199648 4158			pop	r8
19964a 59			pop	rcx
19964b 5a			pop	rdx
19964c 5e			pop	rsi
19964d 5f			pop	rdi
19964e eb04			jmp	short alloc-end61
199650			alloc-ok61:
199650 4983ec10			sub	r12,byte 16
199654			alloc-end61:
199654 48c7c076020000		mov	rax,dword 630
19965b 49890424			mov	[r12],rax
19965f 48c7c0e078af02		mov	rax,dword 45054176
199666 4989442408		mov	[r12+8],rax
19966b 498d442401		lea	rax,[r12+1]
199670 50			push	rax
199671			version185:
199671 58			pop	rax
199672 498982e0010000		mov	[r10+480],rax
199679 6aee			push	qword byte -18
19967b			version186:
19967b 48c7c0eeffffff		mov	rax,dword -18
199682 498982e8010000		mov	[r10+488],rax
199689			version187:
199689 50			push	rax
19968a 53			push	rbx
19968b 48b85000fcb0937f
199693 0000			mov	rax,140272306225232
199695 488b18			mov	rbx,[rax]
199698 48ffc3			inc	rbx
19969b 488918			mov	[rax],rbx
19969e 5b			pop	rbx
19969f 58			pop	rax
1996a0 498d4424f0		lea	rax,[r12-16]
1996a5 49bf0800fcb0937f
1996ad 0000			mov	r15,140272306225160
1996af 493b4728			cmp	rax,[r15+40]
1996b3 7d38			jge	short alloc-ok62
1996b5 48c7c010000000		mov	rax,dword 16
1996bc 57			push	rdi
1996bd 56			push	rsi
1996be 52			push	rdx
1996bf 51			push	rcx
1996c0 4150			push	r8
1996c2 4151			push	r9
1996c4 4152			push	r10
1996c6 4153			push	r11
1996c8 50			push	rax
1996c9 4889e7			mov	rdi,rsp
1996cc 4883e4f0			and	rsp,byte -16
1996d0 4883ec08			sub	rsp,byte 8
1996d4 57			push	rdi
1996d5 e8f6496d01		call	gc
1996da 5c			pop	rsp
1996db 4989c4			mov	r12,rax
1996de 58			pop	rax
1996df 415b			pop	r11
1996e1 415a			pop	r10
1996e3 4159			pop	r9
1996e5 4158			pop	r8
1996e7 59			pop	rcx
1996e8 5a			pop	rdx
1996e9 5e			pop	rsi
1996ea 5f			pop	rdi
1996eb eb04			jmp	short alloc-end62
1996ed			alloc-ok62:
1996ed 4983ec10			sub	r12,byte 16
1996f1			alloc-end62:
1996f1 48c7c076020000		mov	rax,dword 630
1996f8 49890424			mov	[r12],rax
1996fc 48c7c02089af02		mov	rax,dword 45058336
199703 4989442408		mov	[r12+8],rax
199708 498d442401		lea	rax,[r12+1]
19970d 50			push	rax
19970e			version188:
19970e 58			pop	rax
19970f 498982e8010000		mov	[r10+488],rax
199716 6aee			push	qword byte -18
199718			version189:
199718 48c7c0eeffffff		mov	rax,dword -18
19971f 498982f0010000		mov	[r10+496],rax
199726			version190:
199726 50			push	rax
199727 53			push	rbx
199728 48b85000fcb0937f
199730 0000			mov	rax,140272306225232
199732 488b18			mov	rbx,[rax]
199735 48ffc3			inc	rbx
199738 488918			mov	[rax],rbx
19973b 5b			pop	rbx
19973c 58			pop	rax
19973d 498d4424f0		lea	rax,[r12-16]
199742 49bf0800fcb0937f
19974a 0000			mov	r15,140272306225160
19974c 493b4728			cmp	rax,[r15+40]
199750 7d38			jge	short alloc-ok63
199752 48c7c010000000		mov	rax,dword 16
199759 57			push	rdi
19975a 56			push	rsi
19975b 52			push	rdx
19975c 51			push	rcx
19975d 4150			push	r8
19975f 4151			push	r9
199761 4152			push	r10
199763 4153			push	r11
199765 50			push	rax
199766 4889e7			mov	rdi,rsp
199769 4883e4f0			and	rsp,byte -16
19976d 4883ec08			sub	rsp,byte 8
199771 57			push	rdi
199772 e859496d01		call	gc
199777 5c			pop	rsp
199778 4989c4			mov	r12,rax
19977b 58			pop	rax
19977c 415b			pop	r11
19977e 415a			pop	r10
199780 4159			pop	r9
199782 4158			pop	r8
199784 59			pop	rcx
199785 5a			pop	rdx
199786 5e			pop	rsi
199787 5f			pop	rdi
199788 eb04			jmp	short alloc-end63
19978a			alloc-ok63:
19978a 4983ec10			sub	r12,byte 16
19978e			alloc-end63:
19978e 48c7c076020000		mov	rax,dword 630
199795 49890424			mov	[r12],rax
199799 48c7c06099af02		mov	rax,dword 45062496
1997a0 4989442408		mov	[r12+8],rax
1997a5 498d442401		lea	rax,[r12+1]
1997aa 50			push	rax
1997ab			version191:
1997ab 58			pop	rax
1997ac 498982f0010000		mov	[r10+496],rax
1997b3 6aee			push	qword byte -18
1997b5			version192:
1997b5 48c7c0eeffffff		mov	rax,dword -18
1997bc 498982f8010000		mov	[r10+504],rax
1997c3			version193:
1997c3 50			push	rax
1997c4 53			push	rbx
1997c5 48b85000fcb0937f
1997cd 0000			mov	rax,140272306225232
1997cf 488b18			mov	rbx,[rax]
1997d2 48ffc3			inc	rbx
1997d5 488918			mov	[rax],rbx
1997d8 5b			pop	rbx
1997d9 58			pop	rax
1997da 498d4424f0		lea	rax,[r12-16]
1997df 49bf0800fcb0937f
1997e7 0000			mov	r15,140272306225160
1997e9 493b4728			cmp	rax,[r15+40]
1997ed 7d38			jge	short alloc-ok64
1997ef 48c7c010000000		mov	rax,dword 16
1997f6 57			push	rdi
1997f7 56			push	rsi
1997f8 52			push	rdx
1997f9 51			push	rcx
1997fa 4150			push	r8
1997fc 4151			push	r9
1997fe 4152			push	r10
199800 4153			push	r11
199802 50			push	rax
199803 4889e7			mov	rdi,rsp
199806 4883e4f0			and	rsp,byte -16
19980a 4883ec08			sub	rsp,byte 8
19980e 57			push	rdi
19980f e8bc486d01		call	gc
199814 5c			pop	rsp
199815 4989c4			mov	r12,rax
199818 58			pop	rax
199819 415b			pop	r11
19981b 415a			pop	r10
19981d 4159			pop	r9
19981f 4158			pop	r8
199821 59			pop	rcx
199822 5a			pop	rdx
199823 5e			pop	rsi
199824 5f			pop	rdi
199825 eb04			jmp	short alloc-end64
199827			alloc-ok64:
199827 4983ec10			sub	r12,byte 16
19982b			alloc-end64:
19982b 48c7c076020000		mov	rax,dword 630
199832 49890424			mov	[r12],rax
199836 48c7c0a0a9af02		mov	rax,dword 45066656
19983d 4989442408		mov	[r12+8],rax
199842 498d442401		lea	rax,[r12+1]
199847 50			push	rax
199848			version194:
199848 58			pop	rax
199849 498982f8010000		mov	[r10+504],rax
199850 6aee			push	qword byte -18
199852			version195:
199852 48c7c0eeffffff		mov	rax,dword -18
199859 49898200020000		mov	[r10+512],rax
199860			version196:
199860 50			push	rax
199861 53			push	rbx
199862 48b85000fcb0937f
19986a 0000			mov	rax,140272306225232
19986c 488b18			mov	rbx,[rax]
19986f 48ffc3			inc	rbx
199872 488918			mov	[rax],rbx
199875 5b			pop	rbx
199876 58			pop	rax
199877 498d4424f0		lea	rax,[r12-16]
19987c 49bf0800fcb0937f
199884 0000			mov	r15,140272306225160
199886 493b4728			cmp	rax,[r15+40]
19988a 7d38			jge	short alloc-ok65
19988c 48c7c010000000		mov	rax,dword 16
199893 57			push	rdi
199894 56			push	rsi
199895 52			push	rdx
199896 51			push	rcx
199897 4150			push	r8
199899 4151			push	r9
19989b 4152			push	r10
19989d 4153			push	r11
19989f 50			push	rax
1998a0 4889e7			mov	rdi,rsp
1998a3 4883e4f0			and	rsp,byte -16
1998a7 4883ec08			sub	rsp,byte 8
1998ab 57			push	rdi
1998ac e81f486d01		call	gc
1998b1 5c			pop	rsp
1998b2 4989c4			mov	r12,rax
1998b5 58			pop	rax
1998b6 415b			pop	r11
1998b8 415a			pop	r10
1998ba 4159			pop	r9
1998bc 4158			pop	r8
1998be 59			pop	rcx
1998bf 5a			pop	rdx
1998c0 5e			pop	rsi
1998c1 5f			pop	rdi
1998c2 eb04			jmp	short alloc-end65
1998c4			alloc-ok65:
1998c4 4983ec10			sub	r12,byte 16
1998c8			alloc-end65:
1998c8 48c7c076020000		mov	rax,dword 630
1998cf 49890424			mov	[r12],rax
1998d3 48c7c0e0b9af02		mov	rax,dword 45070816
1998da 4989442408		mov	[r12+8],rax
1998df 498d442401		lea	rax,[r12+1]
1998e4 50			push	rax
1998e5			version197:
1998e5 58			pop	rax
1998e6 49898200020000		mov	[r10+512],rax
1998ed 6aee			push	qword byte -18
1998ef			version198:
1998ef 48c7c0eeffffff		mov	rax,dword -18
1998f6 49898208020000		mov	[r10+520],rax
1998fd			version199:
1998fd 50			push	rax
1998fe 53			push	rbx
1998ff 48b85000fcb0937f
199907 0000			mov	rax,140272306225232
199909 488b18			mov	rbx,[rax]
19990c 48ffc3			inc	rbx
19990f 488918			mov	[rax],rbx
199912 5b			pop	rbx
199913 58			pop	rax
199914 498d4424f0		lea	rax,[r12-16]
199919 49bf0800fcb0937f
199921 0000			mov	r15,140272306225160
199923 493b4728			cmp	rax,[r15+40]
199927 7d38			jge	short alloc-ok66
199929 48c7c010000000		mov	rax,dword 16
199930 57			push	rdi
199931 56			push	rsi
199932 52			push	rdx
199933 51			push	rcx
199934 4150			push	r8
199936 4151			push	r9
199938 4152			push	r10
19993a 4153			push	r11
19993c 50			push	rax
19993d 4889e7			mov	rdi,rsp
199940 4883e4f0			and	rsp,byte -16
199944 4883ec08			sub	rsp,byte 8
199948 57			push	rdi
199949 e882476d01		call	gc
19994e 5c			pop	rsp
19994f 4989c4			mov	r12,rax
199952 58			pop	rax
199953 415b			pop	r11
199955 415a			pop	r10
199957 4159			pop	r9
199959 4158			pop	r8
19995b 59			pop	rcx
19995c 5a			pop	rdx
19995d 5e			pop	rsi
19995e 5f			pop	rdi
19995f eb04			jmp	short alloc-end66
199961			alloc-ok66:
199961 4983ec10			sub	r12,byte 16
199965			alloc-end66:
199965 48c7c076020000		mov	rax,dword 630
19996c 49890424			mov	[r12],rax
199970 48c7c020caaf02		mov	rax,dword 45074976
199977 4989442408		mov	[r12+8],rax
19997c 498d442401		lea	rax,[r12+1]
199981 50			push	rax
199982			version200:
199982 58			pop	rax
199983 49898208020000		mov	[r10+520],rax
19998a 6aee			push	qword byte -18
19998c			version201:
19998c 48c7c0eeffffff		mov	rax,dword -18
199993 49898210020000		mov	[r10+528],rax
19999a			version202:
19999a 50			push	rax
19999b 53			push	rbx
19999c 48b85000fcb0937f
1999a4 0000			mov	rax,140272306225232
1999a6 488b18			mov	rbx,[rax]
1999a9 48ffc3			inc	rbx
1999ac 488918			mov	[rax],rbx
1999af 5b			pop	rbx
1999b0 58			pop	rax
1999b1 498d4424f0		lea	rax,[r12-16]
1999b6 49bf0800fcb0937f
1999be 0000			mov	r15,140272306225160
1999c0 493b4728			cmp	rax,[r15+40]
1999c4 7d38			jge	short alloc-ok67
1999c6 48c7c010000000		mov	rax,dword 16
1999cd 57			push	rdi
1999ce 56			push	rsi
1999cf 52			push	rdx
1999d0 51			push	rcx
1999d1 4150			push	r8
1999d3 4151			push	r9
1999d5 4152			push	r10
1999d7 4153			push	r11
1999d9 50			push	rax
1999da 4889e7			mov	rdi,rsp
1999dd 4883e4f0			and	rsp,byte -16
1999e1 4883ec08			sub	rsp,byte 8
1999e5 57			push	rdi
1999e6 e8e5466d01		call	gc
1999eb 5c			pop	rsp
1999ec 4989c4			mov	r12,rax
1999ef 58			pop	rax
1999f0 415b			pop	r11
1999f2 415a			pop	r10
1999f4 4159			pop	r9
1999f6 4158			pop	r8
1999f8 59			pop	rcx
1999f9 5a			pop	rdx
1999fa 5e			pop	rsi
1999fb 5f			pop	rdi
1999fc eb04			jmp	short alloc-end67
1999fe			alloc-ok67:
1999fe 4983ec10			sub	r12,byte 16
199a02			alloc-end67:
199a02 48c7c076020000		mov	rax,dword 630
199a09 49890424			mov	[r12],rax
199a0d 48c7c060daaf02		mov	rax,dword 45079136
199a14 4989442408		mov	[r12+8],rax
199a19 498d442401		lea	rax,[r12+1]
199a1e 50			push	rax
199a1f			version203:
199a1f 58			pop	rax
199a20 49898210020000		mov	[r10+528],rax
199a27 6aee			push	qword byte -18
199a29			version204:
199a29 48c7c0eeffffff		mov	rax,dword -18
199a30 49898218020000		mov	[r10+536],rax
199a37			version205:
199a37 50			push	rax
199a38 53			push	rbx
199a39 48b85000fcb0937f
199a41 0000			mov	rax,140272306225232
199a43 488b18			mov	rbx,[rax]
199a46 48ffc3			inc	rbx
199a49 488918			mov	[rax],rbx
199a4c 5b			pop	rbx
199a4d 58			pop	rax
199a4e 498d4424f0		lea	rax,[r12-16]
199a53 49bf0800fcb0937f
199a5b 0000			mov	r15,140272306225160
199a5d 493b4728			cmp	rax,[r15+40]
199a61 7d38			jge	short alloc-ok68
199a63 48c7c010000000		mov	rax,dword 16
199a6a 57			push	rdi
199a6b 56			push	rsi
199a6c 52			push	rdx
199a6d 51			push	rcx
199a6e 4150			push	r8
199a70 4151			push	r9
199a72 4152			push	r10
199a74 4153			push	r11
199a76 50			push	rax
199a77 4889e7			mov	rdi,rsp
199a7a 4883e4f0			and	rsp,byte -16
199a7e 4883ec08			sub	rsp,byte 8
199a82 57			push	rdi
199a83 e848466d01		call	gc
199a88 5c			pop	rsp
199a89 4989c4			mov	r12,rax
199a8c 58			pop	rax
199a8d 415b			pop	r11
199a8f 415a			pop	r10
199a91 4159			pop	r9
199a93 4158			pop	r8
199a95 59			pop	rcx
199a96 5a			pop	rdx
199a97 5e			pop	rsi
199a98 5f			pop	rdi
199a99 eb04			jmp	short alloc-end68
199a9b			alloc-ok68:
199a9b 4983ec10			sub	r12,byte 16
199a9f			alloc-end68:
199a9f 48c7c076020000		mov	rax,dword 630
199aa6 49890424			mov	[r12],rax
199aaa 48c7c0a0eaaf02		mov	rax,dword 45083296
199ab1 4989442408		mov	[r12+8],rax
199ab6 498d442401		lea	rax,[r12+1]
199abb 50			push	rax
199abc			version206:
199abc 58			pop	rax
199abd 49898218020000		mov	[r10+536],rax
199ac4 6aee			push	qword byte -18
199ac6			version207:
199ac6 48c7c0eeffffff		mov	rax,dword -18
199acd 49898220020000		mov	[r10+544],rax
199ad4			version208:
199ad4 50			push	rax
199ad5 53			push	rbx
199ad6 48b85000fcb0937f
199ade 0000			mov	rax,140272306225232
199ae0 488b18			mov	rbx,[rax]
199ae3 48ffc3			inc	rbx
199ae6 488918			mov	[rax],rbx
199ae9 5b			pop	rbx
199aea 58			pop	rax
199aeb 498d4424f0		lea	rax,[r12-16]
199af0 49bf0800fcb0937f
199af8 0000			mov	r15,140272306225160
199afa 493b4728			cmp	rax,[r15+40]
199afe 7d38			jge	short alloc-ok69
199b00 48c7c010000000		mov	rax,dword 16
199b07 57			push	rdi
199b08 56			push	rsi
199b09 52			push	rdx
199b0a 51			push	rcx
199b0b 4150			push	r8
199b0d 4151			push	r9
199b0f 4152			push	r10
199b11 4153			push	r11
199b13 50			push	rax
199b14 4889e7			mov	rdi,rsp
199b17 4883e4f0			and	rsp,byte -16
199b1b 4883ec08			sub	rsp,byte 8
199b1f 57			push	rdi
199b20 e8ab456d01		call	gc
199b25 5c			pop	rsp
199b26 4989c4			mov	r12,rax
199b29 58			pop	rax
199b2a 415b			pop	r11
199b2c 415a			pop	r10
199b2e 4159			pop	r9
199b30 4158			pop	r8
199b32 59			pop	rcx
199b33 5a			pop	rdx
199b34 5e			pop	rsi
199b35 5f			pop	rdi
199b36 eb04			jmp	short alloc-end69
199b38			alloc-ok69:
199b38 4983ec10			sub	r12,byte 16
199b3c			alloc-end69:
199b3c 48c7c076020000		mov	rax,dword 630
199b43 49890424			mov	[r12],rax
199b47 48c7c0e0faaf02		mov	rax,dword 45087456
199b4e 4989442408		mov	[r12+8],rax
199b53 498d442401		lea	rax,[r12+1]
199b58 50			push	rax
199b59			version209:
199b59 58			pop	rax
199b5a 49898220020000		mov	[r10+544],rax
199b61 6aee			push	qword byte -18
199b63			version210:
199b63 48c7c0eeffffff		mov	rax,dword -18
199b6a 49898228020000		mov	[r10+552],rax
199b71			version211:
199b71 50			push	rax
199b72 53			push	rbx
199b73 48b85000fcb0937f
199b7b 0000			mov	rax,140272306225232
199b7d 488b18			mov	rbx,[rax]
199b80 48ffc3			inc	rbx
199b83 488918			mov	[rax],rbx
199b86 5b			pop	rbx
199b87 58			pop	rax
199b88 498d4424f0		lea	rax,[r12-16]
199b8d 49bf0800fcb0937f
199b95 0000			mov	r15,140272306225160
199b97 493b4728			cmp	rax,[r15+40]
199b9b 7d38			jge	short alloc-ok70
199b9d 48c7c010000000		mov	rax,dword 16
199ba4 57			push	rdi
199ba5 56			push	rsi
199ba6 52			push	rdx
199ba7 51			push	rcx
199ba8 4150			push	r8
199baa 4151			push	r9
199bac 4152			push	r10
199bae 4153			push	r11
199bb0 50			push	rax
199bb1 4889e7			mov	rdi,rsp
199bb4 4883e4f0			and	rsp,byte -16
199bb8 4883ec08			sub	rsp,byte 8
199bbc 57			push	rdi
199bbd e80e456d01		call	gc
199bc2 5c			pop	rsp
199bc3 4989c4			mov	r12,rax
199bc6 58			pop	rax
199bc7 415b			pop	r11
199bc9 415a			pop	r10
199bcb 4159			pop	r9
199bcd 4158			pop	r8
199bcf 59			pop	rcx
199bd0 5a			pop	rdx
199bd1 5e			pop	rsi
199bd2 5f			pop	rdi
199bd3 eb04			jmp	short alloc-end70
199bd5			alloc-ok70:
199bd5 4983ec10			sub	r12,byte 16
199bd9			alloc-end70:
199bd9 48c7c076020000		mov	rax,dword 630
199be0 49890424			mov	[r12],rax
199be4 48c7c0a00bd002		mov	rax,dword 47188896
199beb 4989442408		mov	[r12+8],rax
199bf0 498d442401		lea	rax,[r12+1]
199bf5 50			push	rax
199bf6			version212:
199bf6 58			pop	rax
199bf7 49898228020000		mov	[r10+552],rax
199bfe 6aee			push	qword byte -18
199c00			version213:
199c00 48c7c0eeffffff		mov	rax,dword -18
199c07 49898230020000		mov	[r10+560],rax
199c0e			version214:
199c0e 50			push	rax
199c0f 53			push	rbx
199c10 48b85000fcb0937f
199c18 0000			mov	rax,140272306225232
199c1a 488b18			mov	rbx,[rax]
199c1d 48ffc3			inc	rbx
199c20 488918			mov	[rax],rbx
199c23 5b			pop	rbx
199c24 58			pop	rax
199c25 498d4424f0		lea	rax,[r12-16]
199c2a 49bf0800fcb0937f
199c32 0000			mov	r15,140272306225160
199c34 493b4728			cmp	rax,[r15+40]
199c38 7d38			jge	short alloc-ok71
199c3a 48c7c010000000		mov	rax,dword 16
199c41 57			push	rdi
199c42 56			push	rsi
199c43 52			push	rdx
199c44 51			push	rcx
199c45 4150			push	r8
199c47 4151			push	r9
199c49 4152			push	r10
199c4b 4153			push	r11
199c4d 50			push	rax
199c4e 4889e7			mov	rdi,rsp
199c51 4883e4f0			and	rsp,byte -16
199c55 4883ec08			sub	rsp,byte 8
199c59 57			push	rdi
199c5a e871446d01		call	gc
199c5f 5c			pop	rsp
199c60 4989c4			mov	r12,rax
199c63 58			pop	rax
199c64 415b			pop	r11
199c66 415a			pop	r10
199c68 4159			pop	r9
199c6a 4158			pop	r8
199c6c 59			pop	rcx
199c6d 5a			pop	rdx
199c6e 5e			pop	rsi
199c6f 5f			pop	rdi
199c70 eb04			jmp	short alloc-end71
199c72			alloc-ok71:
199c72 4983ec10			sub	r12,byte 16
199c76			alloc-end71:
199c76 48c7c076020000		mov	rax,dword 630
199c7d 49890424			mov	[r12],rax
199c81 48c7c0009cd002		mov	rax,dword 47225856
199c88 4989442408		mov	[r12+8],rax
199c8d 498d442401		lea	rax,[r12+1]
199c92 50			push	rax
199c93			version215:
199c93 58			pop	rax
199c94 49898230020000		mov	[r10+560],rax
199c9b 6aee			push	qword byte -18
199c9d			version216:
199c9d 48c7c0eeffffff		mov	rax,dword -18
199ca4 49898238020000		mov	[r10+568],rax
199cab			version217:
199cab 50			push	rax
199cac 53			push	rbx
199cad 48b85000fcb0937f
199cb5 0000			mov	rax,140272306225232
199cb7 488b18			mov	rbx,[rax]
199cba 48ffc3			inc	rbx
199cbd 488918			mov	[rax],rbx
199cc0 5b			pop	rbx
199cc1 58			pop	rax
199cc2 498d4424f0		lea	rax,[r12-16]
199cc7 49bf0800fcb0937f
199ccf 0000			mov	r15,140272306225160
199cd1 493b4728			cmp	rax,[r15+40]
199cd5 7d38			jge	short alloc-ok72
199cd7 48c7c010000000		mov	rax,dword 16
199cde 57			push	rdi
199cdf 56			push	rsi
199ce0 52			push	rdx
199ce1 51			push	rcx
199ce2 4150			push	r8
199ce4 4151			push	r9
199ce6 4152			push	r10
199ce8 4153			push	r11
199cea 50			push	rax
199ceb 4889e7			mov	rdi,rsp
199cee 4883e4f0			and	rsp,byte -16
199cf2 4883ec08			sub	rsp,byte 8
199cf6 57			push	rdi
199cf7 e8d4436d01		call	gc
199cfc 5c			pop	rsp
199cfd 4989c4			mov	r12,rax
199d00 58			pop	rax
199d01 415b			pop	r11
199d03 415a			pop	r10
199d05 4159			pop	r9
199d07 4158			pop	r8
199d09 59			pop	rcx
199d0a 5a			pop	rdx
199d0b 5e			pop	rsi
199d0c 5f			pop	rdi
199d0d eb04			jmp	short alloc-end72
199d0f			alloc-ok72:
199d0f 4983ec10			sub	r12,byte 16
199d13			alloc-end72:
199d13 48c7c076020000		mov	rax,dword 630
199d1a 49890424			mov	[r12],rax
199d1e 48c7c040acd002		mov	rax,dword 47230016
199d25 4989442408		mov	[r12+8],rax
199d2a 498d442401		lea	rax,[r12+1]
199d2f 50			push	rax
199d30			version218:
199d30 58			pop	rax
199d31 49898238020000		mov	[r10+568],rax
199d38 6aee			push	qword byte -18
199d3a			version219:
199d3a 48c7c0eeffffff		mov	rax,dword -18
199d41 49898240020000		mov	[r10+576],rax
199d48			version220:
199d48 50			push	rax
199d49 53			push	rbx
199d4a 48b85000fcb0937f
199d52 0000			mov	rax,140272306225232
199d54 488b18			mov	rbx,[rax]
199d57 48ffc3			inc	rbx
199d5a 488918			mov	[rax],rbx
199d5d 5b			pop	rbx
199d5e 58			pop	rax
199d5f 498d4424f0		lea	rax,[r12-16]
199d64 49bf0800fcb0937f
199d6c 0000			mov	r15,140272306225160
199d6e 493b4728			cmp	rax,[r15+40]
199d72 7d38			jge	short alloc-ok73
199d74 48c7c010000000		mov	rax,dword 16
199d7b 57			push	rdi
199d7c 56			push	rsi
199d7d 52			push	rdx
199d7e 51			push	rcx
199d7f 4150			push	r8
199d81 4151			push	r9
199d83 4152			push	r10
199d85 4153			push	r11
199d87 50			push	rax
199d88 4889e7			mov	rdi,rsp
199d8b 4883e4f0			and	rsp,byte -16
199d8f 4883ec08			sub	rsp,byte 8
199d93 57			push	rdi
199d94 e837436d01		call	gc
199d99 5c			pop	rsp
199d9a 4989c4			mov	r12,rax
199d9d 58			pop	rax
199d9e 415b			pop	r11
199da0 415a			pop	r10
199da2 4159			pop	r9
199da4 4158			pop	r8
199da6 59			pop	rcx
199da7 5a			pop	rdx
199da8 5e			pop	rsi
199da9 5f			pop	rdi
199daa eb04			jmp	short alloc-end73
199dac			alloc-ok73:
199dac 4983ec10			sub	r12,byte 16
199db0			alloc-end73:
199db0 48c7c076020000		mov	rax,dword 630
199db7 49890424			mov	[r12],rax
199dbb 48c7c080bcd002		mov	rax,dword 47234176
199dc2 4989442408		mov	[r12+8],rax
199dc7 498d442401		lea	rax,[r12+1]
199dcc 50			push	rax
199dcd			version221:
199dcd 58			pop	rax
199dce 49898240020000		mov	[r10+576],rax
199dd5 6aee			push	qword byte -18
199dd7			version222:
199dd7 48c7c0eeffffff		mov	rax,dword -18
199dde 49898248020000		mov	[r10+584],rax
199de5			version223:
199de5 50			push	rax
199de6 53			push	rbx
199de7 48b85000fcb0937f
199def 0000			mov	rax,140272306225232
199df1 488b18			mov	rbx,[rax]
199df4 48ffc3			inc	rbx
199df7 488918			mov	[rax],rbx
199dfa 5b			pop	rbx
199dfb 58			pop	rax
199dfc 498d4424f0		lea	rax,[r12-16]
199e01 49bf0800fcb0937f
199e09 0000			mov	r15,140272306225160
199e0b 493b4728			cmp	rax,[r15+40]
199e0f 7d38			jge	short alloc-ok74
199e11 48c7c010000000		mov	rax,dword 16
199e18 57			push	rdi
199e19 56			push	rsi
199e1a 52			push	rdx
199e1b 51			push	rcx
199e1c 4150			push	r8
199e1e 4151			push	r9
199e20 4152			push	r10
199e22 4153			push	r11
199e24 50			push	rax
199e25 4889e7			mov	rdi,rsp
199e28 4883e4f0			and	rsp,byte -16
199e2c 4883ec08			sub	rsp,byte 8
199e30 57			push	rdi
199e31 e89a426d01		call	gc
199e36 5c			pop	rsp
199e37 4989c4			mov	r12,rax
199e3a 58			pop	rax
199e3b 415b			pop	r11
199e3d 415a			pop	r10
199e3f 4159			pop	r9
199e41 4158			pop	r8
199e43 59			pop	rcx
199e44 5a			pop	rdx
199e45 5e			pop	rsi
199e46 5f			pop	rdi
199e47 eb04			jmp	short alloc-end74
199e49			alloc-ok74:
199e49 4983ec10			sub	r12,byte 16
199e4d			alloc-end74:
199e4d 48c7c076020000		mov	rax,dword 630
199e54 49890424			mov	[r12],rax
199e58 48c7c0c0ccd002		mov	rax,dword 47238336
199e5f 4989442408		mov	[r12+8],rax
199e64 498d442401		lea	rax,[r12+1]
199e69 50			push	rax
199e6a			version224:
199e6a 58			pop	rax
199e6b 49898248020000		mov	[r10+584],rax
199e72 6aee			push	qword byte -18
199e74			version225:
199e74 48c7c0eeffffff		mov	rax,dword -18
199e7b 49898250020000		mov	[r10+592],rax
199e82			version226:
199e82 50			push	rax
199e83 53			push	rbx
199e84 48b85000fcb0937f
199e8c 0000			mov	rax,140272306225232
199e8e 488b18			mov	rbx,[rax]
199e91 48ffc3			inc	rbx
199e94 488918			mov	[rax],rbx
199e97 5b			pop	rbx
199e98 58			pop	rax
199e99 498d4424f0		lea	rax,[r12-16]
199e9e 49bf0800fcb0937f
199ea6 0000			mov	r15,140272306225160
199ea8 493b4728			cmp	rax,[r15+40]
199eac 7d38			jge	short alloc-ok75
199eae 48c7c010000000		mov	rax,dword 16
199eb5 57			push	rdi
199eb6 56			push	rsi
199eb7 52			push	rdx
199eb8 51			push	rcx
199eb9 4150			push	r8
199ebb 4151			push	r9
199ebd 4152			push	r10
199ebf 4153			push	r11
199ec1 50			push	rax
199ec2 4889e7			mov	rdi,rsp
199ec5 4883e4f0			and	rsp,byte -16
199ec9 4883ec08			sub	rsp,byte 8
199ecd 57			push	rdi
199ece e8fd416d01		call	gc
199ed3 5c			pop	rsp
199ed4 4989c4			mov	r12,rax
199ed7 58			pop	rax
199ed8 415b			pop	r11
199eda 415a			pop	r10
199edc 4159			pop	r9
199ede 4158			pop	r8
199ee0 59			pop	rcx
199ee1 5a			pop	rdx
199ee2 5e			pop	rsi
199ee3 5f			pop	rdi
199ee4 eb04			jmp	short alloc-end75
199ee6			alloc-ok75:
199ee6 4983ec10			sub	r12,byte 16
199eea			alloc-end75:
199eea 48c7c076020000		mov	rax,dword 630
199ef1 49890424			mov	[r12],rax
199ef5 48c7c000ddd002		mov	rax,dword 47242496
199efc 4989442408		mov	[r12+8],rax
199f01 498d442401		lea	rax,[r12+1]
199f06 50			push	rax
199f07			version227:
199f07 58			pop	rax
199f08 49898250020000		mov	[r10+592],rax
199f0f 6aee			push	qword byte -18
199f11			version228:
199f11 48c7c0eeffffff		mov	rax,dword -18
199f18 49898258020000		mov	[r10+600],rax
199f1f			version229:
199f1f 50			push	rax
199f20 53			push	rbx
199f21 48b85000fcb0937f
199f29 0000			mov	rax,140272306225232
199f2b 488b18			mov	rbx,[rax]
199f2e 48ffc3			inc	rbx
199f31 488918			mov	[rax],rbx
199f34 5b			pop	rbx
199f35 58			pop	rax
199f36 498d4424f0		lea	rax,[r12-16]
199f3b 49bf0800fcb0937f
199f43 0000			mov	r15,140272306225160
199f45 493b4728			cmp	rax,[r15+40]
199f49 7d38			jge	short alloc-ok76
199f4b 48c7c010000000		mov	rax,dword 16
199f52 57			push	rdi
199f53 56			push	rsi
199f54 52			push	rdx
199f55 51			push	rcx
199f56 4150			push	r8
199f58 4151			push	r9
199f5a 4152			push	r10
199f5c 4153			push	r11
199f5e 50			push	rax
199f5f 4889e7			mov	rdi,rsp
199f62 4883e4f0			and	rsp,byte -16
199f66 4883ec08			sub	rsp,byte 8
199f6a 57			push	rdi
199f6b e860416d01		call	gc
199f70 5c			pop	rsp
199f71 4989c4			mov	r12,rax
199f74 58			pop	rax
199f75 415b			pop	r11
199f77 415a			pop	r10
199f79 4159			pop	r9
199f7b 4158			pop	r8
199f7d 59			pop	rcx
199f7e 5a			pop	rdx
199f7f 5e			pop	rsi
199f80 5f			pop	rdi
199f81 eb04			jmp	short alloc-end76
199f83			alloc-ok76:
199f83 4983ec10			sub	r12,byte 16
199f87			alloc-end76:
199f87 48c7c076020000		mov	rax,dword 630
199f8e 49890424			mov	[r12],rax
199f92 48c7c040edd002		mov	rax,dword 47246656
199f99 4989442408		mov	[r12+8],rax
199f9e 498d442401		lea	rax,[r12+1]
199fa3 50			push	rax
199fa4			version230:
199fa4 58			pop	rax
199fa5 49898258020000		mov	[r10+600],rax
199fac 6aee			push	qword byte -18
199fae			version231:
199fae 48c7c0eeffffff		mov	rax,dword -18
199fb5 49898260020000		mov	[r10+608],rax
199fbc			version232:
199fbc 50			push	rax
199fbd 53			push	rbx
199fbe 48b85000fcb0937f
199fc6 0000			mov	rax,140272306225232
199fc8 488b18			mov	rbx,[rax]
199fcb 48ffc3			inc	rbx
199fce 488918			mov	[rax],rbx
199fd1 5b			pop	rbx
199fd2 58			pop	rax
199fd3 498d4424f0		lea	rax,[r12-16]
199fd8 49bf0800fcb0937f
199fe0 0000			mov	r15,140272306225160
199fe2 493b4728			cmp	rax,[r15+40]
199fe6 7d38			jge	short alloc-ok77
199fe8 48c7c010000000		mov	rax,dword 16
199fef 57			push	rdi
199ff0 56			push	rsi
199ff1 52			push	rdx
199ff2 51			push	rcx
199ff3 4150			push	r8
199ff5 4151			push	r9
199ff7 4152			push	r10
199ff9 4153			push	r11
199ffb 50			push	rax
199ffc 4889e7			mov	rdi,rsp
199fff 4883e4f0			and	rsp,byte -16
19a003 4883ec08			sub	rsp,byte 8
19a007 57			push	rdi
19a008 e8c3406d01		call	gc
19a00d 5c			pop	rsp
19a00e 4989c4			mov	r12,rax
19a011 58			pop	rax
19a012 415b			pop	r11
19a014 415a			pop	r10
19a016 4159			pop	r9
19a018 4158			pop	r8
19a01a 59			pop	rcx
19a01b 5a			pop	rdx
19a01c 5e			pop	rsi
19a01d 5f			pop	rdi
19a01e eb04			jmp	short alloc-end77
19a020			alloc-ok77:
19a020 4983ec10			sub	r12,byte 16
19a024			alloc-end77:
19a024 48c7c076020000		mov	rax,dword 630
19a02b 49890424			mov	[r12],rax
19a02f 48c7c080fdd002		mov	rax,dword 47250816
19a036 4989442408		mov	[r12+8],rax
19a03b 498d442401		lea	rax,[r12+1]
19a040 50			push	rax
19a041			version233:
19a041 58			pop	rax
19a042 49898260020000		mov	[r10+608],rax
19a049 6aee			push	qword byte -18
19a04b			version234:
19a04b 48c7c0eeffffff		mov	rax,dword -18
19a052 49898268020000		mov	[r10+616],rax
19a059			version235:
19a059 50			push	rax
19a05a 53			push	rbx
19a05b 48b85000fcb0937f
19a063 0000			mov	rax,140272306225232
19a065 488b18			mov	rbx,[rax]
19a068 48ffc3			inc	rbx
19a06b 488918			mov	[rax],rbx
19a06e 5b			pop	rbx
19a06f 58			pop	rax
19a070 498d4424f0		lea	rax,[r12-16]
19a075 49bf0800fcb0937f
19a07d 0000			mov	r15,140272306225160
19a07f 493b4728			cmp	rax,[r15+40]
19a083 7d38			jge	short alloc-ok78
19a085 48c7c010000000		mov	rax,dword 16
19a08c 57			push	rdi
19a08d 56			push	rsi
19a08e 52			push	rdx
19a08f 51			push	rcx
19a090 4150			push	r8
19a092 4151			push	r9
19a094 4152			push	r10
19a096 4153			push	r11
19a098 50			push	rax
19a099 4889e7			mov	rdi,rsp
19a09c 4883e4f0			and	rsp,byte -16
19a0a0 4883ec08			sub	rsp,byte 8
19a0a4 57			push	rdi
19a0a5 e826406d01		call	gc
19a0aa 5c			pop	rsp
19a0ab 4989c4			mov	r12,rax
19a0ae 58			pop	rax
19a0af 415b			pop	r11
19a0b1 415a			pop	r10
19a0b3 4159			pop	r9
19a0b5 4158			pop	r8
19a0b7 59			pop	rcx
19a0b8 5a			pop	rdx
19a0b9 5e			pop	rsi
19a0ba 5f			pop	rdi
19a0bb eb04			jmp	short alloc-end78
19a0bd			alloc-ok78:
19a0bd 4983ec10			sub	r12,byte 16
19a0c1			alloc-end78:
19a0c1 48c7c076020000		mov	rax,dword 630
19a0c8 49890424			mov	[r12],rax
19a0cc 48c7c0c00dd102		mov	rax,dword 47254976
19a0d3 4989442408		mov	[r12+8],rax
19a0d8 498d442401		lea	rax,[r12+1]
19a0dd 50			push	rax
19a0de			version236:
19a0de 58			pop	rax
19a0df 49898268020000		mov	[r10+616],rax
19a0e6 6aee			push	qword byte -18
19a0e8			version237:
19a0e8 48c7c0eeffffff		mov	rax,dword -18
19a0ef 49898270020000		mov	[r10+624],rax
19a0f6			version238:
19a0f6 50			push	rax
19a0f7 53			push	rbx
19a0f8 48b85000fcb0937f
19a100 0000			mov	rax,140272306225232
19a102 488b18			mov	rbx,[rax]
19a105 48ffc3			inc	rbx
19a108 488918			mov	[rax],rbx
19a10b 5b			pop	rbx
19a10c 58			pop	rax
19a10d 498d4424f0		lea	rax,[r12-16]
19a112 49bf0800fcb0937f
19a11a 0000			mov	r15,140272306225160
19a11c 493b4728			cmp	rax,[r15+40]
19a120 7d38			jge	short alloc-ok79
19a122 48c7c010000000		mov	rax,dword 16
19a129 57			push	rdi
19a12a 56			push	rsi
19a12b 52			push	rdx
19a12c 51			push	rcx
19a12d 4150			push	r8
19a12f 4151			push	r9
19a131 4152			push	r10
19a133 4153			push	r11
19a135 50			push	rax
19a136 4889e7			mov	rdi,rsp
19a139 4883e4f0			and	rsp,byte -16
19a13d 4883ec08			sub	rsp,byte 8
19a141 57			push	rdi
19a142 e8893f6d01		call	gc
19a147 5c			pop	rsp
19a148 4989c4			mov	r12,rax
19a14b 58			pop	rax
19a14c 415b			pop	r11
19a14e 415a			pop	r10
19a150 4159			pop	r9
19a152 4158			pop	r8
19a154 59			pop	rcx
19a155 5a			pop	rdx
19a156 5e			pop	rsi
19a157 5f			pop	rdi
19a158 eb04			jmp	short alloc-end79
19a15a			alloc-ok79:
19a15a 4983ec10			sub	r12,byte 16
19a15e			alloc-end79:
19a15e 48c7c076020000		mov	rax,dword 630
19a165 49890424			mov	[r12],rax
19a169 48c7c0001ed102		mov	rax,dword 47259136
19a170 4989442408		mov	[r12+8],rax
19a175 498d442401		lea	rax,[r12+1]
19a17a 50			push	rax
19a17b			version239:
19a17b 58			pop	rax
19a17c 49898270020000		mov	[r10+624],rax
19a183 6aee			push	qword byte -18
19a185			version240:
19a185 48c7c0eeffffff		mov	rax,dword -18
19a18c 49898278020000		mov	[r10+632],rax
19a193			version241:
19a193 50			push	rax
19a194 53			push	rbx
19a195 48b85000fcb0937f
19a19d 0000			mov	rax,140272306225232
19a19f 488b18			mov	rbx,[rax]
19a1a2 48ffc3			inc	rbx
19a1a5 488918			mov	[rax],rbx
19a1a8 5b			pop	rbx
19a1a9 58			pop	rax
19a1aa 498d4424f0		lea	rax,[r12-16]
19a1af 49bf0800fcb0937f
19a1b7 0000			mov	r15,140272306225160
19a1b9 493b4728			cmp	rax,[r15+40]
19a1bd 7d38			jge	short alloc-ok80
19a1bf 48c7c010000000		mov	rax,dword 16
19a1c6 57			push	rdi
19a1c7 56			push	rsi
19a1c8 52			push	rdx
19a1c9 51			push	rcx
19a1ca 4150			push	r8
19a1cc 4151			push	r9
19a1ce 4152			push	r10
19a1d0 4153			push	r11
19a1d2 50			push	rax
19a1d3 4889e7			mov	rdi,rsp
19a1d6 4883e4f0			and	rsp,byte -16
19a1da 4883ec08			sub	rsp,byte 8
19a1de 57			push	rdi
19a1df e8ec3e6d01		call	gc
19a1e4 5c			pop	rsp
19a1e5 4989c4			mov	r12,rax
19a1e8 58			pop	rax
19a1e9 415b			pop	r11
19a1eb 415a			pop	r10
19a1ed 4159			pop	r9
19a1ef 4158			pop	r8
19a1f1 59			pop	rcx
19a1f2 5a			pop	rdx
19a1f3 5e			pop	rsi
19a1f4 5f			pop	rdi
19a1f5 eb04			jmp	short alloc-end80
19a1f7			alloc-ok80:
19a1f7 4983ec10			sub	r12,byte 16
19a1fb			alloc-end80:
19a1fb 48c7c076020000		mov	rax,dword 630
19a202 49890424			mov	[r12],rax
19a206 48c7c0402ed102		mov	rax,dword 47263296
19a20d 4989442408		mov	[r12+8],rax
19a212 498d442401		lea	rax,[r12+1]
19a217 50			push	rax
19a218			version242:
19a218 58			pop	rax
19a219 49898278020000		mov	[r10+632],rax
19a220 6aee			push	qword byte -18
19a222			version243:
19a222 48c7c0eeffffff		mov	rax,dword -18
19a229 49898280020000		mov	[r10+640],rax
19a230			version244:
19a230 50			push	rax
19a231 53			push	rbx
19a232 48b85000fcb0937f
19a23a 0000			mov	rax,140272306225232
19a23c 488b18			mov	rbx,[rax]
19a23f 48ffc3			inc	rbx
19a242 488918			mov	[rax],rbx
19a245 5b			pop	rbx
19a246 58			pop	rax
19a247 498d4424f0		lea	rax,[r12-16]
19a24c 49bf0800fcb0937f
19a254 0000			mov	r15,140272306225160
19a256 493b4728			cmp	rax,[r15+40]
19a25a 7d38			jge	short alloc-ok81
19a25c 48c7c010000000		mov	rax,dword 16
19a263 57			push	rdi
19a264 56			push	rsi
19a265 52			push	rdx
19a266 51			push	rcx
19a267 4150			push	r8
19a269 4151			push	r9
19a26b 4152			push	r10
19a26d 4153			push	r11
19a26f 50			push	rax
19a270 4889e7			mov	rdi,rsp
19a273 4883e4f0			and	rsp,byte -16
19a277 4883ec08			sub	rsp,byte 8
19a27b 57			push	rdi
19a27c e84f3e6d01		call	gc
19a281 5c			pop	rsp
19a282 4989c4			mov	r12,rax
19a285 58			pop	rax
19a286 415b			pop	r11
19a288 415a			pop	r10
19a28a 4159			pop	r9
19a28c 4158			pop	r8
19a28e 59			pop	rcx
19a28f 5a			pop	rdx
19a290 5e			pop	rsi
19a291 5f			pop	rdi
19a292 eb04			jmp	short alloc-end81
19a294			alloc-ok81:
19a294 4983ec10			sub	r12,byte 16
19a298			alloc-end81:
19a298 48c7c076020000		mov	rax,dword 630
19a29f 49890424			mov	[r12],rax
19a2a3 48c7c0803ed102		mov	rax,dword 47267456
19a2aa 4989442408		mov	[r12+8],rax
19a2af 498d442401		lea	rax,[r12+1]
19a2b4 50			push	rax
19a2b5			version245:
19a2b5 58			pop	rax
19a2b6 49898280020000		mov	[r10+640],rax
19a2bd 6aee			push	qword byte -18
19a2bf			version246:
19a2bf 48c7c0eeffffff		mov	rax,dword -18
19a2c6 49898288020000		mov	[r10+648],rax
19a2cd			version247:
19a2cd 50			push	rax
19a2ce 53			push	rbx
19a2cf 48b85000fcb0937f
19a2d7 0000			mov	rax,140272306225232
19a2d9 488b18			mov	rbx,[rax]
19a2dc 48ffc3			inc	rbx
19a2df 488918			mov	[rax],rbx
19a2e2 5b			pop	rbx
19a2e3 58			pop	rax
19a2e4 498d4424f0		lea	rax,[r12-16]
19a2e9 49bf0800fcb0937f
19a2f1 0000			mov	r15,140272306225160
19a2f3 493b4728			cmp	rax,[r15+40]
19a2f7 7d38			jge	short alloc-ok82
19a2f9 48c7c010000000		mov	rax,dword 16
19a300 57			push	rdi
19a301 56			push	rsi
19a302 52			push	rdx
19a303 51			push	rcx
19a304 4150			push	r8
19a306 4151			push	r9
19a308 4152			push	r10
19a30a 4153			push	r11
19a30c 50			push	rax
19a30d 4889e7			mov	rdi,rsp
19a310 4883e4f0			and	rsp,byte -16
19a314 4883ec08			sub	rsp,byte 8
19a318 57			push	rdi
19a319 e8b23d6d01		call	gc
19a31e 5c			pop	rsp
19a31f 4989c4			mov	r12,rax
19a322 58			pop	rax
19a323 415b			pop	r11
19a325 415a			pop	r10
19a327 4159			pop	r9
19a329 4158			pop	r8
19a32b 59			pop	rcx
19a32c 5a			pop	rdx
19a32d 5e			pop	rsi
19a32e 5f			pop	rdi
19a32f eb04			jmp	short alloc-end82
19a331			alloc-ok82:
19a331 4983ec10			sub	r12,byte 16
19a335			alloc-end82:
19a335 48c7c076020000		mov	rax,dword 630
19a33c 49890424			mov	[r12],rax
19a340 48c7c0c04ed102		mov	rax,dword 47271616
19a347 4989442408		mov	[r12+8],rax
19a34c 498d442401		lea	rax,[r12+1]
19a351 50			push	rax
19a352			version248:
19a352 58			pop	rax
19a353 49898288020000		mov	[r10+648],rax
19a35a 6aee			push	qword byte -18
19a35c			version249:
19a35c 48c7c0eeffffff		mov	rax,dword -18
19a363 49898290020000		mov	[r10+656],rax
19a36a			version250:
19a36a 50			push	rax
19a36b 53			push	rbx
19a36c 48b85000fcb0937f
19a374 0000			mov	rax,140272306225232
19a376 488b18			mov	rbx,[rax]
19a379 48ffc3			inc	rbx
19a37c 488918			mov	[rax],rbx
19a37f 5b			pop	rbx
19a380 58			pop	rax
19a381 498d4424f0		lea	rax,[r12-16]
19a386 49bf0800fcb0937f
19a38e 0000			mov	r15,140272306225160
19a390 493b4728			cmp	rax,[r15+40]
19a394 7d38			jge	short alloc-ok83
19a396 48c7c010000000		mov	rax,dword 16
19a39d 57			push	rdi
19a39e 56			push	rsi
19a39f 52			push	rdx
19a3a0 51			push	rcx
19a3a1 4150			push	r8
19a3a3 4151			push	r9
19a3a5 4152			push	r10
19a3a7 4153			push	r11
19a3a9 50			push	rax
19a3aa 4889e7			mov	rdi,rsp
19a3ad 4883e4f0			and	rsp,byte -16
19a3b1 4883ec08			sub	rsp,byte 8
19a3b5 57			push	rdi
19a3b6 e8153d6d01		call	gc
19a3bb 5c			pop	rsp
19a3bc 4989c4			mov	r12,rax
19a3bf 58			pop	rax
19a3c0 415b			pop	r11
19a3c2 415a			pop	r10
19a3c4 4159			pop	r9
19a3c6 4158			pop	r8
19a3c8 59			pop	rcx
19a3c9 5a			pop	rdx
19a3ca 5e			pop	rsi
19a3cb 5f			pop	rdi
19a3cc eb04			jmp	short alloc-end83
19a3ce			alloc-ok83:
19a3ce 4983ec10			sub	r12,byte 16
19a3d2			alloc-end83:
19a3d2 48c7c076020000		mov	rax,dword 630
19a3d9 49890424			mov	[r12],rax
19a3dd 48c7c0005fd102		mov	rax,dword 47275776
19a3e4 4989442408		mov	[r12+8],rax
19a3e9 498d442401		lea	rax,[r12+1]
19a3ee 50			push	rax
19a3ef			version251:
19a3ef 58			pop	rax
19a3f0 49898290020000		mov	[r10+656],rax
19a3f7 6aee			push	qword byte -18
19a3f9			version252:
19a3f9 48c7c0eeffffff		mov	rax,dword -18
19a400 49898298020000		mov	[r10+664],rax
19a407			version253:
19a407 50			push	rax
19a408 53			push	rbx
19a409 48b85000fcb0937f
19a411 0000			mov	rax,140272306225232
19a413 488b18			mov	rbx,[rax]
19a416 48ffc3			inc	rbx
19a419 488918			mov	[rax],rbx
19a41c 5b			pop	rbx
19a41d 58			pop	rax
19a41e 498d4424f0		lea	rax,[r12-16]
19a423 49bf0800fcb0937f
19a42b 0000			mov	r15,140272306225160
19a42d 493b4728			cmp	rax,[r15+40]
19a431 7d38			jge	short alloc-ok84
19a433 48c7c010000000		mov	rax,dword 16
19a43a 57			push	rdi
19a43b 56			push	rsi
19a43c 52			push	rdx
19a43d 51			push	rcx
19a43e 4150			push	r8
19a440 4151			push	r9
19a442 4152			push	r10
19a444 4153			push	r11
19a446 50			push	rax
19a447 4889e7			mov	rdi,rsp
19a44a 4883e4f0			and	rsp,byte -16
19a44e 4883ec08			sub	rsp,byte 8
19a452 57			push	rdi
19a453 e8783c6d01		call	gc
19a458 5c			pop	rsp
19a459 4989c4			mov	r12,rax
19a45c 58			pop	rax
19a45d 415b			pop	r11
19a45f 415a			pop	r10
19a461 4159			pop	r9
19a463 4158			pop	r8
19a465 59			pop	rcx
19a466 5a			pop	rdx
19a467 5e			pop	rsi
19a468 5f			pop	rdi
19a469 eb04			jmp	short alloc-end84
19a46b			alloc-ok84:
19a46b 4983ec10			sub	r12,byte 16
19a46f			alloc-end84:
19a46f 48c7c076020000		mov	rax,dword 630
19a476 49890424			mov	[r12],rax
19a47a 48c7c0406fd102		mov	rax,dword 47279936
19a481 4989442408		mov	[r12+8],rax
19a486 498d442401		lea	rax,[r12+1]
19a48b 50			push	rax
19a48c			version254:
19a48c 58			pop	rax
19a48d 49898298020000		mov	[r10+664],rax
19a494 6aee			push	qword byte -18
19a496			version255:
19a496 48c7c0eeffffff		mov	rax,dword -18
19a49d 498982a0020000		mov	[r10+672],rax
19a4a4			version256:
19a4a4 50			push	rax
19a4a5 53			push	rbx
19a4a6 48b85000fcb0937f
19a4ae 0000			mov	rax,140272306225232
19a4b0 488b18			mov	rbx,[rax]
19a4b3 48ffc3			inc	rbx
19a4b6 488918			mov	[rax],rbx
19a4b9 5b			pop	rbx
19a4ba 58			pop	rax
19a4bb 498d4424f0		lea	rax,[r12-16]
19a4c0 49bf0800fcb0937f
19a4c8 0000			mov	r15,140272306225160
19a4ca 493b4728			cmp	rax,[r15+40]
19a4ce 7d38			jge	short alloc-ok85
19a4d0 48c7c010000000		mov	rax,dword 16
19a4d7 57			push	rdi
19a4d8 56			push	rsi
19a4d9 52			push	rdx
19a4da 51			push	rcx
19a4db 4150			push	r8
19a4dd 4151			push	r9
19a4df 4152			push	r10
19a4e1 4153			push	r11
19a4e3 50			push	rax
19a4e4 4889e7			mov	rdi,rsp
19a4e7 4883e4f0			and	rsp,byte -16
19a4eb 4883ec08			sub	rsp,byte 8
19a4ef 57			push	rdi
19a4f0 e8db3b6d01		call	gc
19a4f5 5c			pop	rsp
19a4f6 4989c4			mov	r12,rax
19a4f9 58			pop	rax
19a4fa 415b			pop	r11
19a4fc 415a			pop	r10
19a4fe 4159			pop	r9
19a500 4158			pop	r8
19a502 59			pop	rcx
19a503 5a			pop	rdx
19a504 5e			pop	rsi
19a505 5f			pop	rdi
19a506 eb04			jmp	short alloc-end85
19a508			alloc-ok85:
19a508 4983ec10			sub	r12,byte 16
19a50c			alloc-end85:
19a50c 48c7c076020000		mov	rax,dword 630
19a513 49890424			mov	[r12],rax
19a517 48c7c0807fd102		mov	rax,dword 47284096
19a51e 4989442408		mov	[r12+8],rax
19a523 498d442401		lea	rax,[r12+1]
19a528 50			push	rax
19a529			version257:
19a529 58			pop	rax
19a52a 498982a0020000		mov	[r10+672],rax
19a531 6aee			push	qword byte -18
19a533			version258:
19a533 48c7c0eeffffff		mov	rax,dword -18
19a53a 498982a8020000		mov	[r10+680],rax
19a541			version259:
19a541 50			push	rax
19a542 53			push	rbx
19a543 48b85000fcb0937f
19a54b 0000			mov	rax,140272306225232
19a54d 488b18			mov	rbx,[rax]
19a550 48ffc3			inc	rbx
19a553 488918			mov	[rax],rbx
19a556 5b			pop	rbx
19a557 58			pop	rax
19a558 498d4424f0		lea	rax,[r12-16]
19a55d 49bf0800fcb0937f
19a565 0000			mov	r15,140272306225160
19a567 493b4728			cmp	rax,[r15+40]
19a56b 7d38			jge	short alloc-ok86
19a56d 48c7c010000000		mov	rax,dword 16
19a574 57			push	rdi
19a575 56			push	rsi
19a576 52			push	rdx
19a577 51			push	rcx
19a578 4150			push	r8
19a57a 4151			push	r9
19a57c 4152			push	r10
19a57e 4153			push	r11
19a580 50			push	rax
19a581 4889e7			mov	rdi,rsp
19a584 4883e4f0			and	rsp,byte -16
19a588 4883ec08			sub	rsp,byte 8
19a58c 57			push	rdi
19a58d e83e3b6d01		call	gc
19a592 5c			pop	rsp
19a593 4989c4			mov	r12,rax
19a596 58			pop	rax
19a597 415b			pop	r11
19a599 415a			pop	r10
19a59b 4159			pop	r9
19a59d 4158			pop	r8
19a59f 59			pop	rcx
19a5a0 5a			pop	rdx
19a5a1 5e			pop	rsi
19a5a2 5f			pop	rdi
19a5a3 eb04			jmp	short alloc-end86
19a5a5			alloc-ok86:
19a5a5 4983ec10			sub	r12,byte 16
19a5a9			alloc-end86:
19a5a9 48c7c076020000		mov	rax,dword 630
19a5b0 49890424			mov	[r12],rax
19a5b4 48c7c0c08fd102		mov	rax,dword 47288256
19a5bb 4989442408		mov	[r12+8],rax
19a5c0 498d442401		lea	rax,[r12+1]
19a5c5 50			push	rax
19a5c6			version260:
19a5c6 58			pop	rax
19a5c7 498982a8020000		mov	[r10+680],rax
19a5ce 6aee			push	qword byte -18
19a5d0			version261:
19a5d0 48c7c0eeffffff		mov	rax,dword -18
19a5d7 498982b0020000		mov	[r10+688],rax
19a5de			version262:
19a5de 50			push	rax
19a5df 53			push	rbx
19a5e0 48b85000fcb0937f
19a5e8 0000			mov	rax,140272306225232
19a5ea 488b18			mov	rbx,[rax]
19a5ed 48ffc3			inc	rbx
19a5f0 488918			mov	[rax],rbx
19a5f3 5b			pop	rbx
19a5f4 58			pop	rax
19a5f5 498d4424f0		lea	rax,[r12-16]
19a5fa 49bf0800fcb0937f
19a602 0000			mov	r15,140272306225160
19a604 493b4728			cmp	rax,[r15+40]
19a608 7d38			jge	short alloc-ok87
19a60a 48c7c010000000		mov	rax,dword 16
19a611 57			push	rdi
19a612 56			push	rsi
19a613 52			push	rdx
19a614 51			push	rcx
19a615 4150			push	r8
19a617 4151			push	r9
19a619 4152			push	r10
19a61b 4153			push	r11
19a61d 50			push	rax
19a61e 4889e7			mov	rdi,rsp
19a621 4883e4f0			and	rsp,byte -16
19a625 4883ec08			sub	rsp,byte 8
19a629 57			push	rdi
19a62a e8a13a6d01		call	gc
19a62f 5c			pop	rsp
19a630 4989c4			mov	r12,rax
19a633 58			pop	rax
19a634 415b			pop	r11
19a636 415a			pop	r10
19a638 4159			pop	r9
19a63a 4158			pop	r8
19a63c 59			pop	rcx
19a63d 5a			pop	rdx
19a63e 5e			pop	rsi
19a63f 5f			pop	rdi
19a640 eb04			jmp	short alloc-end87
19a642			alloc-ok87:
19a642 4983ec10			sub	r12,byte 16
19a646			alloc-end87:
19a646 48c7c076020000		mov	rax,dword 630
19a64d 49890424			mov	[r12],rax
19a651 48c7c000a0d102		mov	rax,dword 47292416
19a658 4989442408		mov	[r12+8],rax
19a65d 498d442401		lea	rax,[r12+1]
19a662 50			push	rax
19a663			version263:
19a663 58			pop	rax
19a664 498982b0020000		mov	[r10+688],rax
19a66b 6aee			push	qword byte -18
19a66d			version264:
19a66d 48c7c0eeffffff		mov	rax,dword -18
19a674 498982b8020000		mov	[r10+696],rax
19a67b			version265:
19a67b 50			push	rax
19a67c 53			push	rbx
19a67d 48b85000fcb0937f
19a685 0000			mov	rax,140272306225232
19a687 488b18			mov	rbx,[rax]
19a68a 48ffc3			inc	rbx
19a68d 488918			mov	[rax],rbx
19a690 5b			pop	rbx
19a691 58			pop	rax
19a692 498d4424f0		lea	rax,[r12-16]
19a697 49bf0800fcb0937f
19a69f 0000			mov	r15,140272306225160
19a6a1 493b4728			cmp	rax,[r15+40]
19a6a5 7d38			jge	short alloc-ok88
19a6a7 48c7c010000000		mov	rax,dword 16
19a6ae 57			push	rdi
19a6af 56			push	rsi
19a6b0 52			push	rdx
19a6b1 51			push	rcx
19a6b2 4150			push	r8
19a6b4 4151			push	r9
19a6b6 4152			push	r10
19a6b8 4153			push	r11
19a6ba 50			push	rax
19a6bb 4889e7			mov	rdi,rsp
19a6be 4883e4f0			and	rsp,byte -16
19a6c2 4883ec08			sub	rsp,byte 8
19a6c6 57			push	rdi
19a6c7 e8043a6d01		call	gc
19a6cc 5c			pop	rsp
19a6cd 4989c4			mov	r12,rax
19a6d0 58			pop	rax
19a6d1 415b			pop	r11
19a6d3 415a			pop	r10
19a6d5 4159			pop	r9
19a6d7 4158			pop	r8
19a6d9 59			pop	rcx
19a6da 5a			pop	rdx
19a6db 5e			pop	rsi
19a6dc 5f			pop	rdi
19a6dd eb04			jmp	short alloc-end88
19a6df			alloc-ok88:
19a6df 4983ec10			sub	r12,byte 16
19a6e3			alloc-end88:
19a6e3 48c7c076020000		mov	rax,dword 630
19a6ea 49890424			mov	[r12],rax
19a6ee 48c7c040b0d102		mov	rax,dword 47296576
19a6f5 4989442408		mov	[r12+8],rax
19a6fa 498d442401		lea	rax,[r12+1]
19a6ff 50			push	rax
19a700			version266:
19a700 58			pop	rax
19a701 498982b8020000		mov	[r10+696],rax
19a708 6aee			push	qword byte -18
19a70a			version267:
19a70a 48c7c0eeffffff		mov	rax,dword -18
19a711 498982c0020000		mov	[r10+704],rax
19a718			version268:
19a718 50			push	rax
19a719 53			push	rbx
19a71a 48b85000fcb0937f
19a722 0000			mov	rax,140272306225232
19a724 488b18			mov	rbx,[rax]
19a727 48ffc3			inc	rbx
19a72a 488918			mov	[rax],rbx
19a72d 5b			pop	rbx
19a72e 58			pop	rax
19a72f 498d4424f0		lea	rax,[r12-16]
19a734 49bf0800fcb0937f
19a73c 0000			mov	r15,140272306225160
19a73e 493b4728			cmp	rax,[r15+40]
19a742 7d38			jge	short alloc-ok89
19a744 48c7c010000000		mov	rax,dword 16
19a74b 57			push	rdi
19a74c 56			push	rsi
19a74d 52			push	rdx
19a74e 51			push	rcx
19a74f 4150			push	r8
19a751 4151			push	r9
19a753 4152			push	r10
19a755 4153			push	r11
19a757 50			push	rax
19a758 4889e7			mov	rdi,rsp
19a75b 4883e4f0			and	rsp,byte -16
19a75f 4883ec08			sub	rsp,byte 8
19a763 57			push	rdi
19a764 e867396d01		call	gc
19a769 5c			pop	rsp
19a76a 4989c4			mov	r12,rax
19a76d 58			pop	rax
19a76e 415b			pop	r11
19a770 415a			pop	r10
19a772 4159			pop	r9
19a774 4158			pop	r8
19a776 59			pop	rcx
19a777 5a			pop	rdx
19a778 5e			pop	rsi
19a779 5f			pop	rdi
19a77a eb04			jmp	short alloc-end89
19a77c			alloc-ok89:
19a77c 4983ec10			sub	r12,byte 16
19a780			alloc-end89:
19a780 48c7c076020000		mov	rax,dword 630
19a787 49890424			mov	[r12],rax
19a78b 48c7c080c0d102		mov	rax,dword 47300736
19a792 4989442408		mov	[r12+8],rax
19a797 498d442401		lea	rax,[r12+1]
19a79c 50			push	rax
19a79d			version269:
19a79d 58			pop	rax
19a79e 498982c0020000		mov	[r10+704],rax
19a7a5 6aee			push	qword byte -18
19a7a7			version270:
19a7a7 48c7c0eeffffff		mov	rax,dword -18
19a7ae 498982c8020000		mov	[r10+712],rax
19a7b5			version271:
19a7b5 50			push	rax
19a7b6 53			push	rbx
19a7b7 48b85000fcb0937f
19a7bf 0000			mov	rax,140272306225232
19a7c1 488b18			mov	rbx,[rax]
19a7c4 48ffc3			inc	rbx
19a7c7 488918			mov	[rax],rbx
19a7ca 5b			pop	rbx
19a7cb 58			pop	rax
19a7cc 498d4424f0		lea	rax,[r12-16]
19a7d1 49bf0800fcb0937f
19a7d9 0000			mov	r15,140272306225160
19a7db 493b4728			cmp	rax,[r15+40]
19a7df 7d38			jge	short alloc-ok90
19a7e1 48c7c010000000		mov	rax,dword 16
19a7e8 57			push	rdi
19a7e9 56			push	rsi
19a7ea 52			push	rdx
19a7eb 51			push	rcx
19a7ec 4150			push	r8
19a7ee 4151			push	r9
19a7f0 4152			push	r10
19a7f2 4153			push	r11
19a7f4 50			push	rax
19a7f5 4889e7			mov	rdi,rsp
19a7f8 4883e4f0			and	rsp,byte -16
19a7fc 4883ec08			sub	rsp,byte 8
19a800 57			push	rdi
19a801 e8ca386d01		call	gc
19a806 5c			pop	rsp
19a807 4989c4			mov	r12,rax
19a80a 58			pop	rax
19a80b 415b			pop	r11
19a80d 415a			pop	r10
19a80f 4159			pop	r9
19a811 4158			pop	r8
19a813 59			pop	rcx
19a814 5a			pop	rdx
19a815 5e			pop	rsi
19a816 5f			pop	rdi
19a817 eb04			jmp	short alloc-end90
19a819			alloc-ok90:
19a819 4983ec10			sub	r12,byte 16
19a81d			alloc-end90:
19a81d 48c7c076020000		mov	rax,dword 630
19a824 49890424			mov	[r12],rax
19a828 48c7c0c0d0d102		mov	rax,dword 47304896
19a82f 4989442408		mov	[r12+8],rax
19a834 498d442401		lea	rax,[r12+1]
19a839 50			push	rax
19a83a			version272:
19a83a 58			pop	rax
19a83b 498982c8020000		mov	[r10+712],rax
19a842 6aee			push	qword byte -18
19a844			version273:
19a844 48c7c0eeffffff		mov	rax,dword -18
19a84b 498982d0020000		mov	[r10+720],rax
19a852			version274:
19a852 50			push	rax
19a853 53			push	rbx
19a854 48b85000fcb0937f
19a85c 0000			mov	rax,140272306225232
19a85e 488b18			mov	rbx,[rax]
19a861 48ffc3			inc	rbx
19a864 488918			mov	[rax],rbx
19a867 5b			pop	rbx
19a868 58			pop	rax
19a869 498d4424f0		lea	rax,[r12-16]
19a86e 49bf0800fcb0937f
19a876 0000			mov	r15,140272306225160
19a878 493b4728			cmp	rax,[r15+40]
19a87c 7d38			jge	short alloc-ok91
19a87e 48c7c010000000		mov	rax,dword 16
19a885 57			push	rdi
19a886 56			push	rsi
19a887 52			push	rdx
19a888 51			push	rcx
19a889 4150			push	r8
19a88b 4151			push	r9
19a88d 4152			push	r10
19a88f 4153			push	r11
19a891 50			push	rax
19a892 4889e7			mov	rdi,rsp
19a895 4883e4f0			and	rsp,byte -16
19a899 4883ec08			sub	rsp,byte 8
19a89d 57			push	rdi
19a89e e82d386d01		call	gc
19a8a3 5c			pop	rsp
19a8a4 4989c4			mov	r12,rax
19a8a7 58			pop	rax
19a8a8 415b			pop	r11
19a8aa 415a			pop	r10
19a8ac 4159			pop	r9
19a8ae 4158			pop	r8
19a8b0 59			pop	rcx
19a8b1 5a			pop	rdx
19a8b2 5e			pop	rsi
19a8b3 5f			pop	rdi
19a8b4 eb04			jmp	short alloc-end91
19a8b6			alloc-ok91:
19a8b6 4983ec10			sub	r12,byte 16
19a8ba			alloc-end91:
19a8ba 48c7c076020000		mov	rax,dword 630
19a8c1 49890424			mov	[r12],rax
19a8c5 48c7c000e1d102		mov	rax,dword 47309056
19a8cc 4989442408		mov	[r12+8],rax
19a8d1 498d442401		lea	rax,[r12+1]
19a8d6 50			push	rax
19a8d7			version275:
19a8d7 58			pop	rax
19a8d8 498982d0020000		mov	[r10+720],rax
19a8df 6aee			push	qword byte -18
19a8e1			version276:
19a8e1 48c7c0eeffffff		mov	rax,dword -18
19a8e8 498982d8020000		mov	[r10+728],rax
19a8ef			version277:
19a8ef 50			push	rax
19a8f0 53			push	rbx
19a8f1 48b85000fcb0937f
19a8f9 0000			mov	rax,140272306225232
19a8fb 488b18			mov	rbx,[rax]
19a8fe 48ffc3			inc	rbx
19a901 488918			mov	[rax],rbx
19a904 5b			pop	rbx
19a905 58			pop	rax
19a906 498d4424f0		lea	rax,[r12-16]
19a90b 49bf0800fcb0937f
19a913 0000			mov	r15,140272306225160
19a915 493b4728			cmp	rax,[r15+40]
19a919 7d38			jge	short alloc-ok92
19a91b 48c7c010000000		mov	rax,dword 16
19a922 57			push	rdi
19a923 56			push	rsi
19a924 52			push	rdx
19a925 51			push	rcx
19a926 4150			push	r8
19a928 4151			push	r9
19a92a 4152			push	r10
19a92c 4153			push	r11
19a92e 50			push	rax
19a92f 4889e7			mov	rdi,rsp
19a932 4883e4f0			and	rsp,byte -16
19a936 4883ec08			sub	rsp,byte 8
19a93a 57			push	rdi
19a93b e890376d01		call	gc
19a940 5c			pop	rsp
19a941 4989c4			mov	r12,rax
19a944 58			pop	rax
19a945 415b			pop	r11
19a947 415a			pop	r10
19a949 4159			pop	r9
19a94b 4158			pop	r8
19a94d 59			pop	rcx
19a94e 5a			pop	rdx
19a94f 5e			pop	rsi
19a950 5f			pop	rdi
19a951 eb04			jmp	short alloc-end92
19a953			alloc-ok92:
19a953 4983ec10			sub	r12,byte 16
19a957			alloc-end92:
19a957 48c7c076020000		mov	rax,dword 630
19a95e 49890424			mov	[r12],rax
19a962 48c7c040f1d102		mov	rax,dword 47313216
19a969 4989442408		mov	[r12+8],rax
19a96e 498d442401		lea	rax,[r12+1]
19a973 50			push	rax
19a974			version278:
19a974 58			pop	rax
19a975 498982d8020000		mov	[r10+728],rax
19a97c 6aee			push	qword byte -18
19a97e			version279:
19a97e 48c7c0eeffffff		mov	rax,dword -18
19a985 498982e0020000		mov	[r10+736],rax
19a98c			version280:
19a98c 50			push	rax
19a98d 53			push	rbx
19a98e 48b85000fcb0937f
19a996 0000			mov	rax,140272306225232
19a998 488b18			mov	rbx,[rax]
19a99b 48ffc3			inc	rbx
19a99e 488918			mov	[rax],rbx
19a9a1 5b			pop	rbx
19a9a2 58			pop	rax
19a9a3 498d4424f0		lea	rax,[r12-16]
19a9a8 49bf0800fcb0937f
19a9b0 0000			mov	r15,140272306225160
19a9b2 493b4728			cmp	rax,[r15+40]
19a9b6 7d38			jge	short alloc-ok93
19a9b8 48c7c010000000		mov	rax,dword 16
19a9bf 57			push	rdi
19a9c0 56			push	rsi
19a9c1 52			push	rdx
19a9c2 51			push	rcx
19a9c3 4150			push	r8
19a9c5 4151			push	r9
19a9c7 4152			push	r10
19a9c9 4153			push	r11
19a9cb 50			push	rax
19a9cc 4889e7			mov	rdi,rsp
19a9cf 4883e4f0			and	rsp,byte -16
19a9d3 4883ec08			sub	rsp,byte 8
19a9d7 57			push	rdi
19a9d8 e8f3366d01		call	gc
19a9dd 5c			pop	rsp
19a9de 4989c4			mov	r12,rax
19a9e1 58			pop	rax
19a9e2 415b			pop	r11
19a9e4 415a			pop	r10
19a9e6 4159			pop	r9
19a9e8 4158			pop	r8
19a9ea 59			pop	rcx
19a9eb 5a			pop	rdx
19a9ec 5e			pop	rsi
19a9ed 5f			pop	rdi
19a9ee eb04			jmp	short alloc-end93
19a9f0			alloc-ok93:
19a9f0 4983ec10			sub	r12,byte 16
19a9f4			alloc-end93:
19a9f4 48c7c076020000		mov	rax,dword 630
19a9fb 49890424			mov	[r12],rax
19a9ff 48c7c00016d202		mov	rax,dword 47322624
19aa06 4989442408		mov	[r12+8],rax
19aa0b 498d442401		lea	rax,[r12+1]
19aa10 50			push	rax
19aa11			version281:
19aa11 58			pop	rax
19aa12 498982e0020000		mov	[r10+736],rax
19aa19 6aee			push	qword byte -18
19aa1b			version282:
19aa1b 48c7c0eeffffff		mov	rax,dword -18
19aa22 498982e8020000		mov	[r10+744],rax
19aa29			version283:
19aa29 50			push	rax
19aa2a 53			push	rbx
19aa2b 48b85000fcb0937f
19aa33 0000			mov	rax,140272306225232
19aa35 488b18			mov	rbx,[rax]
19aa38 48ffc3			inc	rbx
19aa3b 488918			mov	[rax],rbx
19aa3e 5b			pop	rbx
19aa3f 58			pop	rax
19aa40 498d4424f0		lea	rax,[r12-16]
19aa45 49bf0800fcb0937f
19aa4d 0000			mov	r15,140272306225160
19aa4f 493b4728			cmp	rax,[r15+40]
19aa53 7d38			jge	short alloc-ok94
19aa55 48c7c010000000		mov	rax,dword 16
19aa5c 57			push	rdi
19aa5d 56			push	rsi
19aa5e 52			push	rdx
19aa5f 51			push	rcx
19aa60 4150			push	r8
19aa62 4151			push	r9
19aa64 4152			push	r10
19aa66 4153			push	r11
19aa68 50			push	rax
19aa69 4889e7			mov	rdi,rsp
19aa6c 4883e4f0			and	rsp,byte -16
19aa70 4883ec08			sub	rsp,byte 8
19aa74 57			push	rdi
19aa75 e856366d01		call	gc
19aa7a 5c			pop	rsp
19aa7b 4989c4			mov	r12,rax
19aa7e 58			pop	rax
19aa7f 415b			pop	r11
19aa81 415a			pop	r10
19aa83 4159			pop	r9
19aa85 4158			pop	r8
19aa87 59			pop	rcx
19aa88 5a			pop	rdx
19aa89 5e			pop	rsi
19aa8a 5f			pop	rdi
19aa8b eb04			jmp	short alloc-end94
19aa8d			alloc-ok94:
19aa8d 4983ec10			sub	r12,byte 16
19aa91			alloc-end94:
19aa91 48c7c076020000		mov	rax,dword 630
19aa98 49890424			mov	[r12],rax
19aa9c 48c7c04026d202		mov	rax,dword 47326784
19aaa3 4989442408		mov	[r12+8],rax
19aaa8 498d442401		lea	rax,[r12+1]
19aaad 50			push	rax
19aaae			version284:
19aaae 58			pop	rax
19aaaf 498982e8020000		mov	[r10+744],rax
19aab6 6aee			push	qword byte -18
19aab8			version285:
19aab8 48c7c0eeffffff		mov	rax,dword -18
19aabf 498982f0020000		mov	[r10+752],rax
19aac6			version286:
19aac6 50			push	rax
19aac7 53			push	rbx
19aac8 48b85000fcb0937f
19aad0 0000			mov	rax,140272306225232
19aad2 488b18			mov	rbx,[rax]
19aad5 48ffc3			inc	rbx
19aad8 488918			mov	[rax],rbx
19aadb 5b			pop	rbx
19aadc 58			pop	rax
19aadd 498d4424f0		lea	rax,[r12-16]
19aae2 49bf0800fcb0937f
19aaea 0000			mov	r15,140272306225160
19aaec 493b4728			cmp	rax,[r15+40]
19aaf0 7d38			jge	short alloc-ok95
19aaf2 48c7c010000000		mov	rax,dword 16
19aaf9 57			push	rdi
19aafa 56			push	rsi
19aafb 52			push	rdx
19aafc 51			push	rcx
19aafd 4150			push	r8
19aaff 4151			push	r9
19ab01 4152			push	r10
19ab03 4153			push	r11
19ab05 50			push	rax
19ab06 4889e7			mov	rdi,rsp
19ab09 4883e4f0			and	rsp,byte -16
19ab0d 4883ec08			sub	rsp,byte 8
19ab11 57			push	rdi
19ab12 e8b9356d01		call	gc
19ab17 5c			pop	rsp
19ab18 4989c4			mov	r12,rax
19ab1b 58			pop	rax
19ab1c 415b			pop	r11
19ab1e 415a			pop	r10
19ab20 4159			pop	r9
19ab22 4158			pop	r8
19ab24 59			pop	rcx
19ab25 5a			pop	rdx
19ab26 5e			pop	rsi
19ab27 5f			pop	rdi
19ab28 eb04			jmp	short alloc-end95
19ab2a			alloc-ok95:
19ab2a 4983ec10			sub	r12,byte 16
19ab2e			alloc-end95:
19ab2e 48c7c076020000		mov	rax,dword 630
19ab35 49890424			mov	[r12],rax
19ab39 48c7c08036d202		mov	rax,dword 47330944
19ab40 4989442408		mov	[r12+8],rax
19ab45 498d442401		lea	rax,[r12+1]
19ab4a 50			push	rax
19ab4b			version287:
19ab4b 58			pop	rax
19ab4c 498982f0020000		mov	[r10+752],rax
19ab53 6aee			push	qword byte -18
19ab55			version288:
19ab55 48c7c0eeffffff		mov	rax,dword -18
19ab5c 498982f8020000		mov	[r10+760],rax
19ab63			version289:
19ab63 50			push	rax
19ab64 53			push	rbx
19ab65 48b85000fcb0937f
19ab6d 0000			mov	rax,140272306225232
19ab6f 488b18			mov	rbx,[rax]
19ab72 48ffc3			inc	rbx
19ab75 488918			mov	[rax],rbx
19ab78 5b			pop	rbx
19ab79 58			pop	rax
19ab7a 498d4424f0		lea	rax,[r12-16]
19ab7f 49bf0800fcb0937f
19ab87 0000			mov	r15,140272306225160
19ab89 493b4728			cmp	rax,[r15+40]
19ab8d 7d38			jge	short alloc-ok96
19ab8f 48c7c010000000		mov	rax,dword 16
19ab96 57			push	rdi
19ab97 56			push	rsi
19ab98 52			push	rdx
19ab99 51			push	rcx
19ab9a 4150			push	r8
19ab9c 4151			push	r9
19ab9e 4152			push	r10
19aba0 4153			push	r11
19aba2 50			push	rax
19aba3 4889e7			mov	rdi,rsp
19aba6 4883e4f0			and	rsp,byte -16
19abaa 4883ec08			sub	rsp,byte 8
19abae 57			push	rdi
19abaf e81c356d01		call	gc
19abb4 5c			pop	rsp
19abb5 4989c4			mov	r12,rax
19abb8 58			pop	rax
19abb9 415b			pop	r11
19abbb 415a			pop	r10
19abbd 4159			pop	r9
19abbf 4158			pop	r8
19abc1 59			pop	rcx
19abc2 5a			pop	rdx
19abc3 5e			pop	rsi
19abc4 5f			pop	rdi
19abc5 eb04			jmp	short alloc-end96
19abc7			alloc-ok96:
19abc7 4983ec10			sub	r12,byte 16
19abcb			alloc-end96:
19abcb 48c7c076020000		mov	rax,dword 630
19abd2 49890424			mov	[r12],rax
19abd6 48c7c0c046d202		mov	rax,dword 47335104
19abdd 4989442408		mov	[r12+8],rax
19abe2 498d442401		lea	rax,[r12+1]
19abe7 50			push	rax
19abe8			version290:
19abe8 58			pop	rax
19abe9 498982f8020000		mov	[r10+760],rax
19abf0 6aee			push	qword byte -18
19abf2			version291:
19abf2 48c7c0eeffffff		mov	rax,dword -18
19abf9 49898200030000		mov	[r10+768],rax
19ac00			version292:
19ac00 50			push	rax
19ac01 53			push	rbx
19ac02 48b85000fcb0937f
19ac0a 0000			mov	rax,140272306225232
19ac0c 488b18			mov	rbx,[rax]
19ac0f 48ffc3			inc	rbx
19ac12 488918			mov	[rax],rbx
19ac15 5b			pop	rbx
19ac16 58			pop	rax
19ac17 498d4424f0		lea	rax,[r12-16]
19ac1c 49bf0800fcb0937f
19ac24 0000			mov	r15,140272306225160
19ac26 493b4728			cmp	rax,[r15+40]
19ac2a 7d38			jge	short alloc-ok97
19ac2c 48c7c010000000		mov	rax,dword 16
19ac33 57			push	rdi
19ac34 56			push	rsi
19ac35 52			push	rdx
19ac36 51			push	rcx
19ac37 4150			push	r8
19ac39 4151			push	r9
19ac3b 4152			push	r10
19ac3d 4153			push	r11
19ac3f 50			push	rax
19ac40 4889e7			mov	rdi,rsp
19ac43 4883e4f0			and	rsp,byte -16
19ac47 4883ec08			sub	rsp,byte 8
19ac4b 57			push	rdi
19ac4c e87f346d01		call	gc
19ac51 5c			pop	rsp
19ac52 4989c4			mov	r12,rax
19ac55 58			pop	rax
19ac56 415b			pop	r11
19ac58 415a			pop	r10
19ac5a 4159			pop	r9
19ac5c 4158			pop	r8
19ac5e 59			pop	rcx
19ac5f 5a			pop	rdx
19ac60 5e			pop	rsi
19ac61 5f			pop	rdi
19ac62 eb04			jmp	short alloc-end97
19ac64			alloc-ok97:
19ac64 4983ec10			sub	r12,byte 16
19ac68			alloc-end97:
19ac68 48c7c076020000		mov	rax,dword 630
19ac6f 49890424			mov	[r12],rax
19ac73 48c7c00057d202		mov	rax,dword 47339264
19ac7a 4989442408		mov	[r12+8],rax
19ac7f 498d442401		lea	rax,[r12+1]
19ac84 50			push	rax
19ac85			version293:
19ac85 58			pop	rax
19ac86 49898200030000		mov	[r10+768],rax
19ac8d 6aee			push	qword byte -18
19ac8f			version294:
19ac8f 48c7c0eeffffff		mov	rax,dword -18
19ac96 49898208030000		mov	[r10+776],rax
19ac9d			version295:
19ac9d 50			push	rax
19ac9e 53			push	rbx
19ac9f 48b85000fcb0937f
19aca7 0000			mov	rax,140272306225232
19aca9 488b18			mov	rbx,[rax]
19acac 48ffc3			inc	rbx
19acaf 488918			mov	[rax],rbx
19acb2 5b			pop	rbx
19acb3 58			pop	rax
19acb4 498d4424f0		lea	rax,[r12-16]
19acb9 49bf0800fcb0937f
19acc1 0000			mov	r15,140272306225160
19acc3 493b4728			cmp	rax,[r15+40]
19acc7 7d38			jge	short alloc-ok98
19acc9 48c7c010000000		mov	rax,dword 16
19acd0 57			push	rdi
19acd1 56			push	rsi
19acd2 52			push	rdx
19acd3 51			push	rcx
19acd4 4150			push	r8
19acd6 4151			push	r9
19acd8 4152			push	r10
19acda 4153			push	r11
19acdc 50			push	rax
19acdd 4889e7			mov	rdi,rsp
19ace0 4883e4f0			and	rsp,byte -16
19ace4 4883ec08			sub	rsp,byte 8
19ace8 57			push	rdi
19ace9 e8e2336d01		call	gc
19acee 5c			pop	rsp
19acef 4989c4			mov	r12,rax
19acf2 58			pop	rax
19acf3 415b			pop	r11
19acf5 415a			pop	r10
19acf7 4159			pop	r9
19acf9 4158			pop	r8
19acfb 59			pop	rcx
19acfc 5a			pop	rdx
19acfd 5e			pop	rsi
19acfe 5f			pop	rdi
19acff eb04			jmp	short alloc-end98
19ad01			alloc-ok98:
19ad01 4983ec10			sub	r12,byte 16
19ad05			alloc-end98:
19ad05 48c7c076020000		mov	rax,dword 630
19ad0c 49890424			mov	[r12],rax
19ad10 48c7c08071d202		mov	rax,dword 47346048
19ad17 4989442408		mov	[r12+8],rax
19ad1c 498d442401		lea	rax,[r12+1]
19ad21 50			push	rax
19ad22			version296:
19ad22 58			pop	rax
19ad23 49898208030000		mov	[r10+776],rax
19ad2a 6aee			push	qword byte -18
19ad2c			version297:
19ad2c 48c7c0eeffffff		mov	rax,dword -18
19ad33 49898210030000		mov	[r10+784],rax
19ad3a			version298:
19ad3a 50			push	rax
19ad3b 53			push	rbx
19ad3c 48b85000fcb0937f
19ad44 0000			mov	rax,140272306225232
19ad46 488b18			mov	rbx,[rax]
19ad49 48ffc3			inc	rbx
19ad4c 488918			mov	[rax],rbx
19ad4f 5b			pop	rbx
19ad50 58			pop	rax
19ad51 498d4424f0		lea	rax,[r12-16]
19ad56 49bf0800fcb0937f
19ad5e 0000			mov	r15,140272306225160
19ad60 493b4728			cmp	rax,[r15+40]
19ad64 7d38			jge	short alloc-ok99
19ad66 48c7c010000000		mov	rax,dword 16
19ad6d 57			push	rdi
19ad6e 56			push	rsi
19ad6f 52			push	rdx
19ad70 51			push	rcx
19ad71 4150			push	r8
19ad73 4151			push	r9
19ad75 4152			push	r10
19ad77 4153			push	r11
19ad79 50			push	rax
19ad7a 4889e7			mov	rdi,rsp
19ad7d 4883e4f0			and	rsp,byte -16
19ad81 4883ec08			sub	rsp,byte 8
19ad85 57			push	rdi
19ad86 e845336d01		call	gc
19ad8b 5c			pop	rsp
19ad8c 4989c4			mov	r12,rax
19ad8f 58			pop	rax
19ad90 415b			pop	r11
19ad92 415a			pop	r10
19ad94 4159			pop	r9
19ad96 4158			pop	r8
19ad98 59			pop	rcx
19ad99 5a			pop	rdx
19ad9a 5e			pop	rsi
19ad9b 5f			pop	rdi
19ad9c eb04			jmp	short alloc-end99
19ad9e			alloc-ok99:
19ad9e 4983ec10			sub	r12,byte 16
19ada2			alloc-end99:
19ada2 48c7c076020000		mov	rax,dword 630
19ada9 49890424			mov	[r12],rax
19adad 48c7c0c081d202		mov	rax,dword 47350208
19adb4 4989442408		mov	[r12+8],rax
19adb9 498d442401		lea	rax,[r12+1]
19adbe 50			push	rax
19adbf			version299:
19adbf 58			pop	rax
19adc0 49898210030000		mov	[r10+784],rax
19adc7 6aee			push	qword byte -18
19adc9			version300:
19adc9 48c7c0eeffffff		mov	rax,dword -18
19add0 49898218030000		mov	[r10+792],rax
19add7			version301:
19add7 50			push	rax
19add8 53			push	rbx
19add9 48b85000fcb0937f
19ade1 0000			mov	rax,140272306225232
19ade3 488b18			mov	rbx,[rax]
19ade6 48ffc3			inc	rbx
19ade9 488918			mov	[rax],rbx
19adec 5b			pop	rbx
19aded 58			pop	rax
19adee 498d4424f0		lea	rax,[r12-16]
19adf3 49bf0800fcb0937f
19adfb 0000			mov	r15,140272306225160
19adfd 493b4728			cmp	rax,[r15+40]
19ae01 7d38			jge	short alloc-ok100
19ae03 48c7c010000000		mov	rax,dword 16
19ae0a 57			push	rdi
19ae0b 56			push	rsi
19ae0c 52			push	rdx
19ae0d 51			push	rcx
19ae0e 4150			push	r8
19ae10 4151			push	r9
19ae12 4152			push	r10
19ae14 4153			push	r11
19ae16 50			push	rax
19ae17 4889e7			mov	rdi,rsp
19ae1a 4883e4f0			and	rsp,byte -16
19ae1e 4883ec08			sub	rsp,byte 8
19ae22 57			push	rdi
19ae23 e8a8326d01		call	gc
19ae28 5c			pop	rsp
19ae29 4989c4			mov	r12,rax
19ae2c 58			pop	rax
19ae2d 415b			pop	r11
19ae2f 415a			pop	r10
19ae31 4159			pop	r9
19ae33 4158			pop	r8
19ae35 59			pop	rcx
19ae36 5a			pop	rdx
19ae37 5e			pop	rsi
19ae38 5f			pop	rdi
19ae39 eb04			jmp	short alloc-end100
19ae3b			alloc-ok100:
19ae3b 4983ec10			sub	r12,byte 16
19ae3f			alloc-end100:
19ae3f 48c7c076020000		mov	rax,dword 630
19ae46 49890424			mov	[r12],rax
19ae4a 48c7c00092d202		mov	rax,dword 47354368
19ae51 4989442408		mov	[r12+8],rax
19ae56 498d442401		lea	rax,[r12+1]
19ae5b 50			push	rax
19ae5c			version302:
19ae5c 58			pop	rax
19ae5d 49898218030000		mov	[r10+792],rax
19ae64 6aee			push	qword byte -18
19ae66			version303:
19ae66 48c7c0eeffffff		mov	rax,dword -18
19ae6d 49898220030000		mov	[r10+800],rax
19ae74			version304:
19ae74 50			push	rax
19ae75 53			push	rbx
19ae76 48b85000fcb0937f
19ae7e 0000			mov	rax,140272306225232
19ae80 488b18			mov	rbx,[rax]
19ae83 48ffc3			inc	rbx
19ae86 488918			mov	[rax],rbx
19ae89 5b			pop	rbx
19ae8a 58			pop	rax
19ae8b 498d4424f0		lea	rax,[r12-16]
19ae90 49bf0800fcb0937f
19ae98 0000			mov	r15,140272306225160
19ae9a 493b4728			cmp	rax,[r15+40]
19ae9e 7d38			jge	short alloc-ok101
19aea0 48c7c010000000		mov	rax,dword 16
19aea7 57			push	rdi
19aea8 56			push	rsi
19aea9 52			push	rdx
19aeaa 51			push	rcx
19aeab 4150			push	r8
19aead 4151			push	r9
19aeaf 4152			push	r10
19aeb1 4153			push	r11
19aeb3 50			push	rax
19aeb4 4889e7			mov	rdi,rsp
19aeb7 4883e4f0			and	rsp,byte -16
19aebb 4883ec08			sub	rsp,byte 8
19aebf 57			push	rdi
19aec0 e80b326d01		call	gc
19aec5 5c			pop	rsp
19aec6 4989c4			mov	r12,rax
19aec9 58			pop	rax
19aeca 415b			pop	r11
19aecc 415a			pop	r10
19aece 4159			pop	r9
19aed0 4158			pop	r8
19aed2 59			pop	rcx
19aed3 5a			pop	rdx
19aed4 5e			pop	rsi
19aed5 5f			pop	rdi
19aed6 eb04			jmp	short alloc-end101
19aed8			alloc-ok101:
19aed8 4983ec10			sub	r12,byte 16
19aedc			alloc-end101:
19aedc 48c7c076020000		mov	rax,dword 630
19aee3 49890424			mov	[r12],rax
19aee7 48c7c040a2d202		mov	rax,dword 47358528
19aeee 4989442408		mov	[r12+8],rax
19aef3 498d442401		lea	rax,[r12+1]
19aef8 50			push	rax
19aef9			version305:
19aef9 58			pop	rax
19aefa 49898220030000		mov	[r10+800],rax
19af01 6aee			push	qword byte -18
19af03			version306:
19af03 48c7c0eeffffff		mov	rax,dword -18
19af0a 49898228030000		mov	[r10+808],rax
19af11			version307:
19af11 50			push	rax
19af12 53			push	rbx
19af13 48b85000fcb0937f
19af1b 0000			mov	rax,140272306225232
19af1d 488b18			mov	rbx,[rax]
19af20 48ffc3			inc	rbx
19af23 488918			mov	[rax],rbx
19af26 5b			pop	rbx
19af27 58			pop	rax
19af28 498d4424f0		lea	rax,[r12-16]
19af2d 49bf0800fcb0937f
19af35 0000			mov	r15,140272306225160
19af37 493b4728			cmp	rax,[r15+40]
19af3b 7d38			jge	short alloc-ok102
19af3d 48c7c010000000		mov	rax,dword 16
19af44 57			push	rdi
19af45 56			push	rsi
19af46 52			push	rdx
19af47 51			push	rcx
19af48 4150			push	r8
19af4a 4151			push	r9
19af4c 4152			push	r10
19af4e 4153			push	r11
19af50 50			push	rax
19af51 4889e7			mov	rdi,rsp
19af54 4883e4f0			and	rsp,byte -16
19af58 4883ec08			sub	rsp,byte 8
19af5c 57			push	rdi
19af5d e86e316d01		call	gc
19af62 5c			pop	rsp
19af63 4989c4			mov	r12,rax
19af66 58			pop	rax
19af67 415b			pop	r11
19af69 415a			pop	r10
19af6b 4159			pop	r9
19af6d 4158			pop	r8
19af6f 59			pop	rcx
19af70 5a			pop	rdx
19af71 5e			pop	rsi
19af72 5f			pop	rdi
19af73 eb04			jmp	short alloc-end102
19af75			alloc-ok102:
19af75 4983ec10			sub	r12,byte 16
19af79			alloc-end102:
19af79 48c7c076020000		mov	rax,dword 630
19af80 49890424			mov	[r12],rax
19af84 48c7c080b2d202		mov	rax,dword 47362688
19af8b 4989442408		mov	[r12+8],rax
19af90 498d442401		lea	rax,[r12+1]
19af95 50			push	rax
19af96			version308:
19af96 58			pop	rax
19af97 49898228030000		mov	[r10+808],rax
19af9e 6aee			push	qword byte -18
19afa0			version309:
19afa0 48c7c0eeffffff		mov	rax,dword -18
19afa7 49898230030000		mov	[r10+816],rax
19afae			version310:
19afae 50			push	rax
19afaf 53			push	rbx
19afb0 48b85000fcb0937f
19afb8 0000			mov	rax,140272306225232
19afba 488b18			mov	rbx,[rax]
19afbd 48ffc3			inc	rbx
19afc0 488918			mov	[rax],rbx
19afc3 5b			pop	rbx
19afc4 58			pop	rax
19afc5 498d4424f0		lea	rax,[r12-16]
19afca 49bf0800fcb0937f
19afd2 0000			mov	r15,140272306225160
19afd4 493b4728			cmp	rax,[r15+40]
19afd8 7d38			jge	short alloc-ok103
19afda 48c7c010000000		mov	rax,dword 16
19afe1 57			push	rdi
19afe2 56			push	rsi
19afe3 52			push	rdx
19afe4 51			push	rcx
19afe5 4150			push	r8
19afe7 4151			push	r9
19afe9 4152			push	r10
19afeb 4153			push	r11
19afed 50			push	rax
19afee 4889e7			mov	rdi,rsp
19aff1 4883e4f0			and	rsp,byte -16
19aff5 4883ec08			sub	rsp,byte 8
19aff9 57			push	rdi
19affa e8d1306d01		call	gc
19afff 5c			pop	rsp
19b000 4989c4			mov	r12,rax
19b003 58			pop	rax
19b004 415b			pop	r11
19b006 415a			pop	r10
19b008 4159			pop	r9
19b00a 4158			pop	r8
19b00c 59			pop	rcx
19b00d 5a			pop	rdx
19b00e 5e			pop	rsi
19b00f 5f			pop	rdi
19b010 eb04			jmp	short alloc-end103
19b012			alloc-ok103:
19b012 4983ec10			sub	r12,byte 16
19b016			alloc-end103:
19b016 48c7c076020000		mov	rax,dword 630
19b01d 49890424			mov	[r12],rax
19b021 48c7c040c3f202		mov	rax,dword 49464128
19b028 4989442408		mov	[r12+8],rax
19b02d 498d442401		lea	rax,[r12+1]
19b032 50			push	rax
19b033			version311:
19b033 58			pop	rax
19b034 49898230030000		mov	[r10+816],rax
19b03b 6aee			push	qword byte -18
19b03d			version312:
19b03d 48c7c0eeffffff		mov	rax,dword -18
19b044 49898238030000		mov	[r10+824],rax
19b04b			version313:
19b04b 50			push	rax
19b04c 53			push	rbx
19b04d 48b85000fcb0937f
19b055 0000			mov	rax,140272306225232
19b057 488b18			mov	rbx,[rax]
19b05a 48ffc3			inc	rbx
19b05d 488918			mov	[rax],rbx
19b060 5b			pop	rbx
19b061 58			pop	rax
19b062 498d4424f0		lea	rax,[r12-16]
19b067 49bf0800fcb0937f
19b06f 0000			mov	r15,140272306225160
19b071 493b4728			cmp	rax,[r15+40]
19b075 7d38			jge	short alloc-ok104
19b077 48c7c010000000		mov	rax,dword 16
19b07e 57			push	rdi
19b07f 56			push	rsi
19b080 52			push	rdx
19b081 51			push	rcx
19b082 4150			push	r8
19b084 4151			push	r9
19b086 4152			push	r10
19b088 4153			push	r11
19b08a 50			push	rax
19b08b 4889e7			mov	rdi,rsp
19b08e 4883e4f0			and	rsp,byte -16
19b092 4883ec08			sub	rsp,byte 8
19b096 57			push	rdi
19b097 e834306d01		call	gc
19b09c 5c			pop	rsp
19b09d 4989c4			mov	r12,rax
19b0a0 58			pop	rax
19b0a1 415b			pop	r11
19b0a3 415a			pop	r10
19b0a5 4159			pop	r9
19b0a7 4158			pop	r8
19b0a9 59			pop	rcx
19b0aa 5a			pop	rdx
19b0ab 5e			pop	rsi
19b0ac 5f			pop	rdi
19b0ad eb04			jmp	short alloc-end104
19b0af			alloc-ok104:
19b0af 4983ec10			sub	r12,byte 16
19b0b3			alloc-end104:
19b0b3 48c7c076020000		mov	rax,dword 630
19b0ba 49890424			mov	[r12],rax
19b0be 48c7c080d3f202		mov	rax,dword 49468288
19b0c5 4989442408		mov	[r12+8],rax
19b0ca 498d442401		lea	rax,[r12+1]
19b0cf 50			push	rax
19b0d0			version314:
19b0d0 58			pop	rax
19b0d1 49898238030000		mov	[r10+824],rax
19b0d8 6aee			push	qword byte -18
19b0da			version315:
19b0da 48c7c0eeffffff		mov	rax,dword -18
19b0e1 49898240030000		mov	[r10+832],rax
19b0e8			version316:
19b0e8 50			push	rax
19b0e9 53			push	rbx
19b0ea 48b85000fcb0937f
19b0f2 0000			mov	rax,140272306225232
19b0f4 488b18			mov	rbx,[rax]
19b0f7 48ffc3			inc	rbx
19b0fa 488918			mov	[rax],rbx
19b0fd 5b			pop	rbx
19b0fe 58			pop	rax
19b0ff 498d4424f0		lea	rax,[r12-16]
19b104 49bf0800fcb0937f
19b10c 0000			mov	r15,140272306225160
19b10e 493b4728			cmp	rax,[r15+40]
19b112 7d38			jge	short alloc-ok105
19b114 48c7c010000000		mov	rax,dword 16
19b11b 57			push	rdi
19b11c 56			push	rsi
19b11d 52			push	rdx
19b11e 51			push	rcx
19b11f 4150			push	r8
19b121 4151			push	r9
19b123 4152			push	r10
19b125 4153			push	r11
19b127 50			push	rax
19b128 4889e7			mov	rdi,rsp
19b12b 4883e4f0			and	rsp,byte -16
19b12f 4883ec08			sub	rsp,byte 8
19b133 57			push	rdi
19b134 e8972f6d01		call	gc
19b139 5c			pop	rsp
19b13a 4989c4			mov	r12,rax
19b13d 58			pop	rax
19b13e 415b			pop	r11
19b140 415a			pop	r10
19b142 4159			pop	r9
19b144 4158			pop	r8
19b146 59			pop	rcx
19b147 5a			pop	rdx
19b148 5e			pop	rsi
19b149 5f			pop	rdi
19b14a eb04			jmp	short alloc-end105
19b14c			alloc-ok105:
19b14c 4983ec10			sub	r12,byte 16
19b150			alloc-end105:
19b150 48c7c076020000		mov	rax,dword 630
19b157 49890424			mov	[r12],rax
19b15b 48c7c0c0e3f202		mov	rax,dword 49472448
19b162 4989442408		mov	[r12+8],rax
19b167 498d442401		lea	rax,[r12+1]
19b16c 50			push	rax
19b16d			version317:
19b16d 58			pop	rax
19b16e 49898240030000		mov	[r10+832],rax
19b175 6aee			push	qword byte -18
19b177			version318:
19b177 48c7c0eeffffff		mov	rax,dword -18
19b17e 49898248030000		mov	[r10+840],rax
19b185			version319:
19b185 50			push	rax
19b186 53			push	rbx
19b187 48b85000fcb0937f
19b18f 0000			mov	rax,140272306225232
19b191 488b18			mov	rbx,[rax]
19b194 48ffc3			inc	rbx
19b197 488918			mov	[rax],rbx
19b19a 5b			pop	rbx
19b19b 58			pop	rax
19b19c 498d4424f0		lea	rax,[r12-16]
19b1a1 49bf0800fcb0937f
19b1a9 0000			mov	r15,140272306225160
19b1ab 493b4728			cmp	rax,[r15+40]
19b1af 7d38			jge	short alloc-ok106
19b1b1 48c7c010000000		mov	rax,dword 16
19b1b8 57			push	rdi
19b1b9 56			push	rsi
19b1ba 52			push	rdx
19b1bb 51			push	rcx
19b1bc 4150			push	r8
19b1be 4151			push	r9
19b1c0 4152			push	r10
19b1c2 4153			push	r11
19b1c4 50			push	rax
19b1c5 4889e7			mov	rdi,rsp
19b1c8 4883e4f0			and	rsp,byte -16
19b1cc 4883ec08			sub	rsp,byte 8
19b1d0 57			push	rdi
19b1d1 e8fa2e6d01		call	gc
19b1d6 5c			pop	rsp
19b1d7 4989c4			mov	r12,rax
19b1da 58			pop	rax
19b1db 415b			pop	r11
19b1dd 415a			pop	r10
19b1df 4159			pop	r9
19b1e1 4158			pop	r8
19b1e3 59			pop	rcx
19b1e4 5a			pop	rdx
19b1e5 5e			pop	rsi
19b1e6 5f			pop	rdi
19b1e7 eb04			jmp	short alloc-end106
19b1e9			alloc-ok106:
19b1e9 4983ec10			sub	r12,byte 16
19b1ed			alloc-end106:
19b1ed 48c7c076020000		mov	rax,dword 630
19b1f4 49890424			mov	[r12],rax
19b1f8 48c7c000f4f202		mov	rax,dword 49476608
19b1ff 4989442408		mov	[r12+8],rax
19b204 498d442401		lea	rax,[r12+1]
19b209 50			push	rax
19b20a			version320:
19b20a 58			pop	rax
19b20b 49898248030000		mov	[r10+840],rax
19b212 6aee			push	qword byte -18
19b214			version321:
19b214 48c7c0eeffffff		mov	rax,dword -18
19b21b 49898250030000		mov	[r10+848],rax
19b222			version322:
19b222 50			push	rax
19b223 53			push	rbx
19b224 48b85000fcb0937f
19b22c 0000			mov	rax,140272306225232
19b22e 488b18			mov	rbx,[rax]
19b231 48ffc3			inc	rbx
19b234 488918			mov	[rax],rbx
19b237 5b			pop	rbx
19b238 58			pop	rax
19b239 498d4424f0		lea	rax,[r12-16]
19b23e 49bf0800fcb0937f
19b246 0000			mov	r15,140272306225160
19b248 493b4728			cmp	rax,[r15+40]
19b24c 7d38			jge	short alloc-ok107
19b24e 48c7c010000000		mov	rax,dword 16
19b255 57			push	rdi
19b256 56			push	rsi
19b257 52			push	rdx
19b258 51			push	rcx
19b259 4150			push	r8
19b25b 4151			push	r9
19b25d 4152			push	r10
19b25f 4153			push	r11
19b261 50			push	rax
19b262 4889e7			mov	rdi,rsp
19b265 4883e4f0			and	rsp,byte -16
19b269 4883ec08			sub	rsp,byte 8
19b26d 57			push	rdi
19b26e e85d2e6d01		call	gc
19b273 5c			pop	rsp
19b274 4989c4			mov	r12,rax
19b277 58			pop	rax
19b278 415b			pop	r11
19b27a 415a			pop	r10
19b27c 4159			pop	r9
19b27e 4158			pop	r8
19b280 59			pop	rcx
19b281 5a			pop	rdx
19b282 5e			pop	rsi
19b283 5f			pop	rdi
19b284 eb04			jmp	short alloc-end107
19b286			alloc-ok107:
19b286 4983ec10			sub	r12,byte 16
19b28a			alloc-end107:
19b28a 48c7c076020000		mov	rax,dword 630
19b291 49890424			mov	[r12],rax
19b295 48c7c04004f302		mov	rax,dword 49480768
19b29c 4989442408		mov	[r12+8],rax
19b2a1 498d442401		lea	rax,[r12+1]
19b2a6 50			push	rax
19b2a7			version323:
19b2a7 58			pop	rax
19b2a8 49898250030000		mov	[r10+848],rax
19b2af 6aee			push	qword byte -18
19b2b1			version324:
19b2b1 48c7c0eeffffff		mov	rax,dword -18
19b2b8 49898258030000		mov	[r10+856],rax
19b2bf			version325:
19b2bf 50			push	rax
19b2c0 53			push	rbx
19b2c1 48b85000fcb0937f
19b2c9 0000			mov	rax,140272306225232
19b2cb 488b18			mov	rbx,[rax]
19b2ce 48ffc3			inc	rbx
19b2d1 488918			mov	[rax],rbx
19b2d4 5b			pop	rbx
19b2d5 58			pop	rax
19b2d6 498d4424f0		lea	rax,[r12-16]
19b2db 49bf0800fcb0937f
19b2e3 0000			mov	r15,140272306225160
19b2e5 493b4728			cmp	rax,[r15+40]
19b2e9 7d38			jge	short alloc-ok108
19b2eb 48c7c010000000		mov	rax,dword 16
19b2f2 57			push	rdi
19b2f3 56			push	rsi
19b2f4 52			push	rdx
19b2f5 51			push	rcx
19b2f6 4150			push	r8
19b2f8 4151			push	r9
19b2fa 4152			push	r10
19b2fc 4153			push	r11
19b2fe 50			push	rax
19b2ff 4889e7			mov	rdi,rsp
19b302 4883e4f0			and	rsp,byte -16
19b306 4883ec08			sub	rsp,byte 8
19b30a 57			push	rdi
19b30b e8c02d6d01		call	gc
19b310 5c			pop	rsp
19b311 4989c4			mov	r12,rax
19b314 58			pop	rax
19b315 415b			pop	r11
19b317 415a			pop	r10
19b319 4159			pop	r9
19b31b 4158			pop	r8
19b31d 59			pop	rcx
19b31e 5a			pop	rdx
19b31f 5e			pop	rsi
19b320 5f			pop	rdi
19b321 eb04			jmp	short alloc-end108
19b323			alloc-ok108:
19b323 4983ec10			sub	r12,byte 16
19b327			alloc-end108:
19b327 48c7c076020000		mov	rax,dword 630
19b32e 49890424			mov	[r12],rax
19b332 48c7c08014f302		mov	rax,dword 49484928
19b339 4989442408		mov	[r12+8],rax
19b33e 498d442401		lea	rax,[r12+1]
19b343 50			push	rax
19b344			version326:
19b344 58			pop	rax
19b345 49898258030000		mov	[r10+856],rax
19b34c 6aee			push	qword byte -18
19b34e			version327:
19b34e 48c7c0eeffffff		mov	rax,dword -18
19b355 49898260030000		mov	[r10+864],rax
19b35c			version328:
19b35c 50			push	rax
19b35d 53			push	rbx
19b35e 48b85000fcb0937f
19b366 0000			mov	rax,140272306225232
19b368 488b18			mov	rbx,[rax]
19b36b 48ffc3			inc	rbx
19b36e 488918			mov	[rax],rbx
19b371 5b			pop	rbx
19b372 58			pop	rax
19b373 498d4424f0		lea	rax,[r12-16]
19b378 49bf0800fcb0937f
19b380 0000			mov	r15,140272306225160
19b382 493b4728			cmp	rax,[r15+40]
19b386 7d38			jge	short alloc-ok109
19b388 48c7c010000000		mov	rax,dword 16
19b38f 57			push	rdi
19b390 56			push	rsi
19b391 52			push	rdx
19b392 51			push	rcx
19b393 4150			push	r8
19b395 4151			push	r9
19b397 4152			push	r10
19b399 4153			push	r11
19b39b 50			push	rax
19b39c 4889e7			mov	rdi,rsp
19b39f 4883e4f0			and	rsp,byte -16
19b3a3 4883ec08			sub	rsp,byte 8
19b3a7 57			push	rdi
19b3a8 e8232d6d01		call	gc
19b3ad 5c			pop	rsp
19b3ae 4989c4			mov	r12,rax
19b3b1 58			pop	rax
19b3b2 415b			pop	r11
19b3b4 415a			pop	r10
19b3b6 4159			pop	r9
19b3b8 4158			pop	r8
19b3ba 59			pop	rcx
19b3bb 5a			pop	rdx
19b3bc 5e			pop	rsi
19b3bd 5f			pop	rdi
19b3be eb04			jmp	short alloc-end109
19b3c0			alloc-ok109:
19b3c0 4983ec10			sub	r12,byte 16
19b3c4			alloc-end109:
19b3c4 48c7c076020000		mov	rax,dword 630
19b3cb 49890424			mov	[r12],rax
19b3cf 48c7c0c024f302		mov	rax,dword 49489088
19b3d6 4989442408		mov	[r12+8],rax
19b3db 498d442401		lea	rax,[r12+1]
19b3e0 50			push	rax
19b3e1			version329:
19b3e1 58			pop	rax
19b3e2 49898260030000		mov	[r10+864],rax
19b3e9 6aee			push	qword byte -18
19b3eb			version330:
19b3eb 48c7c0eeffffff		mov	rax,dword -18
19b3f2 49898268030000		mov	[r10+872],rax
19b3f9			version331:
19b3f9 50			push	rax
19b3fa 53			push	rbx
19b3fb 48b85000fcb0937f
19b403 0000			mov	rax,140272306225232
19b405 488b18			mov	rbx,[rax]
19b408 48ffc3			inc	rbx
19b40b 488918			mov	[rax],rbx
19b40e 5b			pop	rbx
19b40f 58			pop	rax
19b410 498d4424f0		lea	rax,[r12-16]
19b415 49bf0800fcb0937f
19b41d 0000			mov	r15,140272306225160
19b41f 493b4728			cmp	rax,[r15+40]
19b423 7d38			jge	short alloc-ok110
19b425 48c7c010000000		mov	rax,dword 16
19b42c 57			push	rdi
19b42d 56			push	rsi
19b42e 52			push	rdx
19b42f 51			push	rcx
19b430 4150			push	r8
19b432 4151			push	r9
19b434 4152			push	r10
19b436 4153			push	r11
19b438 50			push	rax
19b439 4889e7			mov	rdi,rsp
19b43c 4883e4f0			and	rsp,byte -16
19b440 4883ec08			sub	rsp,byte 8
19b444 57			push	rdi
19b445 e8862c6d01		call	gc
19b44a 5c			pop	rsp
19b44b 4989c4			mov	r12,rax
19b44e 58			pop	rax
19b44f 415b			pop	r11
19b451 415a			pop	r10
19b453 4159			pop	r9
19b455 4158			pop	r8
19b457 59			pop	rcx
19b458 5a			pop	rdx
19b459 5e			pop	rsi
19b45a 5f			pop	rdi
19b45b eb04			jmp	short alloc-end110
19b45d			alloc-ok110:
19b45d 4983ec10			sub	r12,byte 16
19b461			alloc-end110:
19b461 48c7c076020000		mov	rax,dword 630
19b468 49890424			mov	[r12],rax
19b46c 48c7c00035f302		mov	rax,dword 49493248
19b473 4989442408		mov	[r12+8],rax
19b478 498d442401		lea	rax,[r12+1]
19b47d 50			push	rax
19b47e			version332:
19b47e 58			pop	rax
19b47f 49898268030000		mov	[r10+872],rax
19b486 6aee			push	qword byte -18
19b488			version333:
19b488 48c7c0eeffffff		mov	rax,dword -18
19b48f 49898270030000		mov	[r10+880],rax
19b496			version334:
19b496 50			push	rax
19b497 53			push	rbx
19b498 48b85000fcb0937f
19b4a0 0000			mov	rax,140272306225232
19b4a2 488b18			mov	rbx,[rax]
19b4a5 48ffc3			inc	rbx
19b4a8 488918			mov	[rax],rbx
19b4ab 5b			pop	rbx
19b4ac 58			pop	rax
19b4ad 498d4424f0		lea	rax,[r12-16]
19b4b2 49bf0800fcb0937f
19b4ba 0000			mov	r15,140272306225160
19b4bc 493b4728			cmp	rax,[r15+40]
19b4c0 7d38			jge	short alloc-ok111
19b4c2 48c7c010000000		mov	rax,dword 16
19b4c9 57			push	rdi
19b4ca 56			push	rsi
19b4cb 52			push	rdx
19b4cc 51			push	rcx
19b4cd 4150			push	r8
19b4cf 4151			push	r9
19b4d1 4152			push	r10
19b4d3 4153			push	r11
19b4d5 50			push	rax
19b4d6 4889e7			mov	rdi,rsp
19b4d9 4883e4f0			and	rsp,byte -16
19b4dd 4883ec08			sub	rsp,byte 8
19b4e1 57			push	rdi
19b4e2 e8e92b6d01		call	gc
19b4e7 5c			pop	rsp
19b4e8 4989c4			mov	r12,rax
19b4eb 58			pop	rax
19b4ec 415b			pop	r11
19b4ee 415a			pop	r10
19b4f0 4159			pop	r9
19b4f2 4158			pop	r8
19b4f4 59			pop	rcx
19b4f5 5a			pop	rdx
19b4f6 5e			pop	rsi
19b4f7 5f			pop	rdi
19b4f8 eb04			jmp	short alloc-end111
19b4fa			alloc-ok111:
19b4fa 4983ec10			sub	r12,byte 16
19b4fe			alloc-end111:
19b4fe 48c7c076020000		mov	rax,dword 630
19b505 49890424			mov	[r12],rax
19b509 48c7c04045f302		mov	rax,dword 49497408
19b510 4989442408		mov	[r12+8],rax
19b515 498d442401		lea	rax,[r12+1]
19b51a 50			push	rax
19b51b			version335:
19b51b 58			pop	rax
19b51c 49898270030000		mov	[r10+880],rax
19b523 6aee			push	qword byte -18
19b525			version336:
19b525 48c7c0eeffffff		mov	rax,dword -18
19b52c 49898278030000		mov	[r10+888],rax
19b533			version337:
19b533 50			push	rax
19b534 53			push	rbx
19b535 48b85000fcb0937f
19b53d 0000			mov	rax,140272306225232
19b53f 488b18			mov	rbx,[rax]
19b542 48ffc3			inc	rbx
19b545 488918			mov	[rax],rbx
19b548 5b			pop	rbx
19b549 58			pop	rax
19b54a 498d4424f0		lea	rax,[r12-16]
19b54f 49bf0800fcb0937f
19b557 0000			mov	r15,140272306225160
19b559 493b4728			cmp	rax,[r15+40]
19b55d 7d38			jge	short alloc-ok112
19b55f 48c7c010000000		mov	rax,dword 16
19b566 57			push	rdi
19b567 56			push	rsi
19b568 52			push	rdx
19b569 51			push	rcx
19b56a 4150			push	r8
19b56c 4151			push	r9
19b56e 4152			push	r10
19b570 4153			push	r11
19b572 50			push	rax
19b573 4889e7			mov	rdi,rsp
19b576 4883e4f0			and	rsp,byte -16
19b57a 4883ec08			sub	rsp,byte 8
19b57e 57			push	rdi
19b57f e84c2b6d01		call	gc
19b584 5c			pop	rsp
19b585 4989c4			mov	r12,rax
19b588 58			pop	rax
19b589 415b			pop	r11
19b58b 415a			pop	r10
19b58d 4159			pop	r9
19b58f 4158			pop	r8
19b591 59			pop	rcx
19b592 5a			pop	rdx
19b593 5e			pop	rsi
19b594 5f			pop	rdi
19b595 eb04			jmp	short alloc-end112
19b597			alloc-ok112:
19b597 4983ec10			sub	r12,byte 16
19b59b			alloc-end112:
19b59b 48c7c076020000		mov	rax,dword 630
19b5a2 49890424			mov	[r12],rax
19b5a6 48c7c08055f302		mov	rax,dword 49501568
19b5ad 4989442408		mov	[r12+8],rax
19b5b2 498d442401		lea	rax,[r12+1]
19b5b7 50			push	rax
19b5b8			version338:
19b5b8 58			pop	rax
19b5b9 49898278030000		mov	[r10+888],rax
19b5c0 6aee			push	qword byte -18
19b5c2			version339:
19b5c2 48c7c0eeffffff		mov	rax,dword -18
19b5c9 49898280030000		mov	[r10+896],rax
19b5d0			version340:
19b5d0 50			push	rax
19b5d1 53			push	rbx
19b5d2 48b85000fcb0937f
19b5da 0000			mov	rax,140272306225232
19b5dc 488b18			mov	rbx,[rax]
19b5df 48ffc3			inc	rbx
19b5e2 488918			mov	[rax],rbx
19b5e5 5b			pop	rbx
19b5e6 58			pop	rax
19b5e7 498d4424f0		lea	rax,[r12-16]
19b5ec 49bf0800fcb0937f
19b5f4 0000			mov	r15,140272306225160
19b5f6 493b4728			cmp	rax,[r15+40]
19b5fa 7d38			jge	short alloc-ok113
19b5fc 48c7c010000000		mov	rax,dword 16
19b603 57			push	rdi
19b604 56			push	rsi
19b605 52			push	rdx
19b606 51			push	rcx
19b607 4150			push	r8
19b609 4151			push	r9
19b60b 4152			push	r10
19b60d 4153			push	r11
19b60f 50			push	rax
19b610 4889e7			mov	rdi,rsp
19b613 4883e4f0			and	rsp,byte -16
19b617 4883ec08			sub	rsp,byte 8
19b61b 57			push	rdi
19b61c e8af2a6d01		call	gc
19b621 5c			pop	rsp
19b622 4989c4			mov	r12,rax
19b625 58			pop	rax
19b626 415b			pop	r11
19b628 415a			pop	r10
19b62a 4159			pop	r9
19b62c 4158			pop	r8
19b62e 59			pop	rcx
19b62f 5a			pop	rdx
19b630 5e			pop	rsi
19b631 5f			pop	rdi
19b632 eb04			jmp	short alloc-end113
19b634			alloc-ok113:
19b634 4983ec10			sub	r12,byte 16
19b638			alloc-end113:
19b638 48c7c076020000		mov	rax,dword 630
19b63f 49890424			mov	[r12],rax
19b643 48c7c0c065f302		mov	rax,dword 49505728
19b64a 4989442408		mov	[r12+8],rax
19b64f 498d442401		lea	rax,[r12+1]
19b654 50			push	rax
19b655			version341:
19b655 58			pop	rax
19b656 49898280030000		mov	[r10+896],rax
19b65d 6aee			push	qword byte -18
19b65f			version342:
19b65f 48c7c0eeffffff		mov	rax,dword -18
19b666 49898288030000		mov	[r10+904],rax
19b66d			version343:
19b66d 50			push	rax
19b66e 53			push	rbx
19b66f 48b85000fcb0937f
19b677 0000			mov	rax,140272306225232
19b679 488b18			mov	rbx,[rax]
19b67c 48ffc3			inc	rbx
19b67f 488918			mov	[rax],rbx
19b682 5b			pop	rbx
19b683 58			pop	rax
19b684 498d4424f0		lea	rax,[r12-16]
19b689 49bf0800fcb0937f
19b691 0000			mov	r15,140272306225160
19b693 493b4728			cmp	rax,[r15+40]
19b697 7d38			jge	short alloc-ok114
19b699 48c7c010000000		mov	rax,dword 16
19b6a0 57			push	rdi
19b6a1 56			push	rsi
19b6a2 52			push	rdx
19b6a3 51			push	rcx
19b6a4 4150			push	r8
19b6a6 4151			push	r9
19b6a8 4152			push	r10
19b6aa 4153			push	r11
19b6ac 50			push	rax
19b6ad 4889e7			mov	rdi,rsp
19b6b0 4883e4f0			and	rsp,byte -16
19b6b4 4883ec08			sub	rsp,byte 8
19b6b8 57			push	rdi
19b6b9 e8122a6d01		call	gc
19b6be 5c			pop	rsp
19b6bf 4989c4			mov	r12,rax
19b6c2 58			pop	rax
19b6c3 415b			pop	r11
19b6c5 415a			pop	r10
19b6c7 4159			pop	r9
19b6c9 4158			pop	r8
19b6cb 59			pop	rcx
19b6cc 5a			pop	rdx
19b6cd 5e			pop	rsi
19b6ce 5f			pop	rdi
19b6cf eb04			jmp	short alloc-end114
19b6d1			alloc-ok114:
19b6d1 4983ec10			sub	r12,byte 16
19b6d5			alloc-end114:
19b6d5 48c7c076020000		mov	rax,dword 630
19b6dc 49890424			mov	[r12],rax
19b6e0 48c7c00076f302		mov	rax,dword 49509888
19b6e7 4989442408		mov	[r12+8],rax
19b6ec 498d442401		lea	rax,[r12+1]
19b6f1 50			push	rax
19b6f2			version344:
19b6f2 58			pop	rax
19b6f3 49898288030000		mov	[r10+904],rax
19b6fa 6aee			push	qword byte -18
19b6fc			version345:
19b6fc 6afe			push	qword byte -2
19b6fe			version346:
19b6fe 41ffb288030000		push	qword [r10+904]
19b705			version347:
19b705 6afe			push	qword byte -2
19b707			version348:
19b707 48c7c060090000		mov	rax,dword 2400
19b70e 50			push	rax
19b70f			version349:
19b70f 48c7c0c8000000		mov	rax,dword 200
19b716 50			push	rax
19b717			version350:
19b717 41ffb280020000		push	qword [r10+640]
19b71e			version351:
19b71e			version352:
19b71e 48c7c04086f302		mov	rax,dword 49514048
19b725 4889442418		mov	[rsp+24],rax
19b72a			version353:
19b72a 488b0424			mov	rax,[rsp]
19b72e 49c7c31187f302		mov	r11,dword 49514257
19b735 488b4007			mov	rax,[rax+7]
19b739 488b4010			mov	rax,[rax+16]
19b73d ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #120
                         stack: (procedure number number retAddr)
                         env: ((x . #<identifier #121
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 0>
#<ctx #120
      stack: (procedure number number retAddr)
      env: ((x . #<identifier #121
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 0>
------------------------------------------------------------------------
19b73f				bits 64
19b73f 90		fn_entry_1:
19b740 6af6			push	qword byte -10
19b742 498d4424e8		lea	rax,[r12-24]
19b747 49bf0800fcb0937f
19b74f 0000			mov	r15,140272306225160
19b751 493b4728			cmp	rax,[r15+40]
19b755 7d38			jge	short alloc-ok115
19b757 48c7c018000000		mov	rax,dword 24
19b75e 57			push	rdi
19b75f 56			push	rsi
19b760 52			push	rdx
19b761 51			push	rcx
19b762 4150			push	r8
19b764 4151			push	r9
19b766 4152			push	r10
19b768 4153			push	r11
19b76a 50			push	rax
19b76b 4889e7			mov	rdi,rsp
19b76e 4883e4f0			and	rsp,byte -16
19b772 4883ec08			sub	rsp,byte 8
19b776 57			push	rdi
19b777 e854296d01		call	gc
19b77c 5c			pop	rsp
19b77d 4989c4			mov	r12,rax
19b780 58			pop	rax
19b781 415b			pop	r11
19b783 415a			pop	r10
19b785 4159			pop	r9
19b787 4158			pop	r8
19b789 59			pop	rcx
19b78a 5a			pop	rdx
19b78b 5e			pop	rsi
19b78c 5f			pop	rdi
19b78d eb04			jmp	short alloc-end115
19b78f			alloc-ok115:
19b78f 4983ec18			sub	r12,byte 24
19b793			alloc-end115:
19b793 48c7c00e030000		mov	rax,dword 782
19b79a 49890424			mov	[r12],rax
19b79e 488b442410		mov	rax,[rsp+16]
19b7a3 4989442408		mov	[r12+8],rax
19b7a8 58			pop	rax
19b7a9 4989442410		mov	[r12+16],rax
19b7ae 498d442401		lea	rax,[r12+1]
19b7b3 50			push	rax
19b7b4 498d4424e8		lea	rax,[r12-24]
19b7b9 49bf0800fcb0937f
19b7c1 0000			mov	r15,140272306225160
19b7c3 493b4728			cmp	rax,[r15+40]
19b7c7 7d38			jge	short alloc-ok116
19b7c9 48c7c018000000		mov	rax,dword 24
19b7d0 57			push	rdi
19b7d1 56			push	rsi
19b7d2 52			push	rdx
19b7d3 51			push	rcx
19b7d4 4150			push	r8
19b7d6 4151			push	r9
19b7d8 4152			push	r10
19b7da 4153			push	r11
19b7dc 50			push	rax
19b7dd 4889e7			mov	rdi,rsp
19b7e0 4883e4f0			and	rsp,byte -16
19b7e4 4883ec08			sub	rsp,byte 8
19b7e8 57			push	rdi
19b7e9 e8e2286d01		call	gc
19b7ee 5c			pop	rsp
19b7ef 4989c4			mov	r12,rax
19b7f2 58			pop	rax
19b7f3 415b			pop	r11
19b7f5 415a			pop	r10
19b7f7 4159			pop	r9
19b7f9 4158			pop	r8
19b7fb 59			pop	rcx
19b7fc 5a			pop	rdx
19b7fd 5e			pop	rsi
19b7fe 5f			pop	rdi
19b7ff eb04			jmp	short alloc-end116
19b801			alloc-ok116:
19b801 4983ec18			sub	r12,byte 24
19b805			alloc-end116:
19b805 48c7c00e030000		mov	rax,dword 782
19b80c 49890424			mov	[r12],rax
19b810 488b442418		mov	rax,[rsp+24]
19b815 4989442408		mov	[r12+8],rax
19b81a 58			pop	rax
19b81b 4989442410		mov	[r12+16],rax
19b820 498d442401		lea	rax,[r12+1]
19b825 50			push	rax
19b826 58			pop	rax
19b827 4889442410		mov	[rsp+16],rax
19b82c 488b0424			mov	rax,[rsp]
19b830 4889442408		mov	[rsp+8],rax
19b835 4883c408			add	rsp,byte 8
19b839			version354:
19b839 ff742408			push	qword [rsp+8]
19b83d			version355:
19b83d 58			pop	rax
19b83e 4883c410			add	rsp,byte 16
19b842 5a			pop	rdx
19b843 488b5a28			mov	rbx,[rdx+40]
19b847 49c7c328000000		mov	r11,dword 40
19b84e ffe3			jmp	rbx
>>> patching closure 7f920cddd0f9 at 7f920cddd109 : slot contains now label fn_entry_1 (7f93ae19b740)
------------------------------------------------------------------------
d08118				bits 64
d08118			stub_7f93aed08118_0:
d08118 e84aef48ff		call	do_callback_cont_handler
d0811d 91c59e0200000000
(obj= #(#<procedure #122>))
------------------------------------------------------------------------
19b850				bits 64
19b850			continuation_1:
19b850 50			push	rax
19b851			version356:
19b851 41ffb2f8020000		push	qword [r10+760]
19b858			version357:
19b858			version358:
19b858 48c7c0e0c59e02		mov	rax,dword 43959776
19b85f 4889442418		mov	[rsp+24],rax
19b864			version359:
19b864 488b0424			mov	rax,[rsp]
19b868 49c7c3b1c69e02		mov	r11,dword 43959985
19b86f 488b4007			mov	rax,[rax+7]
19b873 488b4018			mov	rax,[rax+24]
19b877 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #123
                         stack: (procedure pair procedure retAddr)
                         env: ((fn . #<identifier #124
                                        type: local
                                        offset: 0
                                        pos: (0)
                                        flags: ()
                                        stype: ()>)
                               (args . #<identifier #125
                                          type: local
                                          offset: 1
                                          pos: (1)
                                          flags: ()
                                          stype: ()>)
                               (r . #<identifier #126
                                       type: local
                                       offset: 2
                                       pos: (2)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #123
      stack: (procedure pair procedure retAddr)
      env: ((fn . #<identifier #124
                     type: local
                     offset: 0
                     pos: (0)
                     flags: ()
                     stype: ()>)
            (args . #<identifier #125
                       type: local
                       offset: 1
                       pos: (1)
                       flags: ()
                       stype: ()>)
            (r . #<identifier #126
                    type: local
                    offset: 2
                    pos: (2)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
d08108				bits 64
d08108			stub_7f93aed08108_1:
d08108 fec1			inc	cl
d0810a			stub_7f93aed08108_0:
d0810a e82bef48ff		call	do_callback_fn_handler
d0810f 51c79e0200000000
(obj= #(#<procedure #127>))
------------------------------------------------------------------------
d080f8				bits 64
d080f8			stub_7f93aed080f8_1:
d080f8 fec1			inc	cl
d080fa			stub_7f93aed080f8_0:
d080fa e80eef48ff		call	do_callback_handler
d080ff 91d79e0200000000
(obj= #(#<procedure #128>))
------------------------------------------------------------------------
19b879				bits 64
19b879 909090		fn_entry_2:
19b87c 488b0424			mov	rax,[rsp]
19b880 50			push	rax
19b881 48c7c0f6ffffff		mov	rax,dword -10
19b888 4889442408		mov	[rsp+8],rax
19b88d			version360:
19b88d 6afe			push	qword byte -2
19b88f 498d4424f0		lea	rax,[r12-16]
19b894 49bf0800fcb0937f
19b89c 0000			mov	r15,140272306225160
19b89e 493b4728			cmp	rax,[r15+40]
19b8a2 7d38			jge	short alloc-ok117
19b8a4 48c7c010000000		mov	rax,dword 16
19b8ab 57			push	rdi
19b8ac 56			push	rsi
19b8ad 52			push	rdx
19b8ae 51			push	rcx
19b8af 4150			push	r8
19b8b1 4151			push	r9
19b8b3 4152			push	r10
19b8b5 4153			push	r11
19b8b7 50			push	rax
19b8b8 4889e7			mov	rdi,rsp
19b8bb 4883e4f0			and	rsp,byte -16
19b8bf 4883ec08			sub	rsp,byte 8
19b8c3 57			push	rdi
19b8c4 e807286d01		call	gc
19b8c9 5c			pop	rsp
19b8ca 4989c4			mov	r12,rax
19b8cd 58			pop	rax
19b8ce 415b			pop	r11
19b8d0 415a			pop	r10
19b8d2 4159			pop	r9
19b8d4 4158			pop	r8
19b8d6 59			pop	rcx
19b8d7 5a			pop	rdx
19b8d8 5e			pop	rsi
19b8d9 5f			pop	rdi
19b8da eb04			jmp	short alloc-end117
19b8dc			alloc-ok117:
19b8dc 4983ec10			sub	r12,byte 16
19b8e0			alloc-end117:
19b8e0 488b0424			mov	rax,[rsp]
19b8e4 4989442408		mov	[r12+8],rax
19b8e9 48c7c016020000		mov	rax,dword 534
19b8f0 49890424			mov	[r12],rax
19b8f4 498d442401		lea	rax,[r12+1]
19b8f9 48890424			mov	[rsp],rax
19b8fd			version361:
19b8fd 50			push	rax
19b8fe 53			push	rbx
19b8ff 48b85000fcb0937f
19b907 0000			mov	rax,140272306225232
19b909 488b18			mov	rbx,[rax]
19b90c 48ffc3			inc	rbx
19b90f 488918			mov	[rax],rbx
19b912 5b			pop	rbx
19b913 58			pop	rax
19b914 498d4424e8		lea	rax,[r12-24]
19b919 49bf0800fcb0937f
19b921 0000			mov	r15,140272306225160
19b923 493b4728			cmp	rax,[r15+40]
19b927 7d38			jge	short alloc-ok118
19b929 48c7c018000000		mov	rax,dword 24
19b930 57			push	rdi
19b931 56			push	rsi
19b932 52			push	rdx
19b933 51			push	rcx
19b934 4150			push	r8
19b936 4151			push	r9
19b938 4152			push	r10
19b93a 4153			push	r11
19b93c 50			push	rax
19b93d 4889e7			mov	rdi,rsp
19b940 4883e4f0			and	rsp,byte -16
19b944 4883ec08			sub	rsp,byte 8
19b948 57			push	rdi
19b949 e882276d01		call	gc
19b94e 5c			pop	rsp
19b94f 4989c4			mov	r12,rax
19b952 58			pop	rax
19b953 415b			pop	r11
19b955 415a			pop	r10
19b957 4159			pop	r9
19b959 4158			pop	r8
19b95b 59			pop	rcx
19b95c 5a			pop	rdx
19b95d 5e			pop	rsi
19b95e 5f			pop	rdi
19b95f eb04			jmp	short alloc-end118
19b961			alloc-ok118:
19b961 4983ec18			sub	r12,byte 24
19b965			alloc-end118:
19b965 48c7c076030000		mov	rax,dword 886
19b96c 49890424			mov	[r12],rax
19b970 48c7c0a0c79e02		mov	rax,dword 43960224
19b977 4989442408		mov	[r12+8],rax
19b97c 488b0424			mov	rax,[rsp]
19b980 4989442410		mov	[r12+16],rax
19b985 498d442401		lea	rax,[r12+1]
19b98a 50			push	rax
19b98b			version362:
19b98b 488b0424			mov	rax,[rsp]
19b98f 488b5c2408		mov	rbx,[rsp+8]
19b994 48894307			mov	[rbx+7],rax
19b998 4883c408			add	rsp,byte 8
19b99c			version363:
19b99c ff742410			push	qword [rsp+16]
19b9a0			version364:
19b9a0 48c7c0faffffff		mov	rax,dword -6
19b9a7 48890424			mov	[rsp],rax
19b9ab			version365:
19b9ab 58			pop	rax
19b9ac 4883f8fe			cmp	rax,byte -2
19b9b0			patchable_jump1:
19b9b0 0f8444c7b600		je	stub_7f93aed080f8_0
19b9b6 e93dc7b600		jmp	stub_7f93aed080f8_1
>>> patching closure 7f920cddd009 at 7f920cddd021 : slot contains now label fn_entry_2 (7f93ae19b87c)
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #129
                      stack: (procedure procedure null pair procedure retAddr)
                      env: ((gen-args
                             .
                             #<identifier #130
                                type: local
                                offset: 4
                                pos: (4)
                                flags: (mutable)
                                stype: ()>)
                            (fn . #<identifier #124
                                     type: local
                                     offset: 0
                                     pos: (0)
                                     flags: ()
                                     stype: ()>)
                            (args . #<identifier #125
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>)
                            (r . #<identifier #131
                                    type: local
                                    offset: 2
                                    pos: (2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
d080e8				bits 64
d080e8			stub_7f93aed080e8_0:
d080e8 e87aef48ff		call	do_callback_cont_handler
d080ed 31d89e0200000000
(obj= #(#<procedure #132>))
------------------------------------------------------------------------
19b9b6				bits 64
19b9b6 9090		version366:
19b9b8 6afe			push	qword byte -2
19b9ba			version367:
19b9ba ff742428			push	qword [rsp+40]
19b9be			version368:
19b9be			version369:
19b9be ff742428			push	qword [rsp+40]
19b9c2			version370:
19b9c2 5b			pop	rbx
19b9c3 58			pop	rax
19b9c4 48c7c700000000		mov	rdi,dword 0
19b9cb			apply-args-loop1:
19b9cb 4883fbf6			cmp	rbx,byte -10
19b9cf 740c			je	short apply-args-end1
19b9d1 ff7307			push	qword [rbx+7]
19b9d4 488b5b0f			mov	rbx,[rbx+15]
19b9d8 48ffc7			inc	rdi
19b9db ebee			jmp	short apply-args-loop1
19b9dd			apply-args-end1:
19b9dd 48c1e702			shl	rdi,2
19b9e1 50			push	rax
19b9e2			version371:
19b9e2 48c7c080d89e02		mov	rax,dword 43964544
19b9e9 48d1e7			shl	rdi,1
19b9ec 4889443c08		mov	[rsp+rdi+8],rax
19b9f1 48d1ef			shr	rdi,1
19b9f4			version372:
19b9f4 488b0424			mov	rax,[rsp]
19b9f8 488b4007			mov	rax,[rax+7]
19b9fc 488b4008			mov	rax,[rax+8]
19ba00 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #133
                         stack: (procedure unknown unknown retAddr)
                         env: ((n . #<identifier #134
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (m . #<identifier #135
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #133
      stack: (procedure unknown unknown retAddr)
      env: ((n . #<identifier #134
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (m . #<identifier #135
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
d080d8				bits 64
d080d8			stub_7f93aed080d8_0:
d080d8 e830ef48ff		call	do_callback_handler
d080dd a1d99e0200000000
(obj= #(#<procedure #136>))
------------------------------------------------------------------------
d080c8				bits 64
d080c8			stub_7f93aed080c8_0:
d080c8 e840ef48ff		call	do_callback_handler
d080cd f1d99e0200000000
(obj= #(#<procedure #137>))
------------------------------------------------------------------------
d080b8				bits 64
d080b8			stub_7f93aed080b8_1:
d080b8 fec1			inc	cl
d080ba			stub_7f93aed080b8_0:
d080ba e84eef48ff		call	do_callback_handler
d080bf 41da9e0200000000
(obj= #(#<procedure #138>))
------------------------------------------------------------------------
19ba02				bits 64
19ba02 9090		fn_entry_3:
19ba04 4883ff08			cmp	rdi,byte 8
19ba08 0f85cac6b600		jne	stub_7f93aed080d8_0
19ba0e			version373:
19ba0e 48c7c028000000		mov	rax,dword 40
19ba15 50			push	rax
19ba16			version374:
19ba16 6af6			push	qword byte -10
19ba18			version375:
19ba18			version376:
19ba18 ff742408			push	qword [rsp+8]
19ba1c			version377:
19ba1c 48c7c000000000		mov	rax,dword 0
19ba23 50			push	rax
19ba24			version378:
19ba24			version379:
19ba24			version380:
19ba24 488b442408		mov	rax,[rsp+8]
19ba29 483b0424			cmp	rax,[rsp]
19ba2d			label-jump1:
19ba2d 0f8595c6b600		jne	stub_7f93aed080c8_0
19ba33			version381:
19ba33 4883c410			add	rsp,byte 16
19ba37 6afa			push	qword byte -6
19ba39			version382:
19ba39 58			pop	rax
19ba3a 4883f8fe			cmp	rax,byte -2
19ba3e			patchable_jump2:
19ba3e 0f8476c6b600		je	stub_7f93aed080b8_0
19ba44 e96fc6b600		jmp	stub_7f93aed080b8_1
>>> patching generic slot of closure 7f920cddcee9: now contains label fn_entry_3 (7f93ae19ba04)
GEN VERSION >>> #<ctx #139
                      stack: (number number
                                     null
                                     number
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #140
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #141
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ba2d -> 7f93ae19ba49
------------------------------------------------------------------------
19ba49				bits 64
19ba49 909090		version383:
19ba4c 4883c410			add	rsp,byte 16
19ba50 6afe			push	qword byte -2
19ba52 ebe5			jmp	short version382
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #142
                      stack: (null number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #143
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #141
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ba3e -> 7f93ae19ba54
------------------------------------------------------------------------
d080a8				bits 64
d080a8			stub_7f93aed080a8_0:
d080a8 e860ef48ff		call	do_callback_handler
d080ad 71f89e0200000000
(obj= #(#<procedure #144>))
------------------------------------------------------------------------
d08098				bits 64
d08098			stub_7f93aed08098_1:
d08098 fec1			inc	cl
d0809a			stub_7f93aed08098_0:
d0809a e86eef48ff		call	do_callback_handler
d0809f c1f89e0200000000
(obj= #(#<procedure #145>))
------------------------------------------------------------------------
19ba54				bits 64
19ba54			version384:
19ba54 ff742408			push	qword [rsp+8]
19ba58			version385:
19ba58 48c7c004000000		mov	rax,dword 4
19ba5f 50			push	rax
19ba60			version386:
19ba60			version387:
19ba60			version388:
19ba60 58			pop	rax
19ba61 48290424			sub	[rsp],rax
19ba65 0f803dd0b600		jo	stub_7f93aed08aa8_0
19ba6b			version389:
19ba6b 6af6			push	qword byte -10
19ba6d			version390:
19ba6d ff742410			push	qword [rsp+16]
19ba71			version391:
19ba71 498d4424e8		lea	rax,[r12-24]
19ba76 49bf0800fcb0937f
19ba7e 0000			mov	r15,140272306225160
19ba80 493b4728			cmp	rax,[r15+40]
19ba84 7d38			jge	short alloc-ok119
19ba86 48c7c018000000		mov	rax,dword 24
19ba8d 57			push	rdi
19ba8e 56			push	rsi
19ba8f 52			push	rdx
19ba90 51			push	rcx
19ba91 4150			push	r8
19ba93 4151			push	r9
19ba95 4152			push	r10
19ba97 4153			push	r11
19ba99 50			push	rax
19ba9a 4889e7			mov	rdi,rsp
19ba9d 4883e4f0			and	rsp,byte -16
19baa1 4883ec08			sub	rsp,byte 8
19baa5 57			push	rdi
19baa6 e825266d01		call	gc
19baab 5c			pop	rsp
19baac 4989c4			mov	r12,rax
19baaf 58			pop	rax
19bab0 415b			pop	r11
19bab2 415a			pop	r10
19bab4 4159			pop	r9
19bab6 4158			pop	r8
19bab8 59			pop	rcx
19bab9 5a			pop	rdx
19baba 5e			pop	rsi
19babb 5f			pop	rdi
19babc eb04			jmp	short alloc-end119
19babe			alloc-ok119:
19babe 4983ec18			sub	r12,byte 24
19bac2			alloc-end119:
19bac2 48c7c00e030000		mov	rax,dword 782
19bac9 49890424			mov	[r12],rax
19bacd 5b			pop	rbx
19bace 58			pop	rax
19bacf 4989442408		mov	[r12+8],rax
19bad4 49895c2410		mov	[r12+16],rbx
19bad9 4c89e0			mov	rax,r12
19badc 4883c001			add	rax,byte 1
19bae0 50			push	rax
19bae1			version392:
19bae1 488b442408		mov	rax,[rsp+8]
19bae6 4889442418		mov	[rsp+24],rax
19baeb 488b0424			mov	rax,[rsp]
19baef 4889442410		mov	[rsp+16],rax
19baf4 4883c410			add	rsp,byte 16
19baf8			version393:
19baf8 ff742408			push	qword [rsp+8]
19bafc			version394:
19bafc 48c7c000000000		mov	rax,dword 0
19bb03 50			push	rax
19bb04			version395:
19bb04			version396:
19bb04			version397:
19bb04 488b442408		mov	rax,[rsp+8]
19bb09 483b0424			cmp	rax,[rsp]
19bb0d			label-jump2:
19bb0d 0f8595c5b600		jne	stub_7f93aed080a8_0
19bb13			version398:
19bb13 4883c410			add	rsp,byte 16
19bb17 6afa			push	qword byte -6
19bb19			version399:
19bb19 58			pop	rax
19bb1a 4883f8fe			cmp	rax,byte -2
19bb1e			patchable_jump3:
19bb1e 0f8476c5b600		je	stub_7f93aed08098_0
19bb24 e96fc5b600		jmp	stub_7f93aed08098_1
GEN VERSION >>> #<ctx #146
                      stack: (number number
                                     pair
                                     number
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #147
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bb0d -> 7f93ae19bb29
------------------------------------------------------------------------
19bb29				bits 64
19bb29 909090		version400:
19bb2c 4883c410			add	rsp,byte 16
19bb30 6afe			push	qword byte -2
19bb32 ebe5			jmp	short version399
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #149
                      stack: (pair number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #150
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bb1e -> 7f93ae19bb34
------------------------------------------------------------------------
19bb34				bits 64
19bb34			version401:
19bb34 ff742408			push	qword [rsp+8]
19bb38			version402:
19bb38 48c7c004000000		mov	rax,dword 4
19bb3f 50			push	rax
19bb40			version403:
19bb40			version404:
19bb40			version405:
19bb40 58			pop	rax
19bb41 48290424			sub	[rsp],rax
19bb45 0f805dcfb600		jo	stub_7f93aed08aa8_0
19bb4b			version406:
19bb4b 6af6			push	qword byte -10
19bb4d			version407:
19bb4d ff742410			push	qword [rsp+16]
19bb51			version408:
19bb51 498d4424e8		lea	rax,[r12-24]
19bb56 49bf0800fcb0937f
19bb5e 0000			mov	r15,140272306225160
19bb60 493b4728			cmp	rax,[r15+40]
19bb64 7d38			jge	short alloc-ok120
19bb66 48c7c018000000		mov	rax,dword 24
19bb6d 57			push	rdi
19bb6e 56			push	rsi
19bb6f 52			push	rdx
19bb70 51			push	rcx
19bb71 4150			push	r8
19bb73 4151			push	r9
19bb75 4152			push	r10
19bb77 4153			push	r11
19bb79 50			push	rax
19bb7a 4889e7			mov	rdi,rsp
19bb7d 4883e4f0			and	rsp,byte -16
19bb81 4883ec08			sub	rsp,byte 8
19bb85 57			push	rdi
19bb86 e845256d01		call	gc
19bb8b 5c			pop	rsp
19bb8c 4989c4			mov	r12,rax
19bb8f 58			pop	rax
19bb90 415b			pop	r11
19bb92 415a			pop	r10
19bb94 4159			pop	r9
19bb96 4158			pop	r8
19bb98 59			pop	rcx
19bb99 5a			pop	rdx
19bb9a 5e			pop	rsi
19bb9b 5f			pop	rdi
19bb9c eb04			jmp	short alloc-end120
19bb9e			alloc-ok120:
19bb9e 4983ec18			sub	r12,byte 24
19bba2			alloc-end120:
19bba2 48c7c00e030000		mov	rax,dword 782
19bba9 49890424			mov	[r12],rax
19bbad 5b			pop	rbx
19bbae 58			pop	rax
19bbaf 4989442408		mov	[r12+8],rax
19bbb4 49895c2410		mov	[r12+16],rbx
19bbb9 4c89e0			mov	rax,r12
19bbbc 4883c001			add	rax,byte 1
19bbc0 50			push	rax
19bbc1			version409:
19bbc1 488b442408		mov	rax,[rsp+8]
19bbc6 4889442418		mov	[rsp+24],rax
19bbcb 488b0424			mov	rax,[rsp]
19bbcf 4889442410		mov	[rsp+16],rax
19bbd4 4883c410			add	rsp,byte 16
19bbd8 e91bffffff		jmp	version393
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #149
                      stack: (pair number procedure unknown unknown retAddr)
                      env: ((i . #<identifier #150
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #148
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #134
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bb24 -> 7f93ae19bbdd
------------------------------------------------------------------------
d08098				bits 64
d08098			stub_7f93aed08098_1:
d08098 fec1			inc	cl
d0809a			stub_7f93aed08098_0:
d0809a e86eef48ff		call	do_callback_handler
d0809f 01fa9e0200000000
(obj= #(#<procedure #151>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19bbdd				bits 64
19bbdd 909090		version410:
19bbe0 ff3424			push	qword [rsp]
19bbe3			version411:
19bbe3 58			pop	rax
19bbe4 4883c410			add	rsp,byte 16
19bbe8 50			push	rax
19bbe9			version412:
19bbe9			version413:
19bbe9 ff742418			push	qword [rsp+24]
19bbed			version414:
19bbed			version415:
19bbed ff3424			push	qword [rsp]
19bbf0			version416:
19bbf0 48c7c000000000		mov	rax,dword 0
19bbf7 50			push	rax
19bbf8			version417:
19bbf8 50			push	rax
19bbf9 53			push	rbx
19bbfa 48b84000fcb0937f
19bc02 0000			mov	rax,140272306225216
19bc04 488b18			mov	rbx,[rax]
19bc07 48ffc3			inc	rbx
19bc0a 488918			mov	[rax],rbx
19bc0d 5b			pop	rbx
19bc0e 58			pop	rax
19bc0f 48c7c003000000		mov	rax,dword 3
19bc16 4823442408		and	rax,[rsp+8]
19bc1b			patchable_jump4:
19bc1b 0f8479c4b600		je	stub_7f93aed08098_0
19bc21 e972c4b600		jmp	stub_7f93aed08098_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19bc1b -> 7f93aed08098
GEN VERSION >>> #<ctx #152
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #153
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d08088				bits 64
d08088			stub_7f93aed08088_0:
d08088 e880ef48ff		call	do_callback_handler
d0808d a1fa9e0200000000
(obj= #(#<procedure #156>))
------------------------------------------------------------------------
d08078				bits 64
d08078			stub_7f93aed08078_1:
d08078 fec1			inc	cl
d0807a			stub_7f93aed08078_0:
d0807a e88eef48ff		call	do_callback_handler
d0807f f1fa9e0200000000
(obj= #(#<procedure #157>))
------------------------------------------------------------------------
19bc21				bits 64
19bc21 909090		version418:
19bc24			version419:
19bc24 488b442408		mov	rax,[rsp+8]
19bc29 483b0424			cmp	rax,[rsp]
19bc2d			label-jump3:
19bc2d 0f8555c4b600		jne	stub_7f93aed08088_0
19bc33			version420:
19bc33 4883c410			add	rsp,byte 16
19bc37 6afa			push	qword byte -6
19bc39			version421:
19bc39 58			pop	rax
19bc3a 4883f8fe			cmp	rax,byte -2
19bc3e			patchable_jump5:
19bc3e 0f8436c4b600		je	stub_7f93aed08078_0
19bc44 e92fc4b600		jmp	stub_7f93aed08078_1
GEN VERSION >>> #<ctx #152
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #153
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bc2d -> 7f93ae19bc49
------------------------------------------------------------------------
19bc49				bits 64
19bc49 909090		version422:
19bc4c 4883c410			add	rsp,byte 16
19bc50 6afe			push	qword byte -2
19bc52 ebe5			jmp	short version421
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #158
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #154
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bc3e -> 7f93ae19bc54
------------------------------------------------------------------------
d08068				bits 64
d08068			stub_7f93aed08068_1:
d08068 fec1			inc	cl
d0806a			stub_7f93aed08068_0:
d0806a e89eef48ff		call	do_callback_handler
d0806f e1fb9e0200000000
(obj= #(#<procedure #160>))
------------------------------------------------------------------------
19bc54				bits 64
19bc54			version423:
19bc54 ff742408			push	qword [rsp+8]
19bc58			version424:
19bc58			version425:
19bc58 58			pop	rax
19bc59 488b4007			mov	rax,[rax+7]
19bc5d 50			push	rax
19bc5e			version426:
19bc5e			version427:
19bc5e 50			push	rax
19bc5f 53			push	rbx
19bc60 48b84000fcb0937f
19bc68 0000			mov	rax,140272306225216
19bc6a 488b18			mov	rbx,[rax]
19bc6d 48ffc3			inc	rbx
19bc70 488918			mov	[rax],rbx
19bc73 5b			pop	rbx
19bc74 58			pop	rax
19bc75 48c7c0f6ffffff		mov	rax,dword -10
19bc7c 48390424			cmp	[rsp],rax
19bc80 48c7c0faffffff		mov	rax,dword -6
19bc87 7407			je	short done1
19bc89 48c7c0feffffff		mov	rax,dword -2
19bc90			done1:
19bc90 48890424			mov	[rsp],rax
19bc94			version428:
19bc94 58			pop	rax
19bc95 4883f8fe			cmp	rax,byte -2
19bc99			patchable_jump6:
19bc99 0f84cbc3b600		je	stub_7f93aed08068_0
19bc9f e9c4c3b600		jmp	stub_7f93aed08068_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #161
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #162
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d08058				bits 64
d08058			stub_7f93aed08058_1:
d08058 fec1			inc	cl
d0805a			stub_7f93aed08058_0:
d0805a e8aeef48ff		call	do_callback_handler
d0805f 81fc9e0200000000
(obj= #(#<procedure #163>))
------------------------------------------------------------------------
19bc9f				bits 64
19bc9f 90		version429:
19bca0 ff742408			push	qword [rsp+8]
19bca4			version430:
19bca4			version431:
19bca4 ff3424			push	qword [rsp]
19bca7			version432:
19bca7 48c7c0feffffff		mov	rax,dword -2
19bcae 48890424			mov	[rsp],rax
19bcb2			version433:
19bcb2 58			pop	rax
19bcb3 4883f8fe			cmp	rax,byte -2
19bcb7			patchable_jump7:
19bcb7 0f849dc3b600		je	stub_7f93aed08058_0
19bcbd e996c3b600		jmp	stub_7f93aed08058_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19bcb7 -> 7f93aed08058
GEN VERSION >>> #<ctx #164
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #165
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #166
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d08048				bits 64
d08048			stub_7f93aed08048_1:
d08048 fec1			inc	cl
d0804a			stub_7f93aed08048_0:
d0804a e8beef48ff		call	do_callback_handler
d0804f 21fd9e0200000000
(obj= #(#<procedure #167>))
------------------------------------------------------------------------
19bcbd				bits 64
19bcbd 909090		version434:
19bcc0 ff3424			push	qword [rsp]
19bcc3			version435:
19bcc3			version436:
19bcc3 58			pop	rax
19bcc4 488b4007			mov	rax,[rax+7]
19bcc8 50			push	rax
19bcc9			version437:
19bcc9			version438:
19bcc9 50			push	rax
19bcca 53			push	rbx
19bccb 48b84000fcb0937f
19bcd3 0000			mov	rax,140272306225216
19bcd5 488b18			mov	rbx,[rax]
19bcd8 48ffc3			inc	rbx
19bcdb 488918			mov	[rax],rbx
19bcde 5b			pop	rbx
19bcdf 58			pop	rax
19bce0 48c7c0f6ffffff		mov	rax,dword -10
19bce7 48390424			cmp	[rsp],rax
19bceb 48c7c0faffffff		mov	rax,dword -6
19bcf2 7407			je	short done2
19bcf4 48c7c0feffffff		mov	rax,dword -2
19bcfb			done2:
19bcfb 48890424			mov	[rsp],rax
19bcff			version439:
19bcff 58			pop	rax
19bd00 4883f8fe			cmp	rax,byte -2
19bd04			patchable_jump8:
19bd04 0f8440c3b600		je	stub_7f93aed08048_0
19bd0a e939c3b600		jmp	stub_7f93aed08048_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #168
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #169
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #170
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d08038				bits 64
d08038			stub_7f93aed08038_0:
d08038 e8d0ef48ff		call	do_callback_handler
d0803d c1fd9e0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d08028				bits 64
d08028			stub_7f93aed08028_1:
d08028 fec1			inc	cl
d0802a			stub_7f93aed08028_0:
d0802a e8deef48ff		call	do_callback_handler
d0802f 11fe9e0200000000
(obj= #(#<procedure #171>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19bd0a				bits 64
19bd0a 9090		version440:
19bd0c ff3424			push	qword [rsp]
19bd0f			version441:
19bd0f			version442:
19bd0f 6af6			push	qword byte -10
19bd11			version443:
19bd11 6af6			push	qword byte -10
19bd13			version444:
19bd13 498d4424e8		lea	rax,[r12-24]
19bd18 49bf0800fcb0937f
19bd20 0000			mov	r15,140272306225160
19bd22 493b4728			cmp	rax,[r15+40]
19bd26 7d38			jge	short alloc-ok121
19bd28 48c7c018000000		mov	rax,dword 24
19bd2f 57			push	rdi
19bd30 56			push	rsi
19bd31 52			push	rdx
19bd32 51			push	rcx
19bd33 4150			push	r8
19bd35 4151			push	r9
19bd37 4152			push	r10
19bd39 4153			push	r11
19bd3b 50			push	rax
19bd3c 4889e7			mov	rdi,rsp
19bd3f 4883e4f0			and	rsp,byte -16
19bd43 4883ec08			sub	rsp,byte 8
19bd47 57			push	rdi
19bd48 e883236d01		call	gc
19bd4d 5c			pop	rsp
19bd4e 4989c4			mov	r12,rax
19bd51 58			pop	rax
19bd52 415b			pop	r11
19bd54 415a			pop	r10
19bd56 4159			pop	r9
19bd58 4158			pop	r8
19bd5a 59			pop	rcx
19bd5b 5a			pop	rdx
19bd5c 5e			pop	rsi
19bd5d 5f			pop	rdi
19bd5e eb04			jmp	short alloc-end121
19bd60			alloc-ok121:
19bd60 4983ec18			sub	r12,byte 24
19bd64			alloc-end121:
19bd64 48c7c00e030000		mov	rax,dword 782
19bd6b 49890424			mov	[r12],rax
19bd6f 5b			pop	rbx
19bd70 58			pop	rax
19bd71 4989442408		mov	[r12+8],rax
19bd76 49895c2410		mov	[r12+16],rbx
19bd7b 4c89e0			mov	rax,r12
19bd7e 4883c001			add	rax,byte 1
19bd82 50			push	rax
19bd83			version445:
19bd83 58			pop	rax
19bd84 5b			pop	rbx
19bd85 48894307			mov	[rbx+7],rax
19bd89 6aee			push	qword byte -18
19bd8b			version446:
19bd8b 6afe			push	qword byte -2
19bd8d			version447:
19bd8d ff742410			push	qword [rsp+16]
19bd91			version448:
19bd91			version449:
19bd91 58			pop	rax
19bd92 488b4007			mov	rax,[rax+7]
19bd96 50			push	rax
19bd97			version450:
19bd97 ff742438			push	qword [rsp+56]
19bd9b			version451:
19bd9b 6af6			push	qword byte -10
19bd9d			version452:
19bd9d			version453:
19bd9d ff742408			push	qword [rsp+8]
19bda1			version454:
19bda1 48c7c000000000		mov	rax,dword 0
19bda8 50			push	rax
19bda9			version455:
19bda9 50			push	rax
19bdaa 53			push	rbx
19bdab 48b84000fcb0937f
19bdb3 0000			mov	rax,140272306225216
19bdb5 488b18			mov	rbx,[rax]
19bdb8 48ffc3			inc	rbx
19bdbb 488918			mov	[rax],rbx
19bdbe 5b			pop	rbx
19bdbf 58			pop	rax
19bdc0 48c7c003000000		mov	rax,dword 3
19bdc7 4823442408		and	rax,[rsp+8]
19bdcc			patchable_jump9:
19bdcc 0f8458c2b600		je	stub_7f93aed08028_0
19bdd2 e951c2b600		jmp	stub_7f93aed08028_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19bdcc -> 7f93aed08028
GEN VERSION >>> #<ctx #172
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #173
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d08018				bits 64
d08018			stub_7f93aed08018_0:
d08018 e8f0ef48ff		call	do_callback_handler
d0801d 41c59e0200000000
(obj= #(#<procedure #178>))
------------------------------------------------------------------------
d08008				bits 64
d08008			stub_7f93aed08008_1:
d08008 fec1			inc	cl
d0800a			stub_7f93aed08008_0:
d0800a e8feef48ff		call	do_callback_handler
d0800f 01c79e0200000000
(obj= #(#<procedure #179>))
------------------------------------------------------------------------
19bdd2				bits 64
19bdd2 9090		version456:
19bdd4			version457:
19bdd4 488b442408		mov	rax,[rsp+8]
19bdd9 483b0424			cmp	rax,[rsp]
19bddd			label-jump4:
19bddd 0f8535c2b600		jne	stub_7f93aed08018_0
19bde3			version458:
19bde3 4883c410			add	rsp,byte 16
19bde7 6afa			push	qword byte -6
19bde9			version459:
19bde9 58			pop	rax
19bdea 4883f8fe			cmp	rax,byte -2
19bdee			patchable_jump10:
19bdee 0f8416c2b600		je	stub_7f93aed08008_0
19bdf4 e90fc2b600		jmp	stub_7f93aed08008_1
GEN VERSION >>> #<ctx #172
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #173
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bddd -> 7f93ae19bdf9
------------------------------------------------------------------------
19bdf9				bits 64
19bdf9 909090		version460:
19bdfc 4883c410			add	rsp,byte 16
19be00 6afe			push	qword byte -2
19be02 ebe5			jmp	short version459
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #180
                      stack: (null number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #181
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #174
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bdee -> 7f93ae19be04
------------------------------------------------------------------------
d07ff8				bits 64
d07ff8			stub_7f93aed07ff8_0:
d07ff8 e810f048ff		call	do_callback_handler
d07ffd 91da9e0200000000
(obj= #(#<procedure #182>))
------------------------------------------------------------------------
d07fe8				bits 64
d07fe8			stub_7f93aed07fe8_1:
d07fe8 fec1			inc	cl
d07fea			stub_7f93aed07fe8_0:
d07fea e81ef048ff		call	do_callback_handler
d07fef e1da9e0200000000
(obj= #(#<procedure #183>))
------------------------------------------------------------------------
19be04				bits 64
19be04			version461:
19be04 ff742408			push	qword [rsp+8]
19be08			version462:
19be08 48c7c004000000		mov	rax,dword 4
19be0f 50			push	rax
19be10			version463:
19be10			version464:
19be10			version465:
19be10 58			pop	rax
19be11 48290424			sub	[rsp],rax
19be15 0f801dc2b600		jo	stub_7f93aed08038_0
19be1b			version466:
19be1b 6af6			push	qword byte -10
19be1d			version467:
19be1d ff742410			push	qword [rsp+16]
19be21			version468:
19be21 498d4424e8		lea	rax,[r12-24]
19be26 49bf0800fcb0937f
19be2e 0000			mov	r15,140272306225160
19be30 493b4728			cmp	rax,[r15+40]
19be34 7d38			jge	short alloc-ok122
19be36 48c7c018000000		mov	rax,dword 24
19be3d 57			push	rdi
19be3e 56			push	rsi
19be3f 52			push	rdx
19be40 51			push	rcx
19be41 4150			push	r8
19be43 4151			push	r9
19be45 4152			push	r10
19be47 4153			push	r11
19be49 50			push	rax
19be4a 4889e7			mov	rdi,rsp
19be4d 4883e4f0			and	rsp,byte -16
19be51 4883ec08			sub	rsp,byte 8
19be55 57			push	rdi
19be56 e875226d01		call	gc
19be5b 5c			pop	rsp
19be5c 4989c4			mov	r12,rax
19be5f 58			pop	rax
19be60 415b			pop	r11
19be62 415a			pop	r10
19be64 4159			pop	r9
19be66 4158			pop	r8
19be68 59			pop	rcx
19be69 5a			pop	rdx
19be6a 5e			pop	rsi
19be6b 5f			pop	rdi
19be6c eb04			jmp	short alloc-end122
19be6e			alloc-ok122:
19be6e 4983ec18			sub	r12,byte 24
19be72			alloc-end122:
19be72 48c7c00e030000		mov	rax,dword 782
19be79 49890424			mov	[r12],rax
19be7d 5b			pop	rbx
19be7e 58			pop	rax
19be7f 4989442408		mov	[r12+8],rax
19be84 49895c2410		mov	[r12+16],rbx
19be89 4c89e0			mov	rax,r12
19be8c 4883c001			add	rax,byte 1
19be90 50			push	rax
19be91			version469:
19be91 488b442408		mov	rax,[rsp+8]
19be96 4889442418		mov	[rsp+24],rax
19be9b 488b0424			mov	rax,[rsp]
19be9f 4889442410		mov	[rsp+16],rax
19bea4 4883c410			add	rsp,byte 16
19bea8			version470:
19bea8 ff742408			push	qword [rsp+8]
19beac			version471:
19beac 48c7c000000000		mov	rax,dword 0
19beb3 50			push	rax
19beb4			version472:
19beb4			version473:
19beb4			version474:
19beb4 488b442408		mov	rax,[rsp+8]
19beb9 483b0424			cmp	rax,[rsp]
19bebd			label-jump5:
19bebd 0f8535c1b600		jne	stub_7f93aed07ff8_0
19bec3			version475:
19bec3 4883c410			add	rsp,byte 16
19bec7 6afa			push	qword byte -6
19bec9			version476:
19bec9 58			pop	rax
19beca 4883f8fe			cmp	rax,byte -2
19bece			patchable_jump11:
19bece 0f8416c1b600		je	stub_7f93aed07fe8_0
19bed4 e90fc1b600		jmp	stub_7f93aed07fe8_1
GEN VERSION >>> #<ctx #184
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #185
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bebd -> 7f93ae19bed9
------------------------------------------------------------------------
19bed9				bits 64
19bed9 909090		version477:
19bedc 4883c410			add	rsp,byte 16
19bee0 6afe			push	qword byte -2
19bee2 ebe5			jmp	short version476
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #187
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #188
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bece -> 7f93ae19bee4
------------------------------------------------------------------------
19bee4				bits 64
19bee4			version478:
19bee4 ff742408			push	qword [rsp+8]
19bee8			version479:
19bee8 48c7c004000000		mov	rax,dword 4
19beef 50			push	rax
19bef0			version480:
19bef0			version481:
19bef0			version482:
19bef0 58			pop	rax
19bef1 48290424			sub	[rsp],rax
19bef5 0f803dc1b600		jo	stub_7f93aed08038_0
19befb			version483:
19befb 6af6			push	qword byte -10
19befd			version484:
19befd ff742410			push	qword [rsp+16]
19bf01			version485:
19bf01 498d4424e8		lea	rax,[r12-24]
19bf06 49bf0800fcb0937f
19bf0e 0000			mov	r15,140272306225160
19bf10 493b4728			cmp	rax,[r15+40]
19bf14 7d38			jge	short alloc-ok123
19bf16 48c7c018000000		mov	rax,dword 24
19bf1d 57			push	rdi
19bf1e 56			push	rsi
19bf1f 52			push	rdx
19bf20 51			push	rcx
19bf21 4150			push	r8
19bf23 4151			push	r9
19bf25 4152			push	r10
19bf27 4153			push	r11
19bf29 50			push	rax
19bf2a 4889e7			mov	rdi,rsp
19bf2d 4883e4f0			and	rsp,byte -16
19bf31 4883ec08			sub	rsp,byte 8
19bf35 57			push	rdi
19bf36 e895216d01		call	gc
19bf3b 5c			pop	rsp
19bf3c 4989c4			mov	r12,rax
19bf3f 58			pop	rax
19bf40 415b			pop	r11
19bf42 415a			pop	r10
19bf44 4159			pop	r9
19bf46 4158			pop	r8
19bf48 59			pop	rcx
19bf49 5a			pop	rdx
19bf4a 5e			pop	rsi
19bf4b 5f			pop	rdi
19bf4c eb04			jmp	short alloc-end123
19bf4e			alloc-ok123:
19bf4e 4983ec18			sub	r12,byte 24
19bf52			alloc-end123:
19bf52 48c7c00e030000		mov	rax,dword 782
19bf59 49890424			mov	[r12],rax
19bf5d 5b			pop	rbx
19bf5e 58			pop	rax
19bf5f 4989442408		mov	[r12+8],rax
19bf64 49895c2410		mov	[r12+16],rbx
19bf69 4c89e0			mov	rax,r12
19bf6c 4883c001			add	rax,byte 1
19bf70 50			push	rax
19bf71			version486:
19bf71 488b442408		mov	rax,[rsp+8]
19bf76 4889442418		mov	[rsp+24],rax
19bf7b 488b0424			mov	rax,[rsp]
19bf7f 4889442410		mov	[rsp+16],rax
19bf84 4883c410			add	rsp,byte 16
19bf88 e91bffffff		jmp	version470
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #187
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #188
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #186
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #175
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #176
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #177
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bed4 -> 7f93ae19bf8d
------------------------------------------------------------------------
d07fe8				bits 64
d07fe8			stub_7f93aed07fe8_0:
d07fe8 e87af048ff		call	do_callback_cont_handler
d07fed b1f99e0200000000
(obj= #(#<procedure #189>))
------------------------------------------------------------------------
19bf8d				bits 64
19bf8d 909090		version487:
19bf90 ff3424			push	qword [rsp]
19bf93			version488:
19bf93 58			pop	rax
19bf94 4883c410			add	rsp,byte 16
19bf98 50			push	rax
19bf99			version489:
19bf99 41ffb280030000		push	qword [r10+896]
19bfa0			version490:
19bfa0			version491:
19bfa0 48c7c08001d202		mov	rax,dword 47317376
19bfa7 4889442418		mov	[rsp+24],rax
19bfac			version492:
19bfac 488b0424			mov	rax,[rsp]
19bfb0 49c7c351fa9e02		mov	r11,dword 43973201
19bfb7 488b4007			mov	rax,[rax+7]
19bfbb 488b4020			mov	rax,[rax+32]
19bfbf ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #190
                         stack: (procedure pair unknown retAddr)
                         env: ((x . #<identifier #191
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (y . #<identifier #192
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 2>
#<ctx #190
      stack: (procedure pair unknown retAddr)
      env: ((x . #<identifier #191
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (y . #<identifier #192
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>))
      nb-args: 2>
------------------------------------------------------------------------
d07fd8				bits 64
d07fd8			stub_7f93aed07fd8_1:
d07fd8 fec1			inc	cl
d07fda			stub_7f93aed07fd8_0:
d07fda e82ef048ff		call	do_callback_handler
d07fdf 91fb9e0200000000
(obj= #(#<procedure #193>))
------------------------------------------------------------------------
19bfc1				bits 64
19bfc1 909090		fn_entry_4:
19bfc4			version493:
19bfc4 ff742410			push	qword [rsp+16]
19bfc8			version494:
19bfc8			version495:
19bfc8 50			push	rax
19bfc9 53			push	rbx
19bfca 48b84000fcb0937f
19bfd2 0000			mov	rax,140272306225216
19bfd4 488b18			mov	rbx,[rax]
19bfd7 48ffc3			inc	rbx
19bfda 488918			mov	[rax],rbx
19bfdd 5b			pop	rbx
19bfde 58			pop	rax
19bfdf 48c7c0f6ffffff		mov	rax,dword -10
19bfe6 48390424			cmp	[rsp],rax
19bfea 48c7c0faffffff		mov	rax,dword -6
19bff1 7407			je	short done3
19bff3 48c7c0feffffff		mov	rax,dword -2
19bffa			done3:
19bffa 48890424			mov	[rsp],rax
19bffe			version496:
19bffe 58			pop	rax
19bfff 4883f8fe			cmp	rax,byte -2
19c003			patchable_jump12:
19c003 0f84d1bfb600		je	stub_7f93aed07fd8_0
19c009 e9cabfb600		jmp	stub_7f93aed07fd8_1
>>> patching closure 7f920cddcef9 at 7f920cddcf19 : slot contains now label fn_entry_4 (7f93ae19bfc4)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c003 -> 7f93aed07fd8
GEN VERSION >>> #<ctx #194
                      stack: (procedure pair unknown retAddr)
                      env: ((x . #<identifier #195
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #192
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07fc8				bits 64
d07fc8			stub_7f93aed07fc8_1:
d07fc8 fec1			inc	cl
d07fca			stub_7f93aed07fc8_0:
d07fca e83ef048ff		call	do_callback_handler
d07fcf d1fc9e0200000000
(obj= #(#<procedure #196>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c009				bits 64
19c009 909090		version497:
19c00c ff742410			push	qword [rsp+16]
19c010			version498:
19c010 ff742418			push	qword [rsp+24]
19c014			version499:
19c014 50			push	rax
19c015 53			push	rbx
19c016 48b84000fcb0937f
19c01e 0000			mov	rax,140272306225216
19c020 488b18			mov	rbx,[rax]
19c023 48ffc3			inc	rbx
19c026 488918			mov	[rax],rbx
19c029 5b			pop	rbx
19c02a 58			pop	rax
19c02b 488b0424			mov	rax,[rsp]
19c02f 4889c3			mov	rbx,rax
19c032 4883e003			and	rax,byte 3
19c036 4883f801			cmp	rax,byte 1
19c03a 750e			jne	short patchable_jump13
19c03c 488b43ff			mov	rax,[rbx-1]
19c040 4825f8000000		and	rax,248
19c046 4883f808			cmp	rax,byte 8
19c04a			patchable_jump13:
19c04a 0f847abfb600		je	stub_7f93aed07fc8_0
19c050 e973bfb600		jmp	stub_7f93aed07fc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c04a -> 7f93aed07fc8
GEN VERSION >>> #<ctx #197
                      stack: (pair pair procedure pair pair retAddr)
                      env: ((x . #<identifier #198
                                    type: local
                                    offset: 0
                                    pos: (4 3 0)
                                    flags: ()
                                    stype: ()>)
                            (y . #<identifier #192
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07fb8				bits 64
d07fb8			stub_7f93aed07fb8_1:
d07fb8 fec1			inc	cl
d07fba			stub_7f93aed07fb8_0:
d07fba e87bf048ff		call	do_callback_fn_handler
d07fbf a102d20200000000
(obj= #(#<procedure #199>))
------------------------------------------------------------------------
19c050				bits 64
19c050			version500:
19c050 58			pop	rax
19c051 488b400f			mov	rax,[rax+15]
19c055 50			push	rax
19c056			version501:
19c056 6afe			push	qword byte -2
19c058 498d4424f0		lea	rax,[r12-16]
19c05d 49bf0800fcb0937f
19c065 0000			mov	r15,140272306225160
19c067 493b4728			cmp	rax,[r15+40]
19c06b 7d38			jge	short alloc-ok124
19c06d 48c7c010000000		mov	rax,dword 16
19c074 57			push	rdi
19c075 56			push	rsi
19c076 52			push	rdx
19c077 51			push	rcx
19c078 4150			push	r8
19c07a 4151			push	r9
19c07c 4152			push	r10
19c07e 4153			push	r11
19c080 50			push	rax
19c081 4889e7			mov	rdi,rsp
19c084 4883e4f0			and	rsp,byte -16
19c088 4883ec08			sub	rsp,byte 8
19c08c 57			push	rdi
19c08d e83e206d01		call	gc
19c092 5c			pop	rsp
19c093 4989c4			mov	r12,rax
19c096 58			pop	rax
19c097 415b			pop	r11
19c099 415a			pop	r10
19c09b 4159			pop	r9
19c09d 4158			pop	r8
19c09f 59			pop	rcx
19c0a0 5a			pop	rdx
19c0a1 5e			pop	rsi
19c0a2 5f			pop	rdi
19c0a3 eb04			jmp	short alloc-end124
19c0a5			alloc-ok124:
19c0a5 4983ec10			sub	r12,byte 16
19c0a9			alloc-end124:
19c0a9 488b0424			mov	rax,[rsp]
19c0ad 4989442408		mov	[r12+8],rax
19c0b2 48c7c016020000		mov	rax,dword 534
19c0b9 49890424			mov	[r12],rax
19c0bd 498d442401		lea	rax,[r12+1]
19c0c2 48890424			mov	[rsp],rax
19c0c6			version502:
19c0c6 50			push	rax
19c0c7 53			push	rbx
19c0c8 48b85000fcb0937f
19c0d0 0000			mov	rax,140272306225232
19c0d2 488b18			mov	rbx,[rax]
19c0d5 48ffc3			inc	rbx
19c0d8 488918			mov	[rax],rbx
19c0db 5b			pop	rbx
19c0dc 58			pop	rax
19c0dd 498d4424d8		lea	rax,[r12-40]
19c0e2 49bf0800fcb0937f
19c0ea 0000			mov	r15,140272306225160
19c0ec 493b4728			cmp	rax,[r15+40]
19c0f0 7d38			jge	short alloc-ok125
19c0f2 48c7c028000000		mov	rax,dword 40
19c0f9 57			push	rdi
19c0fa 56			push	rsi
19c0fb 52			push	rdx
19c0fc 51			push	rcx
19c0fd 4150			push	r8
19c0ff 4151			push	r9
19c101 4152			push	r10
19c103 4153			push	r11
19c105 50			push	rax
19c106 4889e7			mov	rdi,rsp
19c109 4883e4f0			and	rsp,byte -16
19c10d 4883ec08			sub	rsp,byte 8
19c111 57			push	rdi
19c112 e8b91f6d01		call	gc
19c117 5c			pop	rsp
19c118 4989c4			mov	r12,rax
19c11b 58			pop	rax
19c11c 415b			pop	r11
19c11e 415a			pop	r10
19c120 4159			pop	r9
19c122 4158			pop	r8
19c124 59			pop	rcx
19c125 5a			pop	rdx
19c126 5e			pop	rsi
19c127 5f			pop	rdi
19c128 eb04			jmp	short alloc-end125
19c12a			alloc-ok125:
19c12a 4983ec28			sub	r12,byte 40
19c12e			alloc-end125:
19c12e 48c7c076050000		mov	rax,dword 1398
19c135 49890424			mov	[r12],rax
19c139 48c7c0f002d202		mov	rax,dword 47317744
19c140 4989442408		mov	[r12+8],rax
19c145 488b442428		mov	rax,[rsp+40]
19c14a 4989442410		mov	[r12+16],rax
19c14f 488b442420		mov	rax,[rsp+32]
19c154 4989442418		mov	[r12+24],rax
19c159 488b0424			mov	rax,[rsp]
19c15d 4989442420		mov	[r12+32],rax
19c162 498d442401		lea	rax,[r12+1]
19c167 50			push	rax
19c168			version503:
19c168 488b0424			mov	rax,[rsp]
19c16c 488b5c2408		mov	rbx,[rsp+8]
19c171 48894307			mov	[rbx+7],rax
19c175 4883c408			add	rsp,byte 8
19c179			version504:
19c179 488b0424			mov	rax,[rsp]
19c17d ff7007			push	qword [rax+7]
19c180			version505:
19c180 58			pop	rax
19c181 4883c408			add	rsp,byte 8
19c185 50			push	rax
19c186			version506:
19c186			version507:
19c186 488b442410		mov	rax,[rsp+16]
19c18b 4889442428		mov	[rsp+40],rax
19c190 488b442408		mov	rax,[rsp+8]
19c195 4889442420		mov	[rsp+32],rax
19c19a 488b0424			mov	rax,[rsp]
19c19e 4889442418		mov	[rsp+24],rax
19c1a3 4883c418			add	rsp,byte 24
19c1a7 488b0424			mov	rax,[rsp]
19c1ab 49c7c3e112d202		mov	r11,dword 47321825
19c1b2 488b4007			mov	rax,[rax+7]
19c1b6 488b4028			mov	rax,[rax+40]
19c1ba ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #200
                         stack: (procedure unknown pair retAddr)
                         env: ((a . #<identifier #201
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>)
                               (b . #<identifier #202
                                       type: local
                                       offset: 1
                                       pos: (1)
                                       flags: ()
                                       stype: ()>)
                               (x . #<identifier #203
                                       type: free
                                       offset: 0
                                       pos: ()
                                       flags: ()
                                       stype: pair>)
                               (y . #<identifier #204
                                       type: free
                                       offset: 1
                                       pos: ()
                                       flags: ()
                                       stype: pair>)
                               (loop . #<identifier #205
                                          type: free
                                          offset: 2
                                          pos: ()
                                          flags: (mutable)
                                          stype: procedure>))
                         nb-args: 2>
#<ctx #200
      stack: (procedure unknown pair retAddr)
      env: ((a . #<identifier #201
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>)
            (b . #<identifier #202
                    type: local
                    offset: 1
                    pos: (1)
                    flags: ()
                    stype: ()>)
            (x . #<identifier #203
                    type: free
                    offset: 0
                    pos: ()
                    flags: ()
                    stype: pair>)
            (y . #<identifier #204
                    type: free
                    offset: 1
                    pos: ()
                    flags: ()
                    stype: pair>)
            (loop . #<identifier #205
                       type: free
                       offset: 2
                       pos: ()
                       flags: (mutable)
                       stype: procedure>))
      nb-args: 2>
------------------------------------------------------------------------
d07fa8				bits 64
d07fa8			stub_7f93aed07fa8_1:
d07fa8 fec1			inc	cl
d07faa			stub_7f93aed07fa8_0:
d07faa e85ef048ff		call	do_callback_handler
d07faf 8113d20200000000
(obj= #(#<procedure #206>))
------------------------------------------------------------------------
19c1bc				bits 64
19c1bc			fn_entry_5:
19c1bc			version508:
19c1bc ff742408			push	qword [rsp+8]
19c1c0			version509:
19c1c0			version510:
19c1c0 50			push	rax
19c1c1 53			push	rbx
19c1c2 48b84000fcb0937f
19c1ca 0000			mov	rax,140272306225216
19c1cc 488b18			mov	rbx,[rax]
19c1cf 48ffc3			inc	rbx
19c1d2 488918			mov	[rax],rbx
19c1d5 5b			pop	rbx
19c1d6 58			pop	rax
19c1d7 48c7c0f6ffffff		mov	rax,dword -10
19c1de 48390424			cmp	[rsp],rax
19c1e2 48c7c0faffffff		mov	rax,dword -6
19c1e9 7407			je	short done4
19c1eb 48c7c0feffffff		mov	rax,dword -2
19c1f2			done4:
19c1f2 48890424			mov	[rsp],rax
19c1f6			version511:
19c1f6 58			pop	rax
19c1f7 4883f8fe			cmp	rax,byte -2
19c1fb			patchable_jump14:
19c1fb 0f84a9bdb600		je	stub_7f93aed07fa8_0
19c201 e9a2bdb600		jmp	stub_7f93aed07fa8_1
>>> patching closure 7f920cddc8a1 at 7f920cddc8c9 : slot contains now label fn_entry_5 (7f93ae19c1bc)
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #207
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #208
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19c201				bits 64
19c201 909090		version512:
19c204 ff742410			push	qword [rsp+16]
19c208			version513:
19c208			version514:
19c208 488b442408		mov	rax,[rsp+8]
19c20d ff7017			push	qword [rax+23]
19c210			version515:
19c210 58			pop	rax
19c211 5b			pop	rbx
19c212 4889430f			mov	[rbx+15],rax
19c216 6aee			push	qword byte -18
19c218			version516:
19c218 488b442408		mov	rax,[rsp+8]
19c21d ff700f			push	qword [rax+15]
19c220			version517:
19c220 58			pop	rax
19c221 4883c408			add	rsp,byte 8
19c225 50			push	rax
19c226			version518:
19c226 58			pop	rax
19c227 4883c418			add	rsp,byte 24
19c22b 5a			pop	rdx
19c22c 488b5a28			mov	rbx,[rdx+40]
19c230 49c7c328000000		mov	r11,dword 40
19c237 ffe3			jmp	rbx
------------------------------------------------------------------------
d07f98				bits 64
d07f98			stub_7f93aed07f98_1:
d07f98 fec1			inc	cl
d07f9a			stub_7f93aed07f98_0:
d07f9a e86ef048ff		call	do_callback_handler
d07f9f 7114d20200000000
(obj= #(#<procedure #209>))
------------------------------------------------------------------------
19c239				bits 64
19c239 909090		continuation_2:
19c23c 50			push	rax
19c23d			version519:
19c23d ff742410			push	qword [rsp+16]
19c241			version520:
19c241			version521:
19c241 58			pop	rax
19c242 488b400f			mov	rax,[rax+15]
19c246 50			push	rax
19c247			version522:
19c247 488b0424			mov	rax,[rsp]
19c24b 4889442418		mov	[rsp+24],rax
19c250 4883c418			add	rsp,byte 24
19c254			version523:
19c254 ff3424			push	qword [rsp]
19c257			version524:
19c257			version525:
19c257 50			push	rax
19c258 53			push	rbx
19c259 48b84000fcb0937f
19c261 0000			mov	rax,140272306225216
19c263 488b18			mov	rbx,[rax]
19c266 48ffc3			inc	rbx
19c269 488918			mov	[rax],rbx
19c26c 5b			pop	rbx
19c26d 58			pop	rax
19c26e 48c7c0f6ffffff		mov	rax,dword -10
19c275 48390424			cmp	[rsp],rax
19c279 48c7c0faffffff		mov	rax,dword -6
19c280 7407			je	short done5
19c282 48c7c0feffffff		mov	rax,dword -2
19c289			done5:
19c289 48890424			mov	[rsp],rax
19c28d			version526:
19c28d 58			pop	rax
19c28e 4883f8fe			cmp	rax,byte -2
19c292			patchable_jump15:
19c292 0f8402bdb600		je	stub_7f93aed07f98_0
19c298 e9fbbcb600		jmp	stub_7f93aed07f98_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c292 -> 7f93aed07f98
GEN VERSION >>> #<ctx #210
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #211
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #212
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f88				bits 64
d07f88			stub_7f93aed07f88_1:
d07f88 fec1			inc	cl
d07f8a			stub_7f93aed07f88_0:
d07f8a e87ef048ff		call	do_callback_handler
d07f8f 1115d20200000000
(obj= #(#<procedure #213>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c298				bits 64
19c298			version527:
19c298 ff3424			push	qword [rsp]
19c29b			version528:
19c29b 50			push	rax
19c29c 53			push	rbx
19c29d 48b84000fcb0937f
19c2a5 0000			mov	rax,140272306225216
19c2a7 488b18			mov	rbx,[rax]
19c2aa 48ffc3			inc	rbx
19c2ad 488918			mov	[rax],rbx
19c2b0 5b			pop	rbx
19c2b1 58			pop	rax
19c2b2 488b0424			mov	rax,[rsp]
19c2b6 4889c3			mov	rbx,rax
19c2b9 4883e003			and	rax,byte 3
19c2bd 4883f801			cmp	rax,byte 1
19c2c1 750e			jne	short patchable_jump16
19c2c3 488b43ff			mov	rax,[rbx-1]
19c2c7 4825f8000000		and	rax,248
19c2cd 4883f808			cmp	rax,byte 8
19c2d1			patchable_jump16:
19c2d1 0f84b3bcb600		je	stub_7f93aed07f88_0
19c2d7 e9acbcb600		jmp	stub_7f93aed07f88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c2d1 -> 7f93aed07f88
GEN VERSION >>> #<ctx #214
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #215
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #216
                                    type: local
                                    offset: 3
                                    pos: (6 3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c2d7 -> 7f93ae19bcc3
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #210
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #211
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #212
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c292 -> 7f93ae19c2dc
------------------------------------------------------------------------
19c2dc				bits 64
19c2dc			version529:
19c2dc 6afe			push	qword byte -2
19c2de			version530:
19c2de 58			pop	rax
19c2df 4883c408			add	rsp,byte 8
19c2e3 50			push	rax
19c2e4			version531:
19c2e4 ff742408			push	qword [rsp+8]
19c2e8			version532:
19c2e8 48c7c004000000		mov	rax,dword 4
19c2ef 50			push	rax
19c2f0			version533:
19c2f0			version534:
19c2f0			version535:
19c2f0 58			pop	rax
19c2f1 48290424			sub	[rsp],rax
19c2f5 0f80fdc7b600		jo	stub_7f93aed08af8_0
19c2fb			version536:
19c2fb 488b0424			mov	rax,[rsp]
19c2ff 4889442410		mov	[rsp+16],rax
19c304 4883c410			add	rsp,byte 16
19c308			version537:
19c308 ff3424			push	qword [rsp]
19c30b			version538:
19c30b 48c7c000000000		mov	rax,dword 0
19c312 50			push	rax
19c313			version539:
19c313 e90cf9ffff		jmp	version418
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #161
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #162
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bc99 -> 7f93ae19c318
------------------------------------------------------------------------
d08068				bits 64
d08068			stub_7f93aed08068_1:
d08068 fec1			inc	cl
d0806a			stub_7f93aed08068_0:
d0806a e89eef48ff		call	do_callback_handler
d0806f 51d99e0200000000
(obj= #(#<procedure #217>))
------------------------------------------------------------------------
19c318				bits 64
19c318			version540:
19c318 ff742408			push	qword [rsp+8]
19c31c			version541:
19c31c ff742410			push	qword [rsp+16]
19c320			version542:
19c320			version543:
19c320 58			pop	rax
19c321 488b400f			mov	rax,[rax+15]
19c325 50			push	rax
19c326			version544:
19c326			version545:
19c326 ff3424			push	qword [rsp]
19c329			version546:
19c329			version547:
19c329 50			push	rax
19c32a 53			push	rbx
19c32b 48b84000fcb0937f
19c333 0000			mov	rax,140272306225216
19c335 488b18			mov	rbx,[rax]
19c338 48ffc3			inc	rbx
19c33b 488918			mov	[rax],rbx
19c33e 5b			pop	rbx
19c33f 58			pop	rax
19c340 48c7c0f6ffffff		mov	rax,dword -10
19c347 48390424			cmp	[rsp],rax
19c34b 48c7c0faffffff		mov	rax,dword -6
19c352 7407			je	short done6
19c354 48c7c0feffffff		mov	rax,dword -2
19c35b			done6:
19c35b 48890424			mov	[rsp],rax
19c35f			version548:
19c35f 58			pop	rax
19c360 4883f8fe			cmp	rax,byte -2
19c364			patchable_jump17:
19c364 0f8400bdb600		je	stub_7f93aed08068_0
19c36a e9f9bcb600		jmp	stub_7f93aed08068_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c364 -> 7f93aed08068
GEN VERSION >>> #<ctx #218
                      stack: (unknown pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #220
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f98				bits 64
d07f98			stub_7f93aed07f98_1:
d07f98 fec1			inc	cl
d07f9a			stub_7f93aed07f98_0:
d07f9a e86ef048ff		call	do_callback_handler
d07f9f c1f89e0200000000
(obj= #(#<procedure #222>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c36a				bits 64
19c36a 9090		version549:
19c36c 6afe			push	qword byte -2
19c36e			version550:
19c36e ff742408			push	qword [rsp+8]
19c372			version551:
19c372 50			push	rax
19c373 53			push	rbx
19c374 48b84000fcb0937f
19c37c 0000			mov	rax,140272306225216
19c37e 488b18			mov	rbx,[rax]
19c381 48ffc3			inc	rbx
19c384 488918			mov	[rax],rbx
19c387 5b			pop	rbx
19c388 58			pop	rax
19c389 488b0424			mov	rax,[rsp]
19c38d 4889c3			mov	rbx,rax
19c390 4883e003			and	rax,byte 3
19c394 4883f801			cmp	rax,byte 1
19c398 750e			jne	short patchable_jump18
19c39a 488b43ff			mov	rax,[rbx-1]
19c39e 4825f8000000		and	rax,248
19c3a4 4883f808			cmp	rax,byte 8
19c3a8			patchable_jump18:
19c3a8 0f84ecbbb600		je	stub_7f93aed07f98_0
19c3ae e9e5bbb600		jmp	stub_7f93aed07f98_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c3a8 -> 7f93aed07f98
GEN VERSION >>> #<ctx #223
                      stack: (pair retAddr
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #224
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f78				bits 64
d07f78			stub_7f93aed07f78_0:
d07f78 e8eaf048ff		call	do_callback_cont_handler
d07f7d 61f99e0200000000
(obj= #(#<procedure #225>))
------------------------------------------------------------------------
19c3ae				bits 64
19c3ae 9090		version552:
19c3b0 58			pop	rax
19c3b1 488b4007			mov	rax,[rax+7]
19c3b5 50			push	rax
19c3b6			version553:
19c3b6 41ffb278020000		push	qword [r10+632]
19c3bd			version554:
19c3bd			version555:
19c3bd 48c7c030db9e02		mov	rax,dword 43965232
19c3c4 4889442410		mov	[rsp+16],rax
19c3c9			version556:
19c3c9 488b0424			mov	rax,[rsp]
19c3cd 48c7c704000000		mov	rdi,dword 4
19c3d4 488b4007			mov	rax,[rax+7]
19c3d8 488b4008			mov	rax,[rax+8]
19c3dc ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #226
                         stack: (procedure unknown retAddr)
                         env: ((l . #<identifier #227
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #226
      stack: (procedure unknown retAddr)
      env: ((l . #<identifier #227
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
d07f68				bits 64
d07f68			stub_7f93aed07f68_0:
d07f68 e8a0f048ff		call	do_callback_handler
d07f6d 31fc9e0200000000
(obj= #(#<procedure #136>))
------------------------------------------------------------------------
d07f58				bits 64
d07f58			stub_7f93aed07f58_1:
d07f58 fec1			inc	cl
d07f5a			stub_7f93aed07f58_0:
d07f5a e8aef048ff		call	do_callback_handler
d07f5f 5102d20200000000
(obj= #(#<procedure #228>))
------------------------------------------------------------------------
19c3de				bits 64
19c3de 9090		fn_entry_6:
19c3e0 4883ff04			cmp	rdi,byte 4
19c3e4 0f857ebbb600		jne	stub_7f93aed07f68_0
19c3ea			version557:
19c3ea ff742408			push	qword [rsp+8]
19c3ee			version558:
19c3ee			version559:
19c3ee 50			push	rax
19c3ef 53			push	rbx
19c3f0 48b84000fcb0937f
19c3f8 0000			mov	rax,140272306225216
19c3fa 488b18			mov	rbx,[rax]
19c3fd 48ffc3			inc	rbx
19c400 488918			mov	[rax],rbx
19c403 5b			pop	rbx
19c404 58			pop	rax
19c405 48c7c0f6ffffff		mov	rax,dword -10
19c40c 48390424			cmp	[rsp],rax
19c410 48c7c0faffffff		mov	rax,dword -6
19c417 7407			je	short done7
19c419 48c7c0feffffff		mov	rax,dword -2
19c420			done7:
19c420 48890424			mov	[rsp],rax
19c424			version560:
19c424 58			pop	rax
19c425 4883f8fe			cmp	rax,byte -2
19c429			patchable_jump19:
19c429 0f842bbbb600		je	stub_7f93aed07f58_0
19c42f e924bbb600		jmp	stub_7f93aed07f58_1
>>> patching generic slot of closure 7f920cddd109: now contains label fn_entry_6 (7f93ae19c3e0)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c429 -> 7f93aed07f58
GEN VERSION >>> #<ctx #229
                      stack: (procedure unknown retAddr)
                      env: ((l . #<identifier #230
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f48				bits 64
d07f48			stub_7f93aed07f48_1:
d07f48 fec1			inc	cl
d07f4a			stub_7f93aed07f48_0:
d07f4a e8bef048ff		call	do_callback_handler
d07f4f d113d20200000000
(obj= #(#<procedure #231>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c42f				bits 64
19c42f 90		version561:
19c430 48c7c004000000		mov	rax,dword 4
19c437 50			push	rax
19c438			version562:
19c438 6afe			push	qword byte -2
19c43a			version563:
19c43a ff742418			push	qword [rsp+24]
19c43e			version564:
19c43e 50			push	rax
19c43f 53			push	rbx
19c440 48b84000fcb0937f
19c448 0000			mov	rax,140272306225216
19c44a 488b18			mov	rbx,[rax]
19c44d 48ffc3			inc	rbx
19c450 488918			mov	[rax],rbx
19c453 5b			pop	rbx
19c454 58			pop	rax
19c455 488b0424			mov	rax,[rsp]
19c459 4889c3			mov	rbx,rax
19c45c 4883e003			and	rax,byte 3
19c460 4883f801			cmp	rax,byte 1
19c464 750e			jne	short patchable_jump20
19c466 488b43ff			mov	rax,[rbx-1]
19c46a 4825f8000000		and	rax,248
19c470 4883f808			cmp	rax,byte 8
19c474			patchable_jump20:
19c474 0f84d0bab600		je	stub_7f93aed07f48_0
19c47a e9c9bab600		jmp	stub_7f93aed07f48_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c474 -> 7f93aed07f48
GEN VERSION >>> #<ctx #232
                      stack: (pair retAddr number procedure pair retAddr)
                      env: ((l . #<identifier #233
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f38				bits 64
d07f38			stub_7f93aed07f38_0:
d07f38 e82af148ff		call	do_callback_cont_handler
d07f3d 01dc9e0200000000
(obj= #(#<procedure #234>))
------------------------------------------------------------------------
19c47a				bits 64
19c47a 9090		version565:
19c47c 58			pop	rax
19c47d 488b400f			mov	rax,[rax+15]
19c481 50			push	rax
19c482			version566:
19c482 41ffb278020000		push	qword [r10+632]
19c489			version567:
19c489			version568:
19c489 48c7c050dc9e02		mov	rax,dword 43965520
19c490 4889442410		mov	[rsp+16],rax
19c495			version569:
19c495 488b0424			mov	rax,[rsp]
19c499 48c7c704000000		mov	rdi,dword 4
19c4a0 488b4007			mov	rax,[rax+7]
19c4a4 488b4008			mov	rax,[rax+8]
19c4a8 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #229
                      stack: (procedure unknown retAddr)
                      env: ((l . #<identifier #230
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f93ae19c429 -> 7f93ae19c4aa
------------------------------------------------------------------------
19c4aa				bits 64
19c4aa 9090		version570:
19c4ac 48c7c000000000		mov	rax,dword 0
19c4b3 50			push	rax
19c4b4			version571:
19c4b4 58			pop	rax
19c4b5 4883c410			add	rsp,byte 16
19c4b9 5a			pop	rdx
19c4ba 488b5a08			mov	rbx,[rdx+8]
19c4be 49c7c308000000		mov	r11,dword 8
19c4c5 ffe3			jmp	rbx
------------------------------------------------------------------------
19c4c7				bits 64
19c4c7 90		continuation_3:
19c4c8 50			push	rax
19c4c9			version572:
19c4c9			version573:
19c4c9			version574:
19c4c9 58			pop	rax
19c4ca 48010424			add	[rsp],rax
19c4ce 0f8074c5b600		jo	stub_7f93aed08a48_0
19c4d4 ebde			jmp	short version571
------------------------------------------------------------------------
d07f58				bits 64
d07f58			stub_7f93aed07f58_0:
d07f58 e8b0f048ff		call	do_callback_handler
d07f5d 11de9e0200000000
(obj= #(#<procedure #235>))
------------------------------------------------------------------------
d07f28				bits 64
d07f28			stub_7f93aed07f28_1:
d07f28 fec1			inc	cl
d07f2a			stub_7f93aed07f28_0:
d07f2a e8def048ff		call	do_callback_handler
d07f2f 61de9e0200000000
(obj= #(#<procedure #236>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c4d6				bits 64
19c4d6 9090		continuation_4:
19c4d8 50			push	rax
19c4d9			version575:
19c4d9			version576:
19c4d9 48c7c008000000		mov	rax,dword 8
19c4e0 50			push	rax
19c4e1			version577:
19c4e1			version578:
19c4e1 5b			pop	rbx
19c4e2 58			pop	rax
19c4e3 48c1f802			sar	rax,2
19c4e7 48c1fb02			sar	rbx,2
19c4eb 4883fb00			cmp	rbx,byte 0
19c4ef 0f8463bab600		je	stub_7f93aed07f58_0
19c4f5 4899			cqo
19c4f7 48f7fb			idiv	rbx
19c4fa 48c1e002			shl	rax,2
19c4fe 50			push	rax
19c4ff			version579:
19c4ff ff742408			push	qword [rsp+8]
19c503			version580:
19c503 50			push	rax
19c504 53			push	rbx
19c505 48b84000fcb0937f
19c50d 0000			mov	rax,140272306225216
19c50f 488b18			mov	rbx,[rax]
19c512 48ffc3			inc	rbx
19c515 488918			mov	[rax],rbx
19c518 5b			pop	rbx
19c519 58			pop	rax
19c51a 488b0424			mov	rax,[rsp]
19c51e 4889c3			mov	rbx,rax
19c521 4883e003			and	rax,byte 3
19c525 4883f801			cmp	rax,byte 1
19c529 750e			jne	short patchable_jump21
19c52b 488b43ff			mov	rax,[rbx-1]
19c52f 4825f8000000		and	rax,248
19c535 4883f808			cmp	rax,byte 8
19c539			patchable_jump21:
19c539 0f84ebb9b600		je	stub_7f93aed07f28_0
19c53f e9e4b9b600		jmp	stub_7f93aed07f28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c539 -> 7f93aed07f28
GEN VERSION >>> #<ctx #237
                      stack: (pair number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #238
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07f18				bits 64
d07f18			stub_7f93aed07f18_0:
d07f18 e84af148ff		call	do_callback_cont_handler
d07f1d b115d20200000000
(obj= #(#<procedure #239>))
------------------------------------------------------------------------
19c53f				bits 64
19c53f 90		version581:
19c540 58			pop	rax
19c541 488b4007			mov	rax,[rax+7]
19c545 50			push	rax
19c546			version582:
19c546			version583:
19c546 6afe			push	qword byte -2
19c548			version584:
19c548 ff742410			push	qword [rsp+16]
19c54c			version585:
19c54c 41ffb218030000		push	qword [r10+792]
19c553			version586:
19c553			version587:
19c553 48c7c0b0de9e02		mov	rax,dword 43966128
19c55a 4889442410		mov	[rsp+16],rax
19c55f			version588:
19c55f 488b0424			mov	rax,[rsp]
19c563 49c7c381df9e02		mov	r11,dword 43966337
19c56a 488b4007			mov	rax,[rax+7]
19c56e 488b4030			mov	rax,[rax+48]
19c572 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #240
                         stack: (procedure number retAddr)
                         env: ((x . #<identifier #241
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #240
      stack: (procedure number retAddr)
      env: ((x . #<identifier #241
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
d07f08				bits 64
d07f08			stub_7f93aed07f08_0:
d07f08 e800f148ff		call	do_callback_handler
d07f0d 21e09e0200000000
(obj= #(#<procedure #242>))
------------------------------------------------------------------------
19c574				bits 64
19c574			fn_entry_7:
19c574			version589:
19c574 ff742408			push	qword [rsp+8]
19c578			version590:
19c578 48c7c000000000		mov	rax,dword 0
19c57f 50			push	rax
19c580			version591:
19c580			version592:
19c580			version593:
19c580 488b442408		mov	rax,[rsp+8]
19c585 483b0424			cmp	rax,[rsp]
19c589			label-jump6:
19c589 0f8579b9b600		jne	stub_7f93aed07f08_0
19c58f			version594:
19c58f 4883c410			add	rsp,byte 16
19c593 6afa			push	qword byte -6
19c595			version595:
19c595 58			pop	rax
19c596 4883c410			add	rsp,byte 16
19c59a 5a			pop	rdx
19c59b 488b5a18			mov	rbx,[rdx+24]
19c59f 49c7c318000000		mov	r11,dword 24
19c5a6 ffe3			jmp	rbx
>>> patching closure 7f920cddcfc9 at 7f920cddcff9 : slot contains now label fn_entry_7 (7f93ae19c574)
GEN VERSION >>> #<ctx #243
                      stack: (number number procedure number retAddr)
                      env: ((x . #<identifier #244
                                    type: local
                                    offset: 0
                                    pos: (2 0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f93ae19c589 -> 7f93ae19c5a8
------------------------------------------------------------------------
19c5a8				bits 64
19c5a8			version596:
19c5a8 4883c410			add	rsp,byte 16
19c5ac 6afe			push	qword byte -2
19c5ae ebe5			jmp	short version595
------------------------------------------------------------------------
d07ef8				bits 64
d07ef8			stub_7f93aed07ef8_1:
d07ef8 fec1			inc	cl
d07efa			stub_7f93aed07ef8_0:
d07efa e80ef148ff		call	do_callback_handler
d07eff 11e19e0200000000
(obj= #(#<procedure #245>))
------------------------------------------------------------------------
19c5b0				bits 64
19c5b0			continuation_5:
19c5b0 50			push	rax
19c5b1			version597:
19c5b1 58			pop	rax
19c5b2 4883f8fe			cmp	rax,byte -2
19c5b6			patchable_jump22:
19c5b6 0f843eb9b600		je	stub_7f93aed07ef8_0
19c5bc e937b9b600		jmp	stub_7f93aed07ef8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c5b6 -> 7f93aed07ef8
GEN VERSION >>> #<ctx #246
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #248
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ee8				bits 64
d07ee8			stub_7f93aed07ee8_1:
d07ee8 fec1			inc	cl
d07eea			stub_7f93aed07ee8_0:
d07eea e81ef148ff		call	do_callback_handler
d07eef b1e19e0200000000
(obj= #(#<procedure #250>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c5bc				bits 64
19c5bc			version598:
19c5bc ff3424			push	qword [rsp]
19c5bf			version599:
19c5bf 50			push	rax
19c5c0 53			push	rbx
19c5c1 48b84000fcb0937f
19c5c9 0000			mov	rax,140272306225216
19c5cb 488b18			mov	rbx,[rax]
19c5ce 48ffc3			inc	rbx
19c5d1 488918			mov	[rax],rbx
19c5d4 5b			pop	rbx
19c5d5 58			pop	rax
19c5d6 488b0424			mov	rax,[rsp]
19c5da 4889c3			mov	rbx,rax
19c5dd 4883e003			and	rax,byte 3
19c5e1 4883f801			cmp	rax,byte 1
19c5e5 750e			jne	short patchable_jump23
19c5e7 488b43ff			mov	rax,[rbx-1]
19c5eb 4825f8000000		and	rax,248
19c5f1 4883f808			cmp	rax,byte 8
19c5f5			patchable_jump23:
19c5f5 0f84efb8b600		je	stub_7f93aed07ee8_0
19c5fb e9e8b8b600		jmp	stub_7f93aed07ee8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c5f5 -> 7f93aed07ee8
GEN VERSION >>> #<ctx #251
                      stack: (pair pair
                                   number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #252
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19c5fb				bits 64
19c5fb 90		version600:
19c5fc ff742428			push	qword [rsp+40]
19c600			version601:
19c600 58			pop	rax
19c601 5b			pop	rbx
19c602 48894307			mov	[rbx+7],rax
19c606 6aee			push	qword byte -18
19c608			version602:
19c608 ff742410			push	qword [rsp+16]
19c60c			version603:
19c60c 48c7c004000000		mov	rax,dword 4
19c613 50			push	rax
19c614			version604:
19c614			version605:
19c614			version606:
19c614 58			pop	rax
19c615 48290424			sub	[rsp],rax
19c619 0f80a9c4b600		jo	stub_7f93aed08ac8_0
19c61f			version607:
19c61f ff742410			push	qword [rsp+16]
19c623			version608:
19c623			version609:
19c623 58			pop	rax
19c624 488b400f			mov	rax,[rax+15]
19c628 50			push	rax
19c629			version610:
19c629 488b442408		mov	rax,[rsp+8]
19c62e 4889442420		mov	[rsp+32],rax
19c633 488b0424			mov	rax,[rsp]
19c637 4889442418		mov	[rsp+24],rax
19c63c 4883c418			add	rsp,byte 24
19c640 e901ffffff		jmp	version583
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #246
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #247
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #248
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c5b6 -> 7f93ae19c645
------------------------------------------------------------------------
d07ef8				bits 64
d07ef8			stub_7f93aed07ef8_1:
d07ef8 fec1			inc	cl
d07efa			stub_7f93aed07ef8_0:
d07efa e80ef148ff		call	do_callback_handler
d07eff a1e29e0200000000
(obj= #(#<procedure #253>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c645				bits 64
19c645 909090		version611:
19c648 ff3424			push	qword [rsp]
19c64b			version612:
19c64b 58			pop	rax
19c64c 4883c410			add	rsp,byte 16
19c650 50			push	rax
19c651			version613:
19c651 50			push	rax
19c652 53			push	rbx
19c653 48b84000fcb0937f
19c65b 0000			mov	rax,140272306225216
19c65d 488b18			mov	rbx,[rax]
19c660 48ffc3			inc	rbx
19c663 488918			mov	[rax],rbx
19c666 5b			pop	rbx
19c667 58			pop	rax
19c668 488b0424			mov	rax,[rsp]
19c66c 4889c3			mov	rbx,rax
19c66f 4883e003			and	rax,byte 3
19c673 4883f801			cmp	rax,byte 1
19c677 750e			jne	short patchable_jump24
19c679 488b43ff			mov	rax,[rbx-1]
19c67d 4825f8000000		and	rax,248
19c683 4883f808			cmp	rax,byte 8
19c687			patchable_jump24:
19c687 0f846db8b600		je	stub_7f93aed07ef8_0
19c68d e966b8b600		jmp	stub_7f93aed07ef8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c687 -> 7f93aed07ef8
GEN VERSION >>> #<ctx #254
                      stack: (pair pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ed8				bits 64
d07ed8			stub_7f93aed07ed8_0:
d07ed8 e88af148ff		call	do_callback_cont_handler
d07edd 41e39e0200000000
(obj= #(#<procedure #255>))
------------------------------------------------------------------------
19c68d				bits 64
19c68d 909090		version614:
19c690 6afe			push	qword byte -2
19c692			version615:
19c692 ff742418			push	qword [rsp+24]
19c696			version616:
19c696			version617:
19c696 58			pop	rax
19c697 488b4007			mov	rax,[rax+7]
19c69b 50			push	rax
19c69c			version618:
19c69c 41ffb278020000		push	qword [r10+632]
19c6a3			version619:
19c6a3			version620:
19c6a3 48c7c090e39e02		mov	rax,dword 43967376
19c6aa 4889442410		mov	[rsp+16],rax
19c6af			version621:
19c6af 488b0424			mov	rax,[rsp]
19c6b3 48c7c704000000		mov	rdi,dword 4
19c6ba 488b4007			mov	rax,[rax+7]
19c6be 488b4008			mov	rax,[rax+8]
19c6c2 ffe0			jmp	rax
------------------------------------------------------------------------
d07ec8				bits 64
d07ec8			stub_7f93aed07ec8_0:
d07ec8 e840f148ff		call	do_callback_handler
d07ecd b1e49e0200000000
(obj= #(#<procedure #256>))
------------------------------------------------------------------------
d07eb8				bits 64
d07eb8			stub_7f93aed07eb8_0:
d07eb8 e850f148ff		call	do_callback_handler
d07ebd 01e59e0200000000
(obj= #(#<procedure #257>))
------------------------------------------------------------------------
d07ea8				bits 64
d07ea8			stub_7f93aed07ea8_1:
d07ea8 fec1			inc	cl
d07eaa			stub_7f93aed07ea8_0:
d07eaa e85ef148ff		call	do_callback_handler
d07eaf 51e59e0200000000
(obj= #(#<procedure #258>))
------------------------------------------------------------------------
19c6c4				bits 64
19c6c4			continuation_6:
19c6c4 50			push	rax
19c6c5			version622:
19c6c5			version623:
19c6c5 48c7c008000000		mov	rax,dword 8
19c6cc 50			push	rax
19c6cd			version624:
19c6cd			version625:
19c6cd 5b			pop	rbx
19c6ce 58			pop	rax
19c6cf 48c1f802			sar	rax,2
19c6d3 48c1fb02			sar	rbx,2
19c6d7 4883fb00			cmp	rbx,byte 0
19c6db 0f84e7b7b600		je	stub_7f93aed07ec8_0
19c6e1 4899			cqo
19c6e3 48f7fb			idiv	rbx
19c6e6 48c1e002			shl	rax,2
19c6ea 50			push	rax
19c6eb			version626:
19c6eb			version627:
19c6eb ff3424			push	qword [rsp]
19c6ee			version628:
19c6ee 48c7c000000000		mov	rax,dword 0
19c6f5 50			push	rax
19c6f6			version629:
19c6f6			version630:
19c6f6			version631:
19c6f6 488b442408		mov	rax,[rsp+8]
19c6fb 483b0424			cmp	rax,[rsp]
19c6ff			label-jump7:
19c6ff 0f85b3b7b600		jne	stub_7f93aed07eb8_0
19c705			version632:
19c705 4883c410			add	rsp,byte 16
19c709 6afa			push	qword byte -6
19c70b			version633:
19c70b 58			pop	rax
19c70c 4883f8fe			cmp	rax,byte -2
19c710			patchable_jump25:
19c710 0f8494b7b600		je	stub_7f93aed07ea8_0
19c716 e98db7b600		jmp	stub_7f93aed07ea8_1
GEN VERSION >>> #<ctx #259
                      stack: (number number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #260
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #261
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c6ff -> 7f93ae19c71b
------------------------------------------------------------------------
19c71b				bits 64
19c71b 90		version634:
19c71c 4883c410			add	rsp,byte 16
19c720 6afe			push	qword byte -2
19c722 ebe7			jmp	short version633
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #262
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #263
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c710 -> 7f93ae19c724
------------------------------------------------------------------------
d07e98				bits 64
d07e98			stub_7f93aed07e98_0:
d07e98 e870f148ff		call	do_callback_handler
d07e9d 41e69e0200000000
(obj= #(#<procedure #265>))
------------------------------------------------------------------------
d07e88				bits 64
d07e88			stub_7f93aed07e88_1:
d07e88 fec1			inc	cl
d07e8a			stub_7f93aed07e88_0:
d07e8a e87ef148ff		call	do_callback_handler
d07e8f 91e69e0200000000
(obj= #(#<procedure #266>))
------------------------------------------------------------------------
19c724				bits 64
19c724			version635:
19c724 ff3424			push	qword [rsp]
19c727			version636:
19c727 ff742420			push	qword [rsp+32]
19c72b			version637:
19c72b			version638:
19c72b 58			pop	rax
19c72c 488b4007			mov	rax,[rax+7]
19c730 50			push	rax
19c731			version639:
19c731			version640:
19c731 ff742408			push	qword [rsp+8]
19c735			version641:
19c735 48c7c004000000		mov	rax,dword 4
19c73c 50			push	rax
19c73d			version642:
19c73d			version643:
19c73d			version644:
19c73d 488b442408		mov	rax,[rsp+8]
19c742 483b0424			cmp	rax,[rsp]
19c746			label-jump8:
19c746 0f854cb7b600		jne	stub_7f93aed07e98_0
19c74c			version645:
19c74c 4883c410			add	rsp,byte 16
19c750 6afa			push	qword byte -6
19c752			version646:
19c752 58			pop	rax
19c753 4883f8fe			cmp	rax,byte -2
19c757			patchable_jump26:
19c757 0f842db7b600		je	stub_7f93aed07e88_0
19c75d e926b7b600		jmp	stub_7f93aed07e88_1
GEN VERSION >>> #<ctx #267
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #268
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c746 -> 7f93ae19c762
------------------------------------------------------------------------
19c762				bits 64
19c762 9090		version647:
19c764 4883c410			add	rsp,byte 16
19c768 6afe			push	qword byte -2
19c76a ebe6			jmp	short version646
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #273
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c757 -> 7f93ae19c76c
------------------------------------------------------------------------
d07e78				bits 64
d07e78			stub_7f93aed07e78_1:
d07e78 fec1			inc	cl
d07e7a			stub_7f93aed07e78_0:
d07e7a e88ef148ff		call	do_callback_handler
d07e7f c114d20200000000
(obj= #(#<procedure #275>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c76c				bits 64
19c76c			version648:
19c76c ff3424			push	qword [rsp]
19c76f			version649:
19c76f 50			push	rax
19c770 53			push	rbx
19c771 48b84000fcb0937f
19c779 0000			mov	rax,140272306225216
19c77b 488b18			mov	rbx,[rax]
19c77e 48ffc3			inc	rbx
19c781 488918			mov	[rax],rbx
19c784 5b			pop	rbx
19c785 58			pop	rax
19c786 488b0424			mov	rax,[rsp]
19c78a 4889c3			mov	rbx,rax
19c78d 4883e003			and	rax,byte 3
19c791 4883f801			cmp	rax,byte 1
19c795 750e			jne	short patchable_jump27
19c797 488b43ff			mov	rax,[rbx-1]
19c79b 4825f8000000		and	rax,248
19c7a1 4883f808			cmp	rax,byte 8
19c7a5			patchable_jump27:
19c7a5 0f84cfb6b600		je	stub_7f93aed07e78_0
19c7ab e9c8b6b600		jmp	stub_7f93aed07e78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c7a5 -> 7f93aed07e78
GEN VERSION >>> #<ctx #276
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #277
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19c7ab				bits 64
19c7ab 90		version650:
19c7ac ff742438			push	qword [rsp+56]
19c7b0			version651:
19c7b0 58			pop	rax
19c7b1 5b			pop	rbx
19c7b2 48894307			mov	[rbx+7],rax
19c7b6 6aee			push	qword byte -18
19c7b8			version652:
19c7b8 ff742410			push	qword [rsp+16]
19c7bc			version653:
19c7bc 48c7c004000000		mov	rax,dword 4
19c7c3 50			push	rax
19c7c4			version654:
19c7c4			version655:
19c7c4			version656:
19c7c4 58			pop	rax
19c7c5 48290424			sub	[rsp],rax
19c7c9 0f8019c3b600		jo	stub_7f93aed08ae8_0
19c7cf			version657:
19c7cf ff742410			push	qword [rsp+16]
19c7d3			version658:
19c7d3			version659:
19c7d3 58			pop	rax
19c7d4 488b400f			mov	rax,[rax+15]
19c7d8 50			push	rax
19c7d9			version660:
19c7d9 488b442408		mov	rax,[rsp+8]
19c7de 4889442420		mov	[rsp+32],rax
19c7e3 488b0424			mov	rax,[rsp]
19c7e7 4889442418		mov	[rsp+24],rax
19c7ec 4883c418			add	rsp,byte 24
19c7f0 e93cffffff		jmp	version640
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #273
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #269
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c75d -> 7f93ae19c7f5
------------------------------------------------------------------------
d07e88				bits 64
d07e88			stub_7f93aed07e88_1:
d07e88 fec1			inc	cl
d07e8a			stub_7f93aed07e88_0:
d07e8a e87ef148ff		call	do_callback_handler
d07e8f e1d79e0200000000
(obj= #(#<procedure #278>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c7f5				bits 64
19c7f5 909090		version661:
19c7f8 ff3424			push	qword [rsp]
19c7fb			version662:
19c7fb 50			push	rax
19c7fc 53			push	rbx
19c7fd 48b84000fcb0937f
19c805 0000			mov	rax,140272306225216
19c807 488b18			mov	rbx,[rax]
19c80a 48ffc3			inc	rbx
19c80d 488918			mov	[rax],rbx
19c810 5b			pop	rbx
19c811 58			pop	rax
19c812 488b0424			mov	rax,[rsp]
19c816 4889c3			mov	rbx,rax
19c819 4883e003			and	rax,byte 3
19c81d 4883f801			cmp	rax,byte 1
19c821 750e			jne	short patchable_jump28
19c823 488b43ff			mov	rax,[rbx-1]
19c827 4825f8000000		and	rax,248
19c82d 4883f808			cmp	rax,byte 8
19c831			patchable_jump28:
19c831 0f8453b6b600		je	stub_7f93aed07e88_0
19c837 e94cb6b600		jmp	stub_7f93aed07e88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c831 -> 7f93aed07e88
GEN VERSION >>> #<ctx #279
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #274
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #280
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #270
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #271
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #272
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07e68				bits 64
d07e68			stub_7f93aed07e68_1:
d07e68 fec1			inc	cl
d07e6a			stub_7f93aed07e68_0:
d07e6a e89ef148ff		call	do_callback_handler
d07e6f 11f99e0200000000
(obj= #(#<procedure #281>))
------------------------------------------------------------------------
19c837				bits 64
19c837 90		version663:
19c838 58			pop	rax
19c839 488b400f			mov	rax,[rax+15]
19c83d 50			push	rax
19c83e			version664:
19c83e			version665:
19c83e ff742408			push	qword [rsp+8]
19c842			version666:
19c842			version667:
19c842 6af6			push	qword byte -10
19c844			version668:
19c844 58			pop	rax
19c845 5b			pop	rbx
19c846 4889430f			mov	[rbx+15],rax
19c84a 6aee			push	qword byte -18
19c84c			version669:
19c84c ff742408			push	qword [rsp+8]
19c850			version670:
19c850 58			pop	rax
19c851 4883c410			add	rsp,byte 16
19c855 50			push	rax
19c856			version671:
19c856 58			pop	rax
19c857 4883c410			add	rsp,byte 16
19c85b 50			push	rax
19c85c			version672:
19c85c 58			pop	rax
19c85d 4883c408			add	rsp,byte 8
19c861 50			push	rax
19c862			version673:
19c862 58			pop	rax
19c863 5b			pop	rbx
19c864 4889430f			mov	[rbx+15],rax
19c868 6aee			push	qword byte -18
19c86a			version674:
19c86a ff742410			push	qword [rsp+16]
19c86e			version675:
19c86e			version676:
19c86e 58			pop	rax
19c86f 488b400f			mov	rax,[rax+15]
19c873 50			push	rax
19c874			version677:
19c874 ff742410			push	qword [rsp+16]
19c878			version678:
19c878			version679:
19c878 58			pop	rax
19c879 488b400f			mov	rax,[rax+15]
19c87d 50			push	rax
19c87e			version680:
19c87e 488b442408		mov	rax,[rsp+8]
19c883 4889442420		mov	[rsp+32],rax
19c888 488b0424			mov	rax,[rsp]
19c88c 4889442418		mov	[rsp+24],rax
19c891 4883c418			add	rsp,byte 24
19c895			version681:
19c895 ff3424			push	qword [rsp]
19c898			version682:
19c898			version683:
19c898 50			push	rax
19c899 53			push	rbx
19c89a 48b84000fcb0937f
19c8a2 0000			mov	rax,140272306225216
19c8a4 488b18			mov	rbx,[rax]
19c8a7 48ffc3			inc	rbx
19c8aa 488918			mov	[rax],rbx
19c8ad 5b			pop	rbx
19c8ae 58			pop	rax
19c8af 48c7c0f6ffffff		mov	rax,dword -10
19c8b6 48390424			cmp	[rsp],rax
19c8ba 48c7c0faffffff		mov	rax,dword -6
19c8c1 7407			je	short done8
19c8c3 48c7c0feffffff		mov	rax,dword -2
19c8ca			done8:
19c8ca 48890424			mov	[rsp],rax
19c8ce			version684:
19c8ce 58			pop	rax
19c8cf 4883f8fe			cmp	rax,byte -2
19c8d3			patchable_jump29:
19c8d3 0f8491b5b600		je	stub_7f93aed07e68_0
19c8d9 e98ab5b600		jmp	stub_7f93aed07e68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c8d3 -> 7f93aed07e68
GEN VERSION >>> #<ctx #282
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #284
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07e58				bits 64
d07e58			stub_7f93aed07e58_1:
d07e58 fec1			inc	cl
d07e5a			stub_7f93aed07e58_0:
d07e5a e8aef148ff		call	do_callback_handler
d07e5f 5102d20200000000
(obj= #(#<procedure #286>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c8d9				bits 64
19c8d9 909090		version685:
19c8dc 6afe			push	qword byte -2
19c8de			version686:
19c8de ff742408			push	qword [rsp+8]
19c8e2			version687:
19c8e2 50			push	rax
19c8e3 53			push	rbx
19c8e4 48b84000fcb0937f
19c8ec 0000			mov	rax,140272306225216
19c8ee 488b18			mov	rbx,[rax]
19c8f1 48ffc3			inc	rbx
19c8f4 488918			mov	[rax],rbx
19c8f7 5b			pop	rbx
19c8f8 58			pop	rax
19c8f9 488b0424			mov	rax,[rsp]
19c8fd 4889c3			mov	rbx,rax
19c900 4883e003			and	rax,byte 3
19c904 4883f801			cmp	rax,byte 1
19c908 750e			jne	short patchable_jump30
19c90a 488b43ff			mov	rax,[rbx-1]
19c90e 4825f8000000		and	rax,248
19c914 4883f808			cmp	rax,byte 8
19c918			patchable_jump30:
19c918 0f843cb5b600		je	stub_7f93aed07e58_0
19c91e e935b5b600		jmp	stub_7f93aed07e58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c918 -> 7f93aed07e58
GEN VERSION >>> #<ctx #287
                      stack: (pair retAddr
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #288
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07e48				bits 64
d07e48			stub_7f93aed07e48_0:
d07e48 e81af248ff		call	do_callback_cont_handler
d07e4d 2114d20200000000
(obj= #(#<procedure #289>))
------------------------------------------------------------------------
19c91e				bits 64
19c91e 9090		version688:
19c920 58			pop	rax
19c921 488b4007			mov	rax,[rax+7]
19c925 50			push	rax
19c926			version689:
19c926 41ffb278020000		push	qword [r10+632]
19c92d			version690:
19c92d			version691:
19c92d 48c7c0e0e69e02		mov	rax,dword 43968224
19c934 4889442410		mov	[rsp+16],rax
19c939			version692:
19c939 488b0424			mov	rax,[rsp]
19c93d 48c7c704000000		mov	rdi,dword 4
19c944 488b4007			mov	rax,[rax+7]
19c948 488b4008			mov	rax,[rax+8]
19c94c ffe0			jmp	rax
------------------------------------------------------------------------
d07e38				bits 64
d07e38			stub_7f93aed07e38_0:
d07e38 e8d0f148ff		call	do_callback_handler
d07e3d 71dd9e0200000000
(obj= #(#<procedure #290>))
------------------------------------------------------------------------
d07e28				bits 64
d07e28			stub_7f93aed07e28_1:
d07e28 fec1			inc	cl
d07e2a			stub_7f93aed07e28_0:
d07e2a e8def148ff		call	do_callback_handler
d07e2f c1dd9e0200000000
(obj= #(#<procedure #291>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c94e				bits 64
19c94e 9090		continuation_7:
19c950 50			push	rax
19c951			version693:
19c951			version694:
19c951 48c7c008000000		mov	rax,dword 8
19c958 50			push	rax
19c959			version695:
19c959			version696:
19c959 5b			pop	rbx
19c95a 58			pop	rax
19c95b 48c1f802			sar	rax,2
19c95f 48c1fb02			sar	rbx,2
19c963 4883fb00			cmp	rbx,byte 0
19c967 0f84cbb4b600		je	stub_7f93aed07e38_0
19c96d 4899			cqo
19c96f 48f7fb			idiv	rbx
19c972 48c1e002			shl	rax,2
19c976 50			push	rax
19c977			version697:
19c977 ff742408			push	qword [rsp+8]
19c97b			version698:
19c97b 50			push	rax
19c97c 53			push	rbx
19c97d 48b84000fcb0937f
19c985 0000			mov	rax,140272306225216
19c987 488b18			mov	rbx,[rax]
19c98a 48ffc3			inc	rbx
19c98d 488918			mov	[rax],rbx
19c990 5b			pop	rbx
19c991 58			pop	rax
19c992 488b0424			mov	rax,[rsp]
19c996 4889c3			mov	rbx,rax
19c999 4883e003			and	rax,byte 3
19c99d 4883f801			cmp	rax,byte 1
19c9a1 750e			jne	short patchable_jump31
19c9a3 488b43ff			mov	rax,[rbx-1]
19c9a7 4825f8000000		and	rax,248
19c9ad 4883f808			cmp	rax,byte 8
19c9b1			patchable_jump31:
19c9b1 0f8473b4b600		je	stub_7f93aed07e28_0
19c9b7 e96cb4b600		jmp	stub_7f93aed07e28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c9b1 -> 7f93aed07e28
GEN VERSION >>> #<ctx #292
                      stack: (pair number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #293
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07e18				bits 64
d07e18			stub_7f93aed07e18_0:
d07e18 e84af248ff		call	do_callback_cont_handler
d07e1d d1df9e0200000000
(obj= #(#<procedure #294>))
------------------------------------------------------------------------
19c9b7				bits 64
19c9b7 90		version699:
19c9b8 58			pop	rax
19c9b9 488b4007			mov	rax,[rax+7]
19c9bd 50			push	rax
19c9be			version700:
19c9be			version701:
19c9be 6afe			push	qword byte -2
19c9c0			version702:
19c9c0 ff742410			push	qword [rsp+16]
19c9c4			version703:
19c9c4 41ffb218030000		push	qword [r10+792]
19c9cb			version704:
19c9cb			version705:
19c9cb 48c7c0b0e79e02		mov	rax,dword 43968432
19c9d2 4889442410		mov	[rsp+16],rax
19c9d7			version706:
19c9d7 488b0424			mov	rax,[rsp]
19c9db 49c7c381df9e02		mov	r11,dword 43966337
19c9e2 488b4007			mov	rax,[rax+7]
19c9e6 488b4030			mov	rax,[rax+48]
19c9ea ffe0			jmp	rax
------------------------------------------------------------------------
d07e08				bits 64
d07e08			stub_7f93aed07e08_1:
d07e08 fec1			inc	cl
d07e0a			stub_7f93aed07e08_0:
d07e0a e8fef148ff		call	do_callback_handler
d07e0f c1e09e0200000000
(obj= #(#<procedure #295>))
------------------------------------------------------------------------
19c9ec				bits 64
19c9ec			continuation_8:
19c9ec 50			push	rax
19c9ed			version707:
19c9ed 58			pop	rax
19c9ee 4883f8fe			cmp	rax,byte -2
19c9f2			patchable_jump32:
19c9f2 0f8412b4b600		je	stub_7f93aed07e08_0
19c9f8 e90bb4b600		jmp	stub_7f93aed07e08_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19c9f2 -> 7f93aed07e08
GEN VERSION >>> #<ctx #296
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #298
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07df8				bits 64
d07df8			stub_7f93aed07df8_1:
d07df8 fec1			inc	cl
d07dfa			stub_7f93aed07df8_0:
d07dfa e80ef248ff		call	do_callback_handler
d07dff 61e19e0200000000
(obj= #(#<procedure #300>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19c9f8				bits 64
19c9f8			version708:
19c9f8 ff3424			push	qword [rsp]
19c9fb			version709:
19c9fb 50			push	rax
19c9fc 53			push	rbx
19c9fd 48b84000fcb0937f
19ca05 0000			mov	rax,140272306225216
19ca07 488b18			mov	rbx,[rax]
19ca0a 48ffc3			inc	rbx
19ca0d 488918			mov	[rax],rbx
19ca10 5b			pop	rbx
19ca11 58			pop	rax
19ca12 488b0424			mov	rax,[rsp]
19ca16 4889c3			mov	rbx,rax
19ca19 4883e003			and	rax,byte 3
19ca1d 4883f801			cmp	rax,byte 1
19ca21 750e			jne	short patchable_jump33
19ca23 488b43ff			mov	rax,[rbx-1]
19ca27 4825f8000000		and	rax,248
19ca2d 4883f808			cmp	rax,byte 8
19ca31			patchable_jump33:
19ca31 0f84c3b3b600		je	stub_7f93aed07df8_0
19ca37 e9bcb3b600		jmp	stub_7f93aed07df8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19ca31 -> 7f93aed07df8
GEN VERSION >>> #<ctx #301
                      stack: (pair pair
                                   number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #302
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19ca37				bits 64
19ca37 90		version710:
19ca38 ff742428			push	qword [rsp+40]
19ca3c			version711:
19ca3c 58			pop	rax
19ca3d 5b			pop	rbx
19ca3e 48894307			mov	[rbx+7],rax
19ca42 6aee			push	qword byte -18
19ca44			version712:
19ca44 ff742410			push	qword [rsp+16]
19ca48			version713:
19ca48 48c7c004000000		mov	rax,dword 4
19ca4f 50			push	rax
19ca50			version714:
19ca50			version715:
19ca50			version716:
19ca50 58			pop	rax
19ca51 48290424			sub	[rsp],rax
19ca55 0f806dc0b600		jo	stub_7f93aed08ac8_0
19ca5b			version717:
19ca5b ff742410			push	qword [rsp+16]
19ca5f			version718:
19ca5f			version719:
19ca5f 58			pop	rax
19ca60 488b400f			mov	rax,[rax+15]
19ca64 50			push	rax
19ca65			version720:
19ca65 488b442408		mov	rax,[rsp+8]
19ca6a 4889442420		mov	[rsp+32],rax
19ca6f 488b0424			mov	rax,[rsp]
19ca73 4889442418		mov	[rsp+24],rax
19ca78 4883c418			add	rsp,byte 24
19ca7c e93dffffff		jmp	version701
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #296
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #297
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #298
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c9f2 -> 7f93ae19ca81
------------------------------------------------------------------------
d07e08				bits 64
d07e08			stub_7f93aed07e08_1:
d07e08 fec1			inc	cl
d07e0a			stub_7f93aed07e08_0:
d07e0a e8fef148ff		call	do_callback_handler
d07e0f a1e59e0200000000
(obj= #(#<procedure #303>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19ca81				bits 64
19ca81 909090		version721:
19ca84 ff3424			push	qword [rsp]
19ca87			version722:
19ca87 58			pop	rax
19ca88 4883c410			add	rsp,byte 16
19ca8c 50			push	rax
19ca8d			version723:
19ca8d 50			push	rax
19ca8e 53			push	rbx
19ca8f 48b84000fcb0937f
19ca97 0000			mov	rax,140272306225216
19ca99 488b18			mov	rbx,[rax]
19ca9c 48ffc3			inc	rbx
19ca9f 488918			mov	[rax],rbx
19caa2 5b			pop	rbx
19caa3 58			pop	rax
19caa4 488b0424			mov	rax,[rsp]
19caa8 4889c3			mov	rbx,rax
19caab 4883e003			and	rax,byte 3
19caaf 4883f801			cmp	rax,byte 1
19cab3 750e			jne	short patchable_jump34
19cab5 488b43ff			mov	rax,[rbx-1]
19cab9 4825f8000000		and	rax,248
19cabf 4883f808			cmp	rax,byte 8
19cac3			patchable_jump34:
19cac3 0f8441b3b600		je	stub_7f93aed07e08_0
19cac9 e93ab3b600		jmp	stub_7f93aed07e08_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cac3 -> 7f93aed07e08
GEN VERSION >>> #<ctx #304
                      stack: (pair pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07de8				bits 64
d07de8			stub_7f93aed07de8_1:
d07de8 fec1			inc	cl
d07dea			stub_7f93aed07de8_0:
d07dea e81ef248ff		call	do_callback_handler
d07def 51e29e0200000000
(obj= #(#<procedure #305>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cac9				bits 64
19cac9 909090		version724:
19cacc 6afe			push	qword byte -2
19cace			version725:
19cace ff742418			push	qword [rsp+24]
19cad2			version726:
19cad2 50			push	rax
19cad3 53			push	rbx
19cad4 48b84000fcb0937f
19cadc 0000			mov	rax,140272306225216
19cade 488b18			mov	rbx,[rax]
19cae1 48ffc3			inc	rbx
19cae4 488918			mov	[rax],rbx
19cae7 5b			pop	rbx
19cae8 58			pop	rax
19cae9 488b0424			mov	rax,[rsp]
19caed 4889c3			mov	rbx,rax
19caf0 4883e003			and	rax,byte 3
19caf4 4883f801			cmp	rax,byte 1
19caf8 750e			jne	short patchable_jump35
19cafa 488b43ff			mov	rax,[rbx-1]
19cafe 4825f8000000		and	rax,248
19cb04 4883f808			cmp	rax,byte 8
19cb08			patchable_jump35:
19cb08 0f84dcb2b600		je	stub_7f93aed07de8_0
19cb0e e9d5b2b600		jmp	stub_7f93aed07de8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cb08 -> 7f93aed07de8
GEN VERSION >>> #<ctx #306
                      stack: (pair retAddr
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #307
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #299
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07dd8				bits 64
d07dd8			stub_7f93aed07dd8_0:
d07dd8 e88af248ff		call	do_callback_cont_handler
d07ddd d1e89e0200000000
(obj= #(#<procedure #308>))
------------------------------------------------------------------------
19cb0e				bits 64
19cb0e 9090		version727:
19cb10 58			pop	rax
19cb11 488b4007			mov	rax,[rax+7]
19cb15 50			push	rax
19cb16			version728:
19cb16 41ffb278020000		push	qword [r10+632]
19cb1d			version729:
19cb1d			version730:
19cb1d 48c7c090e39e02		mov	rax,dword 43967376
19cb24 4889442410		mov	[rsp+16],rax
19cb29 e981fbffff		jmp	version621
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #282
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #283
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #284
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #285
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c8d3 -> 7f93ae19cb2e
------------------------------------------------------------------------
19cb2e				bits 64
19cb2e 9090		version731:
19cb30 6afe			push	qword byte -2
19cb32			version732:
19cb32 58			pop	rax
19cb33 4883c410			add	rsp,byte 16
19cb37 50			push	rax
19cb38 e9a7f7ffff		jmp	version531
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #262
                      stack: (number pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #263
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #219
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #249
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c716 -> 7f93ae19cb3d
------------------------------------------------------------------------
d07ea8				bits 64
d07ea8			stub_7f93aed07ea8_1:
d07ea8 fec1			inc	cl
d07eaa			stub_7f93aed07ea8_0:
d07eaa e85ef148ff		call	do_callback_handler
d07eaf 51e59e0200000000
(obj= #(#<procedure #309>))
------------------------------------------------------------------------
19cb3d				bits 64
19cb3d 909090		version733:
19cb40 ff742418			push	qword [rsp+24]
19cb44			version734:
19cb44			version735:
19cb44 6af6			push	qword byte -10
19cb46			version736:
19cb46 58			pop	rax
19cb47 5b			pop	rbx
19cb48 48894307			mov	[rbx+7],rax
19cb4c 6aee			push	qword byte -18
19cb4e			version737:
19cb4e ff742420			push	qword [rsp+32]
19cb52			version738:
19cb52			version739:
19cb52 58			pop	rax
19cb53 488b4007			mov	rax,[rax+7]
19cb57 50			push	rax
19cb58			version740:
19cb58 58			pop	rax
19cb59 4883c408			add	rsp,byte 8
19cb5d 50			push	rax
19cb5e			version741:
19cb5e 58			pop	rax
19cb5f 4883c408			add	rsp,byte 8
19cb63 50			push	rax
19cb64			version742:
19cb64 58			pop	rax
19cb65 5b			pop	rbx
19cb66 4889430f			mov	[rbx+15],rax
19cb6a 6aee			push	qword byte -18
19cb6c			version743:
19cb6c ff742410			push	qword [rsp+16]
19cb70			version744:
19cb70			version745:
19cb70 58			pop	rax
19cb71 488b400f			mov	rax,[rax+15]
19cb75 50			push	rax
19cb76			version746:
19cb76 ff742410			push	qword [rsp+16]
19cb7a			version747:
19cb7a			version748:
19cb7a 58			pop	rax
19cb7b 488b400f			mov	rax,[rax+15]
19cb7f 50			push	rax
19cb80			version749:
19cb80 488b442408		mov	rax,[rsp+8]
19cb85 4889442420		mov	[rsp+32],rax
19cb8a 488b0424			mov	rax,[rsp]
19cb8e 4889442418		mov	[rsp+24],rax
19cb93 4883c418			add	rsp,byte 24
19cb97			version750:
19cb97 ff3424			push	qword [rsp]
19cb9a			version751:
19cb9a			version752:
19cb9a 50			push	rax
19cb9b 53			push	rbx
19cb9c 48b84000fcb0937f
19cba4 0000			mov	rax,140272306225216
19cba6 488b18			mov	rbx,[rax]
19cba9 48ffc3			inc	rbx
19cbac 488918			mov	[rax],rbx
19cbaf 5b			pop	rbx
19cbb0 58			pop	rax
19cbb1 48c7c0f6ffffff		mov	rax,dword -10
19cbb8 48390424			cmp	[rsp],rax
19cbbc 48c7c0faffffff		mov	rax,dword -6
19cbc3 7407			je	short done9
19cbc5 48c7c0feffffff		mov	rax,dword -2
19cbcc			done9:
19cbcc 48890424			mov	[rsp],rax
19cbd0			version753:
19cbd0 58			pop	rax
19cbd1 4883f8fe			cmp	rax,byte -2
19cbd5			patchable_jump36:
19cbd5 0f84cfb2b600		je	stub_7f93aed07ea8_0
19cbdb e9c8b2b600		jmp	stub_7f93aed07ea8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cbd5 -> 7f93aed07ea8
GEN VERSION >>> #<ctx #310
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #312
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07e68				bits 64
d07e68			stub_7f93aed07e68_1:
d07e68 fec1			inc	cl
d07e6a			stub_7f93aed07e68_0:
d07e6a e89ef148ff		call	do_callback_handler
d07e6f 91e69e0200000000
(obj= #(#<procedure #313>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cbdb				bits 64
19cbdb 90		version754:
19cbdc 6afe			push	qword byte -2
19cbde			version755:
19cbde ff742408			push	qword [rsp+8]
19cbe2			version756:
19cbe2 50			push	rax
19cbe3 53			push	rbx
19cbe4 48b84000fcb0937f
19cbec 0000			mov	rax,140272306225216
19cbee 488b18			mov	rbx,[rax]
19cbf1 48ffc3			inc	rbx
19cbf4 488918			mov	[rax],rbx
19cbf7 5b			pop	rbx
19cbf8 58			pop	rax
19cbf9 488b0424			mov	rax,[rsp]
19cbfd 4889c3			mov	rbx,rax
19cc00 4883e003			and	rax,byte 3
19cc04 4883f801			cmp	rax,byte 1
19cc08 750e			jne	short patchable_jump37
19cc0a 488b43ff			mov	rax,[rbx-1]
19cc0e 4825f8000000		and	rax,248
19cc14 4883f808			cmp	rax,byte 8
19cc18			patchable_jump37:
19cc18 0f844cb2b600		je	stub_7f93aed07e68_0
19cc1e e945b2b600		jmp	stub_7f93aed07e68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cc18 -> 7f93aed07e68
GEN VERSION >>> #<ctx #314
                      stack: (pair retAddr
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #315
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07dc8				bits 64
d07dc8			stub_7f93aed07dc8_0:
d07dc8 e89af248ff		call	do_callback_cont_handler
d07dcd 7114d20200000000
(obj= #(#<procedure #316>))
------------------------------------------------------------------------
19cc1e				bits 64
19cc1e 9090		version757:
19cc20 58			pop	rax
19cc21 488b4007			mov	rax,[rax+7]
19cc25 50			push	rax
19cc26			version758:
19cc26 41ffb278020000		push	qword [r10+632]
19cc2d			version759:
19cc2d			version760:
19cc2d 48c7c070e09e02		mov	rax,dword 43966576
19cc34 4889442410		mov	[rsp+16],rax
19cc39			version761:
19cc39 488b0424			mov	rax,[rsp]
19cc3d 48c7c704000000		mov	rdi,dword 4
19cc44 488b4007			mov	rax,[rax+7]
19cc48 488b4008			mov	rax,[rax+8]
19cc4c ffe0			jmp	rax
------------------------------------------------------------------------
d07db8				bits 64
d07db8			stub_7f93aed07db8_0:
d07db8 e850f248ff		call	do_callback_handler
d07dbd e1da9e0200000000
(obj= #(#<procedure #317>))
------------------------------------------------------------------------
d07da8				bits 64
d07da8			stub_7f93aed07da8_1:
d07da8 fec1			inc	cl
d07daa			stub_7f93aed07da8_0:
d07daa e85ef248ff		call	do_callback_handler
d07daf 11f99e0200000000
(obj= #(#<procedure #318>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cc4e				bits 64
19cc4e 9090		continuation_9:
19cc50 50			push	rax
19cc51			version762:
19cc51			version763:
19cc51 48c7c008000000		mov	rax,dword 8
19cc58 50			push	rax
19cc59			version764:
19cc59			version765:
19cc59 5b			pop	rbx
19cc5a 58			pop	rax
19cc5b 48c1f802			sar	rax,2
19cc5f 48c1fb02			sar	rbx,2
19cc63 4883fb00			cmp	rbx,byte 0
19cc67 0f844bb1b600		je	stub_7f93aed07db8_0
19cc6d 4899			cqo
19cc6f 48f7fb			idiv	rbx
19cc72 48c1e002			shl	rax,2
19cc76 50			push	rax
19cc77			version766:
19cc77 ff742408			push	qword [rsp+8]
19cc7b			version767:
19cc7b 50			push	rax
19cc7c 53			push	rbx
19cc7d 48b84000fcb0937f
19cc85 0000			mov	rax,140272306225216
19cc87 488b18			mov	rbx,[rax]
19cc8a 48ffc3			inc	rbx
19cc8d 488918			mov	[rax],rbx
19cc90 5b			pop	rbx
19cc91 58			pop	rax
19cc92 488b0424			mov	rax,[rsp]
19cc96 4889c3			mov	rbx,rax
19cc99 4883e003			and	rax,byte 3
19cc9d 4883f801			cmp	rax,byte 1
19cca1 750e			jne	short patchable_jump38
19cca3 488b43ff			mov	rax,[rbx-1]
19cca7 4825f8000000		and	rax,248
19ccad 4883f808			cmp	rax,byte 8
19ccb1			patchable_jump38:
19ccb1 0f84f3b0b600		je	stub_7f93aed07da8_0
19ccb7 e9ecb0b600		jmp	stub_7f93aed07da8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19ccb1 -> 7f93aed07da8
GEN VERSION >>> #<ctx #319
                      stack: (pair number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #320
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07d98				bits 64
d07d98			stub_7f93aed07d98_0:
d07d98 e8caf248ff		call	do_callback_cont_handler
d07d9d 3113d20200000000
(obj= #(#<procedure #321>))
------------------------------------------------------------------------
19ccb7				bits 64
19ccb7 90		version768:
19ccb8 58			pop	rax
19ccb9 488b4007			mov	rax,[rax+7]
19ccbd 50			push	rax
19ccbe			version769:
19ccbe			version770:
19ccbe 6afe			push	qword byte -2
19ccc0			version771:
19ccc0 ff742410			push	qword [rsp+16]
19ccc4			version772:
19ccc4 41ffb218030000		push	qword [r10+792]
19cccb			version773:
19cccb			version774:
19cccb 48c7c0c0e99e02		mov	rax,dword 43968960
19ccd2 4889442410		mov	[rsp+16],rax
19ccd7			version775:
19ccd7 488b0424			mov	rax,[rsp]
19ccdb 49c7c381df9e02		mov	r11,dword 43966337
19cce2 488b4007			mov	rax,[rax+7]
19cce6 488b4030			mov	rax,[rax+48]
19ccea ffe0			jmp	rax
------------------------------------------------------------------------
d07d88				bits 64
d07d88			stub_7f93aed07d88_1:
d07d88 fec1			inc	cl
d07d8a			stub_7f93aed07d88_0:
d07d8a e87ef248ff		call	do_callback_handler
d07d8f 6115d20200000000
(obj= #(#<procedure #322>))
------------------------------------------------------------------------
19ccec				bits 64
19ccec			continuation_10:
19ccec 50			push	rax
19cced			version776:
19cced 58			pop	rax
19ccee 4883f8fe			cmp	rax,byte -2
19ccf2			patchable_jump39:
19ccf2 0f8492b0b600		je	stub_7f93aed07d88_0
19ccf8 e98bb0b600		jmp	stub_7f93aed07d88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19ccf2 -> 7f93aed07d88
GEN VERSION >>> #<ctx #323
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #325
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07d78				bits 64
d07d78			stub_7f93aed07d78_1:
d07d78 fec1			inc	cl
d07d7a			stub_7f93aed07d78_0:
d07d7a e88ef248ff		call	do_callback_handler
d07d7f 61e49e0200000000
(obj= #(#<procedure #327>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19ccf8				bits 64
19ccf8			version777:
19ccf8 ff3424			push	qword [rsp]
19ccfb			version778:
19ccfb 50			push	rax
19ccfc 53			push	rbx
19ccfd 48b84000fcb0937f
19cd05 0000			mov	rax,140272306225216
19cd07 488b18			mov	rbx,[rax]
19cd0a 48ffc3			inc	rbx
19cd0d 488918			mov	[rax],rbx
19cd10 5b			pop	rbx
19cd11 58			pop	rax
19cd12 488b0424			mov	rax,[rsp]
19cd16 4889c3			mov	rbx,rax
19cd19 4883e003			and	rax,byte 3
19cd1d 4883f801			cmp	rax,byte 1
19cd21 750e			jne	short patchable_jump40
19cd23 488b43ff			mov	rax,[rbx-1]
19cd27 4825f8000000		and	rax,248
19cd2d 4883f808			cmp	rax,byte 8
19cd31			patchable_jump40:
19cd31 0f8443b0b600		je	stub_7f93aed07d78_0
19cd37 e93cb0b600		jmp	stub_7f93aed07d78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cd31 -> 7f93aed07d78
GEN VERSION >>> #<ctx #328
                      stack: (pair pair
                                   number
                                   pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #329
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19cd37				bits 64
19cd37 90		version779:
19cd38 ff742428			push	qword [rsp+40]
19cd3c			version780:
19cd3c 58			pop	rax
19cd3d 5b			pop	rbx
19cd3e 48894307			mov	[rbx+7],rax
19cd42 6aee			push	qword byte -18
19cd44			version781:
19cd44 ff742410			push	qword [rsp+16]
19cd48			version782:
19cd48 48c7c004000000		mov	rax,dword 4
19cd4f 50			push	rax
19cd50			version783:
19cd50			version784:
19cd50			version785:
19cd50 58			pop	rax
19cd51 48290424			sub	[rsp],rax
19cd55 0f806dbdb600		jo	stub_7f93aed08ac8_0
19cd5b			version786:
19cd5b ff742410			push	qword [rsp+16]
19cd5f			version787:
19cd5f			version788:
19cd5f 58			pop	rax
19cd60 488b400f			mov	rax,[rax+15]
19cd64 50			push	rax
19cd65			version789:
19cd65 488b442408		mov	rax,[rsp+8]
19cd6a 4889442420		mov	[rsp+32],rax
19cd6f 488b0424			mov	rax,[rsp]
19cd73 4889442418		mov	[rsp+24],rax
19cd78 4883c418			add	rsp,byte 24
19cd7c e93dffffff		jmp	version770
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #323
                      stack: (unknown number
                                      pair
                                      unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #324
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #325
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ccf2 -> 7f93ae19cd81
------------------------------------------------------------------------
d07d88				bits 64
d07d88			stub_7f93aed07d88_1:
d07d88 fec1			inc	cl
d07d8a			stub_7f93aed07d88_0:
d07d8a e87ef248ff		call	do_callback_handler
d07d8f 21e99e0200000000
(obj= #(#<procedure #330>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cd81				bits 64
19cd81 909090		version790:
19cd84 ff3424			push	qword [rsp]
19cd87			version791:
19cd87 58			pop	rax
19cd88 4883c410			add	rsp,byte 16
19cd8c 50			push	rax
19cd8d			version792:
19cd8d 50			push	rax
19cd8e 53			push	rbx
19cd8f 48b84000fcb0937f
19cd97 0000			mov	rax,140272306225216
19cd99 488b18			mov	rbx,[rax]
19cd9c 48ffc3			inc	rbx
19cd9f 488918			mov	[rax],rbx
19cda2 5b			pop	rbx
19cda3 58			pop	rax
19cda4 488b0424			mov	rax,[rsp]
19cda8 4889c3			mov	rbx,rax
19cdab 4883e003			and	rax,byte 3
19cdaf 4883f801			cmp	rax,byte 1
19cdb3 750e			jne	short patchable_jump41
19cdb5 488b43ff			mov	rax,[rbx-1]
19cdb9 4825f8000000		and	rax,248
19cdbf 4883f808			cmp	rax,byte 8
19cdc3			patchable_jump41:
19cdc3 0f84c1afb600		je	stub_7f93aed07d88_0
19cdc9 e9baafb600		jmp	stub_7f93aed07d88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cdc3 -> 7f93aed07d88
GEN VERSION >>> #<ctx #331
                      stack: (pair pair
                                   unknown
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07d68				bits 64
d07d68			stub_7f93aed07d68_1:
d07d68 fec1			inc	cl
d07d6a			stub_7f93aed07d68_0:
d07d6a e89ef248ff		call	do_callback_handler
d07d6f 91ea9e0200000000
(obj= #(#<procedure #332>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cdc9				bits 64
19cdc9 909090		version793:
19cdcc 6afe			push	qword byte -2
19cdce			version794:
19cdce ff742418			push	qword [rsp+24]
19cdd2			version795:
19cdd2 50			push	rax
19cdd3 53			push	rbx
19cdd4 48b84000fcb0937f
19cddc 0000			mov	rax,140272306225216
19cdde 488b18			mov	rbx,[rax]
19cde1 48ffc3			inc	rbx
19cde4 488918			mov	[rax],rbx
19cde7 5b			pop	rbx
19cde8 58			pop	rax
19cde9 488b0424			mov	rax,[rsp]
19cded 4889c3			mov	rbx,rax
19cdf0 4883e003			and	rax,byte 3
19cdf4 4883f801			cmp	rax,byte 1
19cdf8 750e			jne	short patchable_jump42
19cdfa 488b43ff			mov	rax,[rbx-1]
19cdfe 4825f8000000		and	rax,248
19ce04 4883f808			cmp	rax,byte 8
19ce08			patchable_jump42:
19ce08 0f845cafb600		je	stub_7f93aed07d68_0
19ce0e e955afb600		jmp	stub_7f93aed07d68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19ce08 -> 7f93aed07d68
GEN VERSION >>> #<ctx #333
                      stack: (pair retAddr
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #334
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07d58				bits 64
d07d58			stub_7f93aed07d58_0:
d07d58 e80af348ff		call	do_callback_cont_handler
d07d5d 31eb9e0200000000
(obj= #(#<procedure #335>))
------------------------------------------------------------------------
19ce0e				bits 64
19ce0e 9090		version796:
19ce10 58			pop	rax
19ce11 488b4007			mov	rax,[rax+7]
19ce15 50			push	rax
19ce16			version797:
19ce16 41ffb278020000		push	qword [r10+632]
19ce1d			version798:
19ce1d			version799:
19ce1d 48c7c080eb9e02		mov	rax,dword 43969408
19ce24 4889442410		mov	[rsp+16],rax
19ce29			version800:
19ce29 488b0424			mov	rax,[rsp]
19ce2d 48c7c704000000		mov	rdi,dword 4
19ce34 488b4007			mov	rax,[rax+7]
19ce38 488b4008			mov	rax,[rax+8]
19ce3c ffe0			jmp	rax
------------------------------------------------------------------------
d07d48				bits 64
d07d48			stub_7f93aed07d48_0:
d07d48 e8c0f248ff		call	do_callback_handler
d07d4d a1ec9e0200000000
(obj= #(#<procedure #336>))
------------------------------------------------------------------------
d07d38				bits 64
d07d38			stub_7f93aed07d38_0:
d07d38 e8d0f248ff		call	do_callback_handler
d07d3d f1ec9e0200000000
(obj= #(#<procedure #337>))
------------------------------------------------------------------------
d07d28				bits 64
d07d28			stub_7f93aed07d28_1:
d07d28 fec1			inc	cl
d07d2a			stub_7f93aed07d28_0:
d07d2a e8def248ff		call	do_callback_handler
d07d2f 41ed9e0200000000
(obj= #(#<procedure #338>))
------------------------------------------------------------------------
19ce3e				bits 64
19ce3e 9090		continuation_11:
19ce40 50			push	rax
19ce41			version801:
19ce41			version802:
19ce41 48c7c008000000		mov	rax,dword 8
19ce48 50			push	rax
19ce49			version803:
19ce49			version804:
19ce49 5b			pop	rbx
19ce4a 58			pop	rax
19ce4b 48c1f802			sar	rax,2
19ce4f 48c1fb02			sar	rbx,2
19ce53 4883fb00			cmp	rbx,byte 0
19ce57 0f84ebaeb600		je	stub_7f93aed07d48_0
19ce5d 4899			cqo
19ce5f 48f7fb			idiv	rbx
19ce62 48c1e002			shl	rax,2
19ce66 50			push	rax
19ce67			version805:
19ce67			version806:
19ce67 ff3424			push	qword [rsp]
19ce6a			version807:
19ce6a 48c7c000000000		mov	rax,dword 0
19ce71 50			push	rax
19ce72			version808:
19ce72			version809:
19ce72			version810:
19ce72 488b442408		mov	rax,[rsp+8]
19ce77 483b0424			cmp	rax,[rsp]
19ce7b			label-jump9:
19ce7b 0f85b7aeb600		jne	stub_7f93aed07d38_0
19ce81			version811:
19ce81 4883c410			add	rsp,byte 16
19ce85 6afa			push	qword byte -6
19ce87			version812:
19ce87 58			pop	rax
19ce88 4883f8fe			cmp	rax,byte -2
19ce8c			patchable_jump43:
19ce8c 0f8498aeb600		je	stub_7f93aed07d28_0
19ce92 e991aeb600		jmp	stub_7f93aed07d28_1
GEN VERSION >>> #<ctx #339
                      stack: (number number
                                     number
                                     pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #340
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #341
                                    type: local
                                    offset: 0
                                    pos: (9 0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ce7b -> 7f93ae19ce97
------------------------------------------------------------------------
19ce97				bits 64
19ce97 90		version813:
19ce98 4883c410			add	rsp,byte 16
19ce9c 6afe			push	qword byte -2
19ce9e ebe7			jmp	short version812
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #342
                      stack: (number pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ce8c -> 7f93ae19cea0
------------------------------------------------------------------------
d07d18				bits 64
d07d18			stub_7f93aed07d18_1:
d07d18 fec1			inc	cl
d07d1a			stub_7f93aed07d18_0:
d07d1a e8eef248ff		call	do_callback_handler
d07d1f 31ee9e0200000000
(obj= #(#<procedure #345>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cea0				bits 64
19cea0			version814:
19cea0 ff3424			push	qword [rsp]
19cea3			version815:
19cea3 ff742420			push	qword [rsp+32]
19cea7			version816:
19cea7 50			push	rax
19cea8 53			push	rbx
19cea9 48b84000fcb0937f
19ceb1 0000			mov	rax,140272306225216
19ceb3 488b18			mov	rbx,[rax]
19ceb6 48ffc3			inc	rbx
19ceb9 488918			mov	[rax],rbx
19cebc 5b			pop	rbx
19cebd 58			pop	rax
19cebe 488b0424			mov	rax,[rsp]
19cec2 4889c3			mov	rbx,rax
19cec5 4883e003			and	rax,byte 3
19cec9 4883f801			cmp	rax,byte 1
19cecd 750e			jne	short patchable_jump44
19cecf 488b43ff			mov	rax,[rbx-1]
19ced3 4825f8000000		and	rax,248
19ced9 4883f808			cmp	rax,byte 8
19cedd			patchable_jump44:
19cedd 0f8437aeb600		je	stub_7f93aed07d18_0
19cee3 e930aeb600		jmp	stub_7f93aed07d18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cedd -> 7f93aed07d18
GEN VERSION >>> #<ctx #346
                      stack: (pair number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #348
                                     type: local
                                     offset: 5
                                     pos: (10 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07d08				bits 64
d07d08			stub_7f93aed07d08_0:
d07d08 e800f348ff		call	do_callback_handler
d07d0d d1ee9e0200000000
(obj= #(#<procedure #350>))
------------------------------------------------------------------------
d07cf8				bits 64
d07cf8			stub_7f93aed07cf8_1:
d07cf8 fec1			inc	cl
d07cfa			stub_7f93aed07cf8_0:
d07cfa e80ef348ff		call	do_callback_handler
d07cff 21ef9e0200000000
(obj= #(#<procedure #351>))
------------------------------------------------------------------------
19cee3				bits 64
19cee3 90		version817:
19cee4 58			pop	rax
19cee5 488b4007			mov	rax,[rax+7]
19cee9 50			push	rax
19ceea			version818:
19ceea			version819:
19ceea ff742408			push	qword [rsp+8]
19ceee			version820:
19ceee 48c7c004000000		mov	rax,dword 4
19cef5 50			push	rax
19cef6			version821:
19cef6			version822:
19cef6			version823:
19cef6 488b442408		mov	rax,[rsp+8]
19cefb 483b0424			cmp	rax,[rsp]
19ceff			label-jump10:
19ceff 0f8503aeb600		jne	stub_7f93aed07d08_0
19cf05			version824:
19cf05 4883c410			add	rsp,byte 16
19cf09 6afa			push	qword byte -6
19cf0b			version825:
19cf0b 58			pop	rax
19cf0c 4883f8fe			cmp	rax,byte -2
19cf10			patchable_jump45:
19cf10 0f84e4adb600		je	stub_7f93aed07cf8_0
19cf16 e9ddadb600		jmp	stub_7f93aed07cf8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #352
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ce8				bits 64
d07ce8			stub_7f93aed07ce8_1:
d07ce8 fec1			inc	cl
d07cea			stub_7f93aed07ce8_0:
d07cea e81ef348ff		call	do_callback_handler
d07cef c1ef9e0200000000
(obj= #(#<procedure #356>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cf16				bits 64
19cf16 9090		version826:
19cf18 ff3424			push	qword [rsp]
19cf1b			version827:
19cf1b 50			push	rax
19cf1c 53			push	rbx
19cf1d 48b84000fcb0937f
19cf25 0000			mov	rax,140272306225216
19cf27 488b18			mov	rbx,[rax]
19cf2a 48ffc3			inc	rbx
19cf2d 488918			mov	[rax],rbx
19cf30 5b			pop	rbx
19cf31 58			pop	rax
19cf32 488b0424			mov	rax,[rsp]
19cf36 4889c3			mov	rbx,rax
19cf39 4883e003			and	rax,byte 3
19cf3d 4883f801			cmp	rax,byte 1
19cf41 750e			jne	short patchable_jump46
19cf43 488b43ff			mov	rax,[rbx-1]
19cf47 4825f8000000		and	rax,248
19cf4d 4883f808			cmp	rax,byte 8
19cf51			patchable_jump46:
19cf51 0f8493adb600		je	stub_7f93aed07ce8_0
19cf57 e98cadb600		jmp	stub_7f93aed07ce8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cf51 -> 7f93aed07ce8
GEN VERSION >>> #<ctx #357
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #358
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19cf57				bits 64
19cf57 90		version828:
19cf58 58			pop	rax
19cf59 488b400f			mov	rax,[rax+15]
19cf5d 50			push	rax
19cf5e			version829:
19cf5e			version830:
19cf5e ff742408			push	qword [rsp+8]
19cf62			version831:
19cf62			version832:
19cf62 6af6			push	qword byte -10
19cf64			version833:
19cf64 58			pop	rax
19cf65 5b			pop	rbx
19cf66 4889430f			mov	[rbx+15],rax
19cf6a 6aee			push	qword byte -18
19cf6c			version834:
19cf6c ff742408			push	qword [rsp+8]
19cf70			version835:
19cf70 58			pop	rax
19cf71 4883c410			add	rsp,byte 16
19cf75 50			push	rax
19cf76			version836:
19cf76 58			pop	rax
19cf77 4883c410			add	rsp,byte 16
19cf7b 50			push	rax
19cf7c e9ddfbffff		jmp	version741
GEN VERSION >>> #<ctx #359
                      stack: (number number
                                     unknown
                                     number
                                     number
                                     pair
                                     pair
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #360
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ceff -> 7f93ae19cf81
------------------------------------------------------------------------
19cf81				bits 64
19cf81 909090		version837:
19cf84 4883c410			add	rsp,byte 16
19cf88 6afe			push	qword byte -2
19cf8a e97cffffff		jmp	version825
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #352
                      stack: (unknown number
                                      number
                                      pair
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #354
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19cf10 -> 7f93ae19cf8f
------------------------------------------------------------------------
d07cf8				bits 64
d07cf8			stub_7f93aed07cf8_1:
d07cf8 fec1			inc	cl
d07cfa			stub_7f93aed07cf8_0:
d07cfa e80ef348ff		call	do_callback_handler
d07cff 01f19e0200000000
(obj= #(#<procedure #361>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19cf8f				bits 64
19cf8f 90		version838:
19cf90 ff3424			push	qword [rsp]
19cf93			version839:
19cf93 50			push	rax
19cf94 53			push	rbx
19cf95 48b84000fcb0937f
19cf9d 0000			mov	rax,140272306225216
19cf9f 488b18			mov	rbx,[rax]
19cfa2 48ffc3			inc	rbx
19cfa5 488918			mov	[rax],rbx
19cfa8 5b			pop	rbx
19cfa9 58			pop	rax
19cfaa 488b0424			mov	rax,[rsp]
19cfae 4889c3			mov	rbx,rax
19cfb1 4883e003			and	rax,byte 3
19cfb5 4883f801			cmp	rax,byte 1
19cfb9 750e			jne	short patchable_jump47
19cfbb 488b43ff			mov	rax,[rbx-1]
19cfbf 4825f8000000		and	rax,248
19cfc5 4883f808			cmp	rax,byte 8
19cfc9			patchable_jump47:
19cfc9 0f842badb600		je	stub_7f93aed07cf8_0
19cfcf e924adb600		jmp	stub_7f93aed07cf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19cfc9 -> 7f93aed07cf8
GEN VERSION >>> #<ctx #362
                      stack: (pair pair
                                   number
                                   number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #353
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #363
                                    type: local
                                    offset: 10
                                    pos: (11 10)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #347
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #355
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #349
                                    type: local
                                    offset: 0
                                    pos: (9 4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19cfcf				bits 64
19cfcf 90		version840:
19cfd0 ff742438			push	qword [rsp+56]
19cfd4			version841:
19cfd4 58			pop	rax
19cfd5 5b			pop	rbx
19cfd6 48894307			mov	[rbx+7],rax
19cfda 6aee			push	qword byte -18
19cfdc			version842:
19cfdc ff742410			push	qword [rsp+16]
19cfe0			version843:
19cfe0 48c7c004000000		mov	rax,dword 4
19cfe7 50			push	rax
19cfe8			version844:
19cfe8			version845:
19cfe8			version846:
19cfe8 58			pop	rax
19cfe9 48290424			sub	[rsp],rax
19cfed 0f80f5bab600		jo	stub_7f93aed08ae8_0
19cff3			version847:
19cff3 ff742410			push	qword [rsp+16]
19cff7			version848:
19cff7			version849:
19cff7 58			pop	rax
19cff8 488b400f			mov	rax,[rax+15]
19cffc 50			push	rax
19cffd			version850:
19cffd 488b442408		mov	rax,[rsp+8]
19d002 4889442420		mov	[rsp+32],rax
19d007 488b0424			mov	rax,[rsp]
19d00b 4889442418		mov	[rsp+24],rax
19d010 4883c418			add	rsp,byte 24
19d014 e9d1feffff		jmp	version819
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #310
                      stack: (unknown unknown
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #312
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19cbd5 -> 7f93ae19d019
------------------------------------------------------------------------
d07ea8				bits 64
d07ea8			stub_7f93aed07ea8_0:
d07ea8 e860f148ff		call	do_callback_handler
d07ead f1f19e0200000000
(obj= #(#<procedure #364>))
------------------------------------------------------------------------
d07cd8				bits 64
d07cd8			stub_7f93aed07cd8_1:
d07cd8 fec1			inc	cl
d07cda			stub_7f93aed07cd8_0:
d07cda e82ef348ff		call	do_callback_handler
d07cdf 41f29e0200000000
(obj= #(#<procedure #365>))
------------------------------------------------------------------------
19d019				bits 64
19d019 909090		version851:
19d01c 6afe			push	qword byte -2
19d01e			version852:
19d01e 58			pop	rax
19d01f 4883c410			add	rsp,byte 16
19d023 50			push	rax
19d024			version853:
19d024 ff742408			push	qword [rsp+8]
19d028			version854:
19d028 48c7c004000000		mov	rax,dword 4
19d02f 50			push	rax
19d030			version855:
19d030			version856:
19d030			version857:
19d030 58			pop	rax
19d031 48290424			sub	[rsp],rax
19d035 0f80bdbab600		jo	stub_7f93aed08af8_0
19d03b			version858:
19d03b 488b0424			mov	rax,[rsp]
19d03f 4889442410		mov	[rsp+16],rax
19d044 4883c410			add	rsp,byte 16
19d048			version859:
19d048 ff3424			push	qword [rsp]
19d04b			version860:
19d04b 48c7c000000000		mov	rax,dword 0
19d052 50			push	rax
19d053			version861:
19d053			version862:
19d053			version863:
19d053 488b442408		mov	rax,[rsp+8]
19d058 483b0424			cmp	rax,[rsp]
19d05c			label-jump11:
19d05c 0f8546aeb600		jne	stub_7f93aed07ea8_0
19d062			version864:
19d062 4883c410			add	rsp,byte 16
19d066 6afa			push	qword byte -6
19d068			version865:
19d068 58			pop	rax
19d069 4883f8fe			cmp	rax,byte -2
19d06d			patchable_jump48:
19d06d 0f8467acb600		je	stub_7f93aed07cd8_0
19d073 e960acb600		jmp	stub_7f93aed07cd8_1
GEN VERSION >>> #<ctx #366
                      stack: (number number
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((i . #<identifier #367
                                    type: local
                                    offset: 4
                                    pos: (5 4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #368
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d05c -> 7f93ae19d078
------------------------------------------------------------------------
19d078				bits 64
19d078			version866:
19d078 4883c410			add	rsp,byte 16
19d07c 6afe			push	qword byte -2
19d07e ebe8			jmp	short version865
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #369
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #368
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d06d -> 7f93ae19d080
------------------------------------------------------------------------
d07cc8				bits 64
d07cc8			stub_7f93aed07cc8_1:
d07cc8 fec1			inc	cl
d07cca			stub_7f93aed07cc8_0:
d07cca e83ef348ff		call	do_callback_handler
d07ccf f1e59e0200000000
(obj= #(#<procedure #371>))
------------------------------------------------------------------------
19d080				bits 64
19d080			version867:
19d080 ff742408			push	qword [rsp+8]
19d084			version868:
19d084			version869:
19d084 58			pop	rax
19d085 488b4007			mov	rax,[rax+7]
19d089 50			push	rax
19d08a			version870:
19d08a			version871:
19d08a 50			push	rax
19d08b 53			push	rbx
19d08c 48b84000fcb0937f
19d094 0000			mov	rax,140272306225216
19d096 488b18			mov	rbx,[rax]
19d099 48ffc3			inc	rbx
19d09c 488918			mov	[rax],rbx
19d09f 5b			pop	rbx
19d0a0 58			pop	rax
19d0a1 48c7c0f6ffffff		mov	rax,dword -10
19d0a8 48390424			cmp	[rsp],rax
19d0ac 48c7c0faffffff		mov	rax,dword -6
19d0b3 7407			je	short done10
19d0b5 48c7c0feffffff		mov	rax,dword -2
19d0bc			done10:
19d0bc 48890424			mov	[rsp],rax
19d0c0			version872:
19d0c0 58			pop	rax
19d0c1 4883f8fe			cmp	rax,byte -2
19d0c5			patchable_jump49:
19d0c5 0f84ffabb600		je	stub_7f93aed07cc8_0
19d0cb e9f8abb600		jmp	stub_7f93aed07cc8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #372
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #373
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07cb8				bits 64
d07cb8			stub_7f93aed07cb8_1:
d07cb8 fec1			inc	cl
d07cba			stub_7f93aed07cb8_0:
d07cba e84ef348ff		call	do_callback_handler
d07cbf 71fd9e0200000000
(obj= #(#<procedure #374>))
------------------------------------------------------------------------
19d0cb				bits 64
19d0cb 90		version873:
19d0cc ff742408			push	qword [rsp+8]
19d0d0			version874:
19d0d0			version875:
19d0d0 ff3424			push	qword [rsp]
19d0d3			version876:
19d0d3 48c7c0feffffff		mov	rax,dword -2
19d0da 48890424			mov	[rsp],rax
19d0de			version877:
19d0de 58			pop	rax
19d0df 4883f8fe			cmp	rax,byte -2
19d0e3			patchable_jump50:
19d0e3 0f84d1abb600		je	stub_7f93aed07cb8_0
19d0e9 e9caabb600		jmp	stub_7f93aed07cb8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d0e3 -> 7f93aed07cb8
GEN VERSION >>> #<ctx #375
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #376
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #377
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ca8				bits 64
d07ca8			stub_7f93aed07ca8_1:
d07ca8 fec1			inc	cl
d07caa			stub_7f93aed07ca8_0:
d07caa e85ef348ff		call	do_callback_handler
d07caf 21dd9e0200000000
(obj= #(#<procedure #378>))
------------------------------------------------------------------------
19d0e9				bits 64
19d0e9 909090		version878:
19d0ec ff3424			push	qword [rsp]
19d0ef			version879:
19d0ef			version880:
19d0ef 58			pop	rax
19d0f0 488b4007			mov	rax,[rax+7]
19d0f4 50			push	rax
19d0f5			version881:
19d0f5			version882:
19d0f5 50			push	rax
19d0f6 53			push	rbx
19d0f7 48b84000fcb0937f
19d0ff 0000			mov	rax,140272306225216
19d101 488b18			mov	rbx,[rax]
19d104 48ffc3			inc	rbx
19d107 488918			mov	[rax],rbx
19d10a 5b			pop	rbx
19d10b 58			pop	rax
19d10c 48c7c0f6ffffff		mov	rax,dword -10
19d113 48390424			cmp	[rsp],rax
19d117 48c7c0faffffff		mov	rax,dword -6
19d11e 7407			je	short done11
19d120 48c7c0feffffff		mov	rax,dword -2
19d127			done11:
19d127 48890424			mov	[rsp],rax
19d12b			version883:
19d12b 58			pop	rax
19d12c 4883f8fe			cmp	rax,byte -2
19d130			patchable_jump51:
19d130 0f8474abb600		je	stub_7f93aed07ca8_0
19d136 e96dabb600		jmp	stub_7f93aed07ca8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<ctx #379
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #380
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #381
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07c98				bits 64
d07c98			stub_7f93aed07c98_0:
d07c98 e870f348ff		call	do_callback_handler
d07c9d f1e29e0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d07c88				bits 64
d07c88			stub_7f93aed07c88_1:
d07c88 fec1			inc	cl
d07c8a			stub_7f93aed07c88_0:
d07c8a e87ef348ff		call	do_callback_handler
d07c8f 01e29e0200000000
(obj= #(#<procedure #382>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19d136				bits 64
19d136 9090		version884:
19d138 ff3424			push	qword [rsp]
19d13b			version885:
19d13b			version886:
19d13b 6af6			push	qword byte -10
19d13d			version887:
19d13d 6af6			push	qword byte -10
19d13f			version888:
19d13f 498d4424e8		lea	rax,[r12-24]
19d144 49bf0800fcb0937f
19d14c 0000			mov	r15,140272306225160
19d14e 493b4728			cmp	rax,[r15+40]
19d152 7d38			jge	short alloc-ok126
19d154 48c7c018000000		mov	rax,dword 24
19d15b 57			push	rdi
19d15c 56			push	rsi
19d15d 52			push	rdx
19d15e 51			push	rcx
19d15f 4150			push	r8
19d161 4151			push	r9
19d163 4152			push	r10
19d165 4153			push	r11
19d167 50			push	rax
19d168 4889e7			mov	rdi,rsp
19d16b 4883e4f0			and	rsp,byte -16
19d16f 4883ec08			sub	rsp,byte 8
19d173 57			push	rdi
19d174 e8570f6d01		call	gc
19d179 5c			pop	rsp
19d17a 4989c4			mov	r12,rax
19d17d 58			pop	rax
19d17e 415b			pop	r11
19d180 415a			pop	r10
19d182 4159			pop	r9
19d184 4158			pop	r8
19d186 59			pop	rcx
19d187 5a			pop	rdx
19d188 5e			pop	rsi
19d189 5f			pop	rdi
19d18a eb04			jmp	short alloc-end126
19d18c			alloc-ok126:
19d18c 4983ec18			sub	r12,byte 24
19d190			alloc-end126:
19d190 48c7c00e030000		mov	rax,dword 782
19d197 49890424			mov	[r12],rax
19d19b 5b			pop	rbx
19d19c 58			pop	rax
19d19d 4989442408		mov	[r12+8],rax
19d1a2 49895c2410		mov	[r12+16],rbx
19d1a7 4c89e0			mov	rax,r12
19d1aa 4883c001			add	rax,byte 1
19d1ae 50			push	rax
19d1af			version889:
19d1af 58			pop	rax
19d1b0 5b			pop	rbx
19d1b1 48894307			mov	[rbx+7],rax
19d1b5 6aee			push	qword byte -18
19d1b7			version890:
19d1b7 6afe			push	qword byte -2
19d1b9			version891:
19d1b9 ff742410			push	qword [rsp+16]
19d1bd			version892:
19d1bd			version893:
19d1bd 58			pop	rax
19d1be 488b4007			mov	rax,[rax+7]
19d1c2 50			push	rax
19d1c3			version894:
19d1c3 ff742438			push	qword [rsp+56]
19d1c7			version895:
19d1c7 6af6			push	qword byte -10
19d1c9			version896:
19d1c9			version897:
19d1c9 ff742408			push	qword [rsp+8]
19d1cd			version898:
19d1cd 48c7c000000000		mov	rax,dword 0
19d1d4 50			push	rax
19d1d5			version899:
19d1d5 50			push	rax
19d1d6 53			push	rbx
19d1d7 48b84000fcb0937f
19d1df 0000			mov	rax,140272306225216
19d1e1 488b18			mov	rbx,[rax]
19d1e4 48ffc3			inc	rbx
19d1e7 488918			mov	[rax],rbx
19d1ea 5b			pop	rbx
19d1eb 58			pop	rax
19d1ec 48c7c003000000		mov	rax,dword 3
19d1f3 4823442408		and	rax,[rsp+8]
19d1f8			patchable_jump52:
19d1f8 0f848caab600		je	stub_7f93aed07c88_0
19d1fe e985aab600		jmp	stub_7f93aed07c88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d1f8 -> 7f93aed07c88
GEN VERSION >>> #<ctx #383
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #384
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07c78				bits 64
d07c78			stub_7f93aed07c78_0:
d07c78 e890f348ff		call	do_callback_handler
d07c7d d1449e0200000000
(obj= #(#<procedure #389>))
------------------------------------------------------------------------
d07c68				bits 64
d07c68			stub_7f93aed07c68_1:
d07c68 fec1			inc	cl
d07c6a			stub_7f93aed07c68_0:
d07c6a e89ef348ff		call	do_callback_handler
d07c6f e1ea9e0200000000
(obj= #(#<procedure #390>))
------------------------------------------------------------------------
19d1fe				bits 64
19d1fe 9090		version900:
19d200			version901:
19d200 488b442408		mov	rax,[rsp+8]
19d205 483b0424			cmp	rax,[rsp]
19d209			label-jump12:
19d209 0f8569aab600		jne	stub_7f93aed07c78_0
19d20f			version902:
19d20f 4883c410			add	rsp,byte 16
19d213 6afa			push	qword byte -6
19d215			version903:
19d215 58			pop	rax
19d216 4883f8fe			cmp	rax,byte -2
19d21a			patchable_jump53:
19d21a 0f844aaab600		je	stub_7f93aed07c68_0
19d220 e943aab600		jmp	stub_7f93aed07c68_1
GEN VERSION >>> #<ctx #383
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #384
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d209 -> 7f93ae19d225
------------------------------------------------------------------------
19d225				bits 64
19d225 909090		version904:
19d228 4883c410			add	rsp,byte 16
19d22c 6afe			push	qword byte -2
19d22e ebe5			jmp	short version903
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #391
                      stack: (null number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #392
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #385
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d21a -> 7f93ae19d230
------------------------------------------------------------------------
d07c58				bits 64
d07c58			stub_7f93aed07c58_0:
d07c58 e8b0f348ff		call	do_callback_handler
d07c5d e1ed9e0200000000
(obj= #(#<procedure #393>))
------------------------------------------------------------------------
d07c48				bits 64
d07c48			stub_7f93aed07c48_1:
d07c48 fec1			inc	cl
d07c4a			stub_7f93aed07c48_0:
d07c4a e8bef348ff		call	do_callback_handler
d07c4f 81ee9e0200000000
(obj= #(#<procedure #394>))
------------------------------------------------------------------------
19d230				bits 64
19d230			version905:
19d230 ff742408			push	qword [rsp+8]
19d234			version906:
19d234 48c7c004000000		mov	rax,dword 4
19d23b 50			push	rax
19d23c			version907:
19d23c			version908:
19d23c			version909:
19d23c 58			pop	rax
19d23d 48290424			sub	[rsp],rax
19d241 0f8051aab600		jo	stub_7f93aed07c98_0
19d247			version910:
19d247 6af6			push	qword byte -10
19d249			version911:
19d249 ff742410			push	qword [rsp+16]
19d24d			version912:
19d24d 498d4424e8		lea	rax,[r12-24]
19d252 49bf0800fcb0937f
19d25a 0000			mov	r15,140272306225160
19d25c 493b4728			cmp	rax,[r15+40]
19d260 7d38			jge	short alloc-ok127
19d262 48c7c018000000		mov	rax,dword 24
19d269 57			push	rdi
19d26a 56			push	rsi
19d26b 52			push	rdx
19d26c 51			push	rcx
19d26d 4150			push	r8
19d26f 4151			push	r9
19d271 4152			push	r10
19d273 4153			push	r11
19d275 50			push	rax
19d276 4889e7			mov	rdi,rsp
19d279 4883e4f0			and	rsp,byte -16
19d27d 4883ec08			sub	rsp,byte 8
19d281 57			push	rdi
19d282 e8490e6d01		call	gc
19d287 5c			pop	rsp
19d288 4989c4			mov	r12,rax
19d28b 58			pop	rax
19d28c 415b			pop	r11
19d28e 415a			pop	r10
19d290 4159			pop	r9
19d292 4158			pop	r8
19d294 59			pop	rcx
19d295 5a			pop	rdx
19d296 5e			pop	rsi
19d297 5f			pop	rdi
19d298 eb04			jmp	short alloc-end127
19d29a			alloc-ok127:
19d29a 4983ec18			sub	r12,byte 24
19d29e			alloc-end127:
19d29e 48c7c00e030000		mov	rax,dword 782
19d2a5 49890424			mov	[r12],rax
19d2a9 5b			pop	rbx
19d2aa 58			pop	rax
19d2ab 4989442408		mov	[r12+8],rax
19d2b0 49895c2410		mov	[r12+16],rbx
19d2b5 4c89e0			mov	rax,r12
19d2b8 4883c001			add	rax,byte 1
19d2bc 50			push	rax
19d2bd			version913:
19d2bd 488b442408		mov	rax,[rsp+8]
19d2c2 4889442418		mov	[rsp+24],rax
19d2c7 488b0424			mov	rax,[rsp]
19d2cb 4889442410		mov	[rsp+16],rax
19d2d0 4883c410			add	rsp,byte 16
19d2d4			version914:
19d2d4 ff742408			push	qword [rsp+8]
19d2d8			version915:
19d2d8 48c7c000000000		mov	rax,dword 0
19d2df 50			push	rax
19d2e0			version916:
19d2e0			version917:
19d2e0			version918:
19d2e0 488b442408		mov	rax,[rsp+8]
19d2e5 483b0424			cmp	rax,[rsp]
19d2e9			label-jump13:
19d2e9 0f8569a9b600		jne	stub_7f93aed07c58_0
19d2ef			version919:
19d2ef 4883c410			add	rsp,byte 16
19d2f3 6afa			push	qword byte -6
19d2f5			version920:
19d2f5 58			pop	rax
19d2f6 4883f8fe			cmp	rax,byte -2
19d2fa			patchable_jump54:
19d2fa 0f844aa9b600		je	stub_7f93aed07c48_0
19d300 e943a9b600		jmp	stub_7f93aed07c48_1
GEN VERSION >>> #<ctx #395
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     void
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #396
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d2e9 -> 7f93ae19d305
------------------------------------------------------------------------
19d305				bits 64
19d305 909090		version921:
19d308 4883c410			add	rsp,byte 16
19d30c 6afe			push	qword byte -2
19d30e ebe5			jmp	short version920
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #398
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #399
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d2fa -> 7f93ae19d310
------------------------------------------------------------------------
19d310				bits 64
19d310			version922:
19d310 ff742408			push	qword [rsp+8]
19d314			version923:
19d314 48c7c004000000		mov	rax,dword 4
19d31b 50			push	rax
19d31c			version924:
19d31c			version925:
19d31c			version926:
19d31c 58			pop	rax
19d31d 48290424			sub	[rsp],rax
19d321 0f8071a9b600		jo	stub_7f93aed07c98_0
19d327			version927:
19d327 6af6			push	qword byte -10
19d329			version928:
19d329 ff742410			push	qword [rsp+16]
19d32d			version929:
19d32d 498d4424e8		lea	rax,[r12-24]
19d332 49bf0800fcb0937f
19d33a 0000			mov	r15,140272306225160
19d33c 493b4728			cmp	rax,[r15+40]
19d340 7d38			jge	short alloc-ok128
19d342 48c7c018000000		mov	rax,dword 24
19d349 57			push	rdi
19d34a 56			push	rsi
19d34b 52			push	rdx
19d34c 51			push	rcx
19d34d 4150			push	r8
19d34f 4151			push	r9
19d351 4152			push	r10
19d353 4153			push	r11
19d355 50			push	rax
19d356 4889e7			mov	rdi,rsp
19d359 4883e4f0			and	rsp,byte -16
19d35d 4883ec08			sub	rsp,byte 8
19d361 57			push	rdi
19d362 e8690d6d01		call	gc
19d367 5c			pop	rsp
19d368 4989c4			mov	r12,rax
19d36b 58			pop	rax
19d36c 415b			pop	r11
19d36e 415a			pop	r10
19d370 4159			pop	r9
19d372 4158			pop	r8
19d374 59			pop	rcx
19d375 5a			pop	rdx
19d376 5e			pop	rsi
19d377 5f			pop	rdi
19d378 eb04			jmp	short alloc-end128
19d37a			alloc-ok128:
19d37a 4983ec18			sub	r12,byte 24
19d37e			alloc-end128:
19d37e 48c7c00e030000		mov	rax,dword 782
19d385 49890424			mov	[r12],rax
19d389 5b			pop	rbx
19d38a 58			pop	rax
19d38b 4989442408		mov	[r12+8],rax
19d390 49895c2410		mov	[r12+16],rbx
19d395 4c89e0			mov	rax,r12
19d398 4883c001			add	rax,byte 1
19d39c 50			push	rax
19d39d			version930:
19d39d 488b442408		mov	rax,[rsp+8]
19d3a2 4889442418		mov	[rsp+24],rax
19d3a7 488b0424			mov	rax,[rsp]
19d3ab 4889442410		mov	[rsp+16],rax
19d3b0 4883c410			add	rsp,byte 16
19d3b4 e91bffffff		jmp	version914
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #398
                      stack: (pair number
                                   unknown
                                   retAddr
                                   void
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #399
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #397
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #386
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #387
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #388
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d300 -> 7f93ae19d3b9
------------------------------------------------------------------------
d07c48				bits 64
d07c48			stub_7f93aed07c48_0:
d07c48 e81af448ff		call	do_callback_cont_handler
d07c4d 61f09e0200000000
(obj= #(#<procedure #400>))
------------------------------------------------------------------------
19d3b9				bits 64
19d3b9 909090		version931:
19d3bc ff3424			push	qword [rsp]
19d3bf			version932:
19d3bf 58			pop	rax
19d3c0 4883c410			add	rsp,byte 16
19d3c4 50			push	rax
19d3c5			version933:
19d3c5 41ffb280030000		push	qword [r10+896]
19d3cc			version934:
19d3cc			version935:
19d3cc 48c7c090f29e02		mov	rax,dword 43971216
19d3d3 4889442418		mov	[rsp+24],rax
19d3d8			version936:
19d3d8 488b0424			mov	rax,[rsp]
19d3dc 49c7c351fa9e02		mov	r11,dword 43973201
19d3e3 488b4007			mov	rax,[rax+7]
19d3e7 488b4020			mov	rax,[rax+32]
19d3eb ffe0			jmp	rax
------------------------------------------------------------------------
d07c38				bits 64
d07c38			stub_7f93aed07c38_1:
d07c38 fec1			inc	cl
d07c3a			stub_7f93aed07c38_0:
d07c3a e8cef348ff		call	do_callback_handler
d07c3f 51f19e0200000000
(obj= #(#<procedure #401>))
------------------------------------------------------------------------
19d3ed				bits 64
19d3ed 909090		continuation_12:
19d3f0 50			push	rax
19d3f1			version937:
19d3f1 ff742410			push	qword [rsp+16]
19d3f5			version938:
19d3f5			version939:
19d3f5 58			pop	rax
19d3f6 488b400f			mov	rax,[rax+15]
19d3fa 50			push	rax
19d3fb			version940:
19d3fb 488b0424			mov	rax,[rsp]
19d3ff 4889442418		mov	[rsp+24],rax
19d404 4883c418			add	rsp,byte 24
19d408			version941:
19d408 ff3424			push	qword [rsp]
19d40b			version942:
19d40b			version943:
19d40b 50			push	rax
19d40c 53			push	rbx
19d40d 48b84000fcb0937f
19d415 0000			mov	rax,140272306225216
19d417 488b18			mov	rbx,[rax]
19d41a 48ffc3			inc	rbx
19d41d 488918			mov	[rax],rbx
19d420 5b			pop	rbx
19d421 58			pop	rax
19d422 48c7c0f6ffffff		mov	rax,dword -10
19d429 48390424			cmp	[rsp],rax
19d42d 48c7c0faffffff		mov	rax,dword -6
19d434 7407			je	short done12
19d436 48c7c0feffffff		mov	rax,dword -2
19d43d			done12:
19d43d 48890424			mov	[rsp],rax
19d441			version944:
19d441 58			pop	rax
19d442 4883f8fe			cmp	rax,byte -2
19d446			patchable_jump55:
19d446 0f84eea7b600		je	stub_7f93aed07c38_0
19d44c e9e7a7b600		jmp	stub_7f93aed07c38_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d446 -> 7f93aed07c38
GEN VERSION >>> #<ctx #402
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #403
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #404
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07c28				bits 64
d07c28			stub_7f93aed07c28_1:
d07c28 fec1			inc	cl
d07c2a			stub_7f93aed07c28_0:
d07c2a e8def348ff		call	do_callback_handler
d07c2f b1f39e0200000000
(obj= #(#<procedure #405>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19d44c				bits 64
19d44c			version945:
19d44c ff3424			push	qword [rsp]
19d44f			version946:
19d44f 50			push	rax
19d450 53			push	rbx
19d451 48b84000fcb0937f
19d459 0000			mov	rax,140272306225216
19d45b 488b18			mov	rbx,[rax]
19d45e 48ffc3			inc	rbx
19d461 488918			mov	[rax],rbx
19d464 5b			pop	rbx
19d465 58			pop	rax
19d466 488b0424			mov	rax,[rsp]
19d46a 4889c3			mov	rbx,rax
19d46d 4883e003			and	rax,byte 3
19d471 4883f801			cmp	rax,byte 1
19d475 750e			jne	short patchable_jump56
19d477 488b43ff			mov	rax,[rbx-1]
19d47b 4825f8000000		and	rax,248
19d481 4883f808			cmp	rax,byte 8
19d485			patchable_jump56:
19d485 0f849fa7b600		je	stub_7f93aed07c28_0
19d48b e998a7b600		jmp	stub_7f93aed07c28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d485 -> 7f93aed07c28
GEN VERSION >>> #<ctx #406
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #407
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #408
                                    type: local
                                    offset: 3
                                    pos: (6 3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d48b -> 7f93ae19d0ef
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #379
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #380
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #381
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d130 -> 7f93ae19d490
------------------------------------------------------------------------
d07ca8				bits 64
d07ca8			stub_7f93aed07ca8_0:
d07ca8 e860f348ff		call	do_callback_handler
d07cad a1f49e0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d07c18				bits 64
d07c18			stub_7f93aed07c18_1:
d07c18 fec1			inc	cl
d07c1a			stub_7f93aed07c18_0:
d07c1a e8eef348ff		call	do_callback_handler
d07c1f f1f49e0200000000
(obj= #(#<procedure #409>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19d490				bits 64
19d490			version947:
19d490 6afe			push	qword byte -2
19d492			version948:
19d492 6afe			push	qword byte -2
19d494			version949:
19d494 ff742410			push	qword [rsp+16]
19d498			version950:
19d498			version951:
19d498 58			pop	rax
19d499 488b4007			mov	rax,[rax+7]
19d49d 50			push	rax
19d49e			version952:
19d49e ff742438			push	qword [rsp+56]
19d4a2			version953:
19d4a2 6af6			push	qword byte -10
19d4a4			version954:
19d4a4			version955:
19d4a4 ff742408			push	qword [rsp+8]
19d4a8			version956:
19d4a8 48c7c000000000		mov	rax,dword 0
19d4af 50			push	rax
19d4b0			version957:
19d4b0 50			push	rax
19d4b1 53			push	rbx
19d4b2 48b84000fcb0937f
19d4ba 0000			mov	rax,140272306225216
19d4bc 488b18			mov	rbx,[rax]
19d4bf 48ffc3			inc	rbx
19d4c2 488918			mov	[rax],rbx
19d4c5 5b			pop	rbx
19d4c6 58			pop	rax
19d4c7 48c7c003000000		mov	rax,dword 3
19d4ce 4823442408		and	rax,[rsp+8]
19d4d3			patchable_jump57:
19d4d3 0f8441a7b600		je	stub_7f93aed07c18_0
19d4d9 e93aa7b600		jmp	stub_7f93aed07c18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d4d3 -> 7f93aed07c18
GEN VERSION >>> #<ctx #410
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #411
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07c08				bits 64
d07c08			stub_7f93aed07c08_0:
d07c08 e800f448ff		call	do_callback_handler
d07c0d 91f59e0200000000
(obj= #(#<procedure #416>))
------------------------------------------------------------------------
d07bf8				bits 64
d07bf8			stub_7f93aed07bf8_1:
d07bf8 fec1			inc	cl
d07bfa			stub_7f93aed07bf8_0:
d07bfa e80ef448ff		call	do_callback_handler
d07bff e1f59e0200000000
(obj= #(#<procedure #417>))
------------------------------------------------------------------------
19d4d9				bits 64
19d4d9 909090		version958:
19d4dc			version959:
19d4dc 488b442408		mov	rax,[rsp+8]
19d4e1 483b0424			cmp	rax,[rsp]
19d4e5			label-jump14:
19d4e5 0f851da7b600		jne	stub_7f93aed07c08_0
19d4eb			version960:
19d4eb 4883c410			add	rsp,byte 16
19d4ef 6afa			push	qword byte -6
19d4f1			version961:
19d4f1 58			pop	rax
19d4f2 4883f8fe			cmp	rax,byte -2
19d4f6			patchable_jump58:
19d4f6 0f84fea6b600		je	stub_7f93aed07bf8_0
19d4fc e9f7a6b600		jmp	stub_7f93aed07bf8_1
GEN VERSION >>> #<ctx #410
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #411
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d4e5 -> 7f93ae19d501
------------------------------------------------------------------------
19d501				bits 64
19d501 909090		version962:
19d504 4883c410			add	rsp,byte 16
19d508 6afe			push	qword byte -2
19d50a ebe5			jmp	short version961
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #418
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #419
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #412
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d4f6 -> 7f93ae19d50c
------------------------------------------------------------------------
d07be8				bits 64
d07be8			stub_7f93aed07be8_0:
d07be8 e820f448ff		call	do_callback_handler
d07bed d1f69e0200000000
(obj= #(#<procedure #420>))
------------------------------------------------------------------------
d07bd8				bits 64
d07bd8			stub_7f93aed07bd8_1:
d07bd8 fec1			inc	cl
d07bda			stub_7f93aed07bd8_0:
d07bda e82ef448ff		call	do_callback_handler
d07bdf 21f79e0200000000
(obj= #(#<procedure #421>))
------------------------------------------------------------------------
19d50c				bits 64
19d50c			version963:
19d50c ff742408			push	qword [rsp+8]
19d510			version964:
19d510 48c7c004000000		mov	rax,dword 4
19d517 50			push	rax
19d518			version965:
19d518			version966:
19d518			version967:
19d518 58			pop	rax
19d519 48290424			sub	[rsp],rax
19d51d 0f8085a7b600		jo	stub_7f93aed07ca8_0
19d523			version968:
19d523 6af6			push	qword byte -10
19d525			version969:
19d525 ff742410			push	qword [rsp+16]
19d529			version970:
19d529 498d4424e8		lea	rax,[r12-24]
19d52e 49bf0800fcb0937f
19d536 0000			mov	r15,140272306225160
19d538 493b4728			cmp	rax,[r15+40]
19d53c 7d38			jge	short alloc-ok129
19d53e 48c7c018000000		mov	rax,dword 24
19d545 57			push	rdi
19d546 56			push	rsi
19d547 52			push	rdx
19d548 51			push	rcx
19d549 4150			push	r8
19d54b 4151			push	r9
19d54d 4152			push	r10
19d54f 4153			push	r11
19d551 50			push	rax
19d552 4889e7			mov	rdi,rsp
19d555 4883e4f0			and	rsp,byte -16
19d559 4883ec08			sub	rsp,byte 8
19d55d 57			push	rdi
19d55e e86d0b6d01		call	gc
19d563 5c			pop	rsp
19d564 4989c4			mov	r12,rax
19d567 58			pop	rax
19d568 415b			pop	r11
19d56a 415a			pop	r10
19d56c 4159			pop	r9
19d56e 4158			pop	r8
19d570 59			pop	rcx
19d571 5a			pop	rdx
19d572 5e			pop	rsi
19d573 5f			pop	rdi
19d574 eb04			jmp	short alloc-end129
19d576			alloc-ok129:
19d576 4983ec18			sub	r12,byte 24
19d57a			alloc-end129:
19d57a 48c7c00e030000		mov	rax,dword 782
19d581 49890424			mov	[r12],rax
19d585 5b			pop	rbx
19d586 58			pop	rax
19d587 4989442408		mov	[r12+8],rax
19d58c 49895c2410		mov	[r12+16],rbx
19d591 4c89e0			mov	rax,r12
19d594 4883c001			add	rax,byte 1
19d598 50			push	rax
19d599			version971:
19d599 488b442408		mov	rax,[rsp+8]
19d59e 4889442418		mov	[rsp+24],rax
19d5a3 488b0424			mov	rax,[rsp]
19d5a7 4889442410		mov	[rsp+16],rax
19d5ac 4883c410			add	rsp,byte 16
19d5b0			version972:
19d5b0 ff742408			push	qword [rsp+8]
19d5b4			version973:
19d5b4 48c7c000000000		mov	rax,dword 0
19d5bb 50			push	rax
19d5bc			version974:
19d5bc			version975:
19d5bc			version976:
19d5bc 488b442408		mov	rax,[rsp+8]
19d5c1 483b0424			cmp	rax,[rsp]
19d5c5			label-jump15:
19d5c5 0f851da6b600		jne	stub_7f93aed07be8_0
19d5cb			version977:
19d5cb 4883c410			add	rsp,byte 16
19d5cf 6afa			push	qword byte -6
19d5d1			version978:
19d5d1 58			pop	rax
19d5d2 4883f8fe			cmp	rax,byte -2
19d5d6			patchable_jump59:
19d5d6 0f84fea5b600		je	stub_7f93aed07bd8_0
19d5dc e9f7a5b600		jmp	stub_7f93aed07bd8_1
GEN VERSION >>> #<ctx #422
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #423
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d5c5 -> 7f93ae19d5e1
------------------------------------------------------------------------
19d5e1				bits 64
19d5e1 909090		version979:
19d5e4 4883c410			add	rsp,byte 16
19d5e8 6afe			push	qword byte -2
19d5ea ebe5			jmp	short version978
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #425
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #426
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d5d6 -> 7f93ae19d5ec
------------------------------------------------------------------------
19d5ec				bits 64
19d5ec			version980:
19d5ec ff742408			push	qword [rsp+8]
19d5f0			version981:
19d5f0 48c7c004000000		mov	rax,dword 4
19d5f7 50			push	rax
19d5f8			version982:
19d5f8			version983:
19d5f8			version984:
19d5f8 58			pop	rax
19d5f9 48290424			sub	[rsp],rax
19d5fd 0f80a5a6b600		jo	stub_7f93aed07ca8_0
19d603			version985:
19d603 6af6			push	qword byte -10
19d605			version986:
19d605 ff742410			push	qword [rsp+16]
19d609			version987:
19d609 498d4424e8		lea	rax,[r12-24]
19d60e 49bf0800fcb0937f
19d616 0000			mov	r15,140272306225160
19d618 493b4728			cmp	rax,[r15+40]
19d61c 7d38			jge	short alloc-ok130
19d61e 48c7c018000000		mov	rax,dword 24
19d625 57			push	rdi
19d626 56			push	rsi
19d627 52			push	rdx
19d628 51			push	rcx
19d629 4150			push	r8
19d62b 4151			push	r9
19d62d 4152			push	r10
19d62f 4153			push	r11
19d631 50			push	rax
19d632 4889e7			mov	rdi,rsp
19d635 4883e4f0			and	rsp,byte -16
19d639 4883ec08			sub	rsp,byte 8
19d63d 57			push	rdi
19d63e e88d0a6d01		call	gc
19d643 5c			pop	rsp
19d644 4989c4			mov	r12,rax
19d647 58			pop	rax
19d648 415b			pop	r11
19d64a 415a			pop	r10
19d64c 4159			pop	r9
19d64e 4158			pop	r8
19d650 59			pop	rcx
19d651 5a			pop	rdx
19d652 5e			pop	rsi
19d653 5f			pop	rdi
19d654 eb04			jmp	short alloc-end130
19d656			alloc-ok130:
19d656 4983ec18			sub	r12,byte 24
19d65a			alloc-end130:
19d65a 48c7c00e030000		mov	rax,dword 782
19d661 49890424			mov	[r12],rax
19d665 5b			pop	rbx
19d666 58			pop	rax
19d667 4989442408		mov	[r12+8],rax
19d66c 49895c2410		mov	[r12+16],rbx
19d671 4c89e0			mov	rax,r12
19d674 4883c001			add	rax,byte 1
19d678 50			push	rax
19d679			version988:
19d679 488b442408		mov	rax,[rsp+8]
19d67e 4889442418		mov	[rsp+24],rax
19d683 488b0424			mov	rax,[rsp]
19d687 4889442410		mov	[rsp+16],rax
19d68c 4883c410			add	rsp,byte 16
19d690 e91bffffff		jmp	version972
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #425
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #426
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #424
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #413
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #414
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #415
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d5dc -> 7f93ae19d695
------------------------------------------------------------------------
d07bd8				bits 64
d07bd8			stub_7f93aed07bd8_0:
d07bd8 e88af448ff		call	do_callback_cont_handler
d07bdd e1fb9e0200000000
(obj= #(#<procedure #427>))
------------------------------------------------------------------------
19d695				bits 64
19d695 909090		version989:
19d698 ff3424			push	qword [rsp]
19d69b			version990:
19d69b 58			pop	rax
19d69c 4883c410			add	rsp,byte 16
19d6a0 50			push	rax
19d6a1			version991:
19d6a1 41ffb280030000		push	qword [r10+896]
19d6a8			version992:
19d6a8			version993:
19d6a8 48c7c070f79e02		mov	rax,dword 43972464
19d6af 4889442418		mov	[rsp+24],rax
19d6b4			version994:
19d6b4 488b0424			mov	rax,[rsp]
19d6b8 49c7c351fa9e02		mov	r11,dword 43973201
19d6bf 488b4007			mov	rax,[rax+7]
19d6c3 488b4020			mov	rax,[rax+32]
19d6c7 ffe0			jmp	rax
------------------------------------------------------------------------
d07bc8				bits 64
d07bc8			stub_7f93aed07bc8_1:
d07bc8 fec1			inc	cl
d07bca			stub_7f93aed07bc8_0:
d07bca e83ef448ff		call	do_callback_handler
d07bcf 21dd9e0200000000
(obj= #(#<procedure #428>))
------------------------------------------------------------------------
19d6c9				bits 64
19d6c9 909090		continuation_13:
19d6cc 50			push	rax
19d6cd			version995:
19d6cd ff742410			push	qword [rsp+16]
19d6d1			version996:
19d6d1			version997:
19d6d1 58			pop	rax
19d6d2 488b400f			mov	rax,[rax+15]
19d6d6 50			push	rax
19d6d7			version998:
19d6d7 488b0424			mov	rax,[rsp]
19d6db 4889442418		mov	[rsp+24],rax
19d6e0 4883c418			add	rsp,byte 24
19d6e4			version999:
19d6e4 ff3424			push	qword [rsp]
19d6e7			version1000:
19d6e7			version1001:
19d6e7 50			push	rax
19d6e8 53			push	rbx
19d6e9 48b84000fcb0937f
19d6f1 0000			mov	rax,140272306225216
19d6f3 488b18			mov	rbx,[rax]
19d6f6 48ffc3			inc	rbx
19d6f9 488918			mov	[rax],rbx
19d6fc 5b			pop	rbx
19d6fd 58			pop	rax
19d6fe 48c7c0f6ffffff		mov	rax,dword -10
19d705 48390424			cmp	[rsp],rax
19d709 48c7c0faffffff		mov	rax,dword -6
19d710 7407			je	short done13
19d712 48c7c0feffffff		mov	rax,dword -2
19d719			done13:
19d719 48890424			mov	[rsp],rax
19d71d			version1002:
19d71d 58			pop	rax
19d71e 4883f8fe			cmp	rax,byte -2
19d722			patchable_jump60:
19d722 0f84a2a4b600		je	stub_7f93aed07bc8_0
19d728 e99ba4b600		jmp	stub_7f93aed07bc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d722 -> 7f93aed07bc8
GEN VERSION >>> #<ctx #429
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #430
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #431
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07bb8				bits 64
d07bb8			stub_7f93aed07bb8_1:
d07bb8 fec1			inc	cl
d07bba			stub_7f93aed07bb8_0:
d07bba e84ef448ff		call	do_callback_handler
d07bbf 81e89e0200000000
(obj= #(#<procedure #432>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19d728				bits 64
19d728			version1003:
19d728 ff3424			push	qword [rsp]
19d72b			version1004:
19d72b 50			push	rax
19d72c 53			push	rbx
19d72d 48b84000fcb0937f
19d735 0000			mov	rax,140272306225216
19d737 488b18			mov	rbx,[rax]
19d73a 48ffc3			inc	rbx
19d73d 488918			mov	[rax],rbx
19d740 5b			pop	rbx
19d741 58			pop	rax
19d742 488b0424			mov	rax,[rsp]
19d746 4889c3			mov	rbx,rax
19d749 4883e003			and	rax,byte 3
19d74d 4883f801			cmp	rax,byte 1
19d751 750e			jne	short patchable_jump61
19d753 488b43ff			mov	rax,[rbx-1]
19d757 4825f8000000		and	rax,248
19d75d 4883f808			cmp	rax,byte 8
19d761			patchable_jump61:
19d761 0f8453a4b600		je	stub_7f93aed07bb8_0
19d767 e94ca4b600		jmp	stub_7f93aed07bb8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d761 -> 7f93aed07bb8
GEN VERSION >>> #<ctx #433
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #434
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #435
                                    type: local
                                    offset: 3
                                    pos: (6 5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ba8				bits 64
d07ba8			stub_7f93aed07ba8_1:
d07ba8 fec1			inc	cl
d07baa			stub_7f93aed07ba8_0:
d07baa e85ef448ff		call	do_callback_handler
d07baf 91ed9e0200000000
(obj= #(#<procedure #436>))
------------------------------------------------------------------------
19d767				bits 64
19d767 90		version1005:
19d768 58			pop	rax
19d769 488b4007			mov	rax,[rax+7]
19d76d 50			push	rax
19d76e			version1006:
19d76e			version1007:
19d76e 50			push	rax
19d76f 53			push	rbx
19d770 48b84000fcb0937f
19d778 0000			mov	rax,140272306225216
19d77a 488b18			mov	rbx,[rax]
19d77d 48ffc3			inc	rbx
19d780 488918			mov	[rax],rbx
19d783 5b			pop	rbx
19d784 58			pop	rax
19d785 48c7c0f6ffffff		mov	rax,dword -10
19d78c 48390424			cmp	[rsp],rax
19d790 48c7c0faffffff		mov	rax,dword -6
19d797 7407			je	short done14
19d799 48c7c0feffffff		mov	rax,dword -2
19d7a0			done14:
19d7a0 48890424			mov	[rsp],rax
19d7a4			version1008:
19d7a4 58			pop	rax
19d7a5 4883f8fe			cmp	rax,byte -2
19d7a9			patchable_jump62:
19d7a9 0f84fba3b600		je	stub_7f93aed07ba8_0
19d7af e9f4a3b600		jmp	stub_7f93aed07ba8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d7a9 -> 7f93aed07ba8
GEN VERSION >>> #<ctx #437
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #438
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #439
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07b98				bits 64
d07b98			stub_7f93aed07b98_0:
d07b98 e870f448ff		call	do_callback_handler
d07b9d 11f09e0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d07b88				bits 64
d07b88			stub_7f93aed07b88_1:
d07b88 fec1			inc	cl
d07b8a			stub_7f93aed07b88_0:
d07b8a e87ef448ff		call	do_callback_handler
d07b8f b1f09e0200000000
(obj= #(#<procedure #440>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19d7af				bits 64
19d7af 90		version1009:
19d7b0 6afe			push	qword byte -2
19d7b2			version1010:
19d7b2 6afe			push	qword byte -2
19d7b4			version1011:
19d7b4 ff742410			push	qword [rsp+16]
19d7b8			version1012:
19d7b8			version1013:
19d7b8 58			pop	rax
19d7b9 488b4007			mov	rax,[rax+7]
19d7bd 50			push	rax
19d7be			version1014:
19d7be ff742438			push	qword [rsp+56]
19d7c2			version1015:
19d7c2 6af6			push	qword byte -10
19d7c4			version1016:
19d7c4			version1017:
19d7c4 ff742408			push	qword [rsp+8]
19d7c8			version1018:
19d7c8 48c7c000000000		mov	rax,dword 0
19d7cf 50			push	rax
19d7d0			version1019:
19d7d0 50			push	rax
19d7d1 53			push	rbx
19d7d2 48b84000fcb0937f
19d7da 0000			mov	rax,140272306225216
19d7dc 488b18			mov	rbx,[rax]
19d7df 48ffc3			inc	rbx
19d7e2 488918			mov	[rax],rbx
19d7e5 5b			pop	rbx
19d7e6 58			pop	rax
19d7e7 48c7c003000000		mov	rax,dword 3
19d7ee 4823442408		and	rax,[rsp+8]
19d7f3			patchable_jump63:
19d7f3 0f8491a3b600		je	stub_7f93aed07b88_0
19d7f9 e98aa3b600		jmp	stub_7f93aed07b88_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19d7f3 -> 7f93aed07b88
GEN VERSION >>> #<ctx #441
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #442
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07b78				bits 64
d07b78			stub_7f93aed07b78_0:
d07b78 e890f448ff		call	do_callback_handler
d07b7d 41f59e0200000000
(obj= #(#<procedure #447>))
------------------------------------------------------------------------
d07b68				bits 64
d07b68			stub_7f93aed07b68_1:
d07b68 fec1			inc	cl
d07b6a			stub_7f93aed07b68_0:
d07b6a e89ef448ff		call	do_callback_handler
d07b6f 31f69e0200000000
(obj= #(#<procedure #448>))
------------------------------------------------------------------------
19d7f9				bits 64
19d7f9 909090		version1020:
19d7fc			version1021:
19d7fc 488b442408		mov	rax,[rsp+8]
19d801 483b0424			cmp	rax,[rsp]
19d805			label-jump16:
19d805 0f856da3b600		jne	stub_7f93aed07b78_0
19d80b			version1022:
19d80b 4883c410			add	rsp,byte 16
19d80f 6afa			push	qword byte -6
19d811			version1023:
19d811 58			pop	rax
19d812 4883f8fe			cmp	rax,byte -2
19d816			patchable_jump64:
19d816 0f844ea3b600		je	stub_7f93aed07b68_0
19d81c e947a3b600		jmp	stub_7f93aed07b68_1
GEN VERSION >>> #<ctx #441
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #442
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d805 -> 7f93ae19d821
------------------------------------------------------------------------
19d821				bits 64
19d821 909090		version1024:
19d824 4883c410			add	rsp,byte 16
19d828 6afe			push	qword byte -2
19d82a ebe5			jmp	short version1023
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #449
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #450
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #443
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d816 -> 7f93ae19d82c
------------------------------------------------------------------------
d07b58				bits 64
d07b58			stub_7f93aed07b58_0:
d07b58 e8b0f448ff		call	do_callback_handler
d07b5d 01f49e0200000000
(obj= #(#<procedure #451>))
------------------------------------------------------------------------
d07b48				bits 64
d07b48			stub_7f93aed07b48_1:
d07b48 fec1			inc	cl
d07b4a			stub_7f93aed07b48_0:
d07b4a e8bef448ff		call	do_callback_handler
d07b4f 51f49e0200000000
(obj= #(#<procedure #452>))
------------------------------------------------------------------------
19d82c				bits 64
19d82c			version1025:
19d82c ff742408			push	qword [rsp+8]
19d830			version1026:
19d830 48c7c004000000		mov	rax,dword 4
19d837 50			push	rax
19d838			version1027:
19d838			version1028:
19d838			version1029:
19d838 58			pop	rax
19d839 48290424			sub	[rsp],rax
19d83d 0f8055a3b600		jo	stub_7f93aed07b98_0
19d843			version1030:
19d843 6af6			push	qword byte -10
19d845			version1031:
19d845 ff742410			push	qword [rsp+16]
19d849			version1032:
19d849 498d4424e8		lea	rax,[r12-24]
19d84e 49bf0800fcb0937f
19d856 0000			mov	r15,140272306225160
19d858 493b4728			cmp	rax,[r15+40]
19d85c 7d38			jge	short alloc-ok131
19d85e 48c7c018000000		mov	rax,dword 24
19d865 57			push	rdi
19d866 56			push	rsi
19d867 52			push	rdx
19d868 51			push	rcx
19d869 4150			push	r8
19d86b 4151			push	r9
19d86d 4152			push	r10
19d86f 4153			push	r11
19d871 50			push	rax
19d872 4889e7			mov	rdi,rsp
19d875 4883e4f0			and	rsp,byte -16
19d879 4883ec08			sub	rsp,byte 8
19d87d 57			push	rdi
19d87e e84d086d01		call	gc
19d883 5c			pop	rsp
19d884 4989c4			mov	r12,rax
19d887 58			pop	rax
19d888 415b			pop	r11
19d88a 415a			pop	r10
19d88c 4159			pop	r9
19d88e 4158			pop	r8
19d890 59			pop	rcx
19d891 5a			pop	rdx
19d892 5e			pop	rsi
19d893 5f			pop	rdi
19d894 eb04			jmp	short alloc-end131
19d896			alloc-ok131:
19d896 4983ec18			sub	r12,byte 24
19d89a			alloc-end131:
19d89a 48c7c00e030000		mov	rax,dword 782
19d8a1 49890424			mov	[r12],rax
19d8a5 5b			pop	rbx
19d8a6 58			pop	rax
19d8a7 4989442408		mov	[r12+8],rax
19d8ac 49895c2410		mov	[r12+16],rbx
19d8b1 4c89e0			mov	rax,r12
19d8b4 4883c001			add	rax,byte 1
19d8b8 50			push	rax
19d8b9			version1033:
19d8b9 488b442408		mov	rax,[rsp+8]
19d8be 4889442418		mov	[rsp+24],rax
19d8c3 488b0424			mov	rax,[rsp]
19d8c7 4889442410		mov	[rsp+16],rax
19d8cc 4883c410			add	rsp,byte 16
19d8d0			version1034:
19d8d0 ff742408			push	qword [rsp+8]
19d8d4			version1035:
19d8d4 48c7c000000000		mov	rax,dword 0
19d8db 50			push	rax
19d8dc			version1036:
19d8dc			version1037:
19d8dc			version1038:
19d8dc 488b442408		mov	rax,[rsp+8]
19d8e1 483b0424			cmp	rax,[rsp]
19d8e5			label-jump17:
19d8e5 0f856da2b600		jne	stub_7f93aed07b58_0
19d8eb			version1039:
19d8eb 4883c410			add	rsp,byte 16
19d8ef 6afa			push	qword byte -6
19d8f1			version1040:
19d8f1 58			pop	rax
19d8f2 4883f8fe			cmp	rax,byte -2
19d8f6			patchable_jump65:
19d8f6 0f844ea2b600		je	stub_7f93aed07b48_0
19d8fc e947a2b600		jmp	stub_7f93aed07b48_1
GEN VERSION >>> #<ctx #453
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #454
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d8e5 -> 7f93ae19d901
------------------------------------------------------------------------
19d901				bits 64
19d901 909090		version1041:
19d904 4883c410			add	rsp,byte 16
19d908 6afe			push	qword byte -2
19d90a ebe5			jmp	short version1040
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #456
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #457
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d8f6 -> 7f93ae19d90c
------------------------------------------------------------------------
19d90c				bits 64
19d90c			version1042:
19d90c ff742408			push	qword [rsp+8]
19d910			version1043:
19d910 48c7c004000000		mov	rax,dword 4
19d917 50			push	rax
19d918			version1044:
19d918			version1045:
19d918			version1046:
19d918 58			pop	rax
19d919 48290424			sub	[rsp],rax
19d91d 0f8075a2b600		jo	stub_7f93aed07b98_0
19d923			version1047:
19d923 6af6			push	qword byte -10
19d925			version1048:
19d925 ff742410			push	qword [rsp+16]
19d929			version1049:
19d929 498d4424e8		lea	rax,[r12-24]
19d92e 49bf0800fcb0937f
19d936 0000			mov	r15,140272306225160
19d938 493b4728			cmp	rax,[r15+40]
19d93c 7d38			jge	short alloc-ok132
19d93e 48c7c018000000		mov	rax,dword 24
19d945 57			push	rdi
19d946 56			push	rsi
19d947 52			push	rdx
19d948 51			push	rcx
19d949 4150			push	r8
19d94b 4151			push	r9
19d94d 4152			push	r10
19d94f 4153			push	r11
19d951 50			push	rax
19d952 4889e7			mov	rdi,rsp
19d955 4883e4f0			and	rsp,byte -16
19d959 4883ec08			sub	rsp,byte 8
19d95d 57			push	rdi
19d95e e86d076d01		call	gc
19d963 5c			pop	rsp
19d964 4989c4			mov	r12,rax
19d967 58			pop	rax
19d968 415b			pop	r11
19d96a 415a			pop	r10
19d96c 4159			pop	r9
19d96e 4158			pop	r8
19d970 59			pop	rcx
19d971 5a			pop	rdx
19d972 5e			pop	rsi
19d973 5f			pop	rdi
19d974 eb04			jmp	short alloc-end132
19d976			alloc-ok132:
19d976 4983ec18			sub	r12,byte 24
19d97a			alloc-end132:
19d97a 48c7c00e030000		mov	rax,dword 782
19d981 49890424			mov	[r12],rax
19d985 5b			pop	rbx
19d986 58			pop	rax
19d987 4989442408		mov	[r12+8],rax
19d98c 49895c2410		mov	[r12+16],rbx
19d991 4c89e0			mov	rax,r12
19d994 4883c001			add	rax,byte 1
19d998 50			push	rax
19d999			version1050:
19d999 488b442408		mov	rax,[rsp+8]
19d99e 4889442418		mov	[rsp+24],rax
19d9a3 488b0424			mov	rax,[rsp]
19d9a7 4889442410		mov	[rsp+16],rax
19d9ac 4883c410			add	rsp,byte 16
19d9b0 e91bffffff		jmp	version1034
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #456
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #457
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #455
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #444
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #445
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #446
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d8fc -> 7f93ae19d9b5
------------------------------------------------------------------------
d07b48				bits 64
d07b48			stub_7f93aed07b48_0:
d07b48 e81af548ff		call	do_callback_cont_handler
d07b4d f1279f0200000000
(obj= #(#<procedure #458>))
------------------------------------------------------------------------
19d9b5				bits 64
19d9b5 909090		version1051:
19d9b8 ff3424			push	qword [rsp]
19d9bb			version1052:
19d9bb 58			pop	rax
19d9bc 4883c410			add	rsp,byte 16
19d9c0 50			push	rax
19d9c1			version1053:
19d9c1 41ffb280030000		push	qword [r10+896]
19d9c8			version1054:
19d9c8			version1055:
19d9c8 48c7c0c08fa002		mov	rax,dword 44076992
19d9cf 4889442418		mov	[rsp+24],rax
19d9d4			version1056:
19d9d4 488b0424			mov	rax,[rsp]
19d9d8 49c7c351fa9e02		mov	r11,dword 43973201
19d9df 488b4007			mov	rax,[rax+7]
19d9e3 488b4020			mov	rax,[rax+32]
19d9e7 ffe0			jmp	rax
------------------------------------------------------------------------
19d9e9				bits 64
19d9e9 909090		continuation_14:
19d9ec 50			push	rax
19d9ed			version1057:
19d9ed ff742410			push	qword [rsp+16]
19d9f1			version1058:
19d9f1			version1059:
19d9f1 58			pop	rax
19d9f2 488b400f			mov	rax,[rax+15]
19d9f6 50			push	rax
19d9f7			version1060:
19d9f7 488b0424			mov	rax,[rsp]
19d9fb 4889442418		mov	[rsp+24],rax
19da00 4883c418			add	rsp,byte 24
19da04 e9fff9ffff		jmp	version941
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #207
                      stack: (procedure unknown pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #208
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> patching jump at 7f93ae19c1fb -> 7f93ae19da09
------------------------------------------------------------------------
d07fa8				bits 64
d07fa8			stub_7f93aed07fa8_1:
d07fa8 fec1			inc	cl
d07faa			stub_7f93aed07fa8_0:
d07faa e85ef048ff		call	do_callback_handler
d07faf 3191a00200000000
(obj= #(#<procedure #459>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19da09				bits 64
19da09 909090		version1061:
19da0c ff742408			push	qword [rsp+8]
19da10			version1062:
19da10 ff742410			push	qword [rsp+16]
19da14			version1063:
19da14 50			push	rax
19da15 53			push	rbx
19da16 48b84000fcb0937f
19da1e 0000			mov	rax,140272306225216
19da20 488b18			mov	rbx,[rax]
19da23 48ffc3			inc	rbx
19da26 488918			mov	[rax],rbx
19da29 5b			pop	rbx
19da2a 58			pop	rax
19da2b 488b0424			mov	rax,[rsp]
19da2f 4889c3			mov	rbx,rax
19da32 4883e003			and	rax,byte 3
19da36 4883f801			cmp	rax,byte 1
19da3a 750e			jne	short patchable_jump66
19da3c 488b43ff			mov	rax,[rbx-1]
19da40 4825f8000000		and	rax,248
19da46 4883f808			cmp	rax,byte 8
19da4a			patchable_jump66:
19da4a 0f845aa5b600		je	stub_7f93aed07fa8_0
19da50 e953a5b600		jmp	stub_7f93aed07fa8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19da4a -> 7f93aed07fa8
GEN VERSION >>> #<ctx #460
                      stack: (pair pair procedure pair pair retAddr)
                      env: ((a . #<identifier #201
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>)
                            (b . #<identifier #461
                                    type: local
                                    offset: 1
                                    pos: (4 3 1)
                                    flags: ()
                                    stype: ()>)
                            (x . #<identifier #203
                                    type: free
                                    offset: 0
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (y . #<identifier #204
                                    type: free
                                    offset: 1
                                    pos: ()
                                    flags: ()
                                    stype: pair>)
                            (loop . #<identifier #205
                                       type: free
                                       offset: 2
                                       pos: ()
                                       flags: (mutable)
                                       stype: procedure>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19da50				bits 64
19da50			version1064:
19da50 58			pop	rax
19da51 488b400f			mov	rax,[rax+15]
19da55 50			push	rax
19da56			version1065:
19da56 488b442410		mov	rax,[rsp+16]
19da5b 488b401f			mov	rax,[rax+31]
19da5f ff7007			push	qword [rax+7]
19da62			version1066:
19da62			version1067:
19da62 488b442410		mov	rax,[rsp+16]
19da67 4889442428		mov	[rsp+40],rax
19da6c 488b442408		mov	rax,[rsp+8]
19da71 4889442420		mov	[rsp+32],rax
19da76 488b0424			mov	rax,[rsp]
19da7a 4889442418		mov	[rsp+24],rax
19da7f 4883c418			add	rsp,byte 24
19da83 488b0424			mov	rax,[rsp]
19da87 49c7c3e112d202		mov	r11,dword 47321825
19da8e 488b4007			mov	rax,[rax+7]
19da92 488b4028			mov	rax,[rax+40]
19da96 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #429
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #430
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #431
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d722 -> 7f93ae19da98
------------------------------------------------------------------------
19da98				bits 64
19da98			version1068:
19da98 6afe			push	qword byte -2
19da9a			version1069:
19da9a 58			pop	rax
19da9b 4883c408			add	rsp,byte 8
19da9f 50			push	rax
19daa0 e97ff5ffff		jmp	version853
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #372
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #373
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d0c5 -> 7f93ae19daa5
------------------------------------------------------------------------
d07cc8				bits 64
d07cc8			stub_7f93aed07cc8_1:
d07cc8 fec1			inc	cl
d07cca			stub_7f93aed07cc8_0:
d07cca e83ef348ff		call	do_callback_handler
d07ccf 4112a10200000000
(obj= #(#<procedure #462>))
------------------------------------------------------------------------
19daa5				bits 64
19daa5 909090		version1070:
19daa8 ff742408			push	qword [rsp+8]
19daac			version1071:
19daac ff742410			push	qword [rsp+16]
19dab0			version1072:
19dab0			version1073:
19dab0 58			pop	rax
19dab1 488b400f			mov	rax,[rax+15]
19dab5 50			push	rax
19dab6			version1074:
19dab6			version1075:
19dab6 ff3424			push	qword [rsp]
19dab9			version1076:
19dab9			version1077:
19dab9 50			push	rax
19daba 53			push	rbx
19dabb 48b84000fcb0937f
19dac3 0000			mov	rax,140272306225216
19dac5 488b18			mov	rbx,[rax]
19dac8 48ffc3			inc	rbx
19dacb 488918			mov	[rax],rbx
19dace 5b			pop	rbx
19dacf 58			pop	rax
19dad0 48c7c0f6ffffff		mov	rax,dword -10
19dad7 48390424			cmp	[rsp],rax
19dadb 48c7c0faffffff		mov	rax,dword -6
19dae2 7407			je	short done15
19dae4 48c7c0feffffff		mov	rax,dword -2
19daeb			done15:
19daeb 48890424			mov	[rsp],rax
19daef			version1078:
19daef 58			pop	rax
19daf0 4883f8fe			cmp	rax,byte -2
19daf4			patchable_jump67:
19daf4 0f84d0a1b600		je	stub_7f93aed07cc8_0
19dafa e9c9a1b600		jmp	stub_7f93aed07cc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19daf4 -> 7f93aed07cc8
GEN VERSION >>> #<ctx #463
                      stack: (unknown pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #465
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07bc8				bits 64
d07bc8			stub_7f93aed07bc8_1:
d07bc8 fec1			inc	cl
d07bca			stub_7f93aed07bc8_0:
d07bca e83ef448ff		call	do_callback_handler
d07bcf e112a10200000000
(obj= #(#<procedure #467>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19dafa				bits 64
19dafa 9090		version1079:
19dafc 6afe			push	qword byte -2
19dafe			version1080:
19dafe ff742408			push	qword [rsp+8]
19db02			version1081:
19db02 50			push	rax
19db03 53			push	rbx
19db04 48b84000fcb0937f
19db0c 0000			mov	rax,140272306225216
19db0e 488b18			mov	rbx,[rax]
19db11 48ffc3			inc	rbx
19db14 488918			mov	[rax],rbx
19db17 5b			pop	rbx
19db18 58			pop	rax
19db19 488b0424			mov	rax,[rsp]
19db1d 4889c3			mov	rbx,rax
19db20 4883e003			and	rax,byte 3
19db24 4883f801			cmp	rax,byte 1
19db28 750e			jne	short patchable_jump68
19db2a 488b43ff			mov	rax,[rbx-1]
19db2e 4825f8000000		and	rax,248
19db34 4883f808			cmp	rax,byte 8
19db38			patchable_jump68:
19db38 0f848ca0b600		je	stub_7f93aed07bc8_0
19db3e e985a0b600		jmp	stub_7f93aed07bc8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19db38 -> 7f93aed07bc8
GEN VERSION >>> #<ctx #468
                      stack: (pair retAddr
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #469
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07b38				bits 64
d07b38			stub_7f93aed07b38_0:
d07b38 e82af548ff		call	do_callback_cont_handler
d07b3d f1e59e0200000000
(obj= #(#<procedure #470>))
------------------------------------------------------------------------
19db3e				bits 64
19db3e 9090		version1082:
19db40 58			pop	rax
19db41 488b4007			mov	rax,[rax+7]
19db45 50			push	rax
19db46			version1083:
19db46 41ffb278020000		push	qword [r10+632]
19db4d			version1084:
19db4d			version1085:
19db4d 48c7c0c0a89f02		mov	rax,dword 44017856
19db54 4889442410		mov	[rsp+16],rax
19db59			version1086:
19db59 488b0424			mov	rax,[rsp]
19db5d 48c7c704000000		mov	rdi,dword 4
19db64 488b4007			mov	rax,[rax+7]
19db68 488b4008			mov	rax,[rax+8]
19db6c ffe0			jmp	rax
------------------------------------------------------------------------
d07b28				bits 64
d07b28			stub_7f93aed07b28_0:
d07b28 e8e0f448ff		call	do_callback_handler
d07b2d 21f79e0200000000
(obj= #(#<procedure #471>))
------------------------------------------------------------------------
d07b18				bits 64
d07b18			stub_7f93aed07b18_1:
d07b18 fec1			inc	cl
d07b1a			stub_7f93aed07b18_0:
d07b1a e8eef448ff		call	do_callback_handler
d07b1f a1f19e0200000000
(obj= #(#<procedure #472>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19db6e				bits 64
19db6e 9090		continuation_15:
19db70 50			push	rax
19db71			version1087:
19db71			version1088:
19db71 48c7c008000000		mov	rax,dword 8
19db78 50			push	rax
19db79			version1089:
19db79			version1090:
19db79 5b			pop	rbx
19db7a 58			pop	rax
19db7b 48c1f802			sar	rax,2
19db7f 48c1fb02			sar	rbx,2
19db83 4883fb00			cmp	rbx,byte 0
19db87 0f849b9fb600		je	stub_7f93aed07b28_0
19db8d 4899			cqo
19db8f 48f7fb			idiv	rbx
19db92 48c1e002			shl	rax,2
19db96 50			push	rax
19db97			version1091:
19db97 ff742408			push	qword [rsp+8]
19db9b			version1092:
19db9b 50			push	rax
19db9c 53			push	rbx
19db9d 48b84000fcb0937f
19dba5 0000			mov	rax,140272306225216
19dba7 488b18			mov	rbx,[rax]
19dbaa 48ffc3			inc	rbx
19dbad 488918			mov	[rax],rbx
19dbb0 5b			pop	rbx
19dbb1 58			pop	rax
19dbb2 488b0424			mov	rax,[rsp]
19dbb6 4889c3			mov	rbx,rax
19dbb9 4883e003			and	rax,byte 3
19dbbd 4883f801			cmp	rax,byte 1
19dbc1 750e			jne	short patchable_jump69
19dbc3 488b43ff			mov	rax,[rbx-1]
19dbc7 4825f8000000		and	rax,248
19dbcd 4883f808			cmp	rax,byte 8
19dbd1			patchable_jump69:
19dbd1 0f84439fb600		je	stub_7f93aed07b18_0
19dbd7 e93c9fb600		jmp	stub_7f93aed07b18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19dbd1 -> 7f93aed07b18
GEN VERSION >>> #<ctx #473
                      stack: (pair number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #474
                                     type: local
                                     offset: 6
                                     pos: (8 6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07b08				bits 64
d07b08			stub_7f93aed07b08_0:
d07b08 e85af548ff		call	do_callback_cont_handler
d07b0d 51e59e0200000000
(obj= #(#<procedure #475>))
------------------------------------------------------------------------
19dbd7				bits 64
19dbd7 90		version1093:
19dbd8 58			pop	rax
19dbd9 488b4007			mov	rax,[rax+7]
19dbdd 50			push	rax
19dbde			version1094:
19dbde			version1095:
19dbde 6afe			push	qword byte -2
19dbe0			version1096:
19dbe0 ff742410			push	qword [rsp+16]
19dbe4			version1097:
19dbe4 41ffb218030000		push	qword [r10+792]
19dbeb			version1098:
19dbeb			version1099:
19dbeb 48c7c090a99f02		mov	rax,dword 44018064
19dbf2 4889442410		mov	[rsp+16],rax
19dbf7			version1100:
19dbf7 488b0424			mov	rax,[rsp]
19dbfb 49c7c381df9e02		mov	r11,dword 43966337
19dc02 488b4007			mov	rax,[rax+7]
19dc06 488b4030			mov	rax,[rax+48]
19dc0a ffe0			jmp	rax
------------------------------------------------------------------------
d07af8				bits 64
d07af8			stub_7f93aed07af8_1:
d07af8 fec1			inc	cl
d07afa			stub_7f93aed07af8_0:
d07afa e80ef548ff		call	do_callback_handler
d07aff 21dd9e0200000000
(obj= #(#<procedure #476>))
------------------------------------------------------------------------
19dc0c				bits 64
19dc0c			continuation_16:
19dc0c 50			push	rax
19dc0d			version1101:
19dc0d 58			pop	rax
19dc0e 4883f8fe			cmp	rax,byte -2
19dc12			patchable_jump70:
19dc12 0f84e29eb600		je	stub_7f93aed07af8_0
19dc18 e9db9eb600		jmp	stub_7f93aed07af8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19dc12 -> 7f93aed07af8
GEN VERSION >>> #<ctx #477
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #479
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ae8				bits 64
d07ae8			stub_7f93aed07ae8_1:
d07ae8 fec1			inc	cl
d07aea			stub_7f93aed07ae8_0:
d07aea e81ef548ff		call	do_callback_handler
d07aef 51ec9e0200000000
(obj= #(#<procedure #481>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19dc18				bits 64
19dc18			version1102:
19dc18 ff3424			push	qword [rsp]
19dc1b			version1103:
19dc1b 50			push	rax
19dc1c 53			push	rbx
19dc1d 48b84000fcb0937f
19dc25 0000			mov	rax,140272306225216
19dc27 488b18			mov	rbx,[rax]
19dc2a 48ffc3			inc	rbx
19dc2d 488918			mov	[rax],rbx
19dc30 5b			pop	rbx
19dc31 58			pop	rax
19dc32 488b0424			mov	rax,[rsp]
19dc36 4889c3			mov	rbx,rax
19dc39 4883e003			and	rax,byte 3
19dc3d 4883f801			cmp	rax,byte 1
19dc41 750e			jne	short patchable_jump71
19dc43 488b43ff			mov	rax,[rbx-1]
19dc47 4825f8000000		and	rax,248
19dc4d 4883f808			cmp	rax,byte 8
19dc51			patchable_jump71:
19dc51 0f84939eb600		je	stub_7f93aed07ae8_0
19dc57 e98c9eb600		jmp	stub_7f93aed07ae8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19dc51 -> 7f93aed07ae8
GEN VERSION >>> #<ctx #482
                      stack: (pair pair
                                   number
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #483
                                    type: local
                                    offset: 8
                                    pos: (9 8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19dc57				bits 64
19dc57 90		version1104:
19dc58 ff742428			push	qword [rsp+40]
19dc5c			version1105:
19dc5c 58			pop	rax
19dc5d 5b			pop	rbx
19dc5e 48894307			mov	[rbx+7],rax
19dc62 6aee			push	qword byte -18
19dc64			version1106:
19dc64 ff742410			push	qword [rsp+16]
19dc68			version1107:
19dc68 48c7c004000000		mov	rax,dword 4
19dc6f 50			push	rax
19dc70			version1108:
19dc70			version1109:
19dc70			version1110:
19dc70 58			pop	rax
19dc71 48290424			sub	[rsp],rax
19dc75 0f804daeb600		jo	stub_7f93aed08ac8_0
19dc7b			version1111:
19dc7b ff742410			push	qword [rsp+16]
19dc7f			version1112:
19dc7f			version1113:
19dc7f 58			pop	rax
19dc80 488b400f			mov	rax,[rax+15]
19dc84 50			push	rax
19dc85			version1114:
19dc85 488b442408		mov	rax,[rsp+8]
19dc8a 4889442420		mov	[rsp+32],rax
19dc8f 488b0424			mov	rax,[rsp]
19dc93 4889442418		mov	[rsp+24],rax
19dc98 4883c418			add	rsp,byte 24
19dc9c e93dffffff		jmp	version1095
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #477
                      stack: (unknown number
                                      pair
                                      pair
                                      number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((j . #<identifier #478
                                    type: local
                                    offset: 7
                                    pos: (7)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #479
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19dc12 -> 7f93ae19dca1
------------------------------------------------------------------------
d07af8				bits 64
d07af8			stub_7f93aed07af8_1:
d07af8 fec1			inc	cl
d07afa			stub_7f93aed07af8_0:
d07afa e80ef548ff		call	do_callback_handler
d07aff 21ef9e0200000000
(obj= #(#<procedure #484>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19dca1				bits 64
19dca1 909090		version1115:
19dca4 ff3424			push	qword [rsp]
19dca7			version1116:
19dca7 58			pop	rax
19dca8 4883c410			add	rsp,byte 16
19dcac 50			push	rax
19dcad			version1117:
19dcad 50			push	rax
19dcae 53			push	rbx
19dcaf 48b84000fcb0937f
19dcb7 0000			mov	rax,140272306225216
19dcb9 488b18			mov	rbx,[rax]
19dcbc 48ffc3			inc	rbx
19dcbf 488918			mov	[rax],rbx
19dcc2 5b			pop	rbx
19dcc3 58			pop	rax
19dcc4 488b0424			mov	rax,[rsp]
19dcc8 4889c3			mov	rbx,rax
19dccb 4883e003			and	rax,byte 3
19dccf 4883f801			cmp	rax,byte 1
19dcd3 750e			jne	short patchable_jump72
19dcd5 488b43ff			mov	rax,[rbx-1]
19dcd9 4825f8000000		and	rax,248
19dcdf 4883f808			cmp	rax,byte 8
19dce3			patchable_jump72:
19dce3 0f84119eb600		je	stub_7f93aed07af8_0
19dce9 e90a9eb600		jmp	stub_7f93aed07af8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19dce3 -> 7f93aed07af8
GEN VERSION >>> #<ctx #485
                      stack: (pair pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l1 . #<identifier #464
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #480
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #466
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ad8				bits 64
d07ad8			stub_7f93aed07ad8_0:
d07ad8 e88af548ff		call	do_callback_cont_handler
d07add 51f49e0200000000
(obj= #(#<procedure #486>))
------------------------------------------------------------------------
19dce9				bits 64
19dce9 909090		version1118:
19dcec 6afe			push	qword byte -2
19dcee			version1119:
19dcee ff742418			push	qword [rsp+24]
19dcf2			version1120:
19dcf2			version1121:
19dcf2 58			pop	rax
19dcf3 488b4007			mov	rax,[rax+7]
19dcf7 50			push	rax
19dcf8			version1122:
19dcf8 41ffb278020000		push	qword [r10+632]
19dcff			version1123:
19dcff			version1124:
19dcff 48c7c080eb9e02		mov	rax,dword 43969408
19dd06 4889442410		mov	[rsp+16],rax
19dd0b e919f1ffff		jmp	version800
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #342
                      stack: (number pair
                                     pair
                                     unknown
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #311
                                     type: local
                                     offset: 5
                                     pos: (5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ce92 -> 7f93ae19dd10
------------------------------------------------------------------------
d07d28				bits 64
d07d28			stub_7f93aed07d28_1:
d07d28 fec1			inc	cl
d07d2a			stub_7f93aed07d28_0:
d07d2a e8def248ff		call	do_callback_handler
d07d2f 51279f0200000000
(obj= #(#<procedure #487>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19dd10				bits 64
19dd10			version1125:
19dd10 ff742418			push	qword [rsp+24]
19dd14			version1126:
19dd14 50			push	rax
19dd15 53			push	rbx
19dd16 48b84000fcb0937f
19dd1e 0000			mov	rax,140272306225216
19dd20 488b18			mov	rbx,[rax]
19dd23 48ffc3			inc	rbx
19dd26 488918			mov	[rax],rbx
19dd29 5b			pop	rbx
19dd2a 58			pop	rax
19dd2b 488b0424			mov	rax,[rsp]
19dd2f 4889c3			mov	rbx,rax
19dd32 4883e003			and	rax,byte 3
19dd36 4883f801			cmp	rax,byte 1
19dd3a 750e			jne	short patchable_jump73
19dd3c 488b43ff			mov	rax,[rbx-1]
19dd40 4825f8000000		and	rax,248
19dd46 4883f808			cmp	rax,byte 8
19dd4a			patchable_jump73:
19dd4a 0f84da9fb600		je	stub_7f93aed07d28_0
19dd50 e9d39fb600		jmp	stub_7f93aed07d28_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19dd4a -> 7f93aed07d28
GEN VERSION >>> #<ctx #488
                      stack: (pair number
                                   pair
                                   pair
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((n . #<identifier #343
                                    type: local
                                    offset: 8
                                    pos: (8)
                                    flags: ()
                                    stype: ()>)
                            (l1 . #<identifier #489
                                     type: local
                                     offset: 5
                                     pos: (9 5)
                                     flags: ()
                                     stype: ()>)
                            (l2 . #<identifier #326
                                     type: local
                                     offset: 6
                                     pos: (6)
                                     flags: ()
                                     stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #221
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #344
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
19dd50				bits 64
19dd50			version1127:
19dd50 6af6			push	qword byte -10
19dd52			version1128:
19dd52 58			pop	rax
19dd53 5b			pop	rbx
19dd54 48894307			mov	[rbx+7],rax
19dd58 6aee			push	qword byte -18
19dd5a			version1129:
19dd5a ff742420			push	qword [rsp+32]
19dd5e			version1130:
19dd5e			version1131:
19dd5e 58			pop	rax
19dd5f 488b4007			mov	rax,[rax+7]
19dd63 50			push	rax
19dd64			version1132:
19dd64 58			pop	rax
19dd65 4883c408			add	rsp,byte 8
19dd69 50			push	rax
19dd6a e9edeaffff		jmp	version672
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #168
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #169
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #170
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19bd04 -> 7f93ae19dd6f
------------------------------------------------------------------------
d08048				bits 64
d08048			stub_7f93aed08048_0:
d08048 e8c0ef48ff		call	do_callback_handler
d0804d e190a00200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d07ac8				bits 64
d07ac8			stub_7f93aed07ac8_1:
d07ac8 fec1			inc	cl
d07aca			stub_7f93aed07ac8_0:
d07aca e83ef548ff		call	do_callback_handler
d07acf 8191a00200000000
(obj= #(#<procedure #490>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19dd6f				bits 64
19dd6f 90		version1133:
19dd70 6afe			push	qword byte -2
19dd72			version1134:
19dd72 6afe			push	qword byte -2
19dd74			version1135:
19dd74 ff742410			push	qword [rsp+16]
19dd78			version1136:
19dd78			version1137:
19dd78 58			pop	rax
19dd79 488b4007			mov	rax,[rax+7]
19dd7d 50			push	rax
19dd7e			version1138:
19dd7e ff742438			push	qword [rsp+56]
19dd82			version1139:
19dd82 6af6			push	qword byte -10
19dd84			version1140:
19dd84			version1141:
19dd84 ff742408			push	qword [rsp+8]
19dd88			version1142:
19dd88 48c7c000000000		mov	rax,dword 0
19dd8f 50			push	rax
19dd90			version1143:
19dd90 50			push	rax
19dd91 53			push	rbx
19dd92 48b84000fcb0937f
19dd9a 0000			mov	rax,140272306225216
19dd9c 488b18			mov	rbx,[rax]
19dd9f 48ffc3			inc	rbx
19dda2 488918			mov	[rax],rbx
19dda5 5b			pop	rbx
19dda6 58			pop	rax
19dda7 48c7c003000000		mov	rax,dword 3
19ddae 4823442408		and	rax,[rsp+8]
19ddb3			patchable_jump74:
19ddb3 0f84119db600		je	stub_7f93aed07ac8_0
19ddb9 e90a9db600		jmp	stub_7f93aed07ac8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19ddb3 -> 7f93aed07ac8
GEN VERSION >>> #<ctx #491
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #492
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07ab8				bits 64
d07ab8			stub_7f93aed07ab8_0:
d07ab8 e850f548ff		call	do_callback_handler
d07abd 61aa9f0200000000
(obj= #(#<procedure #497>))
------------------------------------------------------------------------
d07aa8				bits 64
d07aa8			stub_7f93aed07aa8_1:
d07aa8 fec1			inc	cl
d07aaa			stub_7f93aed07aa8_0:
d07aaa e85ef548ff		call	do_callback_handler
d07aaf b1aa9f0200000000
(obj= #(#<procedure #498>))
------------------------------------------------------------------------
19ddb9				bits 64
19ddb9 909090		version1144:
19ddbc			version1145:
19ddbc 488b442408		mov	rax,[rsp+8]
19ddc1 483b0424			cmp	rax,[rsp]
19ddc5			label-jump18:
19ddc5 0f85ed9cb600		jne	stub_7f93aed07ab8_0
19ddcb			version1146:
19ddcb 4883c410			add	rsp,byte 16
19ddcf 6afa			push	qword byte -6
19ddd1			version1147:
19ddd1 58			pop	rax
19ddd2 4883f8fe			cmp	rax,byte -2
19ddd6			patchable_jump75:
19ddd6 0f84ce9cb600		je	stub_7f93aed07aa8_0
19dddc e9c79cb600		jmp	stub_7f93aed07aa8_1
GEN VERSION >>> #<ctx #491
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #492
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ddc5 -> 7f93ae19dde1
------------------------------------------------------------------------
19dde1				bits 64
19dde1 909090		version1148:
19dde4 4883c410			add	rsp,byte 16
19dde8 6afe			push	qword byte -2
19ddea ebe5			jmp	short version1147
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #499
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #500
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #493
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19ddd6 -> 7f93ae19ddec
------------------------------------------------------------------------
d07a98				bits 64
d07a98			stub_7f93aed07a98_0:
d07a98 e870f548ff		call	do_callback_handler
d07a9d a1ab9f0200000000
(obj= #(#<procedure #501>))
------------------------------------------------------------------------
d07a88				bits 64
d07a88			stub_7f93aed07a88_1:
d07a88 fec1			inc	cl
d07a8a			stub_7f93aed07a88_0:
d07a8a e87ef548ff		call	do_callback_handler
d07a8f f1ab9f0200000000
(obj= #(#<procedure #502>))
------------------------------------------------------------------------
19ddec				bits 64
19ddec			version1149:
19ddec ff742408			push	qword [rsp+8]
19ddf0			version1150:
19ddf0 48c7c004000000		mov	rax,dword 4
19ddf7 50			push	rax
19ddf8			version1151:
19ddf8			version1152:
19ddf8			version1153:
19ddf8 58			pop	rax
19ddf9 48290424			sub	[rsp],rax
19ddfd 0f8045a2b600		jo	stub_7f93aed08048_0
19de03			version1154:
19de03 6af6			push	qword byte -10
19de05			version1155:
19de05 ff742410			push	qword [rsp+16]
19de09			version1156:
19de09 498d4424e8		lea	rax,[r12-24]
19de0e 49bf0800fcb0937f
19de16 0000			mov	r15,140272306225160
19de18 493b4728			cmp	rax,[r15+40]
19de1c 7d38			jge	short alloc-ok133
19de1e 48c7c018000000		mov	rax,dword 24
19de25 57			push	rdi
19de26 56			push	rsi
19de27 52			push	rdx
19de28 51			push	rcx
19de29 4150			push	r8
19de2b 4151			push	r9
19de2d 4152			push	r10
19de2f 4153			push	r11
19de31 50			push	rax
19de32 4889e7			mov	rdi,rsp
19de35 4883e4f0			and	rsp,byte -16
19de39 4883ec08			sub	rsp,byte 8
19de3d 57			push	rdi
19de3e e88d026d01		call	gc
19de43 5c			pop	rsp
19de44 4989c4			mov	r12,rax
19de47 58			pop	rax
19de48 415b			pop	r11
19de4a 415a			pop	r10
19de4c 4159			pop	r9
19de4e 4158			pop	r8
19de50 59			pop	rcx
19de51 5a			pop	rdx
19de52 5e			pop	rsi
19de53 5f			pop	rdi
19de54 eb04			jmp	short alloc-end133
19de56			alloc-ok133:
19de56 4983ec18			sub	r12,byte 24
19de5a			alloc-end133:
19de5a 48c7c00e030000		mov	rax,dword 782
19de61 49890424			mov	[r12],rax
19de65 5b			pop	rbx
19de66 58			pop	rax
19de67 4989442408		mov	[r12+8],rax
19de6c 49895c2410		mov	[r12+16],rbx
19de71 4c89e0			mov	rax,r12
19de74 4883c001			add	rax,byte 1
19de78 50			push	rax
19de79			version1157:
19de79 488b442408		mov	rax,[rsp+8]
19de7e 4889442418		mov	[rsp+24],rax
19de83 488b0424			mov	rax,[rsp]
19de87 4889442410		mov	[rsp+16],rax
19de8c 4883c410			add	rsp,byte 16
19de90			version1158:
19de90 ff742408			push	qword [rsp+8]
19de94			version1159:
19de94 48c7c000000000		mov	rax,dword 0
19de9b 50			push	rax
19de9c			version1160:
19de9c			version1161:
19de9c			version1162:
19de9c 488b442408		mov	rax,[rsp+8]
19dea1 483b0424			cmp	rax,[rsp]
19dea5			label-jump19:
19dea5 0f85ed9bb600		jne	stub_7f93aed07a98_0
19deab			version1163:
19deab 4883c410			add	rsp,byte 16
19deaf 6afa			push	qword byte -6
19deb1			version1164:
19deb1 58			pop	rax
19deb2 4883f8fe			cmp	rax,byte -2
19deb6			patchable_jump76:
19deb6 0f84ce9bb600		je	stub_7f93aed07a88_0
19debc e9c79bb600		jmp	stub_7f93aed07a88_1
GEN VERSION >>> #<ctx #503
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #504
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19dea5 -> 7f93ae19dec1
------------------------------------------------------------------------
19dec1				bits 64
19dec1 909090		version1165:
19dec4 4883c410			add	rsp,byte 16
19dec8 6afe			push	qword byte -2
19deca ebe5			jmp	short version1164
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #506
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #507
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19deb6 -> 7f93ae19decc
------------------------------------------------------------------------
19decc				bits 64
19decc			version1166:
19decc ff742408			push	qword [rsp+8]
19ded0			version1167:
19ded0 48c7c004000000		mov	rax,dword 4
19ded7 50			push	rax
19ded8			version1168:
19ded8			version1169:
19ded8			version1170:
19ded8 58			pop	rax
19ded9 48290424			sub	[rsp],rax
19dedd 0f8065a1b600		jo	stub_7f93aed08048_0
19dee3			version1171:
19dee3 6af6			push	qword byte -10
19dee5			version1172:
19dee5 ff742410			push	qword [rsp+16]
19dee9			version1173:
19dee9 498d4424e8		lea	rax,[r12-24]
19deee 49bf0800fcb0937f
19def6 0000			mov	r15,140272306225160
19def8 493b4728			cmp	rax,[r15+40]
19defc 7d38			jge	short alloc-ok134
19defe 48c7c018000000		mov	rax,dword 24
19df05 57			push	rdi
19df06 56			push	rsi
19df07 52			push	rdx
19df08 51			push	rcx
19df09 4150			push	r8
19df0b 4151			push	r9
19df0d 4152			push	r10
19df0f 4153			push	r11
19df11 50			push	rax
19df12 4889e7			mov	rdi,rsp
19df15 4883e4f0			and	rsp,byte -16
19df19 4883ec08			sub	rsp,byte 8
19df1d 57			push	rdi
19df1e e8ad016d01		call	gc
19df23 5c			pop	rsp
19df24 4989c4			mov	r12,rax
19df27 58			pop	rax
19df28 415b			pop	r11
19df2a 415a			pop	r10
19df2c 4159			pop	r9
19df2e 4158			pop	r8
19df30 59			pop	rcx
19df31 5a			pop	rdx
19df32 5e			pop	rsi
19df33 5f			pop	rdi
19df34 eb04			jmp	short alloc-end134
19df36			alloc-ok134:
19df36 4983ec18			sub	r12,byte 24
19df3a			alloc-end134:
19df3a 48c7c00e030000		mov	rax,dword 782
19df41 49890424			mov	[r12],rax
19df45 5b			pop	rbx
19df46 58			pop	rax
19df47 4989442408		mov	[r12+8],rax
19df4c 49895c2410		mov	[r12+16],rbx
19df51 4c89e0			mov	rax,r12
19df54 4883c001			add	rax,byte 1
19df58 50			push	rax
19df59			version1174:
19df59 488b442408		mov	rax,[rsp+8]
19df5e 4889442418		mov	[rsp+24],rax
19df63 488b0424			mov	rax,[rsp]
19df67 4889442410		mov	[rsp+16],rax
19df6c 4883c410			add	rsp,byte 16
19df70 e91bffffff		jmp	version1158
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #506
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #507
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #505
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #494
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #495
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #496
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19debc -> 7f93ae19df75
------------------------------------------------------------------------
d07a88				bits 64
d07a88			stub_7f93aed07a88_0:
d07a88 e8daf548ff		call	do_callback_cont_handler
d07a8d 31ad9f0200000000
(obj= #(#<procedure #508>))
------------------------------------------------------------------------
19df75				bits 64
19df75 909090		version1175:
19df78 ff3424			push	qword [rsp]
19df7b			version1176:
19df7b 58			pop	rax
19df7c 4883c410			add	rsp,byte 16
19df80 50			push	rax
19df81			version1177:
19df81 41ffb280030000		push	qword [r10+896]
19df88			version1178:
19df88			version1179:
19df88 48c7c080ad9f02		mov	rax,dword 44019072
19df8f 4889442418		mov	[rsp+24],rax
19df94			version1180:
19df94 488b0424			mov	rax,[rsp]
19df98 49c7c351fa9e02		mov	r11,dword 43973201
19df9f 488b4007			mov	rax,[rax+7]
19dfa3 488b4020			mov	rax,[rax+32]
19dfa7 ffe0			jmp	rax
------------------------------------------------------------------------
d07a78				bits 64
d07a78			stub_7f93aed07a78_1:
d07a78 fec1			inc	cl
d07a7a			stub_7f93aed07a78_0:
d07a7a e88ef548ff		call	do_callback_handler
d07a7f a1ae9f0200000000
(obj= #(#<procedure #509>))
------------------------------------------------------------------------
19dfa9				bits 64
19dfa9 909090		continuation_17:
19dfac 50			push	rax
19dfad			version1181:
19dfad ff742410			push	qword [rsp+16]
19dfb1			version1182:
19dfb1			version1183:
19dfb1 58			pop	rax
19dfb2 488b400f			mov	rax,[rax+15]
19dfb6 50			push	rax
19dfb7			version1184:
19dfb7 488b0424			mov	rax,[rsp]
19dfbb 4889442418		mov	[rsp+24],rax
19dfc0 4883c418			add	rsp,byte 24
19dfc4			version1185:
19dfc4 ff3424			push	qword [rsp]
19dfc7			version1186:
19dfc7			version1187:
19dfc7 50			push	rax
19dfc8 53			push	rbx
19dfc9 48b84000fcb0937f
19dfd1 0000			mov	rax,140272306225216
19dfd3 488b18			mov	rbx,[rax]
19dfd6 48ffc3			inc	rbx
19dfd9 488918			mov	[rax],rbx
19dfdc 5b			pop	rbx
19dfdd 58			pop	rax
19dfde 48c7c0f6ffffff		mov	rax,dword -10
19dfe5 48390424			cmp	[rsp],rax
19dfe9 48c7c0faffffff		mov	rax,dword -6
19dff0 7407			je	short done16
19dff2 48c7c0feffffff		mov	rax,dword -2
19dff9			done16:
19dff9 48890424			mov	[rsp],rax
19dffd			version1188:
19dffd 58			pop	rax
19dffe 4883f8fe			cmp	rax,byte -2
19e002			patchable_jump77:
19e002 0f84729ab600		je	stub_7f93aed07a78_0
19e008 e96b9ab600		jmp	stub_7f93aed07a78_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19e002 -> 7f93aed07a78
GEN VERSION >>> #<ctx #510
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #511
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #512
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07a68				bits 64
d07a68			stub_7f93aed07a68_1:
d07a68 fec1			inc	cl
d07a6a			stub_7f93aed07a68_0:
d07a6a e89ef548ff		call	do_callback_handler
d07a6f 41af9f0200000000
(obj= #(#<procedure #513>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
19e008				bits 64
19e008			version1189:
19e008 ff3424			push	qword [rsp]
19e00b			version1190:
19e00b 50			push	rax
19e00c 53			push	rbx
19e00d 48b84000fcb0937f
19e015 0000			mov	rax,140272306225216
19e017 488b18			mov	rbx,[rax]
19e01a 48ffc3			inc	rbx
19e01d 488918			mov	[rax],rbx
19e020 5b			pop	rbx
19e021 58			pop	rax
19e022 488b0424			mov	rax,[rsp]
19e026 4889c3			mov	rbx,rax
19e029 4883e003			and	rax,byte 3
19e02d 4883f801			cmp	rax,byte 1
19e031 750e			jne	short patchable_jump78
19e033 488b43ff			mov	rax,[rbx-1]
19e037 4825f8000000		and	rax,248
19e03d 4883f808			cmp	rax,byte 8
19e041			patchable_jump78:
19e041 0f84239ab600		je	stub_7f93aed07a68_0
19e047 e91c9ab600		jmp	stub_7f93aed07a68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19e041 -> 7f93aed07a68
GEN VERSION >>> #<ctx #514
                      stack: (pair pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #515
                                    type: local
                                    offset: 5
                                    pos: (6 5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #516
                                    type: local
                                    offset: 3
                                    pos: (6 5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07a58				bits 64
d07a58			stub_7f93aed07a58_1:
d07a58 fec1			inc	cl
d07a5a			stub_7f93aed07a58_0:
d07a5a e8aef548ff		call	do_callback_handler
d07a5f 41ed9e0200000000
(obj= #(#<procedure #517>))
------------------------------------------------------------------------
19e047				bits 64
19e047 90		version1191:
19e048 58			pop	rax
19e049 488b4007			mov	rax,[rax+7]
19e04d 50			push	rax
19e04e			version1192:
19e04e			version1193:
19e04e 50			push	rax
19e04f 53			push	rbx
19e050 48b84000fcb0937f
19e058 0000			mov	rax,140272306225216
19e05a 488b18			mov	rbx,[rax]
19e05d 48ffc3			inc	rbx
19e060 488918			mov	[rax],rbx
19e063 5b			pop	rbx
19e064 58			pop	rax
19e065 48c7c0f6ffffff		mov	rax,dword -10
19e06c 48390424			cmp	[rsp],rax
19e070 48c7c0faffffff		mov	rax,dword -6
19e077 7407			je	short done17
19e079 48c7c0feffffff		mov	rax,dword -2
19e080			done17:
19e080 48890424			mov	[rsp],rax
19e084			version1194:
19e084 58			pop	rax
19e085 4883f8fe			cmp	rax,byte -2
19e089			patchable_jump79:
19e089 0f84cb99b600		je	stub_7f93aed07a58_0
19e08f e9c499b600		jmp	stub_7f93aed07a58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19e089 -> 7f93aed07a58
GEN VERSION >>> #<ctx #518
                      stack: (pair number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((l . #<identifier #519
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #520
                                    type: local
                                    offset: 3
                                    pos: (3 5)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07a48				bits 64
d07a48			stub_7f93aed07a48_0:
d07a48 e8c0f548ff		call	do_callback_handler
d07a4d 8113d20200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
d07a38				bits 64
d07a38			stub_7f93aed07a38_1:
d07a38 fec1			inc	cl
d07a3a			stub_7f93aed07a38_0:
d07a3a e8cef548ff		call	do_callback_handler
d07a3f 81f69e0200000000
(obj= #(#<procedure #521>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
19e08f				bits 64
19e08f 90		version1195:
19e090 6afe			push	qword byte -2
19e092			version1196:
19e092 6afe			push	qword byte -2
19e094			version1197:
19e094 ff742410			push	qword [rsp+16]
19e098			version1198:
19e098			version1199:
19e098 58			pop	rax
19e099 488b4007			mov	rax,[rax+7]
19e09d 50			push	rax
19e09e			version1200:
19e09e ff742438			push	qword [rsp+56]
19e0a2			version1201:
19e0a2 6af6			push	qword byte -10
19e0a4			version1202:
19e0a4			version1203:
19e0a4 ff742408			push	qword [rsp+8]
19e0a8			version1204:
19e0a8 48c7c000000000		mov	rax,dword 0
19e0af 50			push	rax
19e0b0			version1205:
19e0b0 50			push	rax
19e0b1 53			push	rbx
19e0b2 48b84000fcb0937f
19e0ba 0000			mov	rax,140272306225216
19e0bc 488b18			mov	rbx,[rax]
19e0bf 48ffc3			inc	rbx
19e0c2 488918			mov	[rax],rbx
19e0c5 5b			pop	rbx
19e0c6 58			pop	rax
19e0c7 48c7c003000000		mov	rax,dword 3
19e0ce 4823442408		and	rax,[rsp+8]
19e0d3			patchable_jump80:
19e0d3 0f846199b600		je	stub_7f93aed07a38_0
19e0d9 e95a99b600		jmp	stub_7f93aed07a38_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f93ae19e0d3 -> 7f93aed07a38
GEN VERSION >>> #<ctx #522
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #523
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #524
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
d07a28				bits 64
d07a28			stub_7f93aed07a28_0:
d07a28 e8e0f548ff		call	do_callback_handler
d07a2d 41fb9e0200000000
(obj= #(#<procedure #528>))
------------------------------------------------------------------------
d07a18				bits 64
d07a18			stub_7f93aed07a18_1:
d07a18 fec1			inc	cl
d07a1a			stub_7f93aed07a18_0:
d07a1a e8eef548ff		call	do_callback_handler
d07a1f 21dd9e0200000000
(obj= #(#<procedure #529>))
------------------------------------------------------------------------
19e0d9				bits 64
19e0d9 909090		version1206:
19e0dc			version1207:
19e0dc 488b442408		mov	rax,[rsp+8]
19e0e1 483b0424			cmp	rax,[rsp]
19e0e5			label-jump20:
19e0e5 0f853d99b600		jne	stub_7f93aed07a28_0
19e0eb			version1208:
19e0eb 4883c410			add	rsp,byte 16
19e0ef 6afa			push	qword byte -6
19e0f1			version1209:
19e0f1 58			pop	rax
19e0f2 4883f8fe			cmp	rax,byte -2
19e0f6			patchable_jump81:
19e0f6 0f841e99b600		je	stub_7f93aed07a18_0
19e0fc e91799b600		jmp	stub_7f93aed07a18_1
GEN VERSION >>> #<ctx #522
                      stack: (number number
                                     null
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #523
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #524
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e0e5 -> 7f93ae19e101
------------------------------------------------------------------------
19e101				bits 64
19e101 909090		version1210:
19e104 4883c410			add	rsp,byte 16
19e108 6afe			push	qword byte -2
19e10a ebe5			jmp	short version1209
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #530
                      stack: (null number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #531
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #524
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e0f6 -> 7f93ae19e10c
------------------------------------------------------------------------
d07a08				bits 64
d07a08			stub_7f93aed07a08_0:
d07a08 e800f648ff		call	do_callback_handler
d07a0d 61f39e0200000000
(obj= #(#<procedure #532>))
------------------------------------------------------------------------
d079f8				bits 64
d079f8			stub_7f93aed079f8_1:
d079f8 fec1			inc	cl
d079fa			stub_7f93aed079f8_0:
d079fa e80ef648ff		call	do_callback_handler
d079ff 71ef9e0200000000
(obj= #(#<procedure #533>))
------------------------------------------------------------------------
19e10c				bits 64
19e10c			version1211:
19e10c ff742408			push	qword [rsp+8]
19e110			version1212:
19e110 48c7c004000000		mov	rax,dword 4
19e117 50			push	rax
19e118			version1213:
19e118			version1214:
19e118			version1215:
19e118 58			pop	rax
19e119 48290424			sub	[rsp],rax
19e11d 0f802599b600		jo	stub_7f93aed07a48_0
19e123			version1216:
19e123 6af6			push	qword byte -10
19e125			version1217:
19e125 ff742410			push	qword [rsp+16]
19e129			version1218:
19e129 498d4424e8		lea	rax,[r12-24]
19e12e 49bf0800fcb0937f
19e136 0000			mov	r15,140272306225160
19e138 493b4728			cmp	rax,[r15+40]
19e13c 7d38			jge	short alloc-ok135
19e13e 48c7c018000000		mov	rax,dword 24
19e145 57			push	rdi
19e146 56			push	rsi
19e147 52			push	rdx
19e148 51			push	rcx
19e149 4150			push	r8
19e14b 4151			push	r9
19e14d 4152			push	r10
19e14f 4153			push	r11
19e151 50			push	rax
19e152 4889e7			mov	rdi,rsp
19e155 4883e4f0			and	rsp,byte -16
19e159 4883ec08			sub	rsp,byte 8
19e15d 57			push	rdi
19e15e e86dff6c01		call	gc
19e163 5c			pop	rsp
19e164 4989c4			mov	r12,rax
19e167 58			pop	rax
19e168 415b			pop	r11
19e16a 415a			pop	r10
19e16c 4159			pop	r9
19e16e 4158			pop	r8
19e170 59			pop	rcx
19e171 5a			pop	rdx
19e172 5e			pop	rsi
19e173 5f			pop	rdi
19e174 eb04			jmp	short alloc-end135
19e176			alloc-ok135:
19e176 4983ec18			sub	r12,byte 24
19e17a			alloc-end135:
19e17a 48c7c00e030000		mov	rax,dword 782
19e181 49890424			mov	[r12],rax
19e185 5b			pop	rbx
19e186 58			pop	rax
19e187 4989442408		mov	[r12+8],rax
19e18c 49895c2410		mov	[r12+16],rbx
19e191 4c89e0			mov	rax,r12
19e194 4883c001			add	rax,byte 1
19e198 50			push	rax
19e199			version1219:
19e199 488b442408		mov	rax,[rsp+8]
19e19e 4889442418		mov	[rsp+24],rax
19e1a3 488b0424			mov	rax,[rsp]
19e1a7 4889442410		mov	[rsp+16],rax
19e1ac 4883c410			add	rsp,byte 16
19e1b0			version1220:
19e1b0 ff742408			push	qword [rsp+8]
19e1b4			version1221:
19e1b4 48c7c000000000		mov	rax,dword 0
19e1bb 50			push	rax
19e1bc			version1222:
19e1bc			version1223:
19e1bc			version1224:
19e1bc 488b442408		mov	rax,[rsp+8]
19e1c1 483b0424			cmp	rax,[rsp]
19e1c5			label-jump21:
19e1c5 0f853d98b600		jne	stub_7f93aed07a08_0
19e1cb			version1225:
19e1cb 4883c410			add	rsp,byte 16
19e1cf 6afa			push	qword byte -6
19e1d1			version1226:
19e1d1 58			pop	rax
19e1d2 4883f8fe			cmp	rax,byte -2
19e1d6			patchable_jump82:
19e1d6 0f841e98b600		je	stub_7f93aed079f8_0
19e1dc e91798b600		jmp	stub_7f93aed079f8_1
GEN VERSION >>> #<ctx #534
                      stack: (number number
                                     pair
                                     number
                                     unknown
                                     retAddr
                                     boolean
                                     pair
                                     number
                                     pair
                                     procedure
                                     unknown
                                     unknown
                                     retAddr)
                      env: ((j . #<identifier #535
                                    type: local
                                    offset: 9
                                    pos: (11 9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #536
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e1c5 -> 7f93ae19e1e1
------------------------------------------------------------------------
19e1e1				bits 64
19e1e1 909090		version1227:
19e1e4 4883c410			add	rsp,byte 16
19e1e8 6afe			push	qword byte -2
19e1ea ebe5			jmp	short version1226
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #537
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #538
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #536
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e1d6 -> 7f93ae19e1ec
------------------------------------------------------------------------
19e1ec				bits 64
19e1ec			version1228:
19e1ec ff742408			push	qword [rsp+8]
19e1f0			version1229:
19e1f0 48c7c004000000		mov	rax,dword 4
19e1f7 50			push	rax
19e1f8			version1230:
19e1f8			version1231:
19e1f8			version1232:
19e1f8 58			pop	rax
19e1f9 48290424			sub	[rsp],rax
19e1fd 0f804598b600		jo	stub_7f93aed07a48_0
19e203			version1233:
19e203 6af6			push	qword byte -10
19e205			version1234:
19e205 ff742410			push	qword [rsp+16]
19e209			version1235:
19e209 498d4424e8		lea	rax,[r12-24]
19e20e 49bf0800fcb0937f
19e216 0000			mov	r15,140272306225160
19e218 493b4728			cmp	rax,[r15+40]
19e21c 7d38			jge	short alloc-ok136
19e21e 48c7c018000000		mov	rax,dword 24
19e225 57			push	rdi
19e226 56			push	rsi
19e227 52			push	rdx
19e228 51			push	rcx
19e229 4150			push	r8
19e22b 4151			push	r9
19e22d 4152			push	r10
19e22f 4153			push	r11
19e231 50			push	rax
19e232 4889e7			mov	rdi,rsp
19e235 4883e4f0			and	rsp,byte -16
19e239 4883ec08			sub	rsp,byte 8
19e23d 57			push	rdi
19e23e e88dfe6c01		call	gc
19e243 5c			pop	rsp
19e244 4989c4			mov	r12,rax
19e247 58			pop	rax
19e248 415b			pop	r11
19e24a 415a			pop	r10
19e24c 4159			pop	r9
19e24e 4158			pop	r8
19e250 59			pop	rcx
19e251 5a			pop	rdx
19e252 5e			pop	rsi
19e253 5f			pop	rdi
19e254 eb04			jmp	short alloc-end136
19e256			alloc-ok136:
19e256 4983ec18			sub	r12,byte 24
19e25a			alloc-end136:
19e25a 48c7c00e030000		mov	rax,dword 782
19e261 49890424			mov	[r12],rax
19e265 5b			pop	rbx
19e266 58			pop	rax
19e267 4989442408		mov	[r12+8],rax
19e26c 49895c2410		mov	[r12+16],rbx
19e271 4c89e0			mov	rax,r12
19e274 4883c001			add	rax,byte 1
19e278 50			push	rax
19e279			version1236:
19e279 488b442408		mov	rax,[rsp+8]
19e27e 4889442418		mov	[rsp+24],rax
19e283 488b0424			mov	rax,[rsp]
19e287 4889442410		mov	[rsp+16],rax
19e28c 4883c410			add	rsp,byte 16
19e290 e91bffffff		jmp	version1220
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #537
                      stack: (pair number
                                   unknown
                                   retAddr
                                   boolean
                                   pair
                                   number
                                   pair
                                   procedure
                                   unknown
                                   unknown
                                   retAddr)
                      env: ((j . #<identifier #538
                                    type: local
                                    offset: 9
                                    pos: (9)
                                    flags: ()
                                    stype: ()>)
                            (a . #<identifier #536
                                    type: local
                                    offset: 10
                                    pos: (10)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #525
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #526
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #527
                                    type: local
                                    offset: 1
                                    pos: (9 1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e1dc -> 7f93ae19e295
------------------------------------------------------------------------
d079f8				bits 64
d079f8			stub_7f93aed079f8_0:
d079f8 e86af648ff		call	do_callback_cont_handler
d079fd d191a00200000000
(obj= #(#<procedure #539>))
------------------------------------------------------------------------
19e295				bits 64
19e295 909090		version1237:
19e298 ff3424			push	qword [rsp]
19e29b			version1238:
19e29b 58			pop	rax
19e29c 4883c410			add	rsp,byte 16
19e2a0 50			push	rax
19e2a1			version1239:
19e2a1 41ffb280030000		push	qword [r10+896]
19e2a8			version1240:
19e2a8			version1241:
19e2a8 48c7c090af9f02		mov	rax,dword 44019600
19e2af 4889442418		mov	[rsp+24],rax
19e2b4			version1242:
19e2b4 488b0424			mov	rax,[rsp]
19e2b8 49c7c351fa9e02		mov	r11,dword 43973201
19e2bf 488b4007			mov	rax,[rax+7]
19e2c3 488b4020			mov	rax,[rax+32]
19e2c7 ffe0			jmp	rax
------------------------------------------------------------------------
19e2c9				bits 64
19e2c9 909090		continuation_18:
19e2cc 50			push	rax
19e2cd			version1243:
19e2cd ff742410			push	qword [rsp+16]
19e2d1			version1244:
19e2d1			version1245:
19e2d1 58			pop	rax
19e2d2 488b400f			mov	rax,[rax+15]
19e2d6 50			push	rax
19e2d7			version1246:
19e2d7 488b0424			mov	rax,[rsp]
19e2db 4889442418		mov	[rsp+24],rax
19e2e0 4883c418			add	rsp,byte 24
19e2e4 e96bdfffff		jmp	version523
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<ctx #510
                      stack: (unknown number
                                      pair
                                      procedure
                                      unknown
                                      unknown
                                      retAddr)
                      env: ((l . #<identifier #511
                                    type: local
                                    offset: 5
                                    pos: (5)
                                    flags: ()
                                    stype: ()>)
                            (i . #<identifier #159
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #512
                                    type: local
                                    offset: 3
                                    pos: (5 3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #155
                                    type: local
                                    offset: 0
                                    pos: (4 0)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19e002 -> 7f93ae19e2e9
------------------------------------------------------------------------
19e2e9				bits 64
19e2e9 909090		version1247:
19e2ec 6afe			push	qword byte -2
19e2ee			version1248:
19e2ee 58			pop	rax
19e2ef 4883c408			add	rsp,byte 8
19e2f3 50			push	rax
19e2f4 e9ebdfffff		jmp	version531
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #369
                      stack: (number pair procedure unknown unknown retAddr)
                      env: ((i . #<identifier #370
                                    type: local
                                    offset: 4
                                    pos: (4)
                                    flags: ()
                                    stype: ()>)
                            (l . #<identifier #368
                                    type: local
                                    offset: 3
                                    pos: (3)
                                    flags: ()
                                    stype: ()>)
                            (n . #<identifier #264
                                    type: local
                                    offset: 0
                                    pos: (0 4)
                                    flags: ()
                                    stype: ()>)
                            (m . #<identifier #135
                                    type: local
                                    offset: 1
                                    pos: (1)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 2>
>>> patching jump at 7f93ae19d073 -> 7f93ae19e2f9
------------------------------------------------------------------------
19e2f9				bits 64
19e2f9 909090		version1249:
19e2fc ff742408			push	qword [rsp+8]
19e300			version1250:
19e300 58			pop	rax
19e301 4883c408			add	rsp,byte 8
19e305 50			push	rax
19e306			version1251:
19e306 58			pop	rax
19e307 4883c408			add	rsp,byte 8
19e30b 50			push	rax
19e30c			version1252:
19e30c 58			pop	rax
19e30d 4883c418			add	rsp,byte 24
19e311 5a			pop	rdx
19e312 488b5a28			mov	rbx,[rdx+40]
19e316 49c7c328000000		mov	r11,dword 40
19e31d ffe3			jmp	rbx
------------------------------------------------------------------------
19e31f				bits 64
19e31f 90		continuation_19:
19e320 50			push	rax
19e321			version1253:
19e321 58			pop	rax
19e322 4883c408			add	rsp,byte 8
19e326 50			push	rax
19e327			version1254:
19e327 58			pop	rax
19e328 4883c420			add	rsp,byte 32
19e32c 5a			pop	rdx
19e32d 488b5a28			mov	rbx,[rdx+40]
19e331 49c7c328000000		mov	r11,dword 40
19e338 ffe3			jmp	rbx
------------------------------------------------------------------------
19e33a				bits 64
19e33a 9090		continuation_20:
19e33c 50			push	rax
19e33d			version1255:
19e33d 58			pop	rax
19e33e 4881c490030000		add	rsp,912
19e345 415f			pop	r15
19e347 415e			pop	r14
19e349 415d			pop	r13
19e34b 415c			pop	r12
19e34d 415b			pop	r11
19e34f 415a			pop	r10
19e351 4159			pop	r9
19e353 4158			pop	r8
19e355 5f			pop	rdi
19e356 5e			pop	rsi
19e357 5d			pop	rbp
19e358 5a			pop	rdx
19e359 59			pop	rcx
19e35a 5b			pop	rbx
19e35b 58			pop	rax
19e35c 5c			pop	rsp
19e35d c3			ret
Closures: 975
Executed tests: 494322
Code size (bytes): 29526
Stub size (bytes): 4368
Total size (bytes): 33894
Global table size: 5
Number of cctables: 116
Number of crtables: 20
CC table space: 4.63999
CR table space: 2.56000
Min versions number: 0
Max versions number: 6
-------------------------
Number of stubs for each number of version
#versions;#stubs;#ret;#entry
0;4841;177;243
1;623;9;7
2;209;0;0
3;5;0;0
4;40;0;0
6;11;0;0
-------------------------
