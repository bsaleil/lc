------------------------------------------------------------------------
ab5008				bits 64
ab5008 e9790f0000		jmp	rtlib_skip
ab500d			heap_limit_handler:
ab500d 4883ed58			sub	rbp,byte 88
ab5011 48894d50			mov	[rbp+80],rcx
ab5015 48895d48			mov	[rbp+72],rbx
ab5019 4c897d40			mov	[rbp+64],r15
ab501d 48897538			mov	[rbp+56],rsi
ab5021 48897d30			mov	[rbp+48],rdi
ab5025 4c895528			mov	[rbp+40],r10
ab5029 4c895d20			mov	[rbp+32],r11
ab502d 4c896518			mov	[rbp+24],r12
ab5031 4c896d10			mov	[rbp+16],r13
ab5035 4c897508			mov	[rbp+8],r14
ab5039 48895500			mov	[rbp],rdx
ab503d 4c890c2530defa00		mov	[+16440880],r9
ab5045 4889ef			mov	rdi,rbp
ab5048 55			push	rbp
ab5049 51			push	rcx
ab504a 4150			push	r8
ab504c 4151			push	r9
ab504e 4881ec80000000		sub	rsp,128
ab5055 f20f110424		movsd	[rsp],xmm0
ab505a f20f114c2408		movsd	[rsp+8],xmm1
ab5060 f20f11542410		movsd	[rsp+16],xmm2
ab5066 f20f115c2418		movsd	[rsp+24],xmm3
ab506c f20f11642420		movsd	[rsp+32],xmm4
ab5072 f20f116c2428		movsd	[rsp+40],xmm5
ab5078 f20f11742430		movsd	[rsp+48],xmm6
ab507e f20f117c2438		movsd	[rsp+56],xmm7
ab5084 f2440f11442440		movsd	[rsp+64],xmm8
ab508b f2440f114c2448		movsd	[rsp+72],xmm9
ab5092 f2440f11542450		movsd	[rsp+80],xmm10
ab5099 f2440f115c2458		movsd	[rsp+88],xmm11
ab50a0 f2440f11642460		movsd	[rsp+96],xmm12
ab50a7 f2440f116c2468		movsd	[rsp+104],xmm13
ab50ae f2440f11742470		movsd	[rsp+112],xmm14
ab50b5 f2440f117c2478		movsd	[rsp+120],xmm15
ab50bc 4889e0			mov	rax,rsp
ab50bf 4883e4f0			and	rsp,byte -16
ab50c3 4883ec08			sub	rsp,byte 8
ab50c7 50			push	rax
ab50c8 48b884073e38177f
ab50d0 0000			mov	rax,139737704564612
ab50d2 ffd0			call	rax
ab50d4 5c			pop	rsp
ab50d5 f20f100424		movsd	xmm0,[rsp]
ab50da f20f104c2408		movsd	xmm1,[rsp+8]
ab50e0 f20f10542410		movsd	xmm2,[rsp+16]
ab50e6 f20f105c2418		movsd	xmm3,[rsp+24]
ab50ec f20f10642420		movsd	xmm4,[rsp+32]
ab50f2 f20f106c2428		movsd	xmm5,[rsp+40]
ab50f8 f20f10742430		movsd	xmm6,[rsp+48]
ab50fe f20f107c2438		movsd	xmm7,[rsp+56]
ab5104 f2440f10442440		movsd	xmm8,[rsp+64]
ab510b f2440f104c2448		movsd	xmm9,[rsp+72]
ab5112 f2440f10542450		movsd	xmm10,[rsp+80]
ab5119 f2440f105c2458		movsd	xmm11,[rsp+88]
ab5120 f2440f10642460		movsd	xmm12,[rsp+96]
ab5127 f2440f106c2468		movsd	xmm13,[rsp+104]
ab512e f2440f10742470		movsd	xmm14,[rsp+112]
ab5135 f2440f107c2478		movsd	xmm15,[rsp+120]
ab513c 4881c480000000		add	rsp,128
ab5143 4159			pop	r9
ab5145 4158			pop	r8
ab5147 59			pop	rcx
ab5148 488b0c2528defa00		mov	rcx,[+16440872]
ab5150 49b90830af3a177f
ab5158 0000			mov	r9,139737745534984
ab515a 49894928			mov	[r9+40],rcx
ab515e 4c8b0c2530defa00		mov	r9,[+16440880]
ab5166 5d			pop	rbp
ab5167 488b5500			mov	rdx,[rbp]
ab516b 4c8b7508			mov	r14,[rbp+8]
ab516f 4c8b6d10			mov	r13,[rbp+16]
ab5173 4c8b6518			mov	r12,[rbp+24]
ab5177 4c8b5d20			mov	r11,[rbp+32]
ab517b 4c8b5528			mov	r10,[rbp+40]
ab517f 488b7d30			mov	rdi,[rbp+48]
ab5183 488b7538			mov	rsi,[rbp+56]
ab5187 4c8b7d40			mov	r15,[rbp+64]
ab518b 488b5d48			mov	rbx,[rbp+72]
ab518f 488b4d50			mov	rcx,[rbp+80]
ab5193 4883c558			add	rbp,byte 88
ab5197 c3			ret
ab5198			alloc_still_handler:
ab5198 4883ed58			sub	rbp,byte 88
ab519c 48894d50			mov	[rbp+80],rcx
ab51a0 48895d48			mov	[rbp+72],rbx
ab51a4 4c897d40			mov	[rbp+64],r15
ab51a8 48897538			mov	[rbp+56],rsi
ab51ac 48897d30			mov	[rbp+48],rdi
ab51b0 4c895528			mov	[rbp+40],r10
ab51b4 4c895d20			mov	[rbp+32],r11
ab51b8 4c896518			mov	[rbp+24],r12
ab51bc 4c896d10			mov	[rbp+16],r13
ab51c0 4c897508			mov	[rbp+8],r14
ab51c4 48895500			mov	[rbp],rdx
ab51c8 4c890c2530defa00		mov	[+16440880],r9
ab51d0 4889ef			mov	rdi,rbp
ab51d3 55			push	rbp
ab51d4 51			push	rcx
ab51d5 4150			push	r8
ab51d7 4151			push	r9
ab51d9 4881ec80000000		sub	rsp,128
ab51e0 f20f110424		movsd	[rsp],xmm0
ab51e5 f20f114c2408		movsd	[rsp+8],xmm1
ab51eb f20f11542410		movsd	[rsp+16],xmm2
ab51f1 f20f115c2418		movsd	[rsp+24],xmm3
ab51f7 f20f11642420		movsd	[rsp+32],xmm4
ab51fd f20f116c2428		movsd	[rsp+40],xmm5
ab5203 f20f11742430		movsd	[rsp+48],xmm6
ab5209 f20f117c2438		movsd	[rsp+56],xmm7
ab520f f2440f11442440		movsd	[rsp+64],xmm8
ab5216 f2440f114c2448		movsd	[rsp+72],xmm9
ab521d f2440f11542450		movsd	[rsp+80],xmm10
ab5224 f2440f115c2458		movsd	[rsp+88],xmm11
ab522b f2440f11642460		movsd	[rsp+96],xmm12
ab5232 f2440f116c2468		movsd	[rsp+104],xmm13
ab5239 f2440f11742470		movsd	[rsp+112],xmm14
ab5240 f2440f117c2478		movsd	[rsp+120],xmm15
ab5247 488bbc24a8000000		mov	rdi,[rsp+168]
ab524f 488b7560			mov	rsi,[rbp+96]
ab5253 4889e0			mov	rax,rsp
ab5256 4883e4f0			and	rsp,byte -16
ab525a 4883ec08			sub	rsp,byte 8
ab525e 50			push	rax
ab525f 48b850073e38177f
ab5267 0000			mov	rax,139737704564560
ab5269 ffd0			call	rax
ab526b 5c			pop	rsp
ab526c f20f100424		movsd	xmm0,[rsp]
ab5271 f20f104c2408		movsd	xmm1,[rsp+8]
ab5277 f20f10542410		movsd	xmm2,[rsp+16]
ab527d f20f105c2418		movsd	xmm3,[rsp+24]
ab5283 f20f10642420		movsd	xmm4,[rsp+32]
ab5289 f20f106c2428		movsd	xmm5,[rsp+40]
ab528f f20f10742430		movsd	xmm6,[rsp+48]
ab5295 f20f107c2438		movsd	xmm7,[rsp+56]
ab529b f2440f10442440		movsd	xmm8,[rsp+64]
ab52a2 f2440f104c2448		movsd	xmm9,[rsp+72]
ab52a9 f2440f10542450		movsd	xmm10,[rsp+80]
ab52b0 f2440f105c2458		movsd	xmm11,[rsp+88]
ab52b7 f2440f10642460		movsd	xmm12,[rsp+96]
ab52be f2440f106c2468		movsd	xmm13,[rsp+104]
ab52c5 f2440f10742470		movsd	xmm14,[rsp+112]
ab52cc f2440f107c2478		movsd	xmm15,[rsp+120]
ab52d3 4881c480000000		add	rsp,128
ab52da 4159			pop	r9
ab52dc 4158			pop	r8
ab52de 59			pop	rcx
ab52df 488b0c2528defa00		mov	rcx,[+16440872]
ab52e7 49b90830af3a177f
ab52ef 0000			mov	r9,139737745534984
ab52f1 49894928			mov	[r9+40],rcx
ab52f5 4c8b0c2530defa00		mov	r9,[+16440880]
ab52fd 5d			pop	rbp
ab52fe 488b5500			mov	rdx,[rbp]
ab5302 4c8b7508			mov	r14,[rbp+8]
ab5306 4c8b6d10			mov	r13,[rbp+16]
ab530a 4c8b6518			mov	r12,[rbp+24]
ab530e 4c8b5d20			mov	r11,[rbp+32]
ab5312 4c8b5528			mov	r10,[rbp+40]
ab5316 488b7d30			mov	rdi,[rbp+48]
ab531a 488b7538			mov	rsi,[rbp+56]
ab531e 4c8b7d40			mov	r15,[rbp+64]
ab5322 488b5d48			mov	rbx,[rbp+72]
ab5326 488b4d50			mov	rcx,[rbp+80]
ab532a 4883c558			add	rbp,byte 88
ab532e c3			ret
ab532f			gambit_call_handler:
ab532f 4883ed58			sub	rbp,byte 88
ab5333 48894d50			mov	[rbp+80],rcx
ab5337 48895d48			mov	[rbp+72],rbx
ab533b 4c897d40			mov	[rbp+64],r15
ab533f 48897538			mov	[rbp+56],rsi
ab5343 48897d30			mov	[rbp+48],rdi
ab5347 4c895528			mov	[rbp+40],r10
ab534b 4c895d20			mov	[rbp+32],r11
ab534f 4c896518			mov	[rbp+24],r12
ab5353 4c896d10			mov	[rbp+16],r13
ab5357 4c897508			mov	[rbp+8],r14
ab535b 48895500			mov	[rbp],rdx
ab535f 4c890c2530defa00		mov	[+16440880],r9
ab5367 4889ef			mov	rdi,rbp
ab536a 4889e6			mov	rsi,rsp
ab536d 55			push	rbp
ab536e 51			push	rcx
ab536f 4150			push	r8
ab5371 4151			push	r9
ab5373 4881ec80000000		sub	rsp,128
ab537a f20f110424		movsd	[rsp],xmm0
ab537f f20f114c2408		movsd	[rsp+8],xmm1
ab5385 f20f11542410		movsd	[rsp+16],xmm2
ab538b f20f115c2418		movsd	[rsp+24],xmm3
ab5391 f20f11642420		movsd	[rsp+32],xmm4
ab5397 f20f116c2428		movsd	[rsp+40],xmm5
ab539d f20f11742430		movsd	[rsp+48],xmm6
ab53a3 f20f117c2438		movsd	[rsp+56],xmm7
ab53a9 f2440f11442440		movsd	[rsp+64],xmm8
ab53b0 f2440f114c2448		movsd	[rsp+72],xmm9
ab53b7 f2440f11542450		movsd	[rsp+80],xmm10
ab53be f2440f115c2458		movsd	[rsp+88],xmm11
ab53c5 f2440f11642460		movsd	[rsp+96],xmm12
ab53cc f2440f116c2468		movsd	[rsp+104],xmm13
ab53d3 f2440f11742470		movsd	[rsp+112],xmm14
ab53da f2440f117c2478		movsd	[rsp+120],xmm15
ab53e1 4889e0			mov	rax,rsp
ab53e4 4883e4f0			and	rsp,byte -16
ab53e8 4883ec08			sub	rsp,byte 8
ab53ec 50			push	rax
ab53ed e83ca2d501		call	gambit_call
ab53f2 5c			pop	rsp
ab53f3 f20f100424		movsd	xmm0,[rsp]
ab53f8 f20f104c2408		movsd	xmm1,[rsp+8]
ab53fe f20f10542410		movsd	xmm2,[rsp+16]
ab5404 f20f105c2418		movsd	xmm3,[rsp+24]
ab540a f20f10642420		movsd	xmm4,[rsp+32]
ab5410 f20f106c2428		movsd	xmm5,[rsp+40]
ab5416 f20f10742430		movsd	xmm6,[rsp+48]
ab541c f20f107c2438		movsd	xmm7,[rsp+56]
ab5422 f2440f10442440		movsd	xmm8,[rsp+64]
ab5429 f2440f104c2448		movsd	xmm9,[rsp+72]
ab5430 f2440f10542450		movsd	xmm10,[rsp+80]
ab5437 f2440f105c2458		movsd	xmm11,[rsp+88]
ab543e f2440f10642460		movsd	xmm12,[rsp+96]
ab5445 f2440f106c2468		movsd	xmm13,[rsp+104]
ab544c f2440f10742470		movsd	xmm14,[rsp+112]
ab5453 f2440f107c2478		movsd	xmm15,[rsp+120]
ab545a 4881c480000000		add	rsp,128
ab5461 4159			pop	r9
ab5463 4158			pop	r8
ab5465 59			pop	rcx
ab5466 488b0c2528defa00		mov	rcx,[+16440872]
ab546e 49b90830af3a177f
ab5476 0000			mov	r9,139737745534984
ab5478 49894928			mov	[r9+40],rcx
ab547c 4c8b0c2530defa00		mov	r9,[+16440880]
ab5484 5d			pop	rbp
ab5485 488b5500			mov	rdx,[rbp]
ab5489 4c8b7508			mov	r14,[rbp+8]
ab548d 4c8b6d10			mov	r13,[rbp+16]
ab5491 4c8b6518			mov	r12,[rbp+24]
ab5495 4c8b5d20			mov	r11,[rbp+32]
ab5499 4c8b5528			mov	r10,[rbp+40]
ab549d 488b7d30			mov	rdi,[rbp+48]
ab54a1 488b7538			mov	rsi,[rbp+56]
ab54a5 4c8b7d40			mov	r15,[rbp+64]
ab54a9 488b5d48			mov	rbx,[rbp+72]
ab54ad 488b4d50			mov	rcx,[rbp+80]
ab54b1 4883c558			add	rbp,byte 88
ab54b5 c3			ret
ab54b6			do_callback_handler:
ab54b6 4883ed58			sub	rbp,byte 88
ab54ba 48894d50			mov	[rbp+80],rcx
ab54be 48895d48			mov	[rbp+72],rbx
ab54c2 4c897d40			mov	[rbp+64],r15
ab54c6 48897538			mov	[rbp+56],rsi
ab54ca 48897d30			mov	[rbp+48],rdi
ab54ce 4c895528			mov	[rbp+40],r10
ab54d2 4c895d20			mov	[rbp+32],r11
ab54d6 4c896518			mov	[rbp+24],r12
ab54da 4c896d10			mov	[rbp+16],r13
ab54de 4c897508			mov	[rbp+8],r14
ab54e2 48895500			mov	[rbp],rdx
ab54e6 4c890c2530defa00		mov	[+16440880],r9
ab54ee 4889ef			mov	rdi,rbp
ab54f1 4889e6			mov	rsi,rsp
ab54f4 55			push	rbp
ab54f5 51			push	rcx
ab54f6 4150			push	r8
ab54f8 4151			push	r9
ab54fa 4881ec80000000		sub	rsp,128
ab5501 f20f110424		movsd	[rsp],xmm0
ab5506 f20f114c2408		movsd	[rsp+8],xmm1
ab550c f20f11542410		movsd	[rsp+16],xmm2
ab5512 f20f115c2418		movsd	[rsp+24],xmm3
ab5518 f20f11642420		movsd	[rsp+32],xmm4
ab551e f20f116c2428		movsd	[rsp+40],xmm5
ab5524 f20f11742430		movsd	[rsp+48],xmm6
ab552a f20f117c2438		movsd	[rsp+56],xmm7
ab5530 f2440f11442440		movsd	[rsp+64],xmm8
ab5537 f2440f114c2448		movsd	[rsp+72],xmm9
ab553e f2440f11542450		movsd	[rsp+80],xmm10
ab5545 f2440f115c2458		movsd	[rsp+88],xmm11
ab554c f2440f11642460		movsd	[rsp+96],xmm12
ab5553 f2440f116c2468		movsd	[rsp+104],xmm13
ab555a f2440f11742470		movsd	[rsp+112],xmm14
ab5561 f2440f117c2478		movsd	[rsp+120],xmm15
ab5568 4889e0			mov	rax,rsp
ab556b 4883e4f0			and	rsp,byte -16
ab556f 4883ec08			sub	rsp,byte 8
ab5573 50			push	rax
ab5574 e824a2d501		call	do_callback
ab5579 5c			pop	rsp
ab557a f20f100424		movsd	xmm0,[rsp]
ab557f f20f104c2408		movsd	xmm1,[rsp+8]
ab5585 f20f10542410		movsd	xmm2,[rsp+16]
ab558b f20f105c2418		movsd	xmm3,[rsp+24]
ab5591 f20f10642420		movsd	xmm4,[rsp+32]
ab5597 f20f106c2428		movsd	xmm5,[rsp+40]
ab559d f20f10742430		movsd	xmm6,[rsp+48]
ab55a3 f20f107c2438		movsd	xmm7,[rsp+56]
ab55a9 f2440f10442440		movsd	xmm8,[rsp+64]
ab55b0 f2440f104c2448		movsd	xmm9,[rsp+72]
ab55b7 f2440f10542450		movsd	xmm10,[rsp+80]
ab55be f2440f105c2458		movsd	xmm11,[rsp+88]
ab55c5 f2440f10642460		movsd	xmm12,[rsp+96]
ab55cc f2440f106c2468		movsd	xmm13,[rsp+104]
ab55d3 f2440f10742470		movsd	xmm14,[rsp+112]
ab55da f2440f107c2478		movsd	xmm15,[rsp+120]
ab55e1 4881c480000000		add	rsp,128
ab55e8 4159			pop	r9
ab55ea 4158			pop	r8
ab55ec 59			pop	rcx
ab55ed 488b0c2528defa00		mov	rcx,[+16440872]
ab55f5 49b90830af3a177f
ab55fd 0000			mov	r9,139737745534984
ab55ff 49894928			mov	[r9+40],rcx
ab5603 4c8b0c2530defa00		mov	r9,[+16440880]
ab560b 5d			pop	rbp
ab560c 488b5500			mov	rdx,[rbp]
ab5610 4c8b7508			mov	r14,[rbp+8]
ab5614 4c8b6d10			mov	r13,[rbp+16]
ab5618 4c8b6518			mov	r12,[rbp+24]
ab561c 4c8b5d20			mov	r11,[rbp+32]
ab5620 4c8b5528			mov	r10,[rbp+40]
ab5624 488b7d30			mov	rdi,[rbp+48]
ab5628 488b7538			mov	rsi,[rbp+56]
ab562c 4c8b7d40			mov	r15,[rbp+64]
ab5630 488b5d48			mov	rbx,[rbp+72]
ab5634 488b4d50			mov	rcx,[rbp+80]
ab5638 4883c558			add	rbp,byte 88
ab563c c3			ret
ab563d			do_callback_fn_handler:
ab563d 4883ed58			sub	rbp,byte 88
ab5641 48894d50			mov	[rbp+80],rcx
ab5645 48895d48			mov	[rbp+72],rbx
ab5649 4c897d40			mov	[rbp+64],r15
ab564d 48897538			mov	[rbp+56],rsi
ab5651 48897d30			mov	[rbp+48],rdi
ab5655 4c895528			mov	[rbp+40],r10
ab5659 4c895d20			mov	[rbp+32],r11
ab565d 4c896518			mov	[rbp+24],r12
ab5661 4c896d10			mov	[rbp+16],r13
ab5665 4c897508			mov	[rbp+8],r14
ab5669 48895500			mov	[rbp],rdx
ab566d 4c890c2530defa00		mov	[+16440880],r9
ab5675 4889ef			mov	rdi,rbp
ab5678 4889e6			mov	rsi,rsp
ab567b 55			push	rbp
ab567c 51			push	rcx
ab567d 4150			push	r8
ab567f 4151			push	r9
ab5681 4881ec80000000		sub	rsp,128
ab5688 f20f110424		movsd	[rsp],xmm0
ab568d f20f114c2408		movsd	[rsp+8],xmm1
ab5693 f20f11542410		movsd	[rsp+16],xmm2
ab5699 f20f115c2418		movsd	[rsp+24],xmm3
ab569f f20f11642420		movsd	[rsp+32],xmm4
ab56a5 f20f116c2428		movsd	[rsp+40],xmm5
ab56ab f20f11742430		movsd	[rsp+48],xmm6
ab56b1 f20f117c2438		movsd	[rsp+56],xmm7
ab56b7 f2440f11442440		movsd	[rsp+64],xmm8
ab56be f2440f114c2448		movsd	[rsp+72],xmm9
ab56c5 f2440f11542450		movsd	[rsp+80],xmm10
ab56cc f2440f115c2458		movsd	[rsp+88],xmm11
ab56d3 f2440f11642460		movsd	[rsp+96],xmm12
ab56da f2440f116c2468		movsd	[rsp+104],xmm13
ab56e1 f2440f11742470		movsd	[rsp+112],xmm14
ab56e8 f2440f117c2478		movsd	[rsp+120],xmm15
ab56ef 4889e0			mov	rax,rsp
ab56f2 4883e4f0			and	rsp,byte -16
ab56f6 4883ec08			sub	rsp,byte 8
ab56fa 50			push	rax
ab56fb e80ca2d501		call	do_callback_fn
ab5700 5c			pop	rsp
ab5701 f20f100424		movsd	xmm0,[rsp]
ab5706 f20f104c2408		movsd	xmm1,[rsp+8]
ab570c f20f10542410		movsd	xmm2,[rsp+16]
ab5712 f20f105c2418		movsd	xmm3,[rsp+24]
ab5718 f20f10642420		movsd	xmm4,[rsp+32]
ab571e f20f106c2428		movsd	xmm5,[rsp+40]
ab5724 f20f10742430		movsd	xmm6,[rsp+48]
ab572a f20f107c2438		movsd	xmm7,[rsp+56]
ab5730 f2440f10442440		movsd	xmm8,[rsp+64]
ab5737 f2440f104c2448		movsd	xmm9,[rsp+72]
ab573e f2440f10542450		movsd	xmm10,[rsp+80]
ab5745 f2440f105c2458		movsd	xmm11,[rsp+88]
ab574c f2440f10642460		movsd	xmm12,[rsp+96]
ab5753 f2440f106c2468		movsd	xmm13,[rsp+104]
ab575a f2440f10742470		movsd	xmm14,[rsp+112]
ab5761 f2440f107c2478		movsd	xmm15,[rsp+120]
ab5768 4881c480000000		add	rsp,128
ab576f 4159			pop	r9
ab5771 4158			pop	r8
ab5773 59			pop	rcx
ab5774 488b0c2528defa00		mov	rcx,[+16440872]
ab577c 49b90830af3a177f
ab5784 0000			mov	r9,139737745534984
ab5786 49894928			mov	[r9+40],rcx
ab578a 4c8b0c2530defa00		mov	r9,[+16440880]
ab5792 5d			pop	rbp
ab5793 488b5500			mov	rdx,[rbp]
ab5797 4c8b7508			mov	r14,[rbp+8]
ab579b 4c8b6d10			mov	r13,[rbp+16]
ab579f 4c8b6518			mov	r12,[rbp+24]
ab57a3 4c8b5d20			mov	r11,[rbp+32]
ab57a7 4c8b5528			mov	r10,[rbp+40]
ab57ab 488b7d30			mov	rdi,[rbp+48]
ab57af 488b7538			mov	rsi,[rbp+56]
ab57b3 4c8b7d40			mov	r15,[rbp+64]
ab57b7 488b5d48			mov	rbx,[rbp+72]
ab57bb 488b4d50			mov	rcx,[rbp+80]
ab57bf 4883c558			add	rbp,byte 88
ab57c3 c3			ret
ab57c4			do_callback_cont_handler:
ab57c4 4883ed58			sub	rbp,byte 88
ab57c8 48894d50			mov	[rbp+80],rcx
ab57cc 48895d48			mov	[rbp+72],rbx
ab57d0 4c897d40			mov	[rbp+64],r15
ab57d4 48897538			mov	[rbp+56],rsi
ab57d8 48897d30			mov	[rbp+48],rdi
ab57dc 4c895528			mov	[rbp+40],r10
ab57e0 4c895d20			mov	[rbp+32],r11
ab57e4 4c896518			mov	[rbp+24],r12
ab57e8 4c896d10			mov	[rbp+16],r13
ab57ec 4c897508			mov	[rbp+8],r14
ab57f0 48895500			mov	[rbp],rdx
ab57f4 4c890c2530defa00		mov	[+16440880],r9
ab57fc 4889ef			mov	rdi,rbp
ab57ff 4889e6			mov	rsi,rsp
ab5802 55			push	rbp
ab5803 51			push	rcx
ab5804 4150			push	r8
ab5806 4151			push	r9
ab5808 4881ec80000000		sub	rsp,128
ab580f f20f110424		movsd	[rsp],xmm0
ab5814 f20f114c2408		movsd	[rsp+8],xmm1
ab581a f20f11542410		movsd	[rsp+16],xmm2
ab5820 f20f115c2418		movsd	[rsp+24],xmm3
ab5826 f20f11642420		movsd	[rsp+32],xmm4
ab582c f20f116c2428		movsd	[rsp+40],xmm5
ab5832 f20f11742430		movsd	[rsp+48],xmm6
ab5838 f20f117c2438		movsd	[rsp+56],xmm7
ab583e f2440f11442440		movsd	[rsp+64],xmm8
ab5845 f2440f114c2448		movsd	[rsp+72],xmm9
ab584c f2440f11542450		movsd	[rsp+80],xmm10
ab5853 f2440f115c2458		movsd	[rsp+88],xmm11
ab585a f2440f11642460		movsd	[rsp+96],xmm12
ab5861 f2440f116c2468		movsd	[rsp+104],xmm13
ab5868 f2440f11742470		movsd	[rsp+112],xmm14
ab586f f2440f117c2478		movsd	[rsp+120],xmm15
ab5876 4889e0			mov	rax,rsp
ab5879 4883e4f0			and	rsp,byte -16
ab587d 4883ec08			sub	rsp,byte 8
ab5881 50			push	rax
ab5882 e8f4a1d501		call	do_callback_cont
ab5887 5c			pop	rsp
ab5888 f20f100424		movsd	xmm0,[rsp]
ab588d f20f104c2408		movsd	xmm1,[rsp+8]
ab5893 f20f10542410		movsd	xmm2,[rsp+16]
ab5899 f20f105c2418		movsd	xmm3,[rsp+24]
ab589f f20f10642420		movsd	xmm4,[rsp+32]
ab58a5 f20f106c2428		movsd	xmm5,[rsp+40]
ab58ab f20f10742430		movsd	xmm6,[rsp+48]
ab58b1 f20f107c2438		movsd	xmm7,[rsp+56]
ab58b7 f2440f10442440		movsd	xmm8,[rsp+64]
ab58be f2440f104c2448		movsd	xmm9,[rsp+72]
ab58c5 f2440f10542450		movsd	xmm10,[rsp+80]
ab58cc f2440f105c2458		movsd	xmm11,[rsp+88]
ab58d3 f2440f10642460		movsd	xmm12,[rsp+96]
ab58da f2440f106c2468		movsd	xmm13,[rsp+104]
ab58e1 f2440f10742470		movsd	xmm14,[rsp+112]
ab58e8 f2440f107c2478		movsd	xmm15,[rsp+120]
ab58ef 4881c480000000		add	rsp,128
ab58f6 4159			pop	r9
ab58f8 4158			pop	r8
ab58fa 59			pop	rcx
ab58fb 488b0c2528defa00		mov	rcx,[+16440872]
ab5903 49b90830af3a177f
ab590b 0000			mov	r9,139737745534984
ab590d 49894928			mov	[r9+40],rcx
ab5911 4c8b0c2530defa00		mov	r9,[+16440880]
ab5919 5d			pop	rbp
ab591a 488b5500			mov	rdx,[rbp]
ab591e 4c8b7508			mov	r14,[rbp+8]
ab5922 4c8b6d10			mov	r13,[rbp+16]
ab5926 4c8b6518			mov	r12,[rbp+24]
ab592a 4c8b5d20			mov	r11,[rbp+32]
ab592e 4c8b5528			mov	r10,[rbp+40]
ab5932 488b7d30			mov	rdi,[rbp+48]
ab5936 488b7538			mov	rsi,[rbp+56]
ab593a 4c8b7d40			mov	r15,[rbp+64]
ab593e 488b5d48			mov	rbx,[rbp+72]
ab5942 488b4d50			mov	rcx,[rbp+80]
ab5946 4883c558			add	rbp,byte 88
ab594a c3			ret
ab594b			rt_error_handler:
ab594b 4883ed58			sub	rbp,byte 88
ab594f 48894d50			mov	[rbp+80],rcx
ab5953 48895d48			mov	[rbp+72],rbx
ab5957 4c897d40			mov	[rbp+64],r15
ab595b 48897538			mov	[rbp+56],rsi
ab595f 48897d30			mov	[rbp+48],rdi
ab5963 4c895528			mov	[rbp+40],r10
ab5967 4c895d20			mov	[rbp+32],r11
ab596b 4c896518			mov	[rbp+24],r12
ab596f 4c896d10			mov	[rbp+16],r13
ab5973 4c897508			mov	[rbp+8],r14
ab5977 48895500			mov	[rbp],rdx
ab597b 4c890c2530defa00		mov	[+16440880],r9
ab5983 4889ef			mov	rdi,rbp
ab5986 4889e6			mov	rsi,rsp
ab5989 55			push	rbp
ab598a 51			push	rcx
ab598b 4150			push	r8
ab598d 4151			push	r9
ab598f 4881ec80000000		sub	rsp,128
ab5996 f20f110424		movsd	[rsp],xmm0
ab599b f20f114c2408		movsd	[rsp+8],xmm1
ab59a1 f20f11542410		movsd	[rsp+16],xmm2
ab59a7 f20f115c2418		movsd	[rsp+24],xmm3
ab59ad f20f11642420		movsd	[rsp+32],xmm4
ab59b3 f20f116c2428		movsd	[rsp+40],xmm5
ab59b9 f20f11742430		movsd	[rsp+48],xmm6
ab59bf f20f117c2438		movsd	[rsp+56],xmm7
ab59c5 f2440f11442440		movsd	[rsp+64],xmm8
ab59cc f2440f114c2448		movsd	[rsp+72],xmm9
ab59d3 f2440f11542450		movsd	[rsp+80],xmm10
ab59da f2440f115c2458		movsd	[rsp+88],xmm11
ab59e1 f2440f11642460		movsd	[rsp+96],xmm12
ab59e8 f2440f116c2468		movsd	[rsp+104],xmm13
ab59ef f2440f11742470		movsd	[rsp+112],xmm14
ab59f6 f2440f117c2478		movsd	[rsp+120],xmm15
ab59fd 4889e0			mov	rax,rsp
ab5a00 4883e4f0			and	rsp,byte -16
ab5a04 4883ec08			sub	rsp,byte 8
ab5a08 50			push	rax
ab5a09 e80297d501		call	rt_error
ab5a0e 5c			pop	rsp
ab5a0f f20f100424		movsd	xmm0,[rsp]
ab5a14 f20f104c2408		movsd	xmm1,[rsp+8]
ab5a1a f20f10542410		movsd	xmm2,[rsp+16]
ab5a20 f20f105c2418		movsd	xmm3,[rsp+24]
ab5a26 f20f10642420		movsd	xmm4,[rsp+32]
ab5a2c f20f106c2428		movsd	xmm5,[rsp+40]
ab5a32 f20f10742430		movsd	xmm6,[rsp+48]
ab5a38 f20f107c2438		movsd	xmm7,[rsp+56]
ab5a3e f2440f10442440		movsd	xmm8,[rsp+64]
ab5a45 f2440f104c2448		movsd	xmm9,[rsp+72]
ab5a4c f2440f10542450		movsd	xmm10,[rsp+80]
ab5a53 f2440f105c2458		movsd	xmm11,[rsp+88]
ab5a5a f2440f10642460		movsd	xmm12,[rsp+96]
ab5a61 f2440f106c2468		movsd	xmm13,[rsp+104]
ab5a68 f2440f10742470		movsd	xmm14,[rsp+112]
ab5a6f f2440f107c2478		movsd	xmm15,[rsp+120]
ab5a76 4881c480000000		add	rsp,128
ab5a7d 4159			pop	r9
ab5a7f 4158			pop	r8
ab5a81 59			pop	rcx
ab5a82 488b0c2528defa00		mov	rcx,[+16440872]
ab5a8a 49b90830af3a177f
ab5a92 0000			mov	r9,139737745534984
ab5a94 49894928			mov	[r9+40],rcx
ab5a98 4c8b0c2530defa00		mov	r9,[+16440880]
ab5aa0 5d			pop	rbp
ab5aa1 488b5500			mov	rdx,[rbp]
ab5aa5 4c8b7508			mov	r14,[rbp+8]
ab5aa9 4c8b6d10			mov	r13,[rbp+16]
ab5aad 4c8b6518			mov	r12,[rbp+24]
ab5ab1 4c8b5d20			mov	r11,[rbp+32]
ab5ab5 4c8b5528			mov	r10,[rbp+40]
ab5ab9 488b7d30			mov	rdi,[rbp+48]
ab5abd 488b7538			mov	rsi,[rbp+56]
ab5ac1 4c8b7d40			mov	r15,[rbp+64]
ab5ac5 488b5d48			mov	rbx,[rbp+72]
ab5ac9 488b4d50			mov	rcx,[rbp+80]
ab5acd 4883c558			add	rbp,byte 88
ab5ad1 c3			ret
ab5ad2			print_msg_handler:
ab5ad2 4883ed58			sub	rbp,byte 88
ab5ad6 48894d50			mov	[rbp+80],rcx
ab5ada 48895d48			mov	[rbp+72],rbx
ab5ade 4c897d40			mov	[rbp+64],r15
ab5ae2 48897538			mov	[rbp+56],rsi
ab5ae6 48897d30			mov	[rbp+48],rdi
ab5aea 4c895528			mov	[rbp+40],r10
ab5aee 4c895d20			mov	[rbp+32],r11
ab5af2 4c896518			mov	[rbp+24],r12
ab5af6 4c896d10			mov	[rbp+16],r13
ab5afa 4c897508			mov	[rbp+8],r14
ab5afe 48895500			mov	[rbp],rdx
ab5b02 4c890c2530defa00		mov	[+16440880],r9
ab5b0a 4889ef			mov	rdi,rbp
ab5b0d 4889e6			mov	rsi,rsp
ab5b10 55			push	rbp
ab5b11 51			push	rcx
ab5b12 4150			push	r8
ab5b14 4151			push	r9
ab5b16 4881ec80000000		sub	rsp,128
ab5b1d f20f110424		movsd	[rsp],xmm0
ab5b22 f20f114c2408		movsd	[rsp+8],xmm1
ab5b28 f20f11542410		movsd	[rsp+16],xmm2
ab5b2e f20f115c2418		movsd	[rsp+24],xmm3
ab5b34 f20f11642420		movsd	[rsp+32],xmm4
ab5b3a f20f116c2428		movsd	[rsp+40],xmm5
ab5b40 f20f11742430		movsd	[rsp+48],xmm6
ab5b46 f20f117c2438		movsd	[rsp+56],xmm7
ab5b4c f2440f11442440		movsd	[rsp+64],xmm8
ab5b53 f2440f114c2448		movsd	[rsp+72],xmm9
ab5b5a f2440f11542450		movsd	[rsp+80],xmm10
ab5b61 f2440f115c2458		movsd	[rsp+88],xmm11
ab5b68 f2440f11642460		movsd	[rsp+96],xmm12
ab5b6f f2440f116c2468		movsd	[rsp+104],xmm13
ab5b76 f2440f11742470		movsd	[rsp+112],xmm14
ab5b7d f2440f117c2478		movsd	[rsp+120],xmm15
ab5b84 4889e0			mov	rax,rsp
ab5b87 4883e4f0			and	rsp,byte -16
ab5b8b 4883ec08			sub	rsp,byte 8
ab5b8f 50			push	rax
ab5b90 e80898d501		call	print-msg
ab5b95 5c			pop	rsp
ab5b96 f20f100424		movsd	xmm0,[rsp]
ab5b9b f20f104c2408		movsd	xmm1,[rsp+8]
ab5ba1 f20f10542410		movsd	xmm2,[rsp+16]
ab5ba7 f20f105c2418		movsd	xmm3,[rsp+24]
ab5bad f20f10642420		movsd	xmm4,[rsp+32]
ab5bb3 f20f106c2428		movsd	xmm5,[rsp+40]
ab5bb9 f20f10742430		movsd	xmm6,[rsp+48]
ab5bbf f20f107c2438		movsd	xmm7,[rsp+56]
ab5bc5 f2440f10442440		movsd	xmm8,[rsp+64]
ab5bcc f2440f104c2448		movsd	xmm9,[rsp+72]
ab5bd3 f2440f10542450		movsd	xmm10,[rsp+80]
ab5bda f2440f105c2458		movsd	xmm11,[rsp+88]
ab5be1 f2440f10642460		movsd	xmm12,[rsp+96]
ab5be8 f2440f106c2468		movsd	xmm13,[rsp+104]
ab5bef f2440f10742470		movsd	xmm14,[rsp+112]
ab5bf6 f2440f107c2478		movsd	xmm15,[rsp+120]
ab5bfd 4881c480000000		add	rsp,128
ab5c04 4159			pop	r9
ab5c06 4158			pop	r8
ab5c08 59			pop	rcx
ab5c09 488b0c2528defa00		mov	rcx,[+16440872]
ab5c11 49b90830af3a177f
ab5c19 0000			mov	r9,139737745534984
ab5c1b 49894928			mov	[r9+40],rcx
ab5c1f 4c8b0c2530defa00		mov	r9,[+16440880]
ab5c27 5d			pop	rbp
ab5c28 488b5500			mov	rdx,[rbp]
ab5c2c 4c8b7508			mov	r14,[rbp+8]
ab5c30 4c8b6d10			mov	r13,[rbp+16]
ab5c34 4c8b6518			mov	r12,[rbp+24]
ab5c38 4c8b5d20			mov	r11,[rbp+32]
ab5c3c 4c8b5528			mov	r10,[rbp+40]
ab5c40 488b7d30			mov	rdi,[rbp+48]
ab5c44 488b7538			mov	rsi,[rbp+56]
ab5c48 4c8b7d40			mov	r15,[rbp+64]
ab5c4c 488b5d48			mov	rbx,[rbp+72]
ab5c50 488b4d50			mov	rcx,[rbp+80]
ab5c54 4883c558			add	rbp,byte 88
ab5c58 c3			ret
ab5c59			print_msg_val_handler:
ab5c59 4883ed58			sub	rbp,byte 88
ab5c5d 48894d50			mov	[rbp+80],rcx
ab5c61 48895d48			mov	[rbp+72],rbx
ab5c65 4c897d40			mov	[rbp+64],r15
ab5c69 48897538			mov	[rbp+56],rsi
ab5c6d 48897d30			mov	[rbp+48],rdi
ab5c71 4c895528			mov	[rbp+40],r10
ab5c75 4c895d20			mov	[rbp+32],r11
ab5c79 4c896518			mov	[rbp+24],r12
ab5c7d 4c896d10			mov	[rbp+16],r13
ab5c81 4c897508			mov	[rbp+8],r14
ab5c85 48895500			mov	[rbp],rdx
ab5c89 4c890c2530defa00		mov	[+16440880],r9
ab5c91 4889ef			mov	rdi,rbp
ab5c94 4889e6			mov	rsi,rsp
ab5c97 55			push	rbp
ab5c98 51			push	rcx
ab5c99 4150			push	r8
ab5c9b 4151			push	r9
ab5c9d 4881ec80000000		sub	rsp,128
ab5ca4 f20f110424		movsd	[rsp],xmm0
ab5ca9 f20f114c2408		movsd	[rsp+8],xmm1
ab5caf f20f11542410		movsd	[rsp+16],xmm2
ab5cb5 f20f115c2418		movsd	[rsp+24],xmm3
ab5cbb f20f11642420		movsd	[rsp+32],xmm4
ab5cc1 f20f116c2428		movsd	[rsp+40],xmm5
ab5cc7 f20f11742430		movsd	[rsp+48],xmm6
ab5ccd f20f117c2438		movsd	[rsp+56],xmm7
ab5cd3 f2440f11442440		movsd	[rsp+64],xmm8
ab5cda f2440f114c2448		movsd	[rsp+72],xmm9
ab5ce1 f2440f11542450		movsd	[rsp+80],xmm10
ab5ce8 f2440f115c2458		movsd	[rsp+88],xmm11
ab5cef f2440f11642460		movsd	[rsp+96],xmm12
ab5cf6 f2440f116c2468		movsd	[rsp+104],xmm13
ab5cfd f2440f11742470		movsd	[rsp+112],xmm14
ab5d04 f2440f117c2478		movsd	[rsp+120],xmm15
ab5d0b 4889e0			mov	rax,rsp
ab5d0e 4883e4f0			and	rsp,byte -16
ab5d12 4883ec08			sub	rsp,byte 8
ab5d16 50			push	rax
ab5d17 e86395d501		call	print-msg-val
ab5d1c 5c			pop	rsp
ab5d1d f20f100424		movsd	xmm0,[rsp]
ab5d22 f20f104c2408		movsd	xmm1,[rsp+8]
ab5d28 f20f10542410		movsd	xmm2,[rsp+16]
ab5d2e f20f105c2418		movsd	xmm3,[rsp+24]
ab5d34 f20f10642420		movsd	xmm4,[rsp+32]
ab5d3a f20f106c2428		movsd	xmm5,[rsp+40]
ab5d40 f20f10742430		movsd	xmm6,[rsp+48]
ab5d46 f20f107c2438		movsd	xmm7,[rsp+56]
ab5d4c f2440f10442440		movsd	xmm8,[rsp+64]
ab5d53 f2440f104c2448		movsd	xmm9,[rsp+72]
ab5d5a f2440f10542450		movsd	xmm10,[rsp+80]
ab5d61 f2440f105c2458		movsd	xmm11,[rsp+88]
ab5d68 f2440f10642460		movsd	xmm12,[rsp+96]
ab5d6f f2440f106c2468		movsd	xmm13,[rsp+104]
ab5d76 f2440f10742470		movsd	xmm14,[rsp+112]
ab5d7d f2440f107c2478		movsd	xmm15,[rsp+120]
ab5d84 4881c480000000		add	rsp,128
ab5d8b 4159			pop	r9
ab5d8d 4158			pop	r8
ab5d8f 59			pop	rcx
ab5d90 488b0c2528defa00		mov	rcx,[+16440872]
ab5d98 49b90830af3a177f
ab5da0 0000			mov	r9,139737745534984
ab5da2 49894928			mov	[r9+40],rcx
ab5da6 4c8b0c2530defa00		mov	r9,[+16440880]
ab5dae 5d			pop	rbp
ab5daf 488b5500			mov	rdx,[rbp]
ab5db3 4c8b7508			mov	r14,[rbp+8]
ab5db7 4c8b6d10			mov	r13,[rbp+16]
ab5dbb 4c8b6518			mov	r12,[rbp+24]
ab5dbf 4c8b5d20			mov	r11,[rbp+32]
ab5dc3 4c8b5528			mov	r10,[rbp+40]
ab5dc7 488b7d30			mov	rdi,[rbp+48]
ab5dcb 488b7538			mov	rsi,[rbp+56]
ab5dcf 4c8b7d40			mov	r15,[rbp+64]
ab5dd3 488b5d48			mov	rbx,[rbp+72]
ab5dd7 488b4d50			mov	rcx,[rbp+80]
ab5ddb 4883c558			add	rbp,byte 88
ab5ddf c3			ret
ab5de0			repl:
ab5de0 4883ed58			sub	rbp,byte 88
ab5de4 48894d50			mov	[rbp+80],rcx
ab5de8 48895d48			mov	[rbp+72],rbx
ab5dec 4c897d40			mov	[rbp+64],r15
ab5df0 48897538			mov	[rbp+56],rsi
ab5df4 48897d30			mov	[rbp+48],rdi
ab5df8 4c895528			mov	[rbp+40],r10
ab5dfc 4c895d20			mov	[rbp+32],r11
ab5e00 4c896518			mov	[rbp+24],r12
ab5e04 4c896d10			mov	[rbp+16],r13
ab5e08 4c897508			mov	[rbp+8],r14
ab5e0c 48895500			mov	[rbp],rdx
ab5e10 4c890c2530defa00		mov	[+16440880],r9
ab5e18 4889ef			mov	rdi,rbp
ab5e1b 4889e6			mov	rsi,rsp
ab5e1e 55			push	rbp
ab5e1f 51			push	rcx
ab5e20 4150			push	r8
ab5e22 4151			push	r9
ab5e24 4881ec80000000		sub	rsp,128
ab5e2b f20f110424		movsd	[rsp],xmm0
ab5e30 f20f114c2408		movsd	[rsp+8],xmm1
ab5e36 f20f11542410		movsd	[rsp+16],xmm2
ab5e3c f20f115c2418		movsd	[rsp+24],xmm3
ab5e42 f20f11642420		movsd	[rsp+32],xmm4
ab5e48 f20f116c2428		movsd	[rsp+40],xmm5
ab5e4e f20f11742430		movsd	[rsp+48],xmm6
ab5e54 f20f117c2438		movsd	[rsp+56],xmm7
ab5e5a f2440f11442440		movsd	[rsp+64],xmm8
ab5e61 f2440f114c2448		movsd	[rsp+72],xmm9
ab5e68 f2440f11542450		movsd	[rsp+80],xmm10
ab5e6f f2440f115c2458		movsd	[rsp+88],xmm11
ab5e76 f2440f11642460		movsd	[rsp+96],xmm12
ab5e7d f2440f116c2468		movsd	[rsp+104],xmm13
ab5e84 f2440f11742470		movsd	[rsp+112],xmm14
ab5e8b f2440f117c2478		movsd	[rsp+120],xmm15
ab5e92 4889e0			mov	rax,rsp
ab5e95 4883e4f0			and	rsp,byte -16
ab5e99 4883ec08			sub	rsp,byte 8
ab5e9d 50			push	rax
ab5e9e e81896d501		call	repl
ab5ea3 5c			pop	rsp
ab5ea4 f20f100424		movsd	xmm0,[rsp]
ab5ea9 f20f104c2408		movsd	xmm1,[rsp+8]
ab5eaf f20f10542410		movsd	xmm2,[rsp+16]
ab5eb5 f20f105c2418		movsd	xmm3,[rsp+24]
ab5ebb f20f10642420		movsd	xmm4,[rsp+32]
ab5ec1 f20f106c2428		movsd	xmm5,[rsp+40]
ab5ec7 f20f10742430		movsd	xmm6,[rsp+48]
ab5ecd f20f107c2438		movsd	xmm7,[rsp+56]
ab5ed3 f2440f10442440		movsd	xmm8,[rsp+64]
ab5eda f2440f104c2448		movsd	xmm9,[rsp+72]
ab5ee1 f2440f10542450		movsd	xmm10,[rsp+80]
ab5ee8 f2440f105c2458		movsd	xmm11,[rsp+88]
ab5eef f2440f10642460		movsd	xmm12,[rsp+96]
ab5ef6 f2440f106c2468		movsd	xmm13,[rsp+104]
ab5efd f2440f10742470		movsd	xmm14,[rsp+112]
ab5f04 f2440f107c2478		movsd	xmm15,[rsp+120]
ab5f0b 4881c480000000		add	rsp,128
ab5f12 4159			pop	r9
ab5f14 4158			pop	r8
ab5f16 59			pop	rcx
ab5f17 488b0c2528defa00		mov	rcx,[+16440872]
ab5f1f 49b90830af3a177f
ab5f27 0000			mov	r9,139737745534984
ab5f29 49894928			mov	[r9+40],rcx
ab5f2d 4c8b0c2530defa00		mov	r9,[+16440880]
ab5f35 5d			pop	rbp
ab5f36 488b5500			mov	rdx,[rbp]
ab5f3a 4c8b7508			mov	r14,[rbp+8]
ab5f3e 4c8b6d10			mov	r13,[rbp+16]
ab5f42 4c8b6518			mov	r12,[rbp+24]
ab5f46 4c8b5d20			mov	r11,[rbp+32]
ab5f4a 4c8b5528			mov	r10,[rbp+40]
ab5f4e 488b7d30			mov	rdi,[rbp+48]
ab5f52 488b7538			mov	rsi,[rbp+56]
ab5f56 4c8b7d40			mov	r15,[rbp+64]
ab5f5a 488b5d48			mov	rbx,[rbp+72]
ab5f5e 488b4d50			mov	rcx,[rbp+80]
ab5f62 4883c558			add	rbp,byte 88
ab5f66 c3			ret
ab5f67			err_wrong_num_args:
ab5f67 4883ed08			sub	rbp,byte 8
ab5f6b 48895d00			mov	[rbp],rbx
ab5f6f 48bba1cea338177f
ab5f77 0000			mov	rbx,139737711234721
ab5f79 e8cdf9ffff		call	rt_error_handler
ab5f7e 488b5d00			mov	rbx,[rbp]
ab5f82 4883c508			add	rbp,byte 8
ab5f86			rtlib_skip:
ab5f86 4881ec80000000		sub	rsp,128
ab5f8d f20f110424		movsd	[rsp],xmm0
ab5f92 f20f114c2408		movsd	[rsp+8],xmm1
ab5f98 f20f11542410		movsd	[rsp+16],xmm2
ab5f9e f20f115c2418		movsd	[rsp+24],xmm3
ab5fa4 f20f11642420		movsd	[rsp+32],xmm4
ab5faa f20f116c2428		movsd	[rsp+40],xmm5
ab5fb0 f20f11742430		movsd	[rsp+48],xmm6
ab5fb6 f20f117c2438		movsd	[rsp+56],xmm7
ab5fbc f2440f11442440		movsd	[rsp+64],xmm8
ab5fc3 f2440f114c2448		movsd	[rsp+72],xmm9
ab5fca f2440f11542450		movsd	[rsp+80],xmm10
ab5fd1 f2440f115c2458		movsd	[rsp+88],xmm11
ab5fd8 f2440f11642460		movsd	[rsp+96],xmm12
ab5fdf f2440f116c2468		movsd	[rsp+104],xmm13
ab5fe6 f2440f11742470		movsd	[rsp+112],xmm14
ab5fed f2440f117c2478		movsd	[rsp+120],xmm15
ab5ff4 50			push	rax
ab5ff5 53			push	rbx
ab5ff6 51			push	rcx
ab5ff7 52			push	rdx
ab5ff8 55			push	rbp
ab5ff9 56			push	rsi
ab5ffa 57			push	rdi
ab5ffb 4150			push	r8
ab5ffd 4151			push	r9
ab5fff 4152			push	r10
ab6001 4153			push	r11
ab6003 4154			push	r12
ab6005 4155			push	r13
ab6007 4156			push	r14
ab6009 4157			push	r15
ab600b 48bd8842ab36177f
ab6013 0000			mov	rbp,139737678168712
ab6015 48b80830af3a177f
ab601d 0000			mov	rax,139737745534984
ab601f 488b0c2528defa00		mov	rcx,[+16440872]
ab6027 48894828			mov	[rax+40],rcx
ab602b 48c7c100000000		mov	rcx,dword 0
ab6032 4c8b0c2530defa00		mov	r9,[+16440880]
ab603a 49c7c0f87be702		mov	r8,dword 48724984
ab6041 48c7c300000000		mov	rbx,dword 0
ab6048 49c7c700000000		mov	r15,dword 0
ab604f 48c7c600000000		mov	rsi,dword 0
ab6056 48c7c700000000		mov	rdi,dword 0
ab605d 49c7c200000000		mov	r10,dword 0
ab6064 49c7c300000000		mov	r11,dword 0
ab606b 49c7c400000000		mov	r12,dword 0
ab6072 49c7c500000000		mov	r13,dword 0
ab6079 49c7c600000000		mov	r14,dword 0
ab6080 48c7c200000000		mov	rdx,dword 0
ab6087			prog_begin1:
------------------------------------------------------------------------
626af0				bits 64
626af0			stub_7f1737626af0_1:
626af0 83c104			add	ecx,byte 4
626af3 90			nop
626af4			stub_7f1737626af0_0:
626af4 e844eb48ff		call	do_callback_fn_handler
626af9 219ee30200000000
------------------------------------------------------------------------
626ad8				bits 64
626ad8			stub_7f1737626ad8_0:
626ad8 e8e7ec48ff		call	do_callback_cont_handler
626add 0161e70200000000
------------------------------------------------------------------------
ab6087				bits 64
ab6087 90		version_1:
ab6088			version_2:
ab6088			version_3:
ab6088			version_4:
ab6088			version_5:
ab6088 4883ed08			sub	rbp,byte 8
ab608c 4883ec00			sub	rsp,byte 0
ab6090 48c7c0809be302		mov	rax,dword 48470912
ab6097 48894500			mov	[rbp],rax
ab609b 4883ed00			sub	rbp,byte 0
ab609f 4883ec00			sub	rsp,byte 0
ab60a3 48b8000000000000
ab60ab 1c40			mov	rax,4619567317775286272
ab60ad 66480f6ed0		movq	xmm2,rax
ab60b2 49c7c300000000		mov	r11,dword 0
ab60b9 48c7c704000000		mov	rdi,dword 4
ab60c0			stub_load_1:
ab60c0 e92f0ab700		jmp	dest_7f1737626af4_1
GEN VERSION FN#<lazy-code #2
                 ast: #f
                 generator: #<procedure #3>
                 versions: #<table #4>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f
                 generic-ctx: #f
                 generic-vers: #f>
 >>> #<ctx #5
           stack: (#<ctx-tflo #6
                      sym: float
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tclo #7
                      sym: closure
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tret #8
                      sym: retaddr
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>)
           slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 0)
             (r . 1)
             (r . 3)
             (r . 4)
             (r . 5)
             (r . 6)
             (r . 7)
             (r . 8)
             (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((n0 . #<identifier #9
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 0>
(#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>)
------------------------------------------------------------------------
626ac0				bits 64
626ac0			stub_7f1737626ac0_1:
626ac0 83c104			add	ecx,byte 4
626ac3 90			nop
626ac4			stub_7f1737626ac0_0:
626ac4 e8ede948ff		call	do_callback_handler
626ac9 e19ce30200000000
------------------------------------------------------------------------
ab60c5				bits 64
ab60c5 909090		fn_entry_1:
ab60c8			version_6:
ab60c8 4883ed00			sub	rbp,byte 0
ab60cc 4883ec00			sub	rsp,byte 0
ab60d0 4883ed00			sub	rbp,byte 0
ab60d4 4883ec00			sub	rsp,byte 0
ab60d8 f20f10da			movsd	xmm3,xmm2
ab60dc			version_7:
ab60dc			version_8:
ab60dc			version_9:
ab60dc			version_10:
ab60dc			version_11:
ab60dc			version_12:
ab60dc			version_13:
ab60dc 48b8000000000000
ab60e4 0040			mov	rax,4611686018427387904
ab60e6 66480f6ec8		movq	xmm1,rax
ab60eb 660f2fd9			comisd	xmm3,xmm1
ab60ef			patchable_jump1:
ab60ef 0f83cf09b700		jae	stub_7f1737626ac0_0
ab60f5 e9c609b700		jmp	stub_7f1737626ac0_1
Patch direct stub jump at 7f1736ab60c0
  > now jump to 7f1736ab60c8
------------------------------------------------------------------------
ab60c0				bits 64
ab60c0 eb06			jmp	short fn_entry_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab60ef -> 7f1737626ac0
GEN VERSION >>> #<lazy-code #10
                   ast: #f
                   generator: #<procedure #11>
                   versions: #<table #12>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #13
      stack: (#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #14
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626aa8				bits 64
626aa8			stub_7f1737626aa8_1:
626aa8 83c104			add	ecx,byte 4
626aab 90			nop
626aac			stub_7f1737626aa8_0:
626aac e805ea48ff		call	do_callback_handler
626ab1 5161e70200000000
------------------------------------------------------------------------
ab60f5				bits 64
ab60f5 909090		version_14:
ab60f8			version_15:
ab60f8 4883ed00			sub	rbp,byte 0
ab60fc 4883ec00			sub	rsp,byte 0
ab6100 4883ed00			sub	rbp,byte 0
ab6104 4883ec00			sub	rsp,byte 0
ab6108 f20f10da			movsd	xmm3,xmm2
ab610c			version_16:
ab610c			version_17:
ab610c			version_18:
ab610c			version_19:
ab610c			version_20:
ab610c			version_21:
ab610c			version_22:
ab610c 4883ed00			sub	rbp,byte 0
ab6110 4883ec00			sub	rsp,byte 0
ab6114 f20f10e3			movsd	xmm4,xmm3
ab6118 48b8000000000000
ab6120 f03f			mov	rax,4607182418800017408
ab6122 66480f6ec0		movq	xmm0,rax
ab6127 f20f5ce0			subsd	xmm4,xmm0
ab612b			version_23:
ab612b			version_24:
ab612b 4883ed00			sub	rbp,byte 0
ab612f 4883ec00			sub	rsp,byte 0
ab6133 4883ed00			sub	rbp,byte 0
ab6137 4883ec00			sub	rsp,byte 0
ab613b f20f10dc			movsd	xmm3,xmm4
ab613f			version_25:
ab613f			version_26:
ab613f			version_27:
ab613f			version_28:
ab613f			version_29:
ab613f			version_30:
ab613f			version_31:
ab613f 48b8000000000000
ab6147 0040			mov	rax,4611686018427387904
ab6149 66480f6ec8		movq	xmm1,rax
ab614e 660f2fd9			comisd	xmm3,xmm1
ab6152			patchable_jump2:
ab6152 0f835409b700		jae	stub_7f1737626aa8_0
ab6158 e94b09b700		jmp	stub_7f1737626aa8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6152 -> 7f1737626aa8
GEN VERSION >>> #<lazy-code #15
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #16>
                   versions: #<table #17>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #18
      stack: (#<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #20
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626a90				bits 64
626a90			stub_7f1737626a90_0:
626a90 e82fed48ff		call	do_callback_cont_handler
626a95 d196e20200000000
------------------------------------------------------------------------
ab6158				bits 64
ab6158			version_32:
ab6158			version_33:
ab6158 4883ed00			sub	rbp,byte 0
ab615c 4883ec00			sub	rsp,byte 0
ab6160 4883ed00			sub	rbp,byte 0
ab6164 4883ec00			sub	rsp,byte 0
ab6168 f20f10dc			movsd	xmm3,xmm4
ab616c			version_34:
ab616c			version_35:
ab616c			version_36:
ab616c			version_37:
ab616c			version_38:
ab616c			version_39:
ab616c			version_40:
ab616c 4883ed00			sub	rbp,byte 0
ab6170 4883ec00			sub	rsp,byte 0
ab6174 f20f10eb			movsd	xmm5,xmm3
ab6178 48b8000000000000
ab6180 f03f			mov	rax,4607182418800017408
ab6182 66480f6ec0		movq	xmm0,rax
ab6187 f20f5ce8			subsd	xmm5,xmm0
ab618b			version_41:
ab618b 4883ed10			sub	rbp,byte 16
ab618f 4883ec10			sub	rsp,byte 16
ab6193 f20f11642408		movsd	[rsp+8],xmm4
ab6199 f20f111424		movsd	[rsp],xmm2
ab619e 48897508			mov	[rbp+8],rsi
ab61a2 48c7c02097e202		mov	rax,dword 48404256
ab61a9 48894500			mov	[rbp],rax
ab61ad 4883ed00			sub	rbp,byte 0
ab61b1 4883ec00			sub	rsp,byte 0
ab61b5 f20f10d5			movsd	xmm2,xmm5
ab61b9 48c7c704000000		mov	rdi,dword 4
ab61c0 e903ffffff		jmp	dest_7f1736ab60c8_1
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #22
                   ast: #f
                   generator: #<procedure #23>
                   versions: #<table #24>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #13
      stack: (#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #14
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
ab61c5				bits 64
ab61c5 909090		version_42:
ab61c8 4883ed00			sub	rbp,byte 0
ab61cc 4883ec00			sub	rsp,byte 0
ab61d0 4883ed00			sub	rbp,byte 0
ab61d4 4883ec00			sub	rsp,byte 0
ab61d8 f20f10da			movsd	xmm3,xmm2
ab61dc			version_43:
ab61dc			version_44:
ab61dc f20f10d3			movsd	xmm2,xmm3
ab61e0 488b5500			mov	rdx,[rbp]
ab61e4 4883c508			add	rbp,byte 8
ab61e8 488b4268			mov	rax,[rdx+104]
ab61ec 49c7c3a0010000		mov	r11,dword 416
ab61f3 ffe0			jmp	rax
>>> patching jump at 7f1736ab60ef -> 7f1736ab61c8
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #26
      stack: (#<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 0) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #27
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
626ac0				bits 64
626ac0			stub_7f1737626ac0_0:
626ac0 e8ffec48ff		call	do_callback_cont_handler
626ac5 8198e20200000000
------------------------------------------------------------------------
ab61f5				bits 64
ab61f5 909090		continuation_1:
ab61f8			version_45:
ab61f8			version_46:
ab61f8 4883ed00			sub	rbp,byte 0
ab61fc 4883ec00			sub	rsp,byte 0
ab6200 4883ed00			sub	rbp,byte 0
ab6204 4883ec00			sub	rsp,byte 0
ab6208 f20f106c2408		movsd	xmm5,[rsp+8]
ab620e			version_47:
ab620e			version_48:
ab620e			version_49:
ab620e			version_50:
ab620e			version_51:
ab620e			version_52:
ab620e			version_53:
ab620e 4883ed00			sub	rbp,byte 0
ab6212 4883ec00			sub	rsp,byte 0
ab6216 f20f10e5			movsd	xmm4,xmm5
ab621a 48b8000000000000
ab6222 0040			mov	rax,4611686018427387904
ab6224 66480f6ec0		movq	xmm0,rax
ab6229 f20f5ce0			subsd	xmm4,xmm0
ab622d			version_54:
ab622d 4883ed08			sub	rbp,byte 8
ab6231 4883ec08			sub	rsp,byte 8
ab6235 f20f111424		movsd	[rsp],xmm2
ab623a 48c7c0c0b4e802		mov	rax,dword 48805056
ab6241 48894500			mov	[rbp],rax
ab6245 4883ed00			sub	rbp,byte 0
ab6249 4883ec00			sub	rsp,byte 0
ab624d f20f10d4			movsd	xmm2,xmm4
ab6251 48c7c704000000		mov	rdi,dword 4
ab6258 e96bfeffff		jmp	dest_7f1736ab60c8_2
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #28 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #29
      stack: (#<ctx-tflo #28 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #30
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
------------------------------------------------------------------------
626a78				bits 64
626a78			stub_7f1737626a78_1:
626a78 83c104			add	ecx,byte 4
626a7b 90			nop
626a7c			stub_7f1737626a78_0:
626a7c e835ea48ff		call	do_callback_handler
626a81 d1b5e80200000000
------------------------------------------------------------------------
ab625d				bits 64
ab625d 909090		continuation_2:
ab6260			version_55:
ab6260			version_56:
ab6260			version_57:
ab6260			version_58:
ab6260			version_59:
ab6260			version_60:
ab6260 4883ed00			sub	rbp,byte 0
ab6264 4883ec00			sub	rsp,byte 0
ab6268 f20f102424		movsd	xmm4,[rsp]
ab626d f20f58e2			addsd	xmm4,xmm2
ab6271			version_61:
ab6271			version_62:
ab6271			version_63:
ab6271 4883ed00			sub	rbp,byte 0
ab6275 4883ec00			sub	rsp,byte 0
ab6279 4883ed00			sub	rbp,byte 0
ab627d 4883ec00			sub	rsp,byte 0
ab6281 f20f10542408		movsd	xmm2,[rsp+8]
ab6287			version_64:
ab6287			version_65:
ab6287			version_66:
ab6287			version_67:
ab6287			version_68:
ab6287			version_69:
ab6287			version_70:
ab6287 4883ed00			sub	rbp,byte 0
ab628b 4883ec00			sub	rsp,byte 0
ab628f f20f10ea			movsd	xmm5,xmm2
ab6293 48b8000000000000
ab629b 0040			mov	rax,4611686018427387904
ab629d 66480f6ec0		movq	xmm0,rax
ab62a2 f20f5ce8			subsd	xmm5,xmm0
ab62a6			version_71:
ab62a6			version_72:
ab62a6 4883ed00			sub	rbp,byte 0
ab62aa 4883ec00			sub	rsp,byte 0
ab62ae 4883ed00			sub	rbp,byte 0
ab62b2 4883ec00			sub	rsp,byte 0
ab62b6 f20f10d5			movsd	xmm2,xmm5
ab62ba			version_73:
ab62ba			version_74:
ab62ba			version_75:
ab62ba			version_76:
ab62ba			version_77:
ab62ba			version_78:
ab62ba			version_79:
ab62ba 48b8000000000000
ab62c2 0040			mov	rax,4611686018427387904
ab62c4 66480f6ec8		movq	xmm1,rax
ab62c9 660f2fd1			comisd	xmm2,xmm1
ab62cd			patchable_jump3:
ab62cd 0f83a907b700		jae	stub_7f1737626a78_0
ab62d3 e9a007b700		jmp	stub_7f1737626a78_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #31
                   ast: #f
                   generator: #<procedure #32>
                   versions: #<table #33>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #34
      stack: (#<ctx-tflo #35 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #36 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 3) (3 fr . 2) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0) (fm . 2))
      env: ((n1 . #<identifier #37
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #38
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
ab62d3				bits 64
ab62d3 90		version_80:
ab62d4 4883ed00			sub	rbp,byte 0
ab62d8 4883ec00			sub	rsp,byte 0
ab62dc 4883ed00			sub	rbp,byte 0
ab62e0 4883ec00			sub	rsp,byte 0
ab62e4 f20f10d5			movsd	xmm2,xmm5
ab62e8			version_81:
ab62e8			version_82:
ab62e8			version_83:
ab62e8			version_84:
ab62e8			version_85:
ab62e8			version_86:
ab62e8			version_87:
ab62e8 4883ed00			sub	rbp,byte 0
ab62ec 4883ec00			sub	rsp,byte 0
ab62f0 f20f10ec			movsd	xmm5,xmm4
ab62f4 f20f58ea			addsd	xmm5,xmm2
ab62f8			version_88:
ab62f8			version_89:
ab62f8 f20f10d5			movsd	xmm2,xmm5
ab62fc 488b5508			mov	rdx,[rbp+8]
ab6300 4883c510			add	rbp,byte 16
ab6304 4883c418			add	rsp,byte 24
ab6308 488b4268			mov	rax,[rdx+104]
ab630c 49c7c3a0010000		mov	r11,dword 416
ab6313 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #39
                   ast: #f
                   generator: #<procedure #40>
                   versions: #<table #41>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #18
      stack: (#<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #20
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #42
      stack: (#<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 fr . 2) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #43
                     kind: local
                     sslots: (4 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #44
      stack: (#<ctx-tunk #45
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #46
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #47
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #48
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #49
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 0) (3 r . 1) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #50
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #51
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0)
 (ffs . 0)
 ((flbox fr . 1) r . 0)
 ((flbox fr . 2) r . 1)
 ((flbox fr . 0) r . 3))
#(label #f merge_1)
"-------------------------------------------------------------------------"
#<ctx #52
      stack: (#<ctx-tunk #45
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #47
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #48
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #49
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #51
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #53
      stack: (#<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #55
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #58
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_2)
------------------------------------------------------------------------
626aa8				bits 64
626aa8			stub_7f1737626aa8_1:
626aa8 83c104			add	ecx,byte 4
626aab 90			nop
626aac			stub_7f1737626aa8_0:
626aac e805ea48ff		call	do_callback_handler
626ab1 419ce30200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6315				bits 64
ab6315 909090		version_90:
ab6318 4883ed00			sub	rbp,byte 0
ab631c 4883ec00			sub	rsp,byte 0
ab6320 4883ed00			sub	rbp,byte 0
ab6324 4883ec00			sub	rsp,byte 0
ab6328 f20f10dc			movsd	xmm3,xmm4
ab632c			merge_1:
ab632c 4883ed00			sub	rbp,byte 0
ab6330 4883ec00			sub	rsp,byte 0
ab6334			alloc_begin_1:
ab6334 4983c110			add	r9,byte 16
ab6338 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6340 f2410f1159f8		movsd	[r9-8],xmm3
ab6346 498d41f1			lea	rax,[r9-15]
ab634a 4889c3			mov	rbx,rax
ab634d			alloc_begin_2:
ab634d 4983c110			add	r9,byte 16
ab6351 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6359 f2410f1161f8		movsd	[r9-8],xmm4
ab635f 498d41f1			lea	rax,[r9-15]
ab6363 4989c7			mov	r15,rax
ab6366			alloc_begin_3:
ab6366 4983c110			add	r9,byte 16
ab636a 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6372 f2410f1151f8		movsd	[r9-8],xmm2
ab6378 498d41f1			lea	rax,[r9-15]
ab637c 4889c7			mov	rdi,rax
ab637f			version_91:
ab637f			merge_2:
ab637f 4883ed00			sub	rbp,byte 0
ab6383 4883ec00			sub	rsp,byte 0
ab6387			version_92:
ab6387			version_93:
ab6387 4883ed00			sub	rbp,byte 0
ab638b 4883ec00			sub	rsp,byte 0
ab638f 4883ed00			sub	rbp,byte 0
ab6393 4883ec00			sub	rsp,byte 0
ab6397 4989ff			mov	r15,rdi
ab639a			version_94:
ab639a			version_95:
ab639a			version_96:
ab639a 48c7c003000000		mov	rax,dword 3
ab63a1 4c21f8			and	rax,r15
ab63a4			patchable_jump4:
ab63a4 0f840207b700		je	stub_7f1737626aa8_0
ab63aa e9f906b700		jmp	stub_7f1737626aa8_1
>>> patching jump at 7f1736ab6152 -> 7f1736ab6318
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #59
                   ast: #f
                   generator: #<procedure #60>
                   versions: #<table #61>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #62
      stack: (#<ctx-tflo #63 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tunk #55
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #55
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 . #f) (4 r . 1) (3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #64
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626a60				bits 64
626a60			stub_7f1737626a60_1:
626a60 83c104			add	ecx,byte 4
626a63 90			nop
626a64			stub_7f1737626a60_0:
626a64 e84dea48ff		call	do_callback_handler
626a69 e19ce30200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab63aa				bits 64
ab63aa 9090		version_97:
ab63ac 4883ed00			sub	rbp,byte 0
ab63b0 4883ec00			sub	rsp,byte 0
ab63b4 4c89f8			mov	rax,r15
ab63b7 4883e003			and	rax,byte 3
ab63bb 4883f801			cmp	rax,byte 1
ab63bf 7518			jne	short patchable_jump5
ab63c1 498b47ff			mov	rax,[r15-1]
ab63c5 4825f8000000		and	rax,248
ab63cb 483df0000000		cmp	rax,240
ab63d1 7506			jne	short patchable_jump5
ab63d3 f2410f105707		movsd	xmm2,[r15+7]
ab63d9			patchable_jump5:
ab63d9 0f848506b700		je	stub_7f1737626a60_0
ab63df e97c06b700		jmp	stub_7f1737626a60_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab63d9 -> 7f1737626a60
GEN VERSION >>> #<lazy-code #65
                   ast: #f
                   generator: #<procedure #66>
                   versions: #<table #67>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #68
      stack: (#<ctx-tflo #63 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 . #f) (4 fr . 0) (3 r . 0) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #64
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626a48				bits 64
626a48			stub_7f1737626a48_1:
626a48 83c104			add	ecx,byte 4
626a4b 90			nop
626a4c			stub_7f1737626a48_0:
626a4c e865ea48ff		call	do_callback_handler
626a51 8196e20200000000
------------------------------------------------------------------------
ab63df				bits 64
ab63df 90		version_98:
ab63e0			version_99:
ab63e0			version_100:
ab63e0 4883ed00			sub	rbp,byte 0
ab63e4 4883ec00			sub	rsp,byte 0
ab63e8 f20f10da			movsd	xmm3,xmm2
ab63ec 48b8000000000000
ab63f4 0040			mov	rax,4611686018427387904
ab63f6 66480f6ec0		movq	xmm0,rax
ab63fb f20f5cd8			subsd	xmm3,xmm0
ab63ff			version_101:
ab63ff			version_102:
ab63ff 4883ed00			sub	rbp,byte 0
ab6403 4883ec00			sub	rsp,byte 0
ab6407 4883ed00			sub	rbp,byte 0
ab640b 4883ec00			sub	rsp,byte 0
ab640f f20f10e3			movsd	xmm4,xmm3
ab6413			version_103:
ab6413			version_104:
ab6413			version_105:
ab6413			version_106:
ab6413			version_107:
ab6413			version_108:
ab6413			version_109:
ab6413 48b8000000000000
ab641b 0040			mov	rax,4611686018427387904
ab641d 66480f6ec8		movq	xmm1,rax
ab6422 660f2fe1			comisd	xmm4,xmm1
ab6426			patchable_jump6:
ab6426 0f832006b700		jae	stub_7f1737626a48_0
ab642c e91706b700		jmp	stub_7f1737626a48_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #70
                   ast: #f
                   generator: #<procedure #71>
                   versions: #<table #72>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #73
      stack: (#<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 r . 0) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #75
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #77
      stack: (#<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 2) (3 r . 0) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #78
      stack: (#<ctx-tunk #79
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #80
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 1) (3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0) ((flbox fr . 2) r . 1) ((flbox fr . 0) r . 3))
#(label #f merge_3)
------------------------------------------------------------------------
626a30				bits 64
626a30			stub_7f1737626a30_1:
626a30 83c104			add	ecx,byte 4
626a33 90			nop
626a34			stub_7f1737626a30_0:
626a34 e87dea48ff		call	do_callback_handler
626a39 3198e20200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab642c				bits 64
ab642c			version_110:
ab642c 4883ed00			sub	rbp,byte 0
ab6430 4883ec00			sub	rsp,byte 0
ab6434 4883ed00			sub	rbp,byte 0
ab6438 4883ec00			sub	rsp,byte 0
ab643c f20f10e3			movsd	xmm4,xmm3
ab6440			version_111:
ab6440			merge_3:
ab6440 4883ed00			sub	rbp,byte 0
ab6444 4883ec00			sub	rsp,byte 0
ab6448			alloc_begin_4:
ab6448 4983c110			add	r9,byte 16
ab644c 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6454 f2410f1161f8		movsd	[r9-8],xmm4
ab645a 498d41f1			lea	rax,[r9-15]
ab645e 4989c7			mov	r15,rax
ab6461			alloc_begin_5:
ab6461 4983c110			add	r9,byte 16
ab6465 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab646d f2410f1151f8		movsd	[r9-8],xmm2
ab6473 498d41f1			lea	rax,[r9-15]
ab6477 4889c7			mov	rdi,rax
ab647a			version_112:
ab647a			version_113:
ab647a 48c7c003000000		mov	rax,dword 3
ab6481 4821d8			and	rax,rbx
ab6484			patchable_jump7:
ab6484 0f84aa05b700		je	stub_7f1737626a30_0
ab648a e9a105b700		jmp	stub_7f1737626a30_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #85
                   ast: #f
                   generator: #<procedure #86>
                   versions: #<table #87>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #78
      stack: (#<ctx-tunk #79
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #80
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 1) (3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626a18				bits 64
626a18			stub_7f1737626a18_1:
626a18 83c104			add	ecx,byte 4
626a1b 90			nop
626a1c			stub_7f1737626a18_0:
626a1c e895ea48ff		call	do_callback_handler
626a21 21b6e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab648a				bits 64
ab648a 9090		version_114:
ab648c 4883ed00			sub	rbp,byte 0
ab6490 4883ec00			sub	rsp,byte 0
ab6494 4889d8			mov	rax,rbx
ab6497 4883e003			and	rax,byte 3
ab649b 4883f801			cmp	rax,byte 1
ab649f 7517			jne	short patchable_jump8
ab64a1 488b43ff			mov	rax,[rbx-1]
ab64a5 4825f8000000		and	rax,248
ab64ab 483df0000000		cmp	rax,240
ab64b1 7505			jne	short patchable_jump8
ab64b3 f20f105307		movsd	xmm2,[rbx+7]
ab64b8			patchable_jump8:
ab64b8 0f845e05b700		je	stub_7f1737626a18_0
ab64be e95505b700		jmp	stub_7f1737626a18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab64b8 -> 7f1737626a18
GEN VERSION >>> #<lazy-code #88
                   ast: #f
                   generator: #<procedure #89>
                   versions: #<table #90>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #91
      stack: (#<ctx-tunk #79
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #92 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 1) (3 fr . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626a00				bits 64
626a00			stub_7f1737626a00_1:
626a00 83c104			add	ecx,byte 4
626a03 90			nop
626a04			stub_7f1737626a00_0:
626a04 e8adea48ff		call	do_callback_handler
626a09 11b7e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab64be				bits 64
ab64be 9090		version_115:
ab64c0 48c7c003000000		mov	rax,dword 3
ab64c7 4c21f8			and	rax,r15
ab64ca			patchable_jump9:
ab64ca 0f843405b700		je	stub_7f1737626a00_0
ab64d0 e92b05b700		jmp	stub_7f1737626a00_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #93
                   ast: #f
                   generator: #<procedure #94>
                   versions: #<table #95>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #91
      stack: (#<ctx-tunk #79
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #92 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 1) (3 fr . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6269e8				bits 64
6269e8			stub_7f17376269e8_1:
6269e8 83c104			add	ecx,byte 4
6269eb 90			nop
6269ec			stub_7f17376269e8_0:
6269ec e8c5ea48ff		call	do_callback_handler
6269f1 b1b7e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab64d0				bits 64
ab64d0			version_116:
ab64d0 4883ed00			sub	rbp,byte 0
ab64d4 4883ec00			sub	rsp,byte 0
ab64d8 4c89f8			mov	rax,r15
ab64db 4883e003			and	rax,byte 3
ab64df 4883f801			cmp	rax,byte 1
ab64e3 7518			jne	short patchable_jump10
ab64e5 498b47ff			mov	rax,[r15-1]
ab64e9 4825f8000000		and	rax,248
ab64ef 483df0000000		cmp	rax,240
ab64f5 7506			jne	short patchable_jump10
ab64f7 f2410f105f07		movsd	xmm3,[r15+7]
ab64fd			patchable_jump10:
ab64fd 0f84e904b700		je	stub_7f17376269e8_0
ab6503 e9e004b700		jmp	stub_7f17376269e8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab64fd -> 7f17376269e8
GEN VERSION >>> #<lazy-code #96
                   ast: #f
                   generator: #<procedure #97>
                   versions: #<table #98>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #99
      stack: (#<ctx-tflo #100 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #92 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 fr . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #101
      stack: (#<ctx-tflo #102 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 2) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #103
      stack: (#<ctx-tunk #104
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #105
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #106
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #107
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 1) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #108
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0) ((flbox fr . 2) r . 1))
#(label #f merge_4)
"-------------------------------------------------------------------------"
#<ctx #103
      stack: (#<ctx-tunk #104
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #105
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #106
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #107
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 1) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #108
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #109
      stack: (#<ctx-tunk #110
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 1) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 0) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #114
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_5)
------------------------------------------------------------------------
ab6503				bits 64
ab6503 90		version_117:
ab6504 4883ed00			sub	rbp,byte 0
ab6508 4883ec00			sub	rsp,byte 0
ab650c f20f10e2			movsd	xmm4,xmm2
ab6510 f20f58e3			addsd	xmm4,xmm3
ab6514			merge_4:
ab6514 4883ed00			sub	rbp,byte 0
ab6518 4883ec00			sub	rsp,byte 0
ab651c			alloc_begin_6:
ab651c 4983c110			add	r9,byte 16
ab6520 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6528 f2410f1161f8		movsd	[r9-8],xmm4
ab652e 498d41f1			lea	rax,[r9-15]
ab6532 4989c7			mov	r15,rax
ab6535			version_118:
ab6535			merge_5:
ab6535 4883ed00			sub	rbp,byte 0
ab6539 4883ec00			sub	rsp,byte 0
ab653d			version_119:
ab653d 4d89fe			mov	r14,r15
ab6540 488b5500			mov	rdx,[rbp]
ab6544 4883c508			add	rbp,byte 8
ab6548 488b4270			mov	rax,[rdx+112]
ab654c 49c7c3c0010000		mov	r11,dword 448
ab6553 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #115 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #116
      stack: (#<ctx-tunk #117
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 r . 8) (4 fm . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 0)
        (fr . 3)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #30
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #116
      stack: (#<ctx-tunk #117
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 r . 8) (4 fm . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 0)
        (fr . 3)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #30
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
#<ctx #118
      stack: (#<ctx-tunk #119
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #120
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #121
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #122
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #123
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #124
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #125
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #126
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . 0)
 (ffs . -3)
 ((flbox fm . 2) r . 2)
 ((flbox fm . 0) r . 0)
 ((flbox fm . 1) r . 1))
#(label #f merge_6)
------------------------------------------------------------------------
ab6555				bits 64
ab6555 909090		merge_6:
ab6558 4883ed00			sub	rbp,byte 0
ab655c 4883ece8			sub	rsp,byte -24
ab6560			alloc_begin_7:
ab6560 4983c110			add	r9,byte 16
ab6564 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab656c 488b4424e8		mov	rax,[rsp-24]
ab6571 498941f8			mov	[r9-8],rax
ab6575 498d41f1			lea	rax,[r9-15]
ab6579 4889c6			mov	rsi,rax
ab657c			alloc_begin_8:
ab657c 4983c110			add	r9,byte 16
ab6580 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6588 488b4424f8		mov	rax,[rsp-8]
ab658d 498941f8			mov	[r9-8],rax
ab6591 498d41f1			lea	rax,[r9-15]
ab6595 4889c3			mov	rbx,rax
ab6598			alloc_begin_9:
ab6598 4983c110			add	r9,byte 16
ab659c 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab65a4 488b4424f0		mov	rax,[rsp-16]
ab65a9 498941f8			mov	[r9-8],rax
ab65ad 498d41f1			lea	rax,[r9-15]
ab65b1 4989c7			mov	r15,rax
"-------------------------------------------------------------------------"
#<ctx #118
      stack: (#<ctx-tunk #119
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #120
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #121
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #122
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #123
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #124
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #125
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #126
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
#<ctx #127
      stack: (#<ctx-tunk #128
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #129
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_7)
------------------------------------------------------------------------
6269d0				bits 64
6269d0			stub_7f17376269d0_1:
6269d0 83c104			add	ecx,byte 4
6269d3 90			nop
6269d4			stub_7f17376269d0_0:
6269d4 e8ddea48ff		call	do_callback_handler
6269d9 117ae70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab65b4				bits 64
ab65b4			continuation_3:
ab65b4			merge_7:
ab65b4 4883ed00			sub	rbp,byte 0
ab65b8 4883ec00			sub	rsp,byte 0
ab65bc			version_120:
ab65bc			version_121:
ab65bc 48c7c003000000		mov	rax,dword 3
ab65c3 4821f0			and	rax,rsi
ab65c6			patchable_jump11:
ab65c6 0f840804b700		je	stub_7f17376269d0_0
ab65cc e9ff03b700		jmp	stub_7f17376269d0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #136
                   ast: #f
                   generator: #<procedure #137>
                   versions: #<table #138>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #127
      stack: (#<ctx-tunk #128
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #129
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6269b8				bits 64
6269b8			stub_7f17376269b8_1:
6269b8 83c104			add	ecx,byte 4
6269bb 90			nop
6269bc			stub_7f17376269b8_0:
6269bc e8f5ea48ff		call	do_callback_handler
6269c1 b17ae70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab65cc				bits 64
ab65cc			version_122:
ab65cc 4883ed00			sub	rbp,byte 0
ab65d0 4883ec00			sub	rsp,byte 0
ab65d4 4889f0			mov	rax,rsi
ab65d7 4883e003			and	rax,byte 3
ab65db 4883f801			cmp	rax,byte 1
ab65df 7517			jne	short patchable_jump12
ab65e1 488b46ff			mov	rax,[rsi-1]
ab65e5 4825f8000000		and	rax,248
ab65eb 483df0000000		cmp	rax,240
ab65f1 7505			jne	short patchable_jump12
ab65f3 f20f105607		movsd	xmm2,[rsi+7]
ab65f8			patchable_jump12:
ab65f8 0f84be03b700		je	stub_7f17376269b8_0
ab65fe e9b503b700		jmp	stub_7f17376269b8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab65f8 -> 7f17376269b8
GEN VERSION >>> #<lazy-code #139
                   ast: #f
                   generator: #<procedure #140>
                   versions: #<table #141>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #142
      stack: (#<ctx-tunk #128
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #143 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 fr . 0) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6269a0				bits 64
6269a0			stub_7f17376269a0_1:
6269a0 83c104			add	ecx,byte 4
6269a3 90			nop
6269a4			stub_7f17376269a0_0:
6269a4 e80deb48ff		call	do_callback_handler
6269a9 517be70200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab65fe				bits 64
ab65fe 9090		version_123:
ab6600 48c7c003000000		mov	rax,dword 3
ab6607 4c21f0			and	rax,r14
ab660a			patchable_jump13:
ab660a 0f849403b700		je	stub_7f17376269a0_0
ab6610 e98b03b700		jmp	stub_7f17376269a0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #144
                   ast: #f
                   generator: #<procedure #145>
                   versions: #<table #146>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #142
      stack: (#<ctx-tunk #128
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #143 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 fr . 0) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626988				bits 64
626988			stub_7f1737626988_1:
626988 83c104			add	ecx,byte 4
62698b 90			nop
62698c			stub_7f1737626988_0:
62698c e825eb48ff		call	do_callback_handler
626991 91c2e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab6610				bits 64
ab6610			version_124:
ab6610 4883ed00			sub	rbp,byte 0
ab6614 4883ec00			sub	rsp,byte 0
ab6618 4c89f0			mov	rax,r14
ab661b 4883e003			and	rax,byte 3
ab661f 4883f801			cmp	rax,byte 1
ab6623 7518			jne	short patchable_jump14
ab6625 498b46ff			mov	rax,[r14-1]
ab6629 4825f8000000		and	rax,248
ab662f 483df0000000		cmp	rax,240
ab6635 7506			jne	short patchable_jump14
ab6637 f2410f105e07		movsd	xmm3,[r14+7]
ab663d			patchable_jump14:
ab663d 0f844903b700		je	stub_7f1737626988_0
ab6643 e94003b700		jmp	stub_7f1737626988_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab663d -> 7f1737626988
GEN VERSION >>> #<lazy-code #147
                   ast: #f
                   generator: #<procedure #148>
                   versions: #<table #149>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #150
      stack: (#<ctx-tflo #151 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #143 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 fr . 1) (4 fr . 0) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8) (r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #152
      stack: (#<ctx-tflo #153 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8) (r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
#<ctx #44
      stack: (#<ctx-tunk #45
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #46
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #47
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #48
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #49
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 0) (3 r . 1) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #50
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #51
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . -1)
 (ffs . 0)
 ((r . 1) r . 3)
 ((r . 0) r . 1)
 ((flbox fr . 2) r . 0)
 ((m . 1) r . 2))
#(label #f merge_8)
------------------------------------------------------------------------
ab6643				bits 64
ab6643 90		version_125:
ab6644 4883ed00			sub	rbp,byte 0
ab6648 4883ec00			sub	rsp,byte 0
ab664c f20f10e2			movsd	xmm4,xmm2
ab6650 f20f58e3			addsd	xmm4,xmm3
ab6654			merge_8:
ab6654 4883edf8			sub	rbp,byte -8
ab6658 4883ec00			sub	rsp,byte 0
ab665c 4c89ff			mov	rdi,r15
ab665f 4989df			mov	r15,rbx
ab6662			alloc_begin_10:
ab6662 4983c110			add	r9,byte 16
ab6666 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab666e f2410f1161f8		movsd	[r9-8],xmm4
ab6674 498d41f1			lea	rax,[r9-15]
ab6678 4889c3			mov	rbx,rax
ab667b 488b75f8			mov	rsi,[rbp-8]
ab667f e9fbfcffff		jmp	version_91
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #154
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #155>
                   versions: #<table #156>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #73
      stack: (#<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 r . 0) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #75
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
626a48				bits 64
626a48			stub_7f1737626a48_0:
626a48 e877ed48ff		call	do_callback_cont_handler
626a4d 71b6e80200000000
------------------------------------------------------------------------
ab6684				bits 64
ab6684			version_126:
ab6684			version_127:
ab6684 4883ed00			sub	rbp,byte 0
ab6688 4883ec00			sub	rsp,byte 0
ab668c 4883ed00			sub	rbp,byte 0
ab6690 4883ec00			sub	rsp,byte 0
ab6694 f20f10e3			movsd	xmm4,xmm3
ab6698			version_128:
ab6698			version_129:
ab6698			version_130:
ab6698			version_131:
ab6698			version_132:
ab6698			version_133:
ab6698			version_134:
ab6698 4883ed00			sub	rbp,byte 0
ab669c 4883ec00			sub	rsp,byte 0
ab66a0 f20f10ec			movsd	xmm5,xmm4
ab66a4 48b8000000000000
ab66ac f03f			mov	rax,4607182418800017408
ab66ae 66480f6ec0		movq	xmm0,rax
ab66b3 f20f5ce8			subsd	xmm5,xmm0
ab66b7			version_135:
ab66b7 4883ed18			sub	rbp,byte 24
ab66bb 4883ec10			sub	rsp,byte 16
ab66bf f20f115c2408		movsd	[rsp+8],xmm3
ab66c5 48895d10			mov	[rbp+16],rbx
ab66c9 f20f111424		movsd	[rsp],xmm2
ab66ce 48897508			mov	[rbp+8],rsi
ab66d2 48c7c080c3e802		mov	rax,dword 48808832
ab66d9 48894500			mov	[rbp],rax
ab66dd 4883ed00			sub	rbp,byte 0
ab66e1 4883ec00			sub	rsp,byte 0
ab66e5 f20f10d5			movsd	xmm2,xmm5
ab66e9 48c7c704000000		mov	rdi,dword 4
ab66f0 e9d3f9ffff		jmp	dest_7f1736ab60c8_3
>>> patching jump at 7f1736ab6426 -> 7f1736ab6684
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #157 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #158
      stack: (#<ctx-tunk #157
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 fm . 0) (3 m . 1) (2 fm . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
626970				bits 64
626970			stub_7f1737626970_1:
626970 83c104			add	ecx,byte 4
626973 90			nop
626974			stub_7f1737626970_0:
626974 e83deb48ff		call	do_callback_handler
626979 319de30200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab66f5				bits 64
ab66f5 909090		continuation_4:
ab66f8			version_136:
ab66f8			version_137:
ab66f8			version_138:
ab66f8 48c7c003000000		mov	rax,dword 3
ab66ff 4c21f0			and	rax,r14
ab6702			patchable_jump15:
ab6702 0f846c02b700		je	stub_7f1737626970_0
ab6708 e96302b700		jmp	stub_7f1737626970_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #160
                   ast: #f
                   generator: #<procedure #161>
                   versions: #<table #162>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #163
      stack: (#<ctx-tflo #164 sym: float mem-allocated?: #t is-cst: #t cst: 0.>
              #<ctx-tunk #157
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 . #f) (5 r . 8) (4 fm . 0) (3 m . 1) (2 fm . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626958				bits 64
626958			stub_7f1737626958_1:
626958 83c104			add	ecx,byte 4
62695b 90			nop
62695c			stub_7f1737626958_0:
62695c e855eb48ff		call	do_callback_handler
626961 e197e20200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6708				bits 64
ab6708			version_139:
ab6708 4883ed00			sub	rbp,byte 0
ab670c 4883ec00			sub	rsp,byte 0
ab6710 4c89f0			mov	rax,r14
ab6713 4883e003			and	rax,byte 3
ab6717 4883f801			cmp	rax,byte 1
ab671b 7518			jne	short patchable_jump16
ab671d 498b46ff			mov	rax,[r14-1]
ab6721 4825f8000000		and	rax,248
ab6727 483df0000000		cmp	rax,240
ab672d 7506			jne	short patchable_jump16
ab672f f2410f106e07		movsd	xmm5,[r14+7]
ab6735			patchable_jump16:
ab6735 0f842102b700		je	stub_7f1737626958_0
ab673b e91802b700		jmp	stub_7f1737626958_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6735 -> 7f1737626958
GEN VERSION >>> #<lazy-code #165
                   ast: #f
                   generator: #<procedure #166>
                   versions: #<table #167>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #168
      stack: (#<ctx-tflo #164 sym: float mem-allocated?: #t is-cst: #t cst: 0.>
              #<ctx-tflo #169 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 . #f)
        (5 fr . 3)
        (4 fm . 0)
        (3 m . 1)
        (2 fm . 1)
        (1 m . 2)
        (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #170
      stack: (#<ctx-tflo #171 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 m . 1) (2 fm . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
#<ctx #172
      stack: (#<ctx-tunk #173
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #174
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #175
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #176
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #177
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #178
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 m . 1) (2 r . 0) (1 m . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #179
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #180
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
((fs . 0)
 (ffs . -2)
 ((flbox fr . 0) r . 8)
 ((flbox fm . 0) r . 2)
 ((flbox fm . 1) r . 0))
#(label #f merge_9)
"-------------------------------------------------------------------------"
#<ctx #181
      stack: (#<ctx-tunk #173
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #175
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #176
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #177
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #178
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 m . 1) (2 r . 0) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2) (r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #180
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
#<ctx #78
      stack: (#<ctx-tunk #79
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #80
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #81
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #82
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #83
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 1) (3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #84
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . -2)
 (ffs . 0)
 ((r . 8) r . 1)
 ((r . 0) r . 3)
 ((m . 1) r . 0)
 ((m . 2) r . 2))
#(label #f merge_10)
------------------------------------------------------------------------
ab673b				bits 64
ab673b 90		version_140:
ab673c			version_141:
ab673c			version_142:
ab673c 4883ed00			sub	rbp,byte 0
ab6740 4883ec00			sub	rsp,byte 0
ab6744 f20f10d5			movsd	xmm2,xmm5
ab6748 48c7c000000000		mov	rax,dword 0
ab674f 66480f6ec0		movq	xmm0,rax
ab6754 f20f58d0			addsd	xmm2,xmm0
ab6758			merge_9:
ab6758 4883ed00			sub	rbp,byte 0
ab675c 4883ecf0			sub	rsp,byte -16
ab6760			alloc_begin_11:
ab6760 4983c110			add	r9,byte 16
ab6764 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab676c f2410f1151f8		movsd	[r9-8],xmm2
ab6772 498d41f1			lea	rax,[r9-15]
ab6776 4989c6			mov	r14,rax
ab6779			alloc_begin_12:
ab6779 4983c110			add	r9,byte 16
ab677d 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6785 488b4424f8		mov	rax,[rsp-8]
ab678a 498941f8			mov	[r9-8],rax
ab678e 498d41f1			lea	rax,[r9-15]
ab6792 4889c6			mov	rsi,rax
ab6795			alloc_begin_13:
ab6795 4983c110			add	r9,byte 16
ab6799 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab67a1 488b4424f0		mov	rax,[rsp-16]
ab67a6 498941f8			mov	[r9-8],rax
ab67aa 498d41f1			lea	rax,[r9-15]
ab67ae 4889c3			mov	rbx,rax
ab67b1			version_143:
ab67b1			merge_10:
ab67b1 4883edf0			sub	rbp,byte -16
ab67b5 4883ec00			sub	rsp,byte 0
ab67b9 4d89f7			mov	r15,r14
ab67bc 4889df			mov	rdi,rbx
ab67bf 488b5df8			mov	rbx,[rbp-8]
ab67c3 488b75f0			mov	rsi,[rbp-16]
ab67c7 e9aefcffff		jmp	version_112
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #182 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #183
      stack: (#<ctx-tunk #184
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #27
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #183
      stack: (#<ctx-tunk #184
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #27
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
#<ctx #185
      stack: (#<ctx-tunk #186
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #187
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #188
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #189
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #190
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 r . 2) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #191
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #192
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . -2) ((flbox fm . 0) r . 2) ((flbox fm . 1) r . 0))
#(label #f merge_11)
------------------------------------------------------------------------
ab67cc				bits 64
ab67cc			merge_11:
ab67cc 4883ed00			sub	rbp,byte 0
ab67d0 4883ecf0			sub	rsp,byte -16
ab67d4			alloc_begin_14:
ab67d4 4983c110			add	r9,byte 16
ab67d8 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab67e0 488b4424f8		mov	rax,[rsp-8]
ab67e5 498941f8			mov	[r9-8],rax
ab67e9 498d41f1			lea	rax,[r9-15]
ab67ed 4889c6			mov	rsi,rax
ab67f0			alloc_begin_15:
ab67f0 4983c110			add	r9,byte 16
ab67f4 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab67fc 488b4424f0		mov	rax,[rsp-16]
ab6801 498941f8			mov	[r9-8],rax
ab6805 498d41f1			lea	rax,[r9-15]
ab6809 4889c3			mov	rbx,rax
"-------------------------------------------------------------------------"
#<ctx #185
      stack: (#<ctx-tunk #186
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #187
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #188
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #189
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #190
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 r . 2) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #191
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #192
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
#<ctx #193
      stack: (#<ctx-tunk #194
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #195
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #196
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #197
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #198
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 r . 2) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #199
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #200
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_12)
------------------------------------------------------------------------
626940				bits 64
626940			stub_7f1737626940_1:
626940 83c104			add	ecx,byte 4
626943 90			nop
626944			stub_7f1737626940_0:
626944 e86deb48ff		call	do_callback_handler
626949 61b7e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab680c				bits 64
ab680c			continuation_5:
ab680c			merge_12:
ab680c 4883ed00			sub	rbp,byte 0
ab6810 4883ec00			sub	rsp,byte 0
ab6814			version_144:
ab6814			version_145:
ab6814 4883ed00			sub	rbp,byte 0
ab6818 4883ec00			sub	rsp,byte 0
ab681c 4883ed00			sub	rbp,byte 0
ab6820 4883ec00			sub	rsp,byte 0
ab6824 4989f7			mov	r15,rsi
ab6827			version_146:
ab6827			version_147:
ab6827			version_148:
ab6827 48c7c003000000		mov	rax,dword 3
ab682e 4c21f8			and	rax,r15
ab6831			patchable_jump17:
ab6831 0f840d01b700		je	stub_7f1737626940_0
ab6837 e90401b700		jmp	stub_7f1737626940_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #201
                   ast: #f
                   generator: #<procedure #202>
                   versions: #<table #203>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #204
      stack: (#<ctx-tflo #205 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tunk #195
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tclo #206
                 sym: closure
                 mem-allocated?: #t
                 is-cst: #t
                 cst: 0>
              #<ctx-tunk #194
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #195
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #196
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #197
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #198
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((7 . #f)
        (6 r . 1)
        (5 . #f)
        (4 r . 8)
        (3 r . 2)
        (2 r . 0)
        (1 m . 1)
        (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #207
                     kind: local
                     sslots: (6 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #200
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626928				bits 64
626928			stub_7f1737626928_1:
626928 83c104			add	ecx,byte 4
62692b 90			nop
62692c			stub_7f1737626928_0:
62692c e885eb48ff		call	do_callback_handler
626931 617ae70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6837				bits 64
ab6837 90		version_149:
ab6838 4883ed00			sub	rbp,byte 0
ab683c 4883ec00			sub	rsp,byte 0
ab6840 4c89f8			mov	rax,r15
ab6843 4883e003			and	rax,byte 3
ab6847 4883f801			cmp	rax,byte 1
ab684b 7518			jne	short patchable_jump18
ab684d 498b47ff			mov	rax,[r15-1]
ab6851 4825f8000000		and	rax,248
ab6857 483df0000000		cmp	rax,240
ab685d 7506			jne	short patchable_jump18
ab685f f2410f105707		movsd	xmm2,[r15+7]
ab6865			patchable_jump18:
ab6865 0f84c100b700		je	stub_7f1737626928_0
ab686b e9b800b700		jmp	stub_7f1737626928_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6865 -> 7f1737626928
GEN VERSION >>> #<lazy-code #208
                   ast: #f
                   generator: #<procedure #209>
                   versions: #<table #210>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #211
      stack: (#<ctx-tflo #205 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tflo #212 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #206
                 sym: closure
                 mem-allocated?: #t
                 is-cst: #t
                 cst: 0>
              #<ctx-tunk #194
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #212 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #196
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #197
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #198
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((7 . #f)
        (6 fr . 0)
        (5 . #f)
        (4 r . 8)
        (3 fr . 0)
        (2 r . 0)
        (1 m . 1)
        (0 m . 0))
      free-regs:
       ((r . 1) (r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #207
                     kind: local
                     sslots: (6 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #200
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #213
      stack: (#<ctx-tflo #214 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #206
                 sym: closure
                 mem-allocated?: #t
                 is-cst: #t
                 cst: 0>
              #<ctx-tunk #194
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #212 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #196
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #197
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #198
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 fr . 1) (5 . #f) (4 r . 8) (3 fr . 0) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 1) (r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #215
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #200
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
#<ctx #216
      stack: (#<ctx-tunk #217
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #218
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #219
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #220
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #221
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #222
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #223
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 2) (5 r . 1) (4 r . 8) (3 r . 3) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #224
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #225
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . 0)
 (ffs . 0)
 ((flbox fr . 1) r . 2)
 ((constfn . 0) r . 1)
 ((flbox fr . 0) r . 3))
#(label #f merge_13)
------------------------------------------------------------------------
626910				bits 64
626910			stub_7f1737626910_0:
626910 e8afee48ff		call	do_callback_cont_handler
626915 a17be70200000000
------------------------------------------------------------------------
ab686b				bits 64
ab686b 90		version_150:
ab686c			version_151:
ab686c			version_152:
ab686c 4883ed00			sub	rbp,byte 0
ab6870 4883ec00			sub	rsp,byte 0
ab6874 f20f10da			movsd	xmm3,xmm2
ab6878 48b8000000000000
ab6880 0040			mov	rax,4611686018427387904
ab6882 66480f6ec0		movq	xmm0,rax
ab6887 f20f5cd8			subsd	xmm3,xmm0
ab688b			merge_13:
ab688b 4883ed00			sub	rbp,byte 0
ab688f 4883ec00			sub	rsp,byte 0
ab6893			alloc_begin_16:
ab6893 4983c110			add	r9,byte 16
ab6897 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab689f f2410f1159f8		movsd	[r9-8],xmm3
ab68a5 498d41f1			lea	rax,[r9-15]
ab68a9 4889c6			mov	rsi,rax
ab68ac 49c7c71913e902		mov	r15,dword 48829209
ab68b3			alloc_begin_17:
ab68b3 4983c110			add	r9,byte 16
ab68b7 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab68bf f2410f1151f8		movsd	[r9-8],xmm2
ab68c5 498d41f1			lea	rax,[r9-15]
ab68c9 4889c7			mov	rdi,rax
ab68cc			version_153:
ab68cc 4883ed20			sub	rbp,byte 32
ab68d0 4883ec00			sub	rsp,byte 0
ab68d4 4c897518			mov	[rbp+24],r14
ab68d8 48897d10			mov	[rbp+16],rdi
ab68dc 48895d08			mov	[rbp+8],rbx
ab68e0 48c7c040c4e802		mov	rax,dword 48809024
ab68e7 48894500			mov	[rbp],rax
ab68eb 4883ed00			sub	rbp,byte 0
ab68ef 4883ec00			sub	rsp,byte 0
ab68f3 4889f3			mov	rbx,rsi
ab68f6 49c7c304000000		mov	r11,dword 4
ab68fd 48c7c704000000		mov	rdi,dword 4
ab6904			stub_load_2:
ab6904 e9eb01b700		jmp	dest_7f1737626af4_2
GEN VERSION FN#<lazy-code #226
                 ast: #f
                 generator: #<procedure #227>
                 versions: #<table #228>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f
                 generic-ctx: #f
                 generic-vers: #f>
 >>> #<ctx #229
           stack: (#<ctx-tunk #230
                      sym: unknown
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>
                   #<ctx-tclo #231
                      sym: closure
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tret #232
                      sym: retaddr
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>)
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((n0 . #<identifier #233
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: #f
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 0>
(#<ctx-tunk #217 sym: unknown mem-allocated?: #f is-cst: #f cst: #f>)
"-------------------------------------------------------------------------"
#<ctx #229
      stack: (#<ctx-tunk #230
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tclo #231
                 sym: closure
                 mem-allocated?: #t
                 is-cst: #f
                 cst: #f>
              #<ctx-tret #232
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #233
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #234
      stack: (#<ctx-tunk #235
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #236
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #237
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #238
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_14)
"-------------------------------------------------------------------------"
#<ctx #239
      stack: (#<ctx-tunk #235
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #235
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #236
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #237
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #240
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #241
      stack: (#<ctx-tunk #242
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #243
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #244
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #245
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #246
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_15)
"-------------------------------------------------------------------------"
#<ctx #247
      stack: (#<ctx-tflo #248 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tunk #242
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #243
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #244
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #245
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 . #f) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #246
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #249
      stack: (#<ctx-tunk #250
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #251
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0) ((flbox const . 2.) r . 3))
#(label #f merge_16)
------------------------------------------------------------------------
6268f8				bits 64
6268f8			stub_7f17376268f8_1:
6268f8 83c104			add	ecx,byte 4
6268fb 90			nop
6268fc			stub_7f17376268f8_0:
6268fc e8b5eb48ff		call	do_callback_handler
626901 01c5e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6909				bits 64
ab6909 909090		fn_entry_2:
ab690c 4883ff04			cmp	rdi,byte 4
ab6910 0f8551f6ffff		jne	err_wrong_num_args
ab6916			merge_14:
ab6916 4883ed00			sub	rbp,byte 0
ab691a 4883ec00			sub	rsp,byte 0
ab691e			version_154:
ab691e 4883ed00			sub	rbp,byte 0
ab6922 4883ec00			sub	rsp,byte 0
ab6926 4883ed00			sub	rbp,byte 0
ab692a 4883ec00			sub	rsp,byte 0
ab692e 4989df			mov	r15,rbx
ab6931			merge_15:
ab6931 4883ed00			sub	rbp,byte 0
ab6935 4883ec00			sub	rsp,byte 0
ab6939			version_155:
ab6939			merge_16:
ab6939 4883ed00			sub	rbp,byte 0
ab693d 4883ec00			sub	rsp,byte 0
ab6941 48c7c7593de702		mov	rdi,dword 48708953
ab6948			version_156:
ab6948			version_157:
ab6948 48c7c003000000		mov	rax,dword 3
ab694f 4c21f8			and	rax,r15
ab6952			patchable_jump19:
ab6952 0f84a4ffb600		je	stub_7f17376268f8_0
ab6958 e99bffb600		jmp	stub_7f17376268f8_1
Patch direct stub jump at 7f1736ab6904
  > now jump to 7f1736ab690c
------------------------------------------------------------------------
ab6904				bits 64
ab6904 eb06			jmp	short fn_entry_2
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #256
                   ast: #f
                   generator: #<procedure #257>
                   versions: #<table #258>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #249
      stack: (#<ctx-tunk #250
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #251
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 3) (3 r . 1) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6268e0				bits 64
6268e0			stub_7f17376268e0_1:
6268e0 83c104			add	ecx,byte 4
6268e3 90			nop
6268e4			stub_7f17376268e0_0:
6268e4 e8cdeb48ff		call	do_callback_handler
6268e9 a1c5e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6958				bits 64
ab6958			version_158:
ab6958 4883ed00			sub	rbp,byte 0
ab695c 4883ec00			sub	rsp,byte 0
ab6960 4c89f8			mov	rax,r15
ab6963 4883e003			and	rax,byte 3
ab6967 4883f801			cmp	rax,byte 1
ab696b 7518			jne	short patchable_jump20
ab696d 498b47ff			mov	rax,[r15-1]
ab6971 4825f8000000		and	rax,248
ab6977 483df0000000		cmp	rax,240
ab697d 7506			jne	short patchable_jump20
ab697f f2410f105707		movsd	xmm2,[r15+7]
ab6985			patchable_jump20:
ab6985 0f8459ffb600		je	stub_7f17376268e0_0
ab698b e950ffb600		jmp	stub_7f17376268e0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6985 -> 7f17376268e0
GEN VERSION >>> #<lazy-code #259
                   ast: #f
                   generator: #<procedure #260>
                   versions: #<table #261>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #262
      stack: (#<ctx-tunk #250
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #263 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 3) (3 fr . 0) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6268c8				bits 64
6268c8			stub_7f17376268c8_1:
6268c8 83c104			add	ecx,byte 4
6268cb 90			nop
6268cc			stub_7f17376268c8_0:
6268cc e8e5eb48ff		call	do_callback_handler
6268d1 31c3e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab698b				bits 64
ab698b 90		version_159:
ab698c 48c7c003000000		mov	rax,dword 3
ab6993 4821f8			and	rax,rdi
ab6996			patchable_jump21:
ab6996 0f8430ffb600		je	stub_7f17376268c8_0
ab699c e927ffb600		jmp	stub_7f17376268c8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #264
                   ast: #f
                   generator: #<procedure #265>
                   versions: #<table #266>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #262
      stack: (#<ctx-tunk #250
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #263 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 3) (3 fr . 0) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6268b0				bits 64
6268b0			stub_7f17376268b0_1:
6268b0 83c104			add	ecx,byte 4
6268b3 90			nop
6268b4			stub_7f17376268b0_0:
6268b4 e8fdeb48ff		call	do_callback_handler
6268b9 8196e20200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab699c				bits 64
ab699c			version_160:
ab699c 4883ed00			sub	rbp,byte 0
ab69a0 4883ec00			sub	rsp,byte 0
ab69a4 4889f8			mov	rax,rdi
ab69a7 4883e003			and	rax,byte 3
ab69ab 4883f801			cmp	rax,byte 1
ab69af 7517			jne	short patchable_jump22
ab69b1 488b47ff			mov	rax,[rdi-1]
ab69b5 4825f8000000		and	rax,248
ab69bb 483df0000000		cmp	rax,240
ab69c1 7505			jne	short patchable_jump22
ab69c3 f20f105f07		movsd	xmm3,[rdi+7]
ab69c8			patchable_jump22:
ab69c8 0f84e6feb600		je	stub_7f17376268b0_0
ab69ce e9ddfeb600		jmp	stub_7f17376268b0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab69c8 -> 7f17376268b0
GEN VERSION >>> #<lazy-code #267
                   ast: #f
                   generator: #<procedure #268>
                   versions: #<table #269>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #270
      stack: (#<ctx-tflo #271 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #263 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 fr . 0) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626898				bits 64
626898			stub_7f1737626898_1:
626898 83c104			add	ecx,byte 4
62689b 90			nop
62689c			stub_7f1737626898_0:
62689c e815ec48ff		call	do_callback_handler
6268a1 c1b6e80200000000
------------------------------------------------------------------------
ab69ce				bits 64
ab69ce 9090		version_161:
ab69d0 660f2fd3			comisd	xmm2,xmm3
ab69d4			patchable_jump23:
ab69d4 0f83c2feb600		jae	stub_7f1737626898_0
ab69da e9b9feb600		jmp	stub_7f1737626898_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab69d4 -> 7f1737626898
GEN VERSION >>> #<lazy-code #10
                   ast: #f
                   generator: #<procedure #11>
                   versions: #<table #12>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #272
      stack: (#<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #272
      stack: (#<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #273
      stack: (#<ctx-tunk #274
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #277
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_17)
------------------------------------------------------------------------
ab69da				bits 64
ab69da 9090		merge_17:
ab69dc 4883ed00			sub	rbp,byte 0
ab69e0 4883ec00			sub	rsp,byte 0
------------------------------------------------------------------------
626880				bits 64
626880			stub_7f1737626880_1:
626880 83c104			add	ecx,byte 4
626883 90			nop
626884			stub_7f1737626880_0:
626884 e82dec48ff		call	do_callback_handler
626889 017be70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab69e4				bits 64
ab69e4			version_162:
ab69e4			version_163:
ab69e4 4883ed00			sub	rbp,byte 0
ab69e8 4883ec00			sub	rsp,byte 0
ab69ec 4883ed00			sub	rbp,byte 0
ab69f0 4883ec00			sub	rsp,byte 0
ab69f4 4889df			mov	rdi,rbx
ab69f7			version_164:
ab69f7			version_165:
ab69f7			version_166:
ab69f7 48c7c003000000		mov	rax,dword 3
ab69fe 4821f8			and	rax,rdi
ab6a01			patchable_jump24:
ab6a01 0f847dfeb600		je	stub_7f1737626880_0
ab6a07 e974feb600		jmp	stub_7f1737626880_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #278
                   ast: #f
                   generator: #<procedure #279>
                   versions: #<table #280>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #281
      stack: (#<ctx-tflo #282 sym: float mem-allocated?: #t is-cst: #t cst: 1.>
              #<ctx-tunk #274
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #274
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 . #f) (3 r . 3) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #283
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626868				bits 64
626868			stub_7f1737626868_1:
626868 83c104			add	ecx,byte 4
62686b 90			nop
62686c			stub_7f1737626868_0:
62686c e845ec48ff		call	do_callback_handler
626871 51c5e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6a07				bits 64
ab6a07 90		version_167:
ab6a08 4883ed00			sub	rbp,byte 0
ab6a0c 4883ec00			sub	rsp,byte 0
ab6a10 4889f8			mov	rax,rdi
ab6a13 4883e003			and	rax,byte 3
ab6a17 4883f801			cmp	rax,byte 1
ab6a1b 7517			jne	short patchable_jump25
ab6a1d 488b47ff			mov	rax,[rdi-1]
ab6a21 4825f8000000		and	rax,248
ab6a27 483df0000000		cmp	rax,240
ab6a2d 7505			jne	short patchable_jump25
ab6a2f f20f105707		movsd	xmm2,[rdi+7]
ab6a34			patchable_jump25:
ab6a34 0f8432feb600		je	stub_7f1737626868_0
ab6a3a e929feb600		jmp	stub_7f1737626868_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6a34 -> 7f1737626868
GEN VERSION >>> #<lazy-code #284
                   ast: #f
                   generator: #<procedure #285>
                   versions: #<table #286>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #287
      stack: (#<ctx-tflo #282 sym: float mem-allocated?: #t is-cst: #t cst: 1.>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 . #f) (3 fr . 0) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #283
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626850				bits 64
626850			stub_7f1737626850_1:
626850 83c104			add	ecx,byte 4
626853 90			nop
626854			stub_7f1737626850_0:
626854 e85dec48ff		call	do_callback_handler
626859 41c6e80200000000
------------------------------------------------------------------------
ab6a3a				bits 64
ab6a3a 9090		version_168:
ab6a3c			version_169:
ab6a3c			version_170:
ab6a3c 4883ed00			sub	rbp,byte 0
ab6a40 4883ec00			sub	rsp,byte 0
ab6a44 f20f10da			movsd	xmm3,xmm2
ab6a48 48b8000000000000
ab6a50 f03f			mov	rax,4607182418800017408
ab6a52 66480f6ec0		movq	xmm0,rax
ab6a57 f20f5cd8			subsd	xmm3,xmm0
ab6a5b			version_171:
ab6a5b			version_172:
ab6a5b 4883ed00			sub	rbp,byte 0
ab6a5f 4883ec00			sub	rsp,byte 0
ab6a63 4883ed00			sub	rbp,byte 0
ab6a67 4883ec00			sub	rsp,byte 0
ab6a6b f20f10e3			movsd	xmm4,xmm3
ab6a6f			version_173:
ab6a6f			version_174:
ab6a6f			version_175:
ab6a6f			version_176:
ab6a6f			version_177:
ab6a6f			version_178:
ab6a6f			version_179:
ab6a6f 48b8000000000000
ab6a77 0040			mov	rax,4611686018427387904
ab6a79 66480f6ec8		movq	xmm1,rax
ab6a7e 660f2fe1			comisd	xmm4,xmm1
ab6a82			patchable_jump26:
ab6a82 0f83ccfdb600		jae	stub_7f1737626850_0
ab6a88 e9c3fdb600		jmp	stub_7f1737626850_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6a82 -> 7f1737626850
GEN VERSION >>> #<lazy-code #289
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #290>
                   versions: #<table #291>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #292
      stack: (#<ctx-tflo #293 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 1) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #294
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626838				bits 64
626838			stub_7f1737626838_0:
626838 e887ef48ff		call	do_callback_cont_handler
62683d e1c6e80200000000
------------------------------------------------------------------------
ab6a88				bits 64
ab6a88			version_180:
ab6a88			version_181:
ab6a88 4883ed00			sub	rbp,byte 0
ab6a8c 4883ec00			sub	rsp,byte 0
ab6a90 4883ed00			sub	rbp,byte 0
ab6a94 4883ec00			sub	rsp,byte 0
ab6a98 f20f10e3			movsd	xmm4,xmm3
ab6a9c			version_182:
ab6a9c			version_183:
ab6a9c			version_184:
ab6a9c			version_185:
ab6a9c			version_186:
ab6a9c			version_187:
ab6a9c			version_188:
ab6a9c 4883ed00			sub	rbp,byte 0
ab6aa0 4883ec00			sub	rsp,byte 0
ab6aa4 f20f10ec			movsd	xmm5,xmm4
ab6aa8 48b8000000000000
ab6ab0 f03f			mov	rax,4607182418800017408
ab6ab2 66480f6ec0		movq	xmm0,rax
ab6ab7 f20f5ce8			subsd	xmm5,xmm0
ab6abb			version_189:
ab6abb 4883ed10			sub	rbp,byte 16
ab6abf 4883ec10			sub	rsp,byte 16
ab6ac3 f20f115c2408		movsd	[rsp+8],xmm3
ab6ac9 f20f111424		movsd	[rsp],xmm2
ab6ace 48897508			mov	[rbp+8],rsi
ab6ad2 48c7c030c7e802		mov	rax,dword 48809776
ab6ad9 48894500			mov	[rbp],rax
ab6add 4883ed00			sub	rbp,byte 0
ab6ae1 4883ec00			sub	rsp,byte 0
ab6ae5 f20f10d5			movsd	xmm2,xmm5
ab6ae9 48c7c704000000		mov	rdi,dword 4
ab6af0 e9d3f5ffff		jmp	dest_7f1736ab60c8_4
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #296 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #297
      stack: (#<ctx-tunk #296
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #293 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #298
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
626820				bits 64
626820			stub_7f1737626820_0:
626820 e89fef48ff		call	do_callback_cont_handler
626825 41c8e80200000000
------------------------------------------------------------------------
ab6af5				bits 64
ab6af5 909090		continuation_6:
ab6af8			version_190:
ab6af8			version_191:
ab6af8 4883ed00			sub	rbp,byte 0
ab6afc 4883ec00			sub	rsp,byte 0
ab6b00 4883ed00			sub	rbp,byte 0
ab6b04 4883ec00			sub	rsp,byte 0
ab6b08 f20f106c2408		movsd	xmm5,[rsp+8]
ab6b0e			version_192:
ab6b0e			version_193:
ab6b0e			version_194:
ab6b0e			version_195:
ab6b0e			version_196:
ab6b0e			version_197:
ab6b0e			version_198:
ab6b0e 4883ed00			sub	rbp,byte 0
ab6b12 4883ec00			sub	rsp,byte 0
ab6b16 f20f10d5			movsd	xmm2,xmm5
ab6b1a 48b8000000000000
ab6b22 0040			mov	rax,4611686018427387904
ab6b24 66480f6ec0		movq	xmm0,rax
ab6b29 f20f5cd0			subsd	xmm2,xmm0
ab6b2d			version_199:
ab6b2d 4883ed10			sub	rbp,byte 16
ab6b31 4883ec00			sub	rsp,byte 0
ab6b35 4c897508			mov	[rbp+8],r14
ab6b39 48c7c0d06fe702		mov	rax,dword 48721872
ab6b40 48894500			mov	[rbp],rax
ab6b44 4883ed00			sub	rbp,byte 0
ab6b48 4883ec00			sub	rsp,byte 0
ab6b4c 48c7c704000000		mov	rdi,dword 4
ab6b53 e970f5ffff		jmp	dest_7f1736ab60c8_5
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #299 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #300
      stack: (#<ctx-tflo #299 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #296
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #293 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 m . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #301
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
626808				bits 64
626808			stub_7f1737626808_1:
626808 83c104			add	ecx,byte 4
62680b 90			nop
62680c			stub_7f1737626808_0:
62680c e8a5ec48ff		call	do_callback_handler
626811 e170e70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6b58				bits 64
ab6b58			continuation_7:
ab6b58			version_200:
ab6b58			version_201:
ab6b58 48c7c003000000		mov	rax,dword 3
ab6b5f 48234500			and	rax,[rbp]
ab6b63			patchable_jump27:
ab6b63 0f84a3fcb600		je	stub_7f1737626808_0
ab6b69 e99afcb600		jmp	stub_7f1737626808_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #302
                   ast: #f
                   generator: #<procedure #303>
                   versions: #<table #304>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #300
      stack: (#<ctx-tflo #299 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #296
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #293 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 m . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #301
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6267f0				bits 64
6267f0			stub_7f17376267f0_1:
6267f0 83c104			add	ecx,byte 4
6267f3 90			nop
6267f4			stub_7f17376267f0_0:
6267f4 e8bdec48ff		call	do_callback_handler
6267f9 8171e70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6b69				bits 64
ab6b69 909090		version_202:
ab6b6c 4883ed00			sub	rbp,byte 0
ab6b70 4883ec00			sub	rsp,byte 0
ab6b74 488b4500			mov	rax,[rbp]
ab6b78 4883e003			and	rax,byte 3
ab6b7c 4883f801			cmp	rax,byte 1
ab6b80 751f			jne	short patchable_jump28
ab6b82 488b4500			mov	rax,[rbp]
ab6b86 488b40ff			mov	rax,[rax-1]
ab6b8a 4825f8000000		and	rax,248
ab6b90 483df0000000		cmp	rax,240
ab6b96 7509			jne	short patchable_jump28
ab6b98 488b4500			mov	rax,[rbp]
ab6b9c f20f106807		movsd	xmm5,[rax+7]
ab6ba1			patchable_jump28:
ab6ba1 0f844dfcb600		je	stub_7f17376267f0_0
ab6ba7 e944fcb600		jmp	stub_7f17376267f0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6ba1 -> 7f17376267f0
GEN VERSION >>> #<lazy-code #305
                   ast: #f
                   generator: #<procedure #306>
                   versions: #<table #307>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #308
      stack: (#<ctx-tflo #299 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #309 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #293 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fr . 3) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #301
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #310
      stack: (#<ctx-tflo #311 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #288 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #275
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #276
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 1) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 3)
        (r . 0)
        (r . 1)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n0 . #<identifier #295
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
#<ctx #53
      stack: (#<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #55
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 0) (2 r . 3) (1 r . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #58
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . -2)
 (ffs . -2)
 ((flbox fr . 1) r . 0)
 ((flbox fm . 1) r . 3)
 ((m . 1) r . 2))
#(label #f merge_18)
------------------------------------------------------------------------
ab6ba7				bits 64
ab6ba7 90		version_203:
ab6ba8			version_204:
ab6ba8			version_205:
ab6ba8 4883ed00			sub	rbp,byte 0
ab6bac 4883ec00			sub	rsp,byte 0
ab6bb0 f20f10dd			movsd	xmm3,xmm5
ab6bb4 f20f58da			addsd	xmm3,xmm2
ab6bb8			version_206:
ab6bb8			merge_18:
ab6bb8 4883edf0			sub	rbp,byte -16
ab6bbc 4883ecf0			sub	rsp,byte -16
ab6bc0			alloc_begin_18:
ab6bc0 4983c110			add	r9,byte 16
ab6bc4 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6bcc f2410f1159f8		movsd	[r9-8],xmm3
ab6bd2 498d41f1			lea	rax,[r9-15]
ab6bd6 4889c3			mov	rbx,rax
ab6bd9			alloc_begin_19:
ab6bd9 4983c110			add	r9,byte 16
ab6bdd 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6be5 488b4424f0		mov	rax,[rsp-16]
ab6bea 498941f8			mov	[r9-8],rax
ab6bee 498d41f1			lea	rax,[r9-15]
ab6bf2 4889c7			mov	rdi,rax
ab6bf5 488b75f8			mov	rsi,[rbp-8]
ab6bf9 e989f7ffff		jmp	version_92
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #312 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #313
      stack: (#<ctx-tunk #314
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 m . 1) (2 fm . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #313
      stack: (#<ctx-tunk #314
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #74 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #54
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #69 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #56
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #57
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 m . 1) (2 fm . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #159
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #76
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
#<ctx #315
      stack: (#<ctx-tunk #316
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #317
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #318
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #319
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #320
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #321
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #322
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #323
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
((fs . 0)
 (ffs . -2)
 ((flbox fr . 0) r . 2)
 ((flbox fm . 0) r . 0)
 ((flbox fm . 1) r . 1))
#(label #f merge_19)
------------------------------------------------------------------------
ab6bfe				bits 64
ab6bfe 9090		merge_19:
ab6c00 4883ed00			sub	rbp,byte 0
ab6c04 4883ecf0			sub	rsp,byte -16
ab6c08			alloc_begin_20:
ab6c08 4983c110			add	r9,byte 16
ab6c0c 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6c14 f2410f1151f8		movsd	[r9-8],xmm2
ab6c1a 498d41f1			lea	rax,[r9-15]
ab6c1e 4889c6			mov	rsi,rax
ab6c21			alloc_begin_21:
ab6c21 4983c110			add	r9,byte 16
ab6c25 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6c2d 488b4424f8		mov	rax,[rsp-8]
ab6c32 498941f8			mov	[r9-8],rax
ab6c36 498d41f1			lea	rax,[r9-15]
ab6c3a 4889c3			mov	rbx,rax
ab6c3d			alloc_begin_22:
ab6c3d 4983c110			add	r9,byte 16
ab6c41 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6c49 488b4424f0		mov	rax,[rsp-16]
ab6c4e 498941f8			mov	[r9-8],rax
ab6c52 498d41f1			lea	rax,[r9-15]
ab6c56 4989c7			mov	r15,rax
"-------------------------------------------------------------------------"
#<ctx #315
      stack: (#<ctx-tunk #316
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #317
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #318
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #319
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #320
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #321
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #322
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #323
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
#<ctx #324
      stack: (#<ctx-tunk #325
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #326
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #327
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #328
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #329
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #330
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #331
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #332
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_20)
"-------------------------------------------------------------------------"
#<ctx #333
      stack: (#<ctx-tflo #334 sym: float mem-allocated?: #t is-cst: #t cst: 0.>
              #<ctx-tunk #325
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #326
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #327
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #328
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #329
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #330
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 . #f) (5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #331
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #332
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
#<ctx #335
      stack: (#<ctx-tunk #336
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #337
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 3) (5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0) ((flbox const . 0.) r . 3))
#(label #f merge_21)
------------------------------------------------------------------------
6267d8				bits 64
6267d8			stub_7f17376267d8_1:
6267d8 83c104			add	ecx,byte 4
6267db 90			nop
6267dc			stub_7f17376267d8_0:
6267dc e8d5ec48ff		call	do_callback_handler
6267e1 7172e70200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6c59				bits 64
ab6c59 909090		continuation_8:
ab6c5c			merge_20:
ab6c5c 4883ed00			sub	rbp,byte 0
ab6c60 4883ec00			sub	rsp,byte 0
ab6c64			version_207:
ab6c64			merge_21:
ab6c64 4883ed00			sub	rbp,byte 0
ab6c68 4883ec00			sub	rsp,byte 0
ab6c6c 48c7c7a100e902		mov	rdi,dword 48824481
ab6c73			version_208:
ab6c73			version_209:
ab6c73 48c7c003000000		mov	rax,dword 3
ab6c7a 4821f0			and	rax,rsi
ab6c7d			patchable_jump29:
ab6c7d 0f8459fbb600		je	stub_7f17376267d8_0
ab6c83 e950fbb600		jmp	stub_7f17376267d8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #345
                   ast: #f
                   generator: #<procedure #346>
                   versions: #<table #347>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #335
      stack: (#<ctx-tunk #336
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #337
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 3) (5 r . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6267c0				bits 64
6267c0			stub_7f17376267c0_1:
6267c0 83c104			add	ecx,byte 4
6267c3 90			nop
6267c4			stub_7f17376267c0_0:
6267c4 e8edec48ff		call	do_callback_handler
6267c9 f1c5e80200000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
ab6c83				bits 64
ab6c83 90		version_210:
ab6c84 4883ed00			sub	rbp,byte 0
ab6c88 4883ec00			sub	rsp,byte 0
ab6c8c 4889f0			mov	rax,rsi
ab6c8f 4883e003			and	rax,byte 3
ab6c93 4883f801			cmp	rax,byte 1
ab6c97 7517			jne	short patchable_jump30
ab6c99 488b46ff			mov	rax,[rsi-1]
ab6c9d 4825f8000000		and	rax,248
ab6ca3 483df0000000		cmp	rax,240
ab6ca9 7505			jne	short patchable_jump30
ab6cab f20f105607		movsd	xmm2,[rsi+7]
ab6cb0			patchable_jump30:
ab6cb0 0f840efbb600		je	stub_7f17376267c0_0
ab6cb6 e905fbb600		jmp	stub_7f17376267c0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6cb0 -> 7f17376267c0
GEN VERSION >>> #<lazy-code #348
                   ast: #f
                   generator: #<procedure #349>
                   versions: #<table #350>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #351
      stack: (#<ctx-tunk #336
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #352 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 3) (5 fr . 0) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 2) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
6267a8				bits 64
6267a8			stub_7f17376267a8_1:
6267a8 83c104			add	ecx,byte 4
6267ab 90			nop
6267ac			stub_7f17376267a8_0:
6267ac e805ed48ff		call	do_callback_handler
6267b1 81b5e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab6cb6				bits 64
ab6cb6 9090		version_211:
ab6cb8 48c7c003000000		mov	rax,dword 3
ab6cbf 4821f8			and	rax,rdi
ab6cc2			patchable_jump31:
ab6cc2 0f84e4fab600		je	stub_7f17376267a8_0
ab6cc8 e9dbfab600		jmp	stub_7f17376267a8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #353
                   ast: #f
                   generator: #<procedure #354>
                   versions: #<table #355>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #351
      stack: (#<ctx-tunk #336
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #352 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 3) (5 fr . 0) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs: ((r . 2) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
626790				bits 64
626790			stub_7f1737626790_1:
626790 83c104			add	ecx,byte 4
626793 90			nop
626794			stub_7f1737626790_0:
626794 e81ded48ff		call	do_callback_handler
626799 91c6e80200000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
ab6cc8				bits 64
ab6cc8			version_212:
ab6cc8 4883ed00			sub	rbp,byte 0
ab6ccc 4883ec00			sub	rsp,byte 0
ab6cd0 4889f8			mov	rax,rdi
ab6cd3 4883e003			and	rax,byte 3
ab6cd7 4883f801			cmp	rax,byte 1
ab6cdb 7517			jne	short patchable_jump32
ab6cdd 488b47ff			mov	rax,[rdi-1]
ab6ce1 4825f8000000		and	rax,248
ab6ce7 483df0000000		cmp	rax,240
ab6ced 7505			jne	short patchable_jump32
ab6cef f20f105f07		movsd	xmm3,[rdi+7]
ab6cf4			patchable_jump32:
ab6cf4 0f849afab600		je	stub_7f1737626790_0
ab6cfa e991fab600		jmp	stub_7f1737626790_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1736ab6cf4 -> 7f1737626790
GEN VERSION >>> #<lazy-code #356
                   ast: #f
                   generator: #<procedure #357>
                   versions: #<table #358>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #359
      stack: (#<ctx-tflo #360 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #352 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 fr . 1)
        (5 fr . 0)
        (4 r . 0)
        (3 m . 1)
        (2 r . 1)
        (1 m . 2)
        (0 m . 0))
      free-regs:
       ((r . 3) (r . 2) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
"-------------------------------------------------------------------------"
#<ctx #361
      stack: (#<ctx-tflo #362 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #338
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #339
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #340
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #341
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #342
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 fr . 2) (4 r . 0) (3 m . 1) (2 r . 1) (1 m . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 2) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #343
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #344
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
#<ctx #172
      stack: (#<ctx-tunk #173
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #174
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #175
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #176
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #177
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #178
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 m . 1) (2 r . 0) (1 m . 2) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #179
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #180
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0) ((flbox fr . 2) r . 8) ((r . 0) r . 2) ((r . 1) r . 0))
#(label #f merge_22)
------------------------------------------------------------------------
ab6cfa				bits 64
ab6cfa 9090		version_213:
ab6cfc 4883ed00			sub	rbp,byte 0
ab6d00 4883ec00			sub	rsp,byte 0
ab6d04 f20f10e2			movsd	xmm4,xmm2
ab6d08 f20f58e3			addsd	xmm4,xmm3
ab6d0c			merge_22:
ab6d0c 4883ed00			sub	rbp,byte 0
ab6d10 4883ec00			sub	rsp,byte 0
ab6d14			alloc_begin_23:
ab6d14 4983c110			add	r9,byte 16
ab6d18 49c741f0f0080000		mov	qword [r9-16],dword 2288
ab6d20 f2410f1161f8		movsd	[r9-8],xmm4
ab6d26 498d41f1			lea	rax,[r9-15]
ab6d2a 4989c6			mov	r14,rax
ab6d2d 4889de			mov	rsi,rbx
ab6d30 4c89fb			mov	rbx,r15
ab6d33 e979faffff		jmp	version_143
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #363 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #364
      stack: (#<ctx-tunk #363
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #219
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #220
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #221
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #222
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #223
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 m . 2) (3 m . 3) (2 m . 4) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #224
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #225
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 5
      ffs: 0
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #364
      stack: (#<ctx-tunk #363
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #219
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #220
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #221
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #222
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #223
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 m . 2) (3 m . 3) (2 m . 4) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 0)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #224
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #225
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 5
      ffs: 0
      fn-num: 0>
#<ctx #127
      stack: (#<ctx-tunk #128
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #129
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #130
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #131
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #132
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #133
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 r . 2) (3 r . 0) (2 r . 1) (1 m . 1) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #134
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #135
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
((fs . -3) (ffs . 0) ((m . 2) r . 2) ((m . 3) r . 0) ((m . 4) r . 1))
#(label #f merge_23)
------------------------------------------------------------------------
ab6d38				bits 64
ab6d38			continuation_9:
ab6d38			merge_23:
ab6d38 4883ede8			sub	rbp,byte -24
ab6d3c 4883ec00			sub	rsp,byte 0
ab6d40 488b75f8			mov	rsi,[rbp-8]
ab6d44 488b5df0			mov	rbx,[rbp-16]
ab6d48 4c8b7de8			mov	r15,[rbp-24]
ab6d4c e96bf8ffff		jmp	version_120
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #22
                   ast: #f
                   generator: #<procedure #23>
                   versions: #<table #24>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #272
      stack: (#<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
"-------------------------------------------------------------------------"
#<ctx #272
      stack: (#<ctx-tunk #252
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #253
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #254
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #365
      stack: (#<ctx-tunk #366
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #367
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #368
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #369
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_24)
------------------------------------------------------------------------
ab6d51				bits 64
ab6d51 909090		merge_24:
ab6d54 4883ed00			sub	rbp,byte 0
ab6d58 4883ec00			sub	rsp,byte 0
"-------------------------------------------------------------------------"
#<ctx #370
      stack: (#<ctx-tunk #366
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #366
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #367
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #368
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 8) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #371
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #372
      stack: (#<ctx-tunk #373
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #374
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #375
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #376
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 8) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #377
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_25)
"-------------------------------------------------------------------------"
#<ctx #372
      stack: (#<ctx-tunk #373
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #374
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #375
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #376
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 8) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #377
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
#<ctx #378
      stack: (#<ctx-tunk #379
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #380
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #381
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #382
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 r . 8) (2 r . 0) (1 r . 2) (0 m . 0))
      free-regs: ((r . 3) (r . 1) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #383
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: #f
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
((fs . 0) (ffs . 0))
#(label #f merge_26)
------------------------------------------------------------------------
ab6d5c				bits 64
ab6d5c			version_214:
ab6d5c 4883ed00			sub	rbp,byte 0
ab6d60 4883ec00			sub	rsp,byte 0
ab6d64 4883ed00			sub	rbp,byte 0
ab6d68 4883ec00			sub	rsp,byte 0
ab6d6c 4989de			mov	r14,rbx
ab6d6f			merge_25:
ab6d6f 4883ed00			sub	rbp,byte 0
ab6d73 4883ec00			sub	rsp,byte 0
ab6d77			version_215:
ab6d77			merge_26:
ab6d77 4883ed00			sub	rbp,byte 0
ab6d7b 4883ec00			sub	rsp,byte 0
ab6d7f			version_216:
ab6d7f 488b5500			mov	rdx,[rbp]
ab6d83 4883c508			add	rbp,byte 8
ab6d87 488b4270			mov	rax,[rdx+112]
ab6d8b 49c7c3c0010000		mov	r11,dword 448
ab6d92 ffe0			jmp	rax
>>> patching jump at 7f1736ab69d4 -> 7f1736ab6d54
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #384 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #385
      stack: (#<ctx-tunk #384
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((0 r . 8))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
ab6d94				bits 64
ab6d94			continuation_10:
ab6d94			version_217:
ab6d94			version_218:
ab6d94 4883ed00			sub	rbp,byte 0
ab6d98 4883ec00			sub	rsp,byte 0
ab6d9c 4c89f0			mov	rax,r14
ab6d9f 4883ed08			sub	rbp,byte 8
ab6da3 48894500			mov	[rbp],rax
ab6da7 48c7c004000000		mov	rax,dword 4
ab6dae 4883ed08			sub	rbp,byte 8
ab6db2 48894500			mov	[rbp],rax
ab6db6 48c7c0410cbb00		mov	rax,dword 12258369
ab6dbd 4883ed08			sub	rbp,byte 8
ab6dc1 48894500			mov	[rbp],rax
ab6dc5 e865e5ffff		call	gambit_call_handler
ab6dca 4c8b7500			mov	r14,[rbp]
ab6dce 4883c508			add	rbp,byte 8
ab6dd2 4883c510			add	rbp,byte 16
ab6dd6			version_219:
ab6dd6 4c890c2530defa00		mov	[+16440880],r9
ab6dde 4c89f0			mov	rax,r14
ab6de1 415f			pop	r15
ab6de3 415e			pop	r14
ab6de5 415d			pop	r13
ab6de7 415c			pop	r12
ab6de9 415b			pop	r11
ab6deb 415a			pop	r10
ab6ded 4159			pop	r9
ab6def 4158			pop	r8
ab6df1 5f			pop	rdi
ab6df2 5e			pop	rsi
ab6df3 5d			pop	rbp
ab6df4 5a			pop	rdx
ab6df5 59			pop	rcx
ab6df6 5b			pop	rbx
ab6df7 58			pop	rax
ab6df8 f20f100424		movsd	xmm0,[rsp]
ab6dfd f20f104c2408		movsd	xmm1,[rsp+8]
ab6e03 f20f10542410		movsd	xmm2,[rsp+16]
ab6e09 f20f105c2418		movsd	xmm3,[rsp+24]
ab6e0f f20f10642420		movsd	xmm4,[rsp+32]
ab6e15 f20f106c2428		movsd	xmm5,[rsp+40]
ab6e1b f20f10742430		movsd	xmm6,[rsp+48]
ab6e21 f20f107c2438		movsd	xmm7,[rsp+56]
ab6e27 f2440f10442440		movsd	xmm8,[rsp+64]
ab6e2e f2440f104c2448		movsd	xmm9,[rsp+72]
ab6e35 f2440f10542450		movsd	xmm10,[rsp+80]
ab6e3c f2440f105c2458		movsd	xmm11,[rsp+88]
ab6e43 f2440f10642460		movsd	xmm12,[rsp+96]
ab6e4a f2440f106c2468		movsd	xmm13,[rsp+104]
ab6e51 f2440f10742470		movsd	xmm14,[rsp+112]
ab6e58 f2440f107c2478		movsd	xmm15,[rsp+120]
ab6e5f 4881c480000000		add	rsp,128
ab6e66 c3			ret
9.
