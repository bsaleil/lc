------------------------------------------------------------------------
8fc008				bits 64
8fc008 e987000000		jmp	rtlib_skip
8fc00d			do_callback_handler:
8fc00d 57			push	rdi
8fc00e 56			push	rsi
8fc00f 52			push	rdx
8fc010 51			push	rcx
8fc011 4150			push	r8
8fc013 4151			push	r9
8fc015 4152			push	r10
8fc017 4153			push	r11
8fc019 50			push	rax
8fc01a 4889e7			mov	rdi,rsp
8fc01d 4883e4f0			and	rsp,byte -16
8fc021 4883ec08			sub	rsp,byte 8
8fc025 57			push	rdi
8fc026 e85b786d01		call	do_callback
8fc02b 5c			pop	rsp
8fc02c 58			pop	rax
8fc02d 415b			pop	r11
8fc02f 415a			pop	r10
8fc031 4159			pop	r9
8fc033 4158			pop	r8
8fc035 59			pop	rcx
8fc036 5a			pop	rdx
8fc037 5e			pop	rsi
8fc038 5f			pop	rdi
8fc039 c3			ret
8fc03a			do_callback_fn_handler:
8fc03a 57			push	rdi
8fc03b 56			push	rsi
8fc03c 52			push	rdx
8fc03d 51			push	rcx
8fc03e 4150			push	r8
8fc040 4151			push	r9
8fc042 4152			push	r10
8fc044 4153			push	r11
8fc046 50			push	rax
8fc047 4889e7			mov	rdi,rsp
8fc04a 4883e4f0			and	rsp,byte -16
8fc04e 4883ec08			sub	rsp,byte 8
8fc052 57			push	rdi
8fc053 e846796d01		call	do_callback_fn
8fc058 5c			pop	rsp
8fc059 58			pop	rax
8fc05a 415b			pop	r11
8fc05c 415a			pop	r10
8fc05e 4159			pop	r9
8fc060 4158			pop	r8
8fc062 59			pop	rcx
8fc063 5a			pop	rdx
8fc064 5e			pop	rsi
8fc065 5f			pop	rdi
8fc066 c3			ret
8fc067			do_callback_cont_handler:
8fc067 57			push	rdi
8fc068 56			push	rsi
8fc069 52			push	rdx
8fc06a 51			push	rcx
8fc06b 4150			push	r8
8fc06d 4151			push	r9
8fc06f 4152			push	r10
8fc071 4153			push	r11
8fc073 50			push	rax
8fc074 4889e7			mov	rdi,rsp
8fc077 4883e4f0			and	rsp,byte -16
8fc07b 4883ec08			sub	rsp,byte 8
8fc07f 57			push	rdi
8fc080 e8317a6d01		call	do_callback_cont
8fc085 5c			pop	rsp
8fc086 58			pop	rax
8fc087 415b			pop	r11
8fc089 415a			pop	r10
8fc08b 4159			pop	r9
8fc08d 4158			pop	r8
8fc08f 59			pop	rcx
8fc090 5a			pop	rdx
8fc091 5e			pop	rsi
8fc092 5f			pop	rdi
8fc093 c3			ret
8fc094			rtlib_skip:
8fc094 54			push	rsp
8fc095 50			push	rax
8fc096 53			push	rbx
8fc097 51			push	rcx
8fc098 52			push	rdx
8fc099 55			push	rbp
8fc09a 56			push	rsi
8fc09b 57			push	rdi
8fc09c 4150			push	r8
8fc09e 4151			push	r9
8fc0a0 4152			push	r10
8fc0a2 4153			push	r11
8fc0a4 4154			push	r12
8fc0a6 4155			push	r13
8fc0a8 4156			push	r14
8fc0aa 4157			push	r15
8fc0ac 50			push	rax
8fc0ad 53			push	rbx
8fc0ae 48b838907245977f
8fc0b6 0000			mov	rax,140287681925176
8fc0b8 48c7c300000000		mov	rbx,dword 0
8fc0bf 488918			mov	[rax],rbx
8fc0c2 5b			pop	rbx
8fc0c3 58			pop	rax
8fc0c4 50			push	rax
8fc0c5 53			push	rbx
8fc0c6 48b840907245977f
8fc0ce 0000			mov	rax,140287681925184
8fc0d0 48c7c300000000		mov	rbx,dword 0
8fc0d7 488918			mov	[rax],rbx
8fc0da 5b			pop	rbx
8fc0db 58			pop	rax
8fc0dc 50			push	rax
8fc0dd 53			push	rbx
8fc0de 48b848907245977f
8fc0e6 0000			mov	rax,140287681925192
8fc0e8 48c7c300000000		mov	rbx,dword 0
8fc0ef 488918			mov	[rax],rbx
8fc0f2 5b			pop	rbx
8fc0f3 58			pop	rax
8fc0f4 50			push	rax
8fc0f5 53			push	rbx
8fc0f6 48b850907245977f
8fc0fe 0000			mov	rax,140287681925200
8fc100 48c7c300000000		mov	rbx,dword 0
8fc107 488918			mov	[rax],rbx
8fc10a 5b			pop	rbx
8fc10b 58			pop	rax
8fc10c 50			push	rax
8fc10d 53			push	rbx
8fc10e 48b858907245977f
8fc116 0000			mov	rax,140287681925208
8fc118 48c7c300000000		mov	rbx,dword 0
8fc11f 488918			mov	[rax],rbx
8fc122 5b			pop	rbx
8fc123 58			pop	rax
8fc124 50			push	rax
8fc125 53			push	rbx
8fc126 48b860907245977f
8fc12e 0000			mov	rax,140287681925216
8fc130 48c7c300000000		mov	rbx,dword 0
8fc137 488918			mov	[rax],rbx
8fc13a 5b			pop	rbx
8fc13b 58			pop	rax
8fc13c 48b808907245977f
8fc144 0000			mov	rax,140287681925128
8fc146 488920			mov	[rax],rsp
8fc149 48b908a01800947f
8fc151 0000			mov	rcx,140273633501192
8fc153 48894828			mov	[rax+40],rcx
8fc157 48c7c100000000		mov	rcx,dword 0
8fc15e 49bc082654a1957f
8fc166 0000			mov	r12,140280633501192
8fc168 49ba80907245977f
8fc170 0000			mov	r10,140287681925248
------------------------------------------------------------------------
46daf8				bits 64
46daf8			stub_7f974346daf8_0:
46daf8 e810e548ff		call	do_callback_handler
46dafd 7121ea0200000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #3 stack: () env: () nb-args: -1>
>>> patching jump at 7f97428fc172 -> 7f97428fc172
------------------------------------------------------------------------
46dae8				bits 64
46dae8			stub_7f974346dae8_1:
46dae8 fec1			inc	cl
46daea			stub_7f974346dae8_0:
46daea e84be548ff		call	do_callback_fn_handler
46daef 71c0e60200000000
(obj= #(#<procedure #4>))
------------------------------------------------------------------------
46dad8				bits 64
46dad8			stub_7f974346dad8_0:
46dad8 e88ae548ff		call	do_callback_cont_handler
46dadd e183e60200000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
8fc172				bits 64
8fc172 9090		version1:
8fc174 4883c400			add	rsp,byte 0
8fc178			version2:
8fc178 48c7c0eeffffff		mov	rax,dword -18
8fc17f 498902			mov	[r10],rax
8fc182			version3:
8fc182 498d4424f0		lea	rax,[r12-16]
8fc187 49bf08907245977f
8fc18f 0000			mov	r15,140287681925128
8fc191 493b4728			cmp	rax,[r15+40]
8fc195 7d38			jge	short alloc-ok1
8fc197 48c7c010000000		mov	rax,dword 16
8fc19e 57			push	rdi
8fc19f 56			push	rsi
8fc1a0 52			push	rdx
8fc1a1 51			push	rcx
8fc1a2 4150			push	r8
8fc1a4 4151			push	r9
8fc1a6 4152			push	r10
8fc1a8 4153			push	r11
8fc1aa 50			push	rax
8fc1ab 4889e7			mov	rdi,rsp
8fc1ae 4883e4f0			and	rsp,byte -16
8fc1b2 4883ec08			sub	rsp,byte 8
8fc1b6 57			push	rdi
8fc1b7 e8d4716d01		call	gc
8fc1bc 5c			pop	rsp
8fc1bd 4989c4			mov	r12,rax
8fc1c0 58			pop	rax
8fc1c1 415b			pop	r11
8fc1c3 415a			pop	r10
8fc1c5 4159			pop	r9
8fc1c7 4158			pop	r8
8fc1c9 59			pop	rcx
8fc1ca 5a			pop	rdx
8fc1cb 5e			pop	rsi
8fc1cc 5f			pop	rdi
8fc1cd eb04			jmp	short alloc-end1
8fc1cf			alloc-ok1:
8fc1cf 4983ec10			sub	r12,byte 16
8fc1d3			alloc-end1:
8fc1d3 48c7c076020000		mov	rax,dword 630
8fc1da 49890424			mov	[r12],rax
8fc1de 488b042578e3e702		mov	rax,[+48751480]
8fc1e6 4989442408		mov	[r12+8],rax
8fc1eb 498d442401		lea	rax,[r12+1]
8fc1f0 50			push	rax
8fc1f1			version4:
8fc1f1 58			pop	rax
8fc1f2 498902			mov	[r10],rax
8fc1f5 6aee			push	qword byte -18
8fc1f7			version5:
8fc1f7 6afe			push	qword byte -2
8fc1f9			version6:
8fc1f9 48c7c08c000000		mov	rax,dword 140
8fc200 50			push	rax
8fc201			version7:
8fc201 41ff32			push	qword [r10]
8fc204			version8:
8fc204			version9:
8fc204 48c7c03084e602		mov	rax,dword 48661552
8fc20b 4889442410		mov	[rsp+16],rax
8fc210			version10:
8fc210 488b0424			mov	rax,[rsp]
8fc214 48c7c704000000		mov	rdi,dword 4
8fc21b 488b4007			mov	rax,[rax+7]
8fc21f ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #6
                         stack: (procedure unknown retAddr)
                         env: ((n . #<identifier #7
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #6
      stack: (procedure unknown retAddr)
      env: ((n . #<identifier #7
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
46dac8				bits 64
46dac8			stub_7f974346dac8_0:
46dac8 e840e548ff		call	do_callback_handler
46dacd 5185e60200000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
46dab8				bits 64
46dab8			stub_7f974346dab8_1:
46dab8 fec1			inc	cl
46daba			stub_7f974346dab8_0:
46daba e84ee548ff		call	do_callback_handler
46dabf a185e60200000000
(obj= #(#<procedure #9>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
8fc221				bits 64
8fc221 909090		fn_entry_1:
8fc224 4883ff04			cmp	rdi,byte 4
8fc228 0f859a18b700		jne	stub_7f974346dac8_0
8fc22e			version11:
8fc22e ff742408			push	qword [rsp+8]
8fc232			version12:
8fc232 48c7c008000000		mov	rax,dword 8
8fc239 50			push	rax
8fc23a			version13:
8fc23a 48c7c003000000		mov	rax,dword 3
8fc241 4823442408		and	rax,[rsp+8]
8fc246			patchable_jump1:
8fc246 0f846e18b700		je	stub_7f974346dab8_0
8fc24c e96718b700		jmp	stub_7f974346dab8_1
>>> patching generic slot of closure 7f95a15425f9: now contains label fn_entry_1 (7f97428fc224)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f97428fc246 -> 7f974346dab8
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
46daa8				bits 64
46daa8			stub_7f974346daa8_0:
46daa8 e860e548ff		call	do_callback_handler
46daad 91e0e70200000000
(obj= #(#<procedure #12>))
------------------------------------------------------------------------
46da98				bits 64
46da98			stub_7f974346da98_1:
46da98 fec1			inc	cl
46da9a			stub_7f974346da98_0:
46da9a e86ee548ff		call	do_callback_handler
46da9f e1e0e70200000000
(obj= #(#<procedure #13>))
------------------------------------------------------------------------
8fc24c				bits 64
8fc24c			version14:
8fc24c			version15:
8fc24c 488b442408		mov	rax,[rsp+8]
8fc251 483b0424			cmp	rax,[rsp]
8fc255			label-jump1:
8fc255 0f8d4d18b700		jge	stub_7f974346daa8_0
8fc25b			version16:
8fc25b 4883c410			add	rsp,byte 16
8fc25f 6afa			push	qword byte -6
8fc261			version17:
8fc261 58			pop	rax
8fc262 4883f8fe			cmp	rax,byte -2
8fc266			patchable_jump2:
8fc266 0f842e18b700		je	stub_7f974346da98_0
8fc26c e92718b700		jmp	stub_7f974346da98_1
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f97428fc255 -> 7f97428fc271
------------------------------------------------------------------------
8fc271				bits 64
8fc271 909090		version18:
8fc274 4883c410			add	rsp,byte 16
8fc278 6afe			push	qword byte -2
8fc27a ebe5			jmp	short version17
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #14
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #15
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f97428fc266 -> 7f97428fc27c
------------------------------------------------------------------------
46da88				bits 64
46da88			stub_7f974346da88_0:
46da88 e880e548ff		call	do_callback_handler
46da8d d1e1e70200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
46da78				bits 64
46da78			stub_7f974346da78_0:
46da78 e8eae548ff		call	do_callback_cont_handler
46da7d 21e2e70200000000
(obj= #(#<procedure #16>))
------------------------------------------------------------------------
8fc27c				bits 64
8fc27c			version19:
8fc27c 6afe			push	qword byte -2
8fc27e			version20:
8fc27e ff742410			push	qword [rsp+16]
8fc282			version21:
8fc282 48c7c004000000		mov	rax,dword 4
8fc289 50			push	rax
8fc28a			version22:
8fc28a			version23:
8fc28a			version24:
8fc28a 58			pop	rax
8fc28b 48290424			sub	[rsp],rax
8fc28f 0f80f317b700		jo	stub_7f974346da88_0
8fc295			version25:
8fc295 41ff32			push	qword [r10]
8fc298			version26:
8fc298			version27:
8fc298 48c7c0301cea02		mov	rax,dword 48897072
8fc29f 4889442410		mov	[rsp+16],rax
8fc2a4			version28:
8fc2a4 488b0424			mov	rax,[rsp]
8fc2a8 48c7c704000000		mov	rdi,dword 4
8fc2af 488b4007			mov	rax,[rax+7]
8fc2b3 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #14
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #15
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f97428fc26c -> 7f97428fc2b5
------------------------------------------------------------------------
8fc2b5				bits 64
8fc2b5 909090		version29:
8fc2b8 ff742408			push	qword [rsp+8]
8fc2bc			version30:
8fc2bc 58			pop	rax
8fc2bd 4883c410			add	rsp,byte 16
8fc2c1 5a			pop	rdx
8fc2c2 488b5a08			mov	rbx,[rdx+8]
8fc2c6 49c7c308000000		mov	r11,dword 8
8fc2cd ffe3			jmp	rbx
------------------------------------------------------------------------
46da98				bits 64
46da98			stub_7f974346da98_0:
46da98 e870e548ff		call	do_callback_handler
46da9d a11dea0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
46da68				bits 64
46da68			stub_7f974346da68_0:
46da68 e8fae548ff		call	do_callback_cont_handler
46da6d f11dea0200000000
(obj= #(#<procedure #17>))
------------------------------------------------------------------------
8fc2cf				bits 64
8fc2cf 90		continuation_1:
8fc2d0 50			push	rax
8fc2d1			version31:
8fc2d1 6afe			push	qword byte -2
8fc2d3			version32:
8fc2d3 ff742418			push	qword [rsp+24]
8fc2d7			version33:
8fc2d7 48c7c008000000		mov	rax,dword 8
8fc2de 50			push	rax
8fc2df			version34:
8fc2df			version35:
8fc2df			version36:
8fc2df 58			pop	rax
8fc2e0 48290424			sub	[rsp],rax
8fc2e4 0f80ae17b700		jo	stub_7f974346da98_0
8fc2ea			version37:
8fc2ea 41ff32			push	qword [r10]
8fc2ed			version38:
8fc2ed			version39:
8fc2ed 48c7c0401eea02		mov	rax,dword 48897600
8fc2f4 4889442410		mov	[rsp+16],rax
8fc2f9			version40:
8fc2f9 488b0424			mov	rax,[rsp]
8fc2fd 48c7c704000000		mov	rdi,dword 4
8fc304 488b4007			mov	rax,[rax+7]
8fc308 ffe0			jmp	rax
------------------------------------------------------------------------
8fc30a				bits 64
8fc30a 9090		continuation_2:
8fc30c 50			push	rax
8fc30d			version41:
8fc30d			version42:
8fc30d			version43:
8fc30d 58			pop	rax
8fc30e 48010424			add	[rsp],rax
8fc312 0f80e017b700		jo	stub_7f974346daf8_0
8fc318			version44:
8fc318 58			pop	rax
8fc319 4883c410			add	rsp,byte 16
8fc31d 5a			pop	rdx
8fc31e 488b5a08			mov	rbx,[rdx+8]
8fc322 49c7c308000000		mov	r11,dword 8
8fc329 ffe3			jmp	rbx
------------------------------------------------------------------------
8fc32b				bits 64
8fc32b 90		continuation_3:
8fc32c 50			push	rax
8fc32d			version45:
8fc32d 58			pop	rax
8fc32e 4883c408			add	rsp,byte 8
8fc332 415f			pop	r15
8fc334 415e			pop	r14
8fc336 415d			pop	r13
8fc338 415c			pop	r12
8fc33a 415b			pop	r11
8fc33c 415a			pop	r10
8fc33e 4159			pop	r9
8fc340 4158			pop	r8
8fc342 5f			pop	rdi
8fc343 5e			pop	rsi
8fc344 5d			pop	rbp
8fc345 5a			pop	rdx
8fc346 59			pop	rcx
8fc347 5b			pop	rbx
8fc348 58			pop	rax
8fc349 5c			pop	rsp
8fc34a c3			ret
