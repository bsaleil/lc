------------------------------------------------------------------------
3e1008				bits 64
3e1008 e987000000		jmp	rtlib_skip
3e100d			do_callback_handler:
3e100d 57			push	rdi
3e100e 56			push	rsi
3e100f 52			push	rdx
3e1010 51			push	rcx
3e1011 4150			push	r8
3e1013 4151			push	r9
3e1015 4152			push	r10
3e1017 4153			push	r11
3e1019 50			push	rax
3e101a 4889e7			mov	rdi,rsp
3e101d 4883e4f0			and	rsp,byte -16
3e1021 4883ec08			sub	rsp,byte 8
3e1025 57			push	rdi
3e1026 e8c84c6d01		call	do_callback
3e102b 5c			pop	rsp
3e102c 58			pop	rax
3e102d 415b			pop	r11
3e102f 415a			pop	r10
3e1031 4159			pop	r9
3e1033 4158			pop	r8
3e1035 59			pop	rcx
3e1036 5a			pop	rdx
3e1037 5e			pop	rsi
3e1038 5f			pop	rdi
3e1039 c3			ret
3e103a			do_callback_fn_handler:
3e103a 57			push	rdi
3e103b 56			push	rsi
3e103c 52			push	rdx
3e103d 51			push	rcx
3e103e 4150			push	r8
3e1040 4151			push	r9
3e1042 4152			push	r10
3e1044 4153			push	r11
3e1046 50			push	rax
3e1047 4889e7			mov	rdi,rsp
3e104a 4883e4f0			and	rsp,byte -16
3e104e 4883ec08			sub	rsp,byte 8
3e1052 57			push	rdi
3e1053 e8b34d6d01		call	do_callback_fn
3e1058 5c			pop	rsp
3e1059 58			pop	rax
3e105a 415b			pop	r11
3e105c 415a			pop	r10
3e105e 4159			pop	r9
3e1060 4158			pop	r8
3e1062 59			pop	rcx
3e1063 5a			pop	rdx
3e1064 5e			pop	rsi
3e1065 5f			pop	rdi
3e1066 c3			ret
3e1067			do_callback_cont_handler:
3e1067 57			push	rdi
3e1068 56			push	rsi
3e1069 52			push	rdx
3e106a 51			push	rcx
3e106b 4150			push	r8
3e106d 4151			push	r9
3e106f 4152			push	r10
3e1071 4153			push	r11
3e1073 50			push	rax
3e1074 4889e7			mov	rdi,rsp
3e1077 4883e4f0			and	rsp,byte -16
3e107b 4883ec08			sub	rsp,byte 8
3e107f 57			push	rdi
3e1080 e89e4e6d01		call	do_callback_cont
3e1085 5c			pop	rsp
3e1086 58			pop	rax
3e1087 415b			pop	r11
3e1089 415a			pop	r10
3e108b 4159			pop	r9
3e108d 4158			pop	r8
3e108f 59			pop	rcx
3e1090 5a			pop	rdx
3e1091 5e			pop	rsi
3e1092 5f			pop	rdi
3e1093 c3			ret
3e1094			rtlib_skip:
3e1094 54			push	rsp
3e1095 50			push	rax
3e1096 53			push	rbx
3e1097 51			push	rcx
3e1098 52			push	rdx
3e1099 55			push	rbp
3e109a 56			push	rsi
3e109b 57			push	rdi
3e109c 4150			push	r8
3e109e 4151			push	r9
3e10a0 4152			push	r10
3e10a2 4153			push	r11
3e10a4 4154			push	r12
3e10a6 4155			push	r13
3e10a8 4156			push	r14
3e10aa 4157			push	r15
3e10ac 50			push	rax
3e10ad 53			push	rbx
3e10ae 48b838902093197f
3e10b6 0000			mov	rax,139747819294776
3e10b8 48c7c300000000		mov	rbx,dword 0
3e10bf 488918			mov	[rax],rbx
3e10c2 5b			pop	rbx
3e10c3 58			pop	rax
3e10c4 50			push	rax
3e10c5 53			push	rbx
3e10c6 48b840902093197f
3e10ce 0000			mov	rax,139747819294784
3e10d0 48c7c300000000		mov	rbx,dword 0
3e10d7 488918			mov	[rax],rbx
3e10da 5b			pop	rbx
3e10db 58			pop	rax
3e10dc 50			push	rax
3e10dd 53			push	rbx
3e10de 48b848902093197f
3e10e6 0000			mov	rax,139747819294792
3e10e8 48c7c300000000		mov	rbx,dword 0
3e10ef 488918			mov	[rax],rbx
3e10f2 5b			pop	rbx
3e10f3 58			pop	rax
3e10f4 50			push	rax
3e10f5 53			push	rbx
3e10f6 48b850902093197f
3e10fe 0000			mov	rax,139747819294800
3e1100 48c7c300000000		mov	rbx,dword 0
3e1107 488918			mov	[rax],rbx
3e110a 5b			pop	rbx
3e110b 58			pop	rax
3e110c 50			push	rax
3e110d 53			push	rbx
3e110e 48b858902093197f
3e1116 0000			mov	rax,139747819294808
3e1118 48c7c300000000		mov	rbx,dword 0
3e111f 488918			mov	[rax],rbx
3e1122 5b			pop	rbx
3e1123 58			pop	rax
3e1124 50			push	rax
3e1125 53			push	rbx
3e1126 48b860902093197f
3e112e 0000			mov	rax,139747819294816
3e1130 48c7c300000000		mov	rbx,dword 0
3e1137 488918			mov	[rax],rbx
3e113a 5b			pop	rbx
3e113b 58			pop	rax
3e113c 48b808902093197f
3e1144 0000			mov	rax,139747819294728
3e1146 488920			mov	[rax],rsp
3e1149 48b908f0c64d167f
3e1151 0000			mov	rcx,139733770891272
3e1153 48894828			mov	[rax+40],rcx
3e1157 48c7c100000000		mov	rcx,dword 0
3e115e 49bc087602ef177f
3e1166 0000			mov	r12,139740770891272
3e1168 49ba80902093197f
3e1170 0000			mov	r10,139747819294848
------------------------------------------------------------------------
f52af8				bits 64
f52af8			stub_7f1990f52af8_0:
f52af8 e810e548ff		call	do_callback_handler
f52afd 61507e0200000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #3 stack: () env: () nb-args: -1>
>>> patching jump at 7f19903e1172 -> 7f19903e1172
------------------------------------------------------------------------
f52ae8				bits 64
f52ae8			stub_7f1990f52ae8_1:
f52ae8 fec1			inc	cl
f52aea			stub_7f1990f52ae8_0:
f52aea e84be548ff		call	do_callback_fn_handler
f52aef b1a2810200000000
(obj= #(#<procedure #4>))
------------------------------------------------------------------------
f52ad8				bits 64
f52ad8			stub_7f1990f52ad8_0:
f52ad8 e830e548ff		call	do_callback_handler
f52add 61737f0200000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
3e1172				bits 64
3e1172 9090		version1:
3e1174 48c7c0eeffffff		mov	rax,dword -18
3e117b 498902			mov	[r10],rax
3e117e			version2:
3e117e 498d4424f0		lea	rax,[r12-16]
3e1183 49bf08902093197f
3e118b 0000			mov	r15,139747819294728
3e118d 493b4728			cmp	rax,[r15+40]
3e1191 7d38			jge	short alloc-ok1
3e1193 48c7c010000000		mov	rax,dword 16
3e119a 57			push	rdi
3e119b 56			push	rsi
3e119c 52			push	rdx
3e119d 51			push	rcx
3e119e 4150			push	r8
3e11a0 4151			push	r9
3e11a2 4152			push	r10
3e11a4 4153			push	r11
3e11a6 50			push	rax
3e11a7 4889e7			mov	rdi,rsp
3e11aa 4883e4f0			and	rsp,byte -16
3e11ae 4883ec08			sub	rsp,byte 8
3e11b2 57			push	rdi
3e11b3 e8a8476d01		call	gc
3e11b8 5c			pop	rsp
3e11b9 4989c4			mov	r12,rax
3e11bc 58			pop	rax
3e11bd 415b			pop	r11
3e11bf 415a			pop	r10
3e11c1 4159			pop	r9
3e11c3 4158			pop	r8
3e11c5 59			pop	rcx
3e11c6 5a			pop	rdx
3e11c7 5e			pop	rsi
3e11c8 5f			pop	rdi
3e11c9 eb04			jmp	short alloc-end1
3e11cb			alloc-ok1:
3e11cb 4983ec10			sub	r12,byte 16
3e11cf			alloc-end1:
3e11cf 48c7c076020000		mov	rax,dword 630
3e11d6 49890424			mov	[r12],rax
3e11da 48c7c040587e02		mov	rax,dword 41834560
3e11e1 4989442408		mov	[r12+8],rax
3e11e6 498d442401		lea	rax,[r12+1]
3e11eb 50			push	rax
3e11ec			version3:
3e11ec 58			pop	rax
3e11ed 498902			mov	[r10],rax
3e11f0 6aee			push	qword byte -18
3e11f2			version4:
3e11f2 6afe			push	qword byte -2
3e11f4			version5:
3e11f4 48c7c08c000000		mov	rax,dword 140
3e11fb 50			push	rax
3e11fc			version6:
3e11fc 41ff32			push	qword [r10]
3e11ff			version7:
3e11ff			version8:
3e11ff			load-ret-addr1:
3e11ff 48b8d82af590197f
3e1207 0000			mov	rax,139747782896344
3e1209 4889442410		mov	[rsp+16],rax
3e120e			version9:
3e120e 488b0424			mov	rax,[rsp]
3e1212 49c7c3d1137e02		mov	r11,dword 41817041
3e1219 488b4007			mov	rax,[rax+7]
3e121d 488b4010			mov	rax,[rax+16]
3e1221 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #6
                         stack: (procedure number retAddr)
                         env: ((n . #<identifier #7
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #6
      stack: (procedure number retAddr)
      env: ((n . #<identifier #7
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
f52ac8				bits 64
f52ac8			stub_7f1990f52ac8_0:
f52ac8 e840e548ff		call	do_callback_handler
f52acd 71147e0200000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
f52ab8				bits 64
f52ab8			stub_7f1990f52ab8_1:
f52ab8 fec1			inc	cl
f52aba			stub_7f1990f52ab8_0:
f52aba e84ee548ff		call	do_callback_handler
f52abf c1147e0200000000
(obj= #(#<procedure #9>))
------------------------------------------------------------------------
3e1223				bits 64
3e1223 90		fn_entry_1:
3e1224			version10:
3e1224 ff742408			push	qword [rsp+8]
3e1228			version11:
3e1228 48c7c008000000		mov	rax,dword 8
3e122f 50			push	rax
3e1230			version12:
3e1230			version13:
3e1230			version14:
3e1230 488b442408		mov	rax,[rsp+8]
3e1235 483b0424			cmp	rax,[rsp]
3e1239			label-jump1:
3e1239 0f8d8918b700		jge	stub_7f1990f52ac8_0
3e123f			version15:
3e123f 4883c410			add	rsp,byte 16
3e1243 6afa			push	qword byte -6
3e1245			version16:
3e1245 58			pop	rax
3e1246 4883f8fe			cmp	rax,byte -2
3e124a			patchable_jump1:
3e124a 0f846a18b700		je	stub_7f1990f52ab8_0
3e1250 e96318b700		jmp	stub_7f1990f52ab8_1
>>> patching closure 7f17ef0275f9 at 7f17ef027609 : slot contains now label fn_entry_1 (7f19903e1224)
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f19903e1239 -> 7f19903e1255
------------------------------------------------------------------------
3e1255				bits 64
3e1255 909090		version17:
3e1258 4883c410			add	rsp,byte 16
3e125c 6afe			push	qword byte -2
3e125e ebe5			jmp	short version16
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #12
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f19903e124a -> 7f19903e1260
------------------------------------------------------------------------
f52aa8				bits 64
f52aa8			stub_7f1990f52aa8_0:
f52aa8 e860e548ff		call	do_callback_handler
f52aad b1157e0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
f52a98				bits 64
f52a98			stub_7f1990f52a98_0:
f52a98 e870e548ff		call	do_callback_handler
f52a9d 81707f0200000000
(obj= #(#<procedure #14>))
------------------------------------------------------------------------
3e1260				bits 64
3e1260			version18:
3e1260 6afe			push	qword byte -2
3e1262			version19:
3e1262 ff742410			push	qword [rsp+16]
3e1266			version20:
3e1266 48c7c004000000		mov	rax,dword 4
3e126d 50			push	rax
3e126e			version21:
3e126e			version22:
3e126e			version23:
3e126e 58			pop	rax
3e126f 48290424			sub	[rsp],rax
3e1273 0f802f18b700		jo	stub_7f1990f52aa8_0
3e1279			version24:
3e1279 41ff32			push	qword [r10]
3e127c			version25:
3e127c			version26:
3e127c			load-ret-addr2:
3e127c 48b8982af590197f
3e1284 0000			mov	rax,139747782896280
3e1286 4889442410		mov	[rsp+16],rax
3e128b			version27:
3e128b 488b0424			mov	rax,[rsp]
3e128f 49c7c3d1137e02		mov	r11,dword 41817041
3e1296 488b4007			mov	rax,[rax+7]
3e129a 488b4010			mov	rax,[rax+16]
3e129e ffe0			jmp	rax
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #12
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7f19903e1250 -> 7f19903e12a0
------------------------------------------------------------------------
3e12a0				bits 64
3e12a0			version28:
3e12a0 ff742408			push	qword [rsp+8]
3e12a4			version29:
3e12a4 58			pop	rax
3e12a5 4883c410			add	rsp,byte 16
3e12a9 c3			ret
------------------------------------------------------------------------
f52ab8				bits 64
f52ab8			stub_7f1990f52ab8_0:
f52ab8 e850e548ff		call	do_callback_handler
f52abd 71717f0200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
f52a88				bits 64
f52a88			stub_7f1990f52a88_0:
f52a88 e880e548ff		call	do_callback_handler
f52a8d c1717f0200000000
(obj= #(#<procedure #15>))
------------------------------------------------------------------------
3e12aa				bits 64
3e12aa 9090		continuation_1:
3e12ac 50			push	rax
3e12ad			version30:
3e12ad 6afe			push	qword byte -2
3e12af			version31:
3e12af ff742418			push	qword [rsp+24]
3e12b3			version32:
3e12b3 48c7c008000000		mov	rax,dword 8
3e12ba 50			push	rax
3e12bb			version33:
3e12bb			version34:
3e12bb			version35:
3e12bb 58			pop	rax
3e12bc 48290424			sub	[rsp],rax
3e12c0 0f80f217b700		jo	stub_7f1990f52ab8_0
3e12c6			version36:
3e12c6 41ff32			push	qword [r10]
3e12c9			version37:
3e12c9			version38:
3e12c9			load-ret-addr3:
3e12c9 48b8882af590197f
3e12d1 0000			mov	rax,139747782896264
3e12d3 4889442410		mov	[rsp+16],rax
3e12d8			version39:
3e12d8 488b0424			mov	rax,[rsp]
3e12dc 49c7c3d1137e02		mov	r11,dword 41817041
3e12e3 488b4007			mov	rax,[rax+7]
3e12e7 488b4010			mov	rax,[rax+16]
3e12eb ffe0			jmp	rax
>>> patching mov at 7f19903e127c : now load continuation_1 (7f19903e12ac)
------------------------------------------------------------------------
3e127c				bits 64
3e127c 48b8ac123e90197f
3e1284 0000			mov	rax,139747770897068
------------------------------------------------------------------------
f52a78				bits 64
f52a78			stub_7f1990f52a78_1:
f52a78 fec1			inc	cl
f52a7a			stub_7f1990f52a78_0:
f52a7a e88ee548ff		call	do_callback_handler
f52a7f 61727f0200000000
(obj= #(#<procedure #16>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
3e12ed				bits 64
3e12ed 909090		continuation_2:
3e12f0 50			push	rax
3e12f1			version40:
3e12f1 48c7c003000000		mov	rax,dword 3
3e12f8 4823442408		and	rax,[rsp+8]
3e12fd			patchable_jump2:
3e12fd 0f847717b700		je	stub_7f1990f52a78_0
3e1303 e97017b700		jmp	stub_7f1990f52a78_1
>>> patching mov at 7f19903e12c9 : now load continuation_2 (7f19903e12f0)
------------------------------------------------------------------------
3e12c9				bits 64
3e12c9 48b8f0123e90197f
3e12d1 0000			mov	rax,139747770897136
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f19903e12fd -> 7f1990f52a78
GEN VERSION >>> #<ctx #17
                      stack: (unknown number procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
f52a68				bits 64
f52a68			stub_7f1990f52a68_1:
f52a68 fec1			inc	cl
f52a6a			stub_7f1990f52a68_0:
f52a6a e89ee548ff		call	do_callback_handler
f52a6f 01a3810200000000
(obj= #(#<procedure #18>))
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
3e1303				bits 64
3e1303 90		version41:
3e1304 48c7c003000000		mov	rax,dword 3
3e130b 48230424			and	rax,[rsp]
3e130f			patchable_jump3:
3e130f 0f845517b700		je	stub_7f1990f52a68_0
3e1315 e94e17b700		jmp	stub_7f1990f52a68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f19903e130f -> 7f1990f52a68
GEN VERSION >>> #<ctx #19
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #13
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
3e1315				bits 64
3e1315 909090		version42:
3e1318 58			pop	rax
3e1319 48010424			add	[rsp],rax
3e131d 0f80d517b700		jo	stub_7f1990f52af8_0
3e1323			version43:
3e1323 58			pop	rax
3e1324 4883c410			add	rsp,byte 16
3e1328 c3			ret
------------------------------------------------------------------------
3e1329				bits 64
3e1329 909090		continuation_3:
3e132c 50			push	rax
3e132d			version44:
3e132d 58			pop	rax
3e132e 4883c408			add	rsp,byte 8
3e1332 415f			pop	r15
3e1334 415e			pop	r14
3e1336 415d			pop	r13
3e1338 415c			pop	r12
3e133a 415b			pop	r11
3e133c 415a			pop	r10
3e133e 4159			pop	r9
3e1340 4158			pop	r8
3e1342 5f			pop	rdi
3e1343 5e			pop	rsi
3e1344 5d			pop	rbp
3e1345 5a			pop	rdx
3e1346 59			pop	rcx
3e1347 5b			pop	rbx
3e1348 58			pop	rax
3e1349 5c			pop	rsp
3e134a c3			ret
>>> patching mov at 7f19903e11ff : now load continuation_3 (7f19903e132c)
------------------------------------------------------------------------
3e11ff				bits 64
3e11ff 48b82c133e90197f
3e1207 0000			mov	rax,139747770897196
