------------------------------------------------------------------------
030008				bits 64
030008 e987000000		jmp	rtlib_skip
03000d			do_callback_handler:
03000d 57			push	rdi
03000e 56			push	rsi
03000f 52			push	rdx
030010 51			push	rcx
030011 4150			push	r8
030013 4151			push	r9
030015 4152			push	r10
030017 4153			push	r11
030019 50			push	rax
03001a 4889e7			mov	rdi,rsp
03001d 4883e4f0			and	rsp,byte -16
030021 4883ec08			sub	rsp,byte 8
030025 57			push	rdi
030026 e8184c6d01		call	do_callback
03002b 5c			pop	rsp
03002c 58			pop	rax
03002d 415b			pop	r11
03002f 415a			pop	r10
030031 4159			pop	r9
030033 4158			pop	r8
030035 59			pop	rcx
030036 5a			pop	rdx
030037 5e			pop	rsi
030038 5f			pop	rdi
030039 c3			ret
03003a			do_callback_fn_handler:
03003a 57			push	rdi
03003b 56			push	rsi
03003c 52			push	rdx
03003d 51			push	rcx
03003e 4150			push	r8
030040 4151			push	r9
030042 4152			push	r10
030044 4153			push	r11
030046 50			push	rax
030047 4889e7			mov	rdi,rsp
03004a 4883e4f0			and	rsp,byte -16
03004e 4883ec08			sub	rsp,byte 8
030052 57			push	rdi
030053 e8034d6d01		call	do_callback_fn
030058 5c			pop	rsp
030059 58			pop	rax
03005a 415b			pop	r11
03005c 415a			pop	r10
03005e 4159			pop	r9
030060 4158			pop	r8
030062 59			pop	rcx
030063 5a			pop	rdx
030064 5e			pop	rsi
030065 5f			pop	rdi
030066 c3			ret
030067			do_callback_cont_handler:
030067 57			push	rdi
030068 56			push	rsi
030069 52			push	rdx
03006a 51			push	rcx
03006b 4150			push	r8
03006d 4151			push	r9
03006f 4152			push	r10
030071 4153			push	r11
030073 50			push	rax
030074 4889e7			mov	rdi,rsp
030077 4883e4f0			and	rsp,byte -16
03007b 4883ec08			sub	rsp,byte 8
03007f 57			push	rdi
030080 e8ee4d6d01		call	do_callback_cont
030085 5c			pop	rsp
030086 58			pop	rax
030087 415b			pop	r11
030089 415a			pop	r10
03008b 4159			pop	r9
03008d 4158			pop	r8
03008f 59			pop	rcx
030090 5a			pop	rdx
030091 5e			pop	rsi
030092 5f			pop	rdi
030093 c3			ret
030094			rtlib_skip:
030094 54			push	rsp
030095 50			push	rax
030096 53			push	rbx
030097 51			push	rcx
030098 52			push	rdx
030099 55			push	rbp
03009a 56			push	rsi
03009b 57			push	rdi
03009c 4150			push	r8
03009e 4151			push	r9
0300a0 4152			push	r10
0300a2 4153			push	r11
0300a4 4154			push	r12
0300a6 4155			push	r13
0300a8 4156			push	r14
0300aa 4157			push	r15
0300ac 50			push	rax
0300ad 53			push	rbx
0300ae 48b83880e57da87f
0300b6 0000			mov	rax,140361643425848
0300b8 48c7c300000000		mov	rbx,dword 0
0300bf 488918			mov	[rax],rbx
0300c2 5b			pop	rbx
0300c3 58			pop	rax
0300c4 50			push	rax
0300c5 53			push	rbx
0300c6 48b84080e57da87f
0300ce 0000			mov	rax,140361643425856
0300d0 48c7c300000000		mov	rbx,dword 0
0300d7 488918			mov	[rax],rbx
0300da 5b			pop	rbx
0300db 58			pop	rax
0300dc 50			push	rax
0300dd 53			push	rbx
0300de 48b84880e57da87f
0300e6 0000			mov	rax,140361643425864
0300e8 48c7c300000000		mov	rbx,dword 0
0300ef 488918			mov	[rax],rbx
0300f2 5b			pop	rbx
0300f3 58			pop	rax
0300f4 50			push	rax
0300f5 53			push	rbx
0300f6 48b85080e57da87f
0300fe 0000			mov	rax,140361643425872
030100 48c7c300000000		mov	rbx,dword 0
030107 488918			mov	[rax],rbx
03010a 5b			pop	rbx
03010b 58			pop	rax
03010c 50			push	rax
03010d 53			push	rbx
03010e 48b85880e57da87f
030116 0000			mov	rax,140361643425880
030118 48c7c300000000		mov	rbx,dword 0
03011f 488918			mov	[rax],rbx
030122 5b			pop	rbx
030123 58			pop	rax
030124 50			push	rax
030125 53			push	rbx
030126 48b86080e57da87f
03012e 0000			mov	rax,140361643425888
030130 48c7c300000000		mov	rbx,dword 0
030137 488918			mov	[rax],rbx
03013a 5b			pop	rbx
03013b 58			pop	rax
03013c 48b80880e57da87f
030144 0000			mov	rax,140361643425800
030146 488920			mov	[rax],rsp
030149 48b908e08b38a57f
030151 0000			mov	rcx,140347595022344
030153 48894828			mov	[rax+40],rcx
030157 48c7c100000000		mov	rcx,dword 0
03015e 49bc0866c7d9a67f
030166 0000			mov	r12,140354595022344
030168 49ba8080e57da87f
030170 0000			mov	r10,140361643425920
------------------------------------------------------------------------
ba1af8				bits 64
ba1af8			stub_7fa87bba1af8_0:
ba1af8 e810e548ff		call	do_callback_handler
ba1afd 8160640200000000
(obj= #(#<procedure #2>))
GEN VERSION >>> #<ctx #3 stack: () env: () nb-args: -1>
>>> patching jump at 7fa87b030172 -> 7fa87b030172
------------------------------------------------------------------------
ba1ae8				bits 64
ba1ae8			stub_7fa87bba1ae8_1:
ba1ae8 fec1			inc	cl
ba1aea			stub_7fa87bba1ae8_0:
ba1aea e84be548ff		call	do_callback_fn_handler
ba1aef d1b2670200000000
(obj= #(#<procedure #4>))
------------------------------------------------------------------------
ba1ad8				bits 64
ba1ad8			stub_7fa87bba1ad8_0:
ba1ad8 e88ae548ff		call	do_callback_cont_handler
ba1add f123640200000000
(obj= #(#<procedure #5>))
------------------------------------------------------------------------
030172				bits 64
030172 9090		version1:
030174 48c7c0eeffffff		mov	rax,dword -18
03017b 498902			mov	[r10],rax
03017e			version2:
03017e 50			push	rax
03017f 53			push	rbx
030180 48b85080e57da87f
030188 0000			mov	rax,140361643425872
03018a 488b18			mov	rbx,[rax]
03018d 48ffc3			inc	rbx
030190 488918			mov	[rax],rbx
030193 5b			pop	rbx
030194 58			pop	rax
030195 498d4424f0		lea	rax,[r12-16]
03019a 49bf0880e57da87f
0301a2 0000			mov	r15,140361643425800
0301a4 493b4728			cmp	rax,[r15+40]
0301a8 7d38			jge	short alloc-ok1
0301aa 48c7c010000000		mov	rax,dword 16
0301b1 57			push	rdi
0301b2 56			push	rsi
0301b3 52			push	rdx
0301b4 51			push	rcx
0301b5 4150			push	r8
0301b7 4151			push	r9
0301b9 4152			push	r10
0301bb 4153			push	r11
0301bd 50			push	rax
0301be 4889e7			mov	rdi,rsp
0301c1 4883e4f0			and	rsp,byte -16
0301c5 4883ec08			sub	rsp,byte 8
0301c9 57			push	rdi
0301ca e8e1466d01		call	gc
0301cf 5c			pop	rsp
0301d0 4989c4			mov	r12,rax
0301d3 58			pop	rax
0301d4 415b			pop	r11
0301d6 415a			pop	r10
0301d8 4159			pop	r9
0301da 4158			pop	r8
0301dc 59			pop	rcx
0301dd 5a			pop	rdx
0301de 5e			pop	rsi
0301df 5f			pop	rdi
0301e0 eb04			jmp	short alloc-end1
0301e2			alloc-ok1:
0301e2 4983ec10			sub	r12,byte 16
0301e6			alloc-end1:
0301e6 48c7c076020000		mov	rax,dword 630
0301ed 49890424			mov	[r12],rax
0301f1 488b042588836502		mov	rax,[+40207240]
0301f9 4989442408		mov	[r12+8],rax
0301fe 498d442401		lea	rax,[r12+1]
030203 50			push	rax
030204			version3:
030204 58			pop	rax
030205 498902			mov	[r10],rax
030208 6aee			push	qword byte -18
03020a			version4:
03020a 6afe			push	qword byte -2
03020c			version5:
03020c 48c7c010000000		mov	rax,dword 16
030213 50			push	rax
030214			version6:
030214 41ff32			push	qword [r10]
030217			version7:
030217			version8:
030217 48c7c040246402		mov	rax,dword 40117312
03021e 4889442410		mov	[rsp+16],rax
030223			version9:
030223 488b0424			mov	rax,[rsp]
030227 48c7c704000000		mov	rdi,dword 4
03022e 488b4007			mov	rax,[rax+7]
030232 ffe0			jmp	rax
GEN VERSION FN >>> #<ctx #6
                         stack: (procedure unknown retAddr)
                         env: ((n . #<identifier #7
                                       type: local
                                       offset: 0
                                       pos: (0)
                                       flags: ()
                                       stype: ()>))
                         nb-args: 1>
#<ctx #6
      stack: (procedure unknown retAddr)
      env: ((n . #<identifier #7
                    type: local
                    offset: 0
                    pos: (0)
                    flags: ()
                    stype: ()>))
      nb-args: 1>
------------------------------------------------------------------------
ba1ac8				bits 64
ba1ac8			stub_7fa87bba1ac8_0:
ba1ac8 e840e548ff		call	do_callback_handler
ba1acd 6125640200000000
(obj= #(#<procedure #8>))
------------------------------------------------------------------------
ba1ab8				bits 64
ba1ab8			stub_7fa87bba1ab8_1:
ba1ab8 fec1			inc	cl
ba1aba			stub_7fa87bba1ab8_0:
ba1aba e84ee548ff		call	do_callback_handler
ba1abf b125640200000000
(obj= #(#<procedure #9>))
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
030234				bits 64
030234			fn_entry_1:
030234 4883ff04			cmp	rdi,byte 4
030238 0f858a18b700		jne	stub_7fa87bba1ac8_0
03023e			version10:
03023e ff742408			push	qword [rsp+8]
030242			version11:
030242 48c7c008000000		mov	rax,dword 8
030249 50			push	rax
03024a			version12:
03024a 50			push	rax
03024b 53			push	rbx
03024c 48b84080e57da87f
030254 0000			mov	rax,140361643425856
030256 488b18			mov	rbx,[rax]
030259 48ffc3			inc	rbx
03025c 488918			mov	[rax],rbx
03025f 5b			pop	rbx
030260 58			pop	rax
030261 48c7c003000000		mov	rax,dword 3
030268 4823442408		and	rax,[rsp+8]
03026d			patchable_jump1:
03026d 0f844718b700		je	stub_7fa87bba1ab8_0
030273 e94018b700		jmp	stub_7fa87bba1ab8_1
>>> patching generic slot of closure 7fa6d9c765f9: now contains label fn_entry_1 (7fa87b030234)
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7fa87b03026d -> 7fa87bba1ab8
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
ba1aa8				bits 64
ba1aa8			stub_7fa87bba1aa8_0:
ba1aa8 e860e548ff		call	do_callback_handler
ba1aad a180650200000000
(obj= #(#<procedure #12>))
------------------------------------------------------------------------
ba1a98				bits 64
ba1a98			stub_7fa87bba1a98_1:
ba1a98 fec1			inc	cl
ba1a9a			stub_7fa87bba1a98_0:
ba1a9a e86ee548ff		call	do_callback_handler
ba1a9f f180650200000000
(obj= #(#<procedure #13>))
------------------------------------------------------------------------
030273				bits 64
030273 90		version13:
030274			version14:
030274 488b442408		mov	rax,[rsp+8]
030279 483b0424			cmp	rax,[rsp]
03027d			label-jump1:
03027d 0f8d2518b700		jge	stub_7fa87bba1aa8_0
030283			version15:
030283 4883c410			add	rsp,byte 16
030287 6afa			push	qword byte -6
030289			version16:
030289 58			pop	rax
03028a 4883f8fe			cmp	rax,byte -2
03028e			patchable_jump2:
03028e 0f840618b700		je	stub_7fa87bba1a98_0
030294 e9ff17b700		jmp	stub_7fa87bba1a98_1
GEN VERSION >>> #<ctx #10
                      stack: (number number procedure number retAddr)
                      env: ((n . #<identifier #11
                                    type: local
                                    offset: 0
                                    pos: (0 2)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7fa87b03027d -> 7fa87b030299
------------------------------------------------------------------------
030299				bits 64
030299 909090		version17:
03029c 4883c410			add	rsp,byte 16
0302a0 6afe			push	qword byte -2
0302a2 ebe5			jmp	short version16
>>> selector= 0
>>> prev-action= #f
GEN VERSION >>> #<ctx #14
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #15
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7fa87b03028e -> 7fa87b0302a4
------------------------------------------------------------------------
ba1a88				bits 64
ba1a88			stub_7fa87bba1a88_0:
ba1a88 e880e548ff		call	do_callback_handler
ba1a8d e181650200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
ba1a78				bits 64
ba1a78			stub_7fa87bba1a78_0:
ba1a78 e8eae548ff		call	do_callback_cont_handler
ba1a7d 3182650200000000
(obj= #(#<procedure #16>))
------------------------------------------------------------------------
0302a4				bits 64
0302a4			version18:
0302a4 6afe			push	qword byte -2
0302a6			version19:
0302a6 ff742410			push	qword [rsp+16]
0302aa			version20:
0302aa 48c7c004000000		mov	rax,dword 4
0302b1 50			push	rax
0302b2			version21:
0302b2			version22:
0302b2			version23:
0302b2 58			pop	rax
0302b3 48290424			sub	[rsp],rax
0302b7 0f80cb17b700		jo	stub_7fa87bba1a88_0
0302bd			version24:
0302bd 41ff32			push	qword [r10]
0302c0			version25:
0302c0			version26:
0302c0 48c7c020b36702		mov	rax,dword 40350496
0302c7 4889442410		mov	[rsp+16],rax
0302cc			version27:
0302cc 488b0424			mov	rax,[rsp]
0302d0 48c7c704000000		mov	rdi,dword 4
0302d7 488b4007			mov	rax,[rax+7]
0302db ffe0			jmp	rax
>>> selector= 1
>>> prev-action= no-swap
GEN VERSION >>> #<ctx #14
                      stack: (procedure number retAddr)
                      env: ((n . #<identifier #15
                                    type: local
                                    offset: 0
                                    pos: (0)
                                    flags: ()
                                    stype: ()>))
                      nb-args: 1>
>>> patching jump at 7fa87b030294 -> 7fa87b0302dd
------------------------------------------------------------------------
0302dd				bits 64
0302dd 909090		version28:
0302e0 ff742408			push	qword [rsp+8]
0302e4			version29:
0302e4 58			pop	rax
0302e5 4883c410			add	rsp,byte 16
0302e9 5a			pop	rdx
0302ea 488b5a08			mov	rbx,[rdx+8]
0302ee 49c7c308000000		mov	r11,dword 8
0302f5 ffe3			jmp	rbx
------------------------------------------------------------------------
ba1a98				bits 64
ba1a98			stub_7fa87bba1a98_0:
ba1a98 e870e548ff		call	do_callback_handler
ba1a9d 91b4670200000000
(obj= #(#<procedure #2>))
------------------------------------------------------------------------
ba1a68				bits 64
ba1a68			stub_7fa87bba1a68_0:
ba1a68 e8fae548ff		call	do_callback_cont_handler
ba1a6d e1b4670200000000
(obj= #(#<procedure #17>))
------------------------------------------------------------------------
0302f7				bits 64
0302f7 90		continuation_1:
0302f8 50			push	rax
0302f9			version30:
0302f9 6afe			push	qword byte -2
0302fb			version31:
0302fb ff742418			push	qword [rsp+24]
0302ff			version32:
0302ff 48c7c008000000		mov	rax,dword 8
030306 50			push	rax
030307			version33:
030307			version34:
030307			version35:
030307 58			pop	rax
030308 48290424			sub	[rsp],rax
03030c 0f808617b700		jo	stub_7fa87bba1a98_0
030312			version36:
030312 41ff32			push	qword [r10]
030315			version37:
030315			version38:
030315 48c7c030b56702		mov	rax,dword 40351024
03031c 4889442410		mov	[rsp+16],rax
030321			version39:
030321 488b0424			mov	rax,[rsp]
030325 48c7c704000000		mov	rdi,dword 4
03032c 488b4007			mov	rax,[rax+7]
030330 ffe0			jmp	rax
------------------------------------------------------------------------
030332				bits 64
030332 9090		continuation_2:
030334 50			push	rax
030335			version40:
030335			version41:
030335			version42:
030335 58			pop	rax
030336 48010424			add	[rsp],rax
03033a 0f80b817b700		jo	stub_7fa87bba1af8_0
030340			version43:
030340 58			pop	rax
030341 4883c410			add	rsp,byte 16
030345 5a			pop	rdx
030346 488b5a08			mov	rbx,[rdx+8]
03034a 49c7c308000000		mov	r11,dword 8
030351 ffe3			jmp	rbx
------------------------------------------------------------------------
030353				bits 64
030353 90		continuation_3:
030354 50			push	rax
030355			version44:
030355 58			pop	rax
030356 4883c408			add	rsp,byte 8
03035a 415f			pop	r15
03035c 415e			pop	r14
03035e 415d			pop	r13
030360 415c			pop	r12
030362 415b			pop	r11
030364 415a			pop	r10
030366 4159			pop	r9
030368 4158			pop	r8
03036a 5f			pop	rdi
03036b 5e			pop	rsi
03036c 5d			pop	rbp
03036d 5a			pop	rdx
03036e 59			pop	rcx
03036f 5b			pop	rbx
030370 58			pop	rax
030371 5c			pop	rsp
030372 c3			ret
Closures: 1
Executed tests: 9
Code size (bytes): 875
Stub size (bytes): 160
Total size (bytes): 1035
Global table size: 0
Number of cctables: 1
Number of crtables: 3
CC table space: 0.00000
CR table space: 0.38399
Min versions number: 0
Max versions number: 2
-------------------------
Number of stubs for each number of version
#versions;#stubs;#ret;#entry;#cont
0;56;0;1;0
1;46;0;1;3
2;1;1;0;0
-------------------------
