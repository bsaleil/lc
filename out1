------------------------------------------------------------------------
f3e008				bits 64
f3e008 e9790f0000		jmp	rtlib_skip
f3e00d			heap_limit_handler:
f3e00d 4883ed58			sub	rbp,byte 88
f3e011 48894d50			mov	[rbp+80],rcx
f3e015 48895d48			mov	[rbp+72],rbx
f3e019 4c897d40			mov	[rbp+64],r15
f3e01d 48897538			mov	[rbp+56],rsi
f3e021 48897d30			mov	[rbp+48],rdi
f3e025 4c895528			mov	[rbp+40],r10
f3e029 4c895d20			mov	[rbp+32],r11
f3e02d 4c896518			mov	[rbp+24],r12
f3e031 4c896d10			mov	[rbp+16],r13
f3e035 4c897508			mov	[rbp+8],r14
f3e039 48895500			mov	[rbp],rdx
f3e03d 4c890c25b074fc00		mov	[+16544944],r9
f3e045 4889ef			mov	rdi,rbp
f3e048 55			push	rbp
f3e049 51			push	rcx
f3e04a 4150			push	r8
f3e04c 4151			push	r9
f3e04e 4881ec80000000		sub	rsp,128
f3e055 f20f110424		movsd	[rsp],xmm0
f3e05a f20f114c2408		movsd	[rsp+8],xmm1
f3e060 f20f11542410		movsd	[rsp+16],xmm2
f3e066 f20f115c2418		movsd	[rsp+24],xmm3
f3e06c f20f11642420		movsd	[rsp+32],xmm4
f3e072 f20f116c2428		movsd	[rsp+40],xmm5
f3e078 f20f11742430		movsd	[rsp+48],xmm6
f3e07e f20f117c2438		movsd	[rsp+56],xmm7
f3e084 f2440f11442440		movsd	[rsp+64],xmm8
f3e08b f2440f114c2448		movsd	[rsp+72],xmm9
f3e092 f2440f11542450		movsd	[rsp+80],xmm10
f3e099 f2440f115c2458		movsd	[rsp+88],xmm11
f3e0a0 f2440f11642460		movsd	[rsp+96],xmm12
f3e0a7 f2440f116c2468		movsd	[rsp+104],xmm13
f3e0ae f2440f11742470		movsd	[rsp+112],xmm14
f3e0b5 f2440f117c2478		movsd	[rsp+120],xmm15
f3e0bc 4889e0			mov	rax,rsp
f3e0bf 4883e4f0			and	rsp,byte -16
f3e0c3 4883ec08			sub	rsp,byte 8
f3e0c7 50			push	rax
f3e0c8 48b866c763370d7f
f3e0d0 0000			mov	rax,139694740588390
f3e0d2 ffd0			call	rax
f3e0d4 5c			pop	rsp
f3e0d5 f20f100424		movsd	xmm0,[rsp]
f3e0da f20f104c2408		movsd	xmm1,[rsp+8]
f3e0e0 f20f10542410		movsd	xmm2,[rsp+16]
f3e0e6 f20f105c2418		movsd	xmm3,[rsp+24]
f3e0ec f20f10642420		movsd	xmm4,[rsp+32]
f3e0f2 f20f106c2428		movsd	xmm5,[rsp+40]
f3e0f8 f20f10742430		movsd	xmm6,[rsp+48]
f3e0fe f20f107c2438		movsd	xmm7,[rsp+56]
f3e104 f2440f10442440		movsd	xmm8,[rsp+64]
f3e10b f2440f104c2448		movsd	xmm9,[rsp+72]
f3e112 f2440f10542450		movsd	xmm10,[rsp+80]
f3e119 f2440f105c2458		movsd	xmm11,[rsp+88]
f3e120 f2440f10642460		movsd	xmm12,[rsp+96]
f3e127 f2440f106c2468		movsd	xmm13,[rsp+104]
f3e12e f2440f10742470		movsd	xmm14,[rsp+112]
f3e135 f2440f107c2478		movsd	xmm15,[rsp+120]
f3e13c 4881c480000000		add	rsp,128
f3e143 4159			pop	r9
f3e145 4158			pop	r8
f3e147 59			pop	rcx
f3e148 488b0c25a874fc00		mov	rcx,[+16544936]
f3e150 49b908301e5d0d7f
f3e158 0000			mov	r9,139695373561864
f3e15a 49894928			mov	[r9+40],rcx
f3e15e 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e166 5d			pop	rbp
f3e167 488b5500			mov	rdx,[rbp]
f3e16b 4c8b7508			mov	r14,[rbp+8]
f3e16f 4c8b6d10			mov	r13,[rbp+16]
f3e173 4c8b6518			mov	r12,[rbp+24]
f3e177 4c8b5d20			mov	r11,[rbp+32]
f3e17b 4c8b5528			mov	r10,[rbp+40]
f3e17f 488b7d30			mov	rdi,[rbp+48]
f3e183 488b7538			mov	rsi,[rbp+56]
f3e187 4c8b7d40			mov	r15,[rbp+64]
f3e18b 488b5d48			mov	rbx,[rbp+72]
f3e18f 488b4d50			mov	rcx,[rbp+80]
f3e193 4883c558			add	rbp,byte 88
f3e197 c3			ret
f3e198			alloc_still_handler:
f3e198 4883ed58			sub	rbp,byte 88
f3e19c 48894d50			mov	[rbp+80],rcx
f3e1a0 48895d48			mov	[rbp+72],rbx
f3e1a4 4c897d40			mov	[rbp+64],r15
f3e1a8 48897538			mov	[rbp+56],rsi
f3e1ac 48897d30			mov	[rbp+48],rdi
f3e1b0 4c895528			mov	[rbp+40],r10
f3e1b4 4c895d20			mov	[rbp+32],r11
f3e1b8 4c896518			mov	[rbp+24],r12
f3e1bc 4c896d10			mov	[rbp+16],r13
f3e1c0 4c897508			mov	[rbp+8],r14
f3e1c4 48895500			mov	[rbp],rdx
f3e1c8 4c890c25b074fc00		mov	[+16544944],r9
f3e1d0 4889ef			mov	rdi,rbp
f3e1d3 55			push	rbp
f3e1d4 51			push	rcx
f3e1d5 4150			push	r8
f3e1d7 4151			push	r9
f3e1d9 4881ec80000000		sub	rsp,128
f3e1e0 f20f110424		movsd	[rsp],xmm0
f3e1e5 f20f114c2408		movsd	[rsp+8],xmm1
f3e1eb f20f11542410		movsd	[rsp+16],xmm2
f3e1f1 f20f115c2418		movsd	[rsp+24],xmm3
f3e1f7 f20f11642420		movsd	[rsp+32],xmm4
f3e1fd f20f116c2428		movsd	[rsp+40],xmm5
f3e203 f20f11742430		movsd	[rsp+48],xmm6
f3e209 f20f117c2438		movsd	[rsp+56],xmm7
f3e20f f2440f11442440		movsd	[rsp+64],xmm8
f3e216 f2440f114c2448		movsd	[rsp+72],xmm9
f3e21d f2440f11542450		movsd	[rsp+80],xmm10
f3e224 f2440f115c2458		movsd	[rsp+88],xmm11
f3e22b f2440f11642460		movsd	[rsp+96],xmm12
f3e232 f2440f116c2468		movsd	[rsp+104],xmm13
f3e239 f2440f11742470		movsd	[rsp+112],xmm14
f3e240 f2440f117c2478		movsd	[rsp+120],xmm15
f3e247 488bbc24a8000000		mov	rdi,[rsp+168]
f3e24f 488b7560			mov	rsi,[rbp+96]
f3e253 4889e0			mov	rax,rsp
f3e256 4883e4f0			and	rsp,byte -16
f3e25a 4883ec08			sub	rsp,byte 8
f3e25e 50			push	rax
f3e25f 48b82ac763370d7f
f3e267 0000			mov	rax,139694740588330
f3e269 ffd0			call	rax
f3e26b 5c			pop	rsp
f3e26c f20f100424		movsd	xmm0,[rsp]
f3e271 f20f104c2408		movsd	xmm1,[rsp+8]
f3e277 f20f10542410		movsd	xmm2,[rsp+16]
f3e27d f20f105c2418		movsd	xmm3,[rsp+24]
f3e283 f20f10642420		movsd	xmm4,[rsp+32]
f3e289 f20f106c2428		movsd	xmm5,[rsp+40]
f3e28f f20f10742430		movsd	xmm6,[rsp+48]
f3e295 f20f107c2438		movsd	xmm7,[rsp+56]
f3e29b f2440f10442440		movsd	xmm8,[rsp+64]
f3e2a2 f2440f104c2448		movsd	xmm9,[rsp+72]
f3e2a9 f2440f10542450		movsd	xmm10,[rsp+80]
f3e2b0 f2440f105c2458		movsd	xmm11,[rsp+88]
f3e2b7 f2440f10642460		movsd	xmm12,[rsp+96]
f3e2be f2440f106c2468		movsd	xmm13,[rsp+104]
f3e2c5 f2440f10742470		movsd	xmm14,[rsp+112]
f3e2cc f2440f107c2478		movsd	xmm15,[rsp+120]
f3e2d3 4881c480000000		add	rsp,128
f3e2da 4159			pop	r9
f3e2dc 4158			pop	r8
f3e2de 59			pop	rcx
f3e2df 488b0c25a874fc00		mov	rcx,[+16544936]
f3e2e7 49b908301e5d0d7f
f3e2ef 0000			mov	r9,139695373561864
f3e2f1 49894928			mov	[r9+40],rcx
f3e2f5 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e2fd 5d			pop	rbp
f3e2fe 488b5500			mov	rdx,[rbp]
f3e302 4c8b7508			mov	r14,[rbp+8]
f3e306 4c8b6d10			mov	r13,[rbp+16]
f3e30a 4c8b6518			mov	r12,[rbp+24]
f3e30e 4c8b5d20			mov	r11,[rbp+32]
f3e312 4c8b5528			mov	r10,[rbp+40]
f3e316 488b7d30			mov	rdi,[rbp+48]
f3e31a 488b7538			mov	rsi,[rbp+56]
f3e31e 4c8b7d40			mov	r15,[rbp+64]
f3e322 488b5d48			mov	rbx,[rbp+72]
f3e326 488b4d50			mov	rcx,[rbp+80]
f3e32a 4883c558			add	rbp,byte 88
f3e32e c3			ret
f3e32f			gambit_call_handler:
f3e32f 4883ed58			sub	rbp,byte 88
f3e333 48894d50			mov	[rbp+80],rcx
f3e337 48895d48			mov	[rbp+72],rbx
f3e33b 4c897d40			mov	[rbp+64],r15
f3e33f 48897538			mov	[rbp+56],rsi
f3e343 48897d30			mov	[rbp+48],rdi
f3e347 4c895528			mov	[rbp+40],r10
f3e34b 4c895d20			mov	[rbp+32],r11
f3e34f 4c896518			mov	[rbp+24],r12
f3e353 4c896d10			mov	[rbp+16],r13
f3e357 4c897508			mov	[rbp+8],r14
f3e35b 48895500			mov	[rbp],rdx
f3e35f 4c890c25b074fc00		mov	[+16544944],r9
f3e367 4889ef			mov	rdi,rbp
f3e36a 4889e6			mov	rsi,rsp
f3e36d 55			push	rbp
f3e36e 51			push	rcx
f3e36f 4150			push	r8
f3e371 4151			push	r9
f3e373 4881ec80000000		sub	rsp,128
f3e37a f20f110424		movsd	[rsp],xmm0
f3e37f f20f114c2408		movsd	[rsp+8],xmm1
f3e385 f20f11542410		movsd	[rsp+16],xmm2
f3e38b f20f115c2418		movsd	[rsp+24],xmm3
f3e391 f20f11642420		movsd	[rsp+32],xmm4
f3e397 f20f116c2428		movsd	[rsp+40],xmm5
f3e39d f20f11742430		movsd	[rsp+48],xmm6
f3e3a3 f20f117c2438		movsd	[rsp+56],xmm7
f3e3a9 f2440f11442440		movsd	[rsp+64],xmm8
f3e3b0 f2440f114c2448		movsd	[rsp+72],xmm9
f3e3b7 f2440f11542450		movsd	[rsp+80],xmm10
f3e3be f2440f115c2458		movsd	[rsp+88],xmm11
f3e3c5 f2440f11642460		movsd	[rsp+96],xmm12
f3e3cc f2440f116c2468		movsd	[rsp+104],xmm13
f3e3d3 f2440f11742470		movsd	[rsp+112],xmm14
f3e3da f2440f117c2478		movsd	[rsp+120],xmm15
f3e3e1 4889e0			mov	rax,rsp
f3e3e4 4883e4f0			and	rsp,byte -16
f3e3e8 4883ec08			sub	rsp,byte 8
f3e3ec 50			push	rax
f3e3ed e8d07eb201		call	gambit_call
f3e3f2 5c			pop	rsp
f3e3f3 f20f100424		movsd	xmm0,[rsp]
f3e3f8 f20f104c2408		movsd	xmm1,[rsp+8]
f3e3fe f20f10542410		movsd	xmm2,[rsp+16]
f3e404 f20f105c2418		movsd	xmm3,[rsp+24]
f3e40a f20f10642420		movsd	xmm4,[rsp+32]
f3e410 f20f106c2428		movsd	xmm5,[rsp+40]
f3e416 f20f10742430		movsd	xmm6,[rsp+48]
f3e41c f20f107c2438		movsd	xmm7,[rsp+56]
f3e422 f2440f10442440		movsd	xmm8,[rsp+64]
f3e429 f2440f104c2448		movsd	xmm9,[rsp+72]
f3e430 f2440f10542450		movsd	xmm10,[rsp+80]
f3e437 f2440f105c2458		movsd	xmm11,[rsp+88]
f3e43e f2440f10642460		movsd	xmm12,[rsp+96]
f3e445 f2440f106c2468		movsd	xmm13,[rsp+104]
f3e44c f2440f10742470		movsd	xmm14,[rsp+112]
f3e453 f2440f107c2478		movsd	xmm15,[rsp+120]
f3e45a 4881c480000000		add	rsp,128
f3e461 4159			pop	r9
f3e463 4158			pop	r8
f3e465 59			pop	rcx
f3e466 488b0c25a874fc00		mov	rcx,[+16544936]
f3e46e 49b908301e5d0d7f
f3e476 0000			mov	r9,139695373561864
f3e478 49894928			mov	[r9+40],rcx
f3e47c 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e484 5d			pop	rbp
f3e485 488b5500			mov	rdx,[rbp]
f3e489 4c8b7508			mov	r14,[rbp+8]
f3e48d 4c8b6d10			mov	r13,[rbp+16]
f3e491 4c8b6518			mov	r12,[rbp+24]
f3e495 4c8b5d20			mov	r11,[rbp+32]
f3e499 4c8b5528			mov	r10,[rbp+40]
f3e49d 488b7d30			mov	rdi,[rbp+48]
f3e4a1 488b7538			mov	rsi,[rbp+56]
f3e4a5 4c8b7d40			mov	r15,[rbp+64]
f3e4a9 488b5d48			mov	rbx,[rbp+72]
f3e4ad 488b4d50			mov	rcx,[rbp+80]
f3e4b1 4883c558			add	rbp,byte 88
f3e4b5 c3			ret
f3e4b6			do_callback_handler:
f3e4b6 4883ed58			sub	rbp,byte 88
f3e4ba 48894d50			mov	[rbp+80],rcx
f3e4be 48895d48			mov	[rbp+72],rbx
f3e4c2 4c897d40			mov	[rbp+64],r15
f3e4c6 48897538			mov	[rbp+56],rsi
f3e4ca 48897d30			mov	[rbp+48],rdi
f3e4ce 4c895528			mov	[rbp+40],r10
f3e4d2 4c895d20			mov	[rbp+32],r11
f3e4d6 4c896518			mov	[rbp+24],r12
f3e4da 4c896d10			mov	[rbp+16],r13
f3e4de 4c897508			mov	[rbp+8],r14
f3e4e2 48895500			mov	[rbp],rdx
f3e4e6 4c890c25b074fc00		mov	[+16544944],r9
f3e4ee 4889ef			mov	rdi,rbp
f3e4f1 4889e6			mov	rsi,rsp
f3e4f4 55			push	rbp
f3e4f5 51			push	rcx
f3e4f6 4150			push	r8
f3e4f8 4151			push	r9
f3e4fa 4881ec80000000		sub	rsp,128
f3e501 f20f110424		movsd	[rsp],xmm0
f3e506 f20f114c2408		movsd	[rsp+8],xmm1
f3e50c f20f11542410		movsd	[rsp+16],xmm2
f3e512 f20f115c2418		movsd	[rsp+24],xmm3
f3e518 f20f11642420		movsd	[rsp+32],xmm4
f3e51e f20f116c2428		movsd	[rsp+40],xmm5
f3e524 f20f11742430		movsd	[rsp+48],xmm6
f3e52a f20f117c2438		movsd	[rsp+56],xmm7
f3e530 f2440f11442440		movsd	[rsp+64],xmm8
f3e537 f2440f114c2448		movsd	[rsp+72],xmm9
f3e53e f2440f11542450		movsd	[rsp+80],xmm10
f3e545 f2440f115c2458		movsd	[rsp+88],xmm11
f3e54c f2440f11642460		movsd	[rsp+96],xmm12
f3e553 f2440f116c2468		movsd	[rsp+104],xmm13
f3e55a f2440f11742470		movsd	[rsp+112],xmm14
f3e561 f2440f117c2478		movsd	[rsp+120],xmm15
f3e568 4889e0			mov	rax,rsp
f3e56b 4883e4f0			and	rsp,byte -16
f3e56f 4883ec08			sub	rsp,byte 8
f3e573 50			push	rax
f3e574 e8ce7eb201		call	do_callback
f3e579 5c			pop	rsp
f3e57a f20f100424		movsd	xmm0,[rsp]
f3e57f f20f104c2408		movsd	xmm1,[rsp+8]
f3e585 f20f10542410		movsd	xmm2,[rsp+16]
f3e58b f20f105c2418		movsd	xmm3,[rsp+24]
f3e591 f20f10642420		movsd	xmm4,[rsp+32]
f3e597 f20f106c2428		movsd	xmm5,[rsp+40]
f3e59d f20f10742430		movsd	xmm6,[rsp+48]
f3e5a3 f20f107c2438		movsd	xmm7,[rsp+56]
f3e5a9 f2440f10442440		movsd	xmm8,[rsp+64]
f3e5b0 f2440f104c2448		movsd	xmm9,[rsp+72]
f3e5b7 f2440f10542450		movsd	xmm10,[rsp+80]
f3e5be f2440f105c2458		movsd	xmm11,[rsp+88]
f3e5c5 f2440f10642460		movsd	xmm12,[rsp+96]
f3e5cc f2440f106c2468		movsd	xmm13,[rsp+104]
f3e5d3 f2440f10742470		movsd	xmm14,[rsp+112]
f3e5da f2440f107c2478		movsd	xmm15,[rsp+120]
f3e5e1 4881c480000000		add	rsp,128
f3e5e8 4159			pop	r9
f3e5ea 4158			pop	r8
f3e5ec 59			pop	rcx
f3e5ed 488b0c25a874fc00		mov	rcx,[+16544936]
f3e5f5 49b908301e5d0d7f
f3e5fd 0000			mov	r9,139695373561864
f3e5ff 49894928			mov	[r9+40],rcx
f3e603 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e60b 5d			pop	rbp
f3e60c 488b5500			mov	rdx,[rbp]
f3e610 4c8b7508			mov	r14,[rbp+8]
f3e614 4c8b6d10			mov	r13,[rbp+16]
f3e618 4c8b6518			mov	r12,[rbp+24]
f3e61c 4c8b5d20			mov	r11,[rbp+32]
f3e620 4c8b5528			mov	r10,[rbp+40]
f3e624 488b7d30			mov	rdi,[rbp+48]
f3e628 488b7538			mov	rsi,[rbp+56]
f3e62c 4c8b7d40			mov	r15,[rbp+64]
f3e630 488b5d48			mov	rbx,[rbp+72]
f3e634 488b4d50			mov	rcx,[rbp+80]
f3e638 4883c558			add	rbp,byte 88
f3e63c c3			ret
f3e63d			do_callback_fn_handler:
f3e63d 4883ed58			sub	rbp,byte 88
f3e641 48894d50			mov	[rbp+80],rcx
f3e645 48895d48			mov	[rbp+72],rbx
f3e649 4c897d40			mov	[rbp+64],r15
f3e64d 48897538			mov	[rbp+56],rsi
f3e651 48897d30			mov	[rbp+48],rdi
f3e655 4c895528			mov	[rbp+40],r10
f3e659 4c895d20			mov	[rbp+32],r11
f3e65d 4c896518			mov	[rbp+24],r12
f3e661 4c896d10			mov	[rbp+16],r13
f3e665 4c897508			mov	[rbp+8],r14
f3e669 48895500			mov	[rbp],rdx
f3e66d 4c890c25b074fc00		mov	[+16544944],r9
f3e675 4889ef			mov	rdi,rbp
f3e678 4889e6			mov	rsi,rsp
f3e67b 55			push	rbp
f3e67c 51			push	rcx
f3e67d 4150			push	r8
f3e67f 4151			push	r9
f3e681 4881ec80000000		sub	rsp,128
f3e688 f20f110424		movsd	[rsp],xmm0
f3e68d f20f114c2408		movsd	[rsp+8],xmm1
f3e693 f20f11542410		movsd	[rsp+16],xmm2
f3e699 f20f115c2418		movsd	[rsp+24],xmm3
f3e69f f20f11642420		movsd	[rsp+32],xmm4
f3e6a5 f20f116c2428		movsd	[rsp+40],xmm5
f3e6ab f20f11742430		movsd	[rsp+48],xmm6
f3e6b1 f20f117c2438		movsd	[rsp+56],xmm7
f3e6b7 f2440f11442440		movsd	[rsp+64],xmm8
f3e6be f2440f114c2448		movsd	[rsp+72],xmm9
f3e6c5 f2440f11542450		movsd	[rsp+80],xmm10
f3e6cc f2440f115c2458		movsd	[rsp+88],xmm11
f3e6d3 f2440f11642460		movsd	[rsp+96],xmm12
f3e6da f2440f116c2468		movsd	[rsp+104],xmm13
f3e6e1 f2440f11742470		movsd	[rsp+112],xmm14
f3e6e8 f2440f117c2478		movsd	[rsp+120],xmm15
f3e6ef 4889e0			mov	rax,rsp
f3e6f2 4883e4f0			and	rsp,byte -16
f3e6f6 4883ec08			sub	rsp,byte 8
f3e6fa 50			push	rax
f3e6fb e8cc7eb201		call	do_callback_fn
f3e700 5c			pop	rsp
f3e701 f20f100424		movsd	xmm0,[rsp]
f3e706 f20f104c2408		movsd	xmm1,[rsp+8]
f3e70c f20f10542410		movsd	xmm2,[rsp+16]
f3e712 f20f105c2418		movsd	xmm3,[rsp+24]
f3e718 f20f10642420		movsd	xmm4,[rsp+32]
f3e71e f20f106c2428		movsd	xmm5,[rsp+40]
f3e724 f20f10742430		movsd	xmm6,[rsp+48]
f3e72a f20f107c2438		movsd	xmm7,[rsp+56]
f3e730 f2440f10442440		movsd	xmm8,[rsp+64]
f3e737 f2440f104c2448		movsd	xmm9,[rsp+72]
f3e73e f2440f10542450		movsd	xmm10,[rsp+80]
f3e745 f2440f105c2458		movsd	xmm11,[rsp+88]
f3e74c f2440f10642460		movsd	xmm12,[rsp+96]
f3e753 f2440f106c2468		movsd	xmm13,[rsp+104]
f3e75a f2440f10742470		movsd	xmm14,[rsp+112]
f3e761 f2440f107c2478		movsd	xmm15,[rsp+120]
f3e768 4881c480000000		add	rsp,128
f3e76f 4159			pop	r9
f3e771 4158			pop	r8
f3e773 59			pop	rcx
f3e774 488b0c25a874fc00		mov	rcx,[+16544936]
f3e77c 49b908301e5d0d7f
f3e784 0000			mov	r9,139695373561864
f3e786 49894928			mov	[r9+40],rcx
f3e78a 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e792 5d			pop	rbp
f3e793 488b5500			mov	rdx,[rbp]
f3e797 4c8b7508			mov	r14,[rbp+8]
f3e79b 4c8b6d10			mov	r13,[rbp+16]
f3e79f 4c8b6518			mov	r12,[rbp+24]
f3e7a3 4c8b5d20			mov	r11,[rbp+32]
f3e7a7 4c8b5528			mov	r10,[rbp+40]
f3e7ab 488b7d30			mov	rdi,[rbp+48]
f3e7af 488b7538			mov	rsi,[rbp+56]
f3e7b3 4c8b7d40			mov	r15,[rbp+64]
f3e7b7 488b5d48			mov	rbx,[rbp+72]
f3e7bb 488b4d50			mov	rcx,[rbp+80]
f3e7bf 4883c558			add	rbp,byte 88
f3e7c3 c3			ret
f3e7c4			do_callback_cont_handler:
f3e7c4 4883ed58			sub	rbp,byte 88
f3e7c8 48894d50			mov	[rbp+80],rcx
f3e7cc 48895d48			mov	[rbp+72],rbx
f3e7d0 4c897d40			mov	[rbp+64],r15
f3e7d4 48897538			mov	[rbp+56],rsi
f3e7d8 48897d30			mov	[rbp+48],rdi
f3e7dc 4c895528			mov	[rbp+40],r10
f3e7e0 4c895d20			mov	[rbp+32],r11
f3e7e4 4c896518			mov	[rbp+24],r12
f3e7e8 4c896d10			mov	[rbp+16],r13
f3e7ec 4c897508			mov	[rbp+8],r14
f3e7f0 48895500			mov	[rbp],rdx
f3e7f4 4c890c25b074fc00		mov	[+16544944],r9
f3e7fc 4889ef			mov	rdi,rbp
f3e7ff 4889e6			mov	rsi,rsp
f3e802 55			push	rbp
f3e803 51			push	rcx
f3e804 4150			push	r8
f3e806 4151			push	r9
f3e808 4881ec80000000		sub	rsp,128
f3e80f f20f110424		movsd	[rsp],xmm0
f3e814 f20f114c2408		movsd	[rsp+8],xmm1
f3e81a f20f11542410		movsd	[rsp+16],xmm2
f3e820 f20f115c2418		movsd	[rsp+24],xmm3
f3e826 f20f11642420		movsd	[rsp+32],xmm4
f3e82c f20f116c2428		movsd	[rsp+40],xmm5
f3e832 f20f11742430		movsd	[rsp+48],xmm6
f3e838 f20f117c2438		movsd	[rsp+56],xmm7
f3e83e f2440f11442440		movsd	[rsp+64],xmm8
f3e845 f2440f114c2448		movsd	[rsp+72],xmm9
f3e84c f2440f11542450		movsd	[rsp+80],xmm10
f3e853 f2440f115c2458		movsd	[rsp+88],xmm11
f3e85a f2440f11642460		movsd	[rsp+96],xmm12
f3e861 f2440f116c2468		movsd	[rsp+104],xmm13
f3e868 f2440f11742470		movsd	[rsp+112],xmm14
f3e86f f2440f117c2478		movsd	[rsp+120],xmm15
f3e876 4889e0			mov	rax,rsp
f3e879 4883e4f0			and	rsp,byte -16
f3e87d 4883ec08			sub	rsp,byte 8
f3e881 50			push	rax
f3e882 e8ca7eb201		call	do_callback_cont
f3e887 5c			pop	rsp
f3e888 f20f100424		movsd	xmm0,[rsp]
f3e88d f20f104c2408		movsd	xmm1,[rsp+8]
f3e893 f20f10542410		movsd	xmm2,[rsp+16]
f3e899 f20f105c2418		movsd	xmm3,[rsp+24]
f3e89f f20f10642420		movsd	xmm4,[rsp+32]
f3e8a5 f20f106c2428		movsd	xmm5,[rsp+40]
f3e8ab f20f10742430		movsd	xmm6,[rsp+48]
f3e8b1 f20f107c2438		movsd	xmm7,[rsp+56]
f3e8b7 f2440f10442440		movsd	xmm8,[rsp+64]
f3e8be f2440f104c2448		movsd	xmm9,[rsp+72]
f3e8c5 f2440f10542450		movsd	xmm10,[rsp+80]
f3e8cc f2440f105c2458		movsd	xmm11,[rsp+88]
f3e8d3 f2440f10642460		movsd	xmm12,[rsp+96]
f3e8da f2440f106c2468		movsd	xmm13,[rsp+104]
f3e8e1 f2440f10742470		movsd	xmm14,[rsp+112]
f3e8e8 f2440f107c2478		movsd	xmm15,[rsp+120]
f3e8ef 4881c480000000		add	rsp,128
f3e8f6 4159			pop	r9
f3e8f8 4158			pop	r8
f3e8fa 59			pop	rcx
f3e8fb 488b0c25a874fc00		mov	rcx,[+16544936]
f3e903 49b908301e5d0d7f
f3e90b 0000			mov	r9,139695373561864
f3e90d 49894928			mov	[r9+40],rcx
f3e911 4c8b0c25b074fc00		mov	r9,[+16544944]
f3e919 5d			pop	rbp
f3e91a 488b5500			mov	rdx,[rbp]
f3e91e 4c8b7508			mov	r14,[rbp+8]
f3e922 4c8b6d10			mov	r13,[rbp+16]
f3e926 4c8b6518			mov	r12,[rbp+24]
f3e92a 4c8b5d20			mov	r11,[rbp+32]
f3e92e 4c8b5528			mov	r10,[rbp+40]
f3e932 488b7d30			mov	rdi,[rbp+48]
f3e936 488b7538			mov	rsi,[rbp+56]
f3e93a 4c8b7d40			mov	r15,[rbp+64]
f3e93e 488b5d48			mov	rbx,[rbp+72]
f3e942 488b4d50			mov	rcx,[rbp+80]
f3e946 4883c558			add	rbp,byte 88
f3e94a c3			ret
f3e94b			rt_error_handler:
f3e94b 4883ed58			sub	rbp,byte 88
f3e94f 48894d50			mov	[rbp+80],rcx
f3e953 48895d48			mov	[rbp+72],rbx
f3e957 4c897d40			mov	[rbp+64],r15
f3e95b 48897538			mov	[rbp+56],rsi
f3e95f 48897d30			mov	[rbp+48],rdi
f3e963 4c895528			mov	[rbp+40],r10
f3e967 4c895d20			mov	[rbp+32],r11
f3e96b 4c896518			mov	[rbp+24],r12
f3e96f 4c896d10			mov	[rbp+16],r13
f3e973 4c897508			mov	[rbp+8],r14
f3e977 48895500			mov	[rbp],rdx
f3e97b 4c890c25b074fc00		mov	[+16544944],r9
f3e983 4889ef			mov	rdi,rbp
f3e986 4889e6			mov	rsi,rsp
f3e989 55			push	rbp
f3e98a 51			push	rcx
f3e98b 4150			push	r8
f3e98d 4151			push	r9
f3e98f 4881ec80000000		sub	rsp,128
f3e996 f20f110424		movsd	[rsp],xmm0
f3e99b f20f114c2408		movsd	[rsp+8],xmm1
f3e9a1 f20f11542410		movsd	[rsp+16],xmm2
f3e9a7 f20f115c2418		movsd	[rsp+24],xmm3
f3e9ad f20f11642420		movsd	[rsp+32],xmm4
f3e9b3 f20f116c2428		movsd	[rsp+40],xmm5
f3e9b9 f20f11742430		movsd	[rsp+48],xmm6
f3e9bf f20f117c2438		movsd	[rsp+56],xmm7
f3e9c5 f2440f11442440		movsd	[rsp+64],xmm8
f3e9cc f2440f114c2448		movsd	[rsp+72],xmm9
f3e9d3 f2440f11542450		movsd	[rsp+80],xmm10
f3e9da f2440f115c2458		movsd	[rsp+88],xmm11
f3e9e1 f2440f11642460		movsd	[rsp+96],xmm12
f3e9e8 f2440f116c2468		movsd	[rsp+104],xmm13
f3e9ef f2440f11742470		movsd	[rsp+112],xmm14
f3e9f6 f2440f117c2478		movsd	[rsp+120],xmm15
f3e9fd 4889e0			mov	rax,rsp
f3ea00 4883e4f0			and	rsp,byte -16
f3ea04 4883ec08			sub	rsp,byte 8
f3ea08 50			push	rax
f3ea09 e83c73b201		call	rt_error
f3ea0e 5c			pop	rsp
f3ea0f f20f100424		movsd	xmm0,[rsp]
f3ea14 f20f104c2408		movsd	xmm1,[rsp+8]
f3ea1a f20f10542410		movsd	xmm2,[rsp+16]
f3ea20 f20f105c2418		movsd	xmm3,[rsp+24]
f3ea26 f20f10642420		movsd	xmm4,[rsp+32]
f3ea2c f20f106c2428		movsd	xmm5,[rsp+40]
f3ea32 f20f10742430		movsd	xmm6,[rsp+48]
f3ea38 f20f107c2438		movsd	xmm7,[rsp+56]
f3ea3e f2440f10442440		movsd	xmm8,[rsp+64]
f3ea45 f2440f104c2448		movsd	xmm9,[rsp+72]
f3ea4c f2440f10542450		movsd	xmm10,[rsp+80]
f3ea53 f2440f105c2458		movsd	xmm11,[rsp+88]
f3ea5a f2440f10642460		movsd	xmm12,[rsp+96]
f3ea61 f2440f106c2468		movsd	xmm13,[rsp+104]
f3ea68 f2440f10742470		movsd	xmm14,[rsp+112]
f3ea6f f2440f107c2478		movsd	xmm15,[rsp+120]
f3ea76 4881c480000000		add	rsp,128
f3ea7d 4159			pop	r9
f3ea7f 4158			pop	r8
f3ea81 59			pop	rcx
f3ea82 488b0c25a874fc00		mov	rcx,[+16544936]
f3ea8a 49b908301e5d0d7f
f3ea92 0000			mov	r9,139695373561864
f3ea94 49894928			mov	[r9+40],rcx
f3ea98 4c8b0c25b074fc00		mov	r9,[+16544944]
f3eaa0 5d			pop	rbp
f3eaa1 488b5500			mov	rdx,[rbp]
f3eaa5 4c8b7508			mov	r14,[rbp+8]
f3eaa9 4c8b6d10			mov	r13,[rbp+16]
f3eaad 4c8b6518			mov	r12,[rbp+24]
f3eab1 4c8b5d20			mov	r11,[rbp+32]
f3eab5 4c8b5528			mov	r10,[rbp+40]
f3eab9 488b7d30			mov	rdi,[rbp+48]
f3eabd 488b7538			mov	rsi,[rbp+56]
f3eac1 4c8b7d40			mov	r15,[rbp+64]
f3eac5 488b5d48			mov	rbx,[rbp+72]
f3eac9 488b4d50			mov	rcx,[rbp+80]
f3eacd 4883c558			add	rbp,byte 88
f3ead1 c3			ret
f3ead2			print_msg_handler:
f3ead2 4883ed58			sub	rbp,byte 88
f3ead6 48894d50			mov	[rbp+80],rcx
f3eada 48895d48			mov	[rbp+72],rbx
f3eade 4c897d40			mov	[rbp+64],r15
f3eae2 48897538			mov	[rbp+56],rsi
f3eae6 48897d30			mov	[rbp+48],rdi
f3eaea 4c895528			mov	[rbp+40],r10
f3eaee 4c895d20			mov	[rbp+32],r11
f3eaf2 4c896518			mov	[rbp+24],r12
f3eaf6 4c896d10			mov	[rbp+16],r13
f3eafa 4c897508			mov	[rbp+8],r14
f3eafe 48895500			mov	[rbp],rdx
f3eb02 4c890c25b074fc00		mov	[+16544944],r9
f3eb0a 4889ef			mov	rdi,rbp
f3eb0d 4889e6			mov	rsi,rsp
f3eb10 55			push	rbp
f3eb11 51			push	rcx
f3eb12 4150			push	r8
f3eb14 4151			push	r9
f3eb16 4881ec80000000		sub	rsp,128
f3eb1d f20f110424		movsd	[rsp],xmm0
f3eb22 f20f114c2408		movsd	[rsp+8],xmm1
f3eb28 f20f11542410		movsd	[rsp+16],xmm2
f3eb2e f20f115c2418		movsd	[rsp+24],xmm3
f3eb34 f20f11642420		movsd	[rsp+32],xmm4
f3eb3a f20f116c2428		movsd	[rsp+40],xmm5
f3eb40 f20f11742430		movsd	[rsp+48],xmm6
f3eb46 f20f117c2438		movsd	[rsp+56],xmm7
f3eb4c f2440f11442440		movsd	[rsp+64],xmm8
f3eb53 f2440f114c2448		movsd	[rsp+72],xmm9
f3eb5a f2440f11542450		movsd	[rsp+80],xmm10
f3eb61 f2440f115c2458		movsd	[rsp+88],xmm11
f3eb68 f2440f11642460		movsd	[rsp+96],xmm12
f3eb6f f2440f116c2468		movsd	[rsp+104],xmm13
f3eb76 f2440f11742470		movsd	[rsp+112],xmm14
f3eb7d f2440f117c2478		movsd	[rsp+120],xmm15
f3eb84 4889e0			mov	rax,rsp
f3eb87 4883e4f0			and	rsp,byte -16
f3eb8b 4883ec08			sub	rsp,byte 8
f3eb8f 50			push	rax
f3eb90 e87574b201		call	print-msg
f3eb95 5c			pop	rsp
f3eb96 f20f100424		movsd	xmm0,[rsp]
f3eb9b f20f104c2408		movsd	xmm1,[rsp+8]
f3eba1 f20f10542410		movsd	xmm2,[rsp+16]
f3eba7 f20f105c2418		movsd	xmm3,[rsp+24]
f3ebad f20f10642420		movsd	xmm4,[rsp+32]
f3ebb3 f20f106c2428		movsd	xmm5,[rsp+40]
f3ebb9 f20f10742430		movsd	xmm6,[rsp+48]
f3ebbf f20f107c2438		movsd	xmm7,[rsp+56]
f3ebc5 f2440f10442440		movsd	xmm8,[rsp+64]
f3ebcc f2440f104c2448		movsd	xmm9,[rsp+72]
f3ebd3 f2440f10542450		movsd	xmm10,[rsp+80]
f3ebda f2440f105c2458		movsd	xmm11,[rsp+88]
f3ebe1 f2440f10642460		movsd	xmm12,[rsp+96]
f3ebe8 f2440f106c2468		movsd	xmm13,[rsp+104]
f3ebef f2440f10742470		movsd	xmm14,[rsp+112]
f3ebf6 f2440f107c2478		movsd	xmm15,[rsp+120]
f3ebfd 4881c480000000		add	rsp,128
f3ec04 4159			pop	r9
f3ec06 4158			pop	r8
f3ec08 59			pop	rcx
f3ec09 488b0c25a874fc00		mov	rcx,[+16544936]
f3ec11 49b908301e5d0d7f
f3ec19 0000			mov	r9,139695373561864
f3ec1b 49894928			mov	[r9+40],rcx
f3ec1f 4c8b0c25b074fc00		mov	r9,[+16544944]
f3ec27 5d			pop	rbp
f3ec28 488b5500			mov	rdx,[rbp]
f3ec2c 4c8b7508			mov	r14,[rbp+8]
f3ec30 4c8b6d10			mov	r13,[rbp+16]
f3ec34 4c8b6518			mov	r12,[rbp+24]
f3ec38 4c8b5d20			mov	r11,[rbp+32]
f3ec3c 4c8b5528			mov	r10,[rbp+40]
f3ec40 488b7d30			mov	rdi,[rbp+48]
f3ec44 488b7538			mov	rsi,[rbp+56]
f3ec48 4c8b7d40			mov	r15,[rbp+64]
f3ec4c 488b5d48			mov	rbx,[rbp+72]
f3ec50 488b4d50			mov	rcx,[rbp+80]
f3ec54 4883c558			add	rbp,byte 88
f3ec58 c3			ret
f3ec59			print_msg_val_handler:
f3ec59 4883ed58			sub	rbp,byte 88
f3ec5d 48894d50			mov	[rbp+80],rcx
f3ec61 48895d48			mov	[rbp+72],rbx
f3ec65 4c897d40			mov	[rbp+64],r15
f3ec69 48897538			mov	[rbp+56],rsi
f3ec6d 48897d30			mov	[rbp+48],rdi
f3ec71 4c895528			mov	[rbp+40],r10
f3ec75 4c895d20			mov	[rbp+32],r11
f3ec79 4c896518			mov	[rbp+24],r12
f3ec7d 4c896d10			mov	[rbp+16],r13
f3ec81 4c897508			mov	[rbp+8],r14
f3ec85 48895500			mov	[rbp],rdx
f3ec89 4c890c25b074fc00		mov	[+16544944],r9
f3ec91 4889ef			mov	rdi,rbp
f3ec94 4889e6			mov	rsi,rsp
f3ec97 55			push	rbp
f3ec98 51			push	rcx
f3ec99 4150			push	r8
f3ec9b 4151			push	r9
f3ec9d 4881ec80000000		sub	rsp,128
f3eca4 f20f110424		movsd	[rsp],xmm0
f3eca9 f20f114c2408		movsd	[rsp+8],xmm1
f3ecaf f20f11542410		movsd	[rsp+16],xmm2
f3ecb5 f20f115c2418		movsd	[rsp+24],xmm3
f3ecbb f20f11642420		movsd	[rsp+32],xmm4
f3ecc1 f20f116c2428		movsd	[rsp+40],xmm5
f3ecc7 f20f11742430		movsd	[rsp+48],xmm6
f3eccd f20f117c2438		movsd	[rsp+56],xmm7
f3ecd3 f2440f11442440		movsd	[rsp+64],xmm8
f3ecda f2440f114c2448		movsd	[rsp+72],xmm9
f3ece1 f2440f11542450		movsd	[rsp+80],xmm10
f3ece8 f2440f115c2458		movsd	[rsp+88],xmm11
f3ecef f2440f11642460		movsd	[rsp+96],xmm12
f3ecf6 f2440f116c2468		movsd	[rsp+104],xmm13
f3ecfd f2440f11742470		movsd	[rsp+112],xmm14
f3ed04 f2440f117c2478		movsd	[rsp+120],xmm15
f3ed0b 4889e0			mov	rax,rsp
f3ed0e 4883e4f0			and	rsp,byte -16
f3ed12 4883ec08			sub	rsp,byte 8
f3ed16 50			push	rax
f3ed17 e8b371b201		call	print-msg-val
f3ed1c 5c			pop	rsp
f3ed1d f20f100424		movsd	xmm0,[rsp]
f3ed22 f20f104c2408		movsd	xmm1,[rsp+8]
f3ed28 f20f10542410		movsd	xmm2,[rsp+16]
f3ed2e f20f105c2418		movsd	xmm3,[rsp+24]
f3ed34 f20f10642420		movsd	xmm4,[rsp+32]
f3ed3a f20f106c2428		movsd	xmm5,[rsp+40]
f3ed40 f20f10742430		movsd	xmm6,[rsp+48]
f3ed46 f20f107c2438		movsd	xmm7,[rsp+56]
f3ed4c f2440f10442440		movsd	xmm8,[rsp+64]
f3ed53 f2440f104c2448		movsd	xmm9,[rsp+72]
f3ed5a f2440f10542450		movsd	xmm10,[rsp+80]
f3ed61 f2440f105c2458		movsd	xmm11,[rsp+88]
f3ed68 f2440f10642460		movsd	xmm12,[rsp+96]
f3ed6f f2440f106c2468		movsd	xmm13,[rsp+104]
f3ed76 f2440f10742470		movsd	xmm14,[rsp+112]
f3ed7d f2440f107c2478		movsd	xmm15,[rsp+120]
f3ed84 4881c480000000		add	rsp,128
f3ed8b 4159			pop	r9
f3ed8d 4158			pop	r8
f3ed8f 59			pop	rcx
f3ed90 488b0c25a874fc00		mov	rcx,[+16544936]
f3ed98 49b908301e5d0d7f
f3eda0 0000			mov	r9,139695373561864
f3eda2 49894928			mov	[r9+40],rcx
f3eda6 4c8b0c25b074fc00		mov	r9,[+16544944]
f3edae 5d			pop	rbp
f3edaf 488b5500			mov	rdx,[rbp]
f3edb3 4c8b7508			mov	r14,[rbp+8]
f3edb7 4c8b6d10			mov	r13,[rbp+16]
f3edbb 4c8b6518			mov	r12,[rbp+24]
f3edbf 4c8b5d20			mov	r11,[rbp+32]
f3edc3 4c8b5528			mov	r10,[rbp+40]
f3edc7 488b7d30			mov	rdi,[rbp+48]
f3edcb 488b7538			mov	rsi,[rbp+56]
f3edcf 4c8b7d40			mov	r15,[rbp+64]
f3edd3 488b5d48			mov	rbx,[rbp+72]
f3edd7 488b4d50			mov	rcx,[rbp+80]
f3eddb 4883c558			add	rbp,byte 88
f3eddf c3			ret
f3ede0			repl:
f3ede0 4883ed58			sub	rbp,byte 88
f3ede4 48894d50			mov	[rbp+80],rcx
f3ede8 48895d48			mov	[rbp+72],rbx
f3edec 4c897d40			mov	[rbp+64],r15
f3edf0 48897538			mov	[rbp+56],rsi
f3edf4 48897d30			mov	[rbp+48],rdi
f3edf8 4c895528			mov	[rbp+40],r10
f3edfc 4c895d20			mov	[rbp+32],r11
f3ee00 4c896518			mov	[rbp+24],r12
f3ee04 4c896d10			mov	[rbp+16],r13
f3ee08 4c897508			mov	[rbp+8],r14
f3ee0c 48895500			mov	[rbp],rdx
f3ee10 4c890c25b074fc00		mov	[+16544944],r9
f3ee18 4889ef			mov	rdi,rbp
f3ee1b 4889e6			mov	rsi,rsp
f3ee1e 55			push	rbp
f3ee1f 51			push	rcx
f3ee20 4150			push	r8
f3ee22 4151			push	r9
f3ee24 4881ec80000000		sub	rsp,128
f3ee2b f20f110424		movsd	[rsp],xmm0
f3ee30 f20f114c2408		movsd	[rsp+8],xmm1
f3ee36 f20f11542410		movsd	[rsp+16],xmm2
f3ee3c f20f115c2418		movsd	[rsp+24],xmm3
f3ee42 f20f11642420		movsd	[rsp+32],xmm4
f3ee48 f20f116c2428		movsd	[rsp+40],xmm5
f3ee4e f20f11742430		movsd	[rsp+48],xmm6
f3ee54 f20f117c2438		movsd	[rsp+56],xmm7
f3ee5a f2440f11442440		movsd	[rsp+64],xmm8
f3ee61 f2440f114c2448		movsd	[rsp+72],xmm9
f3ee68 f2440f11542450		movsd	[rsp+80],xmm10
f3ee6f f2440f115c2458		movsd	[rsp+88],xmm11
f3ee76 f2440f11642460		movsd	[rsp+96],xmm12
f3ee7d f2440f116c2468		movsd	[rsp+104],xmm13
f3ee84 f2440f11742470		movsd	[rsp+112],xmm14
f3ee8b f2440f117c2478		movsd	[rsp+120],xmm15
f3ee92 4889e0			mov	rax,rsp
f3ee95 4883e4f0			and	rsp,byte -16
f3ee99 4883ec08			sub	rsp,byte 8
f3ee9d 50			push	rax
f3ee9e e8a272b201		call	repl
f3eea3 5c			pop	rsp
f3eea4 f20f100424		movsd	xmm0,[rsp]
f3eea9 f20f104c2408		movsd	xmm1,[rsp+8]
f3eeaf f20f10542410		movsd	xmm2,[rsp+16]
f3eeb5 f20f105c2418		movsd	xmm3,[rsp+24]
f3eebb f20f10642420		movsd	xmm4,[rsp+32]
f3eec1 f20f106c2428		movsd	xmm5,[rsp+40]
f3eec7 f20f10742430		movsd	xmm6,[rsp+48]
f3eecd f20f107c2438		movsd	xmm7,[rsp+56]
f3eed3 f2440f10442440		movsd	xmm8,[rsp+64]
f3eeda f2440f104c2448		movsd	xmm9,[rsp+72]
f3eee1 f2440f10542450		movsd	xmm10,[rsp+80]
f3eee8 f2440f105c2458		movsd	xmm11,[rsp+88]
f3eeef f2440f10642460		movsd	xmm12,[rsp+96]
f3eef6 f2440f106c2468		movsd	xmm13,[rsp+104]
f3eefd f2440f10742470		movsd	xmm14,[rsp+112]
f3ef04 f2440f107c2478		movsd	xmm15,[rsp+120]
f3ef0b 4881c480000000		add	rsp,128
f3ef12 4159			pop	r9
f3ef14 4158			pop	r8
f3ef16 59			pop	rcx
f3ef17 488b0c25a874fc00		mov	rcx,[+16544936]
f3ef1f 49b908301e5d0d7f
f3ef27 0000			mov	r9,139695373561864
f3ef29 49894928			mov	[r9+40],rcx
f3ef2d 4c8b0c25b074fc00		mov	r9,[+16544944]
f3ef35 5d			pop	rbp
f3ef36 488b5500			mov	rdx,[rbp]
f3ef3a 4c8b7508			mov	r14,[rbp+8]
f3ef3e 4c8b6d10			mov	r13,[rbp+16]
f3ef42 4c8b6518			mov	r12,[rbp+24]
f3ef46 4c8b5d20			mov	r11,[rbp+32]
f3ef4a 4c8b5528			mov	r10,[rbp+40]
f3ef4e 488b7d30			mov	rdi,[rbp+48]
f3ef52 488b7538			mov	rsi,[rbp+56]
f3ef56 4c8b7d40			mov	r15,[rbp+64]
f3ef5a 488b5d48			mov	rbx,[rbp+72]
f3ef5e 488b4d50			mov	rcx,[rbp+80]
f3ef62 4883c558			add	rbp,byte 88
f3ef66 c3			ret
f3ef67			err_wrong_num_args:
f3ef67 4883ed08			sub	rbp,byte 8
f3ef6b 48895d00			mov	[rbp],rbx
f3ef6f 48bb414cc9370d7f
f3ef77 0000			mov	rbx,139694747241537
f3ef79 e8cdf9ffff		call	rt_error_handler
f3ef7e 488b5d00			mov	rbx,[rbp]
f3ef82 4883c508			add	rbp,byte 8
f3ef86			rtlib_skip:
f3ef86 4881ec80000000		sub	rsp,128
f3ef8d f20f110424		movsd	[rsp],xmm0
f3ef92 f20f114c2408		movsd	[rsp+8],xmm1
f3ef98 f20f11542410		movsd	[rsp+16],xmm2
f3ef9e f20f115c2418		movsd	[rsp+24],xmm3
f3efa4 f20f11642420		movsd	[rsp+32],xmm4
f3efaa f20f116c2428		movsd	[rsp+40],xmm5
f3efb0 f20f11742430		movsd	[rsp+48],xmm6
f3efb6 f20f117c2438		movsd	[rsp+56],xmm7
f3efbc f2440f11442440		movsd	[rsp+64],xmm8
f3efc3 f2440f114c2448		movsd	[rsp+72],xmm9
f3efca f2440f11542450		movsd	[rsp+80],xmm10
f3efd1 f2440f115c2458		movsd	[rsp+88],xmm11
f3efd8 f2440f11642460		movsd	[rsp+96],xmm12
f3efdf f2440f116c2468		movsd	[rsp+104],xmm13
f3efe6 f2440f11742470		movsd	[rsp+112],xmm14
f3efed f2440f117c2478		movsd	[rsp+120],xmm15
f3eff4 50			push	rax
f3eff5 53			push	rbx
f3eff6 51			push	rcx
f3eff7 52			push	rdx
f3eff8 55			push	rbp
f3eff9 56			push	rsi
f3effa 57			push	rdi
f3effb 4150			push	r8
f3effd 4151			push	r9
f3efff 4152			push	r10
f3f001 4153			push	r11
f3f003 4154			push	r12
f3f005 4155			push	r13
f3f007 4156			push	r14
f3f009 4157			push	r15
f3f00b 48bd88d2f3350d7f
f3f013 0000			mov	rbp,139694716473992
f3f015 48b808301e5d0d7f
f3f01d 0000			mov	rax,139695373561864
f3f01f 488b0c25a874fc00		mov	rcx,[+16544936]
f3f027 48894828			mov	[rax+40],rcx
f3f02b 48c7c100000000		mov	rcx,dword 0
f3f032 4c8b0c25b074fc00		mov	r9,[+16544944]
f3f03a 49c7c068af7101		mov	r8,dword 24227688
f3f041 48c7c300000000		mov	rbx,dword 0
f3f048 49c7c700000000		mov	r15,dword 0
f3f04f 48c7c600000000		mov	rsi,dword 0
f3f056 48c7c700000000		mov	rdi,dword 0
f3f05d 49c7c200000000		mov	r10,dword 0
f3f064 49c7c300000000		mov	r11,dword 0
f3f06b 49c7c400000000		mov	r12,dword 0
f3f072 49c7c500000000		mov	r13,dword 0
f3f079 49c7c600000000		mov	r14,dword 0
f3f080 48c7c200000000		mov	rdx,dword 0
f3f087			prog_begin1:
------------------------------------------------------------------------
aafaf0				bits 64
aafaf0			stub_7f0d36aafaf0_1:
aafaf0 83c104			add	ecx,byte 4
aafaf3 90			nop
aafaf4			stub_7f0d36aafaf0_0:
aafaf4 e844eb48ff		call	do_callback_fn_handler
aafaf9 c1fc720100000000
------------------------------------------------------------------------
aafad8				bits 64
aafad8			stub_7f0d36aafad8_1:
aafad8 83c104			add	ecx,byte 4
aafadb 90			nop
aafadc			stub_7f0d36aafad8_0:
aafadc e85ceb48ff		call	do_callback_fn_handler
aafae1 6110730100000000
------------------------------------------------------------------------
aafac0				bits 64
aafac0			stub_7f0d36aafac0_1:
aafac0 83c104			add	ecx,byte 4
aafac3 90			nop
aafac4			stub_7f0d36aafac0_0:
aafac4 e874eb48ff		call	do_callback_fn_handler
aafac9 0124730100000000
------------------------------------------------------------------------
aafaa8				bits 64
aafaa8			stub_7f0d36aafaa8_1:
aafaa8 83c104			add	ecx,byte 4
aafaab 90			nop
aafaac			stub_7f0d36aafaa8_0:
aafaac e88ceb48ff		call	do_callback_fn_handler
aafab1 a137730100000000
------------------------------------------------------------------------
aafa90				bits 64
aafa90			stub_7f0d36aafa90_1:
aafa90 83c104			add	ecx,byte 4
aafa93 90			nop
aafa94			stub_7f0d36aafa90_0:
aafa94 e8a4eb48ff		call	do_callback_fn_handler
aafa99 414b730100000000
------------------------------------------------------------------------
aafa78				bits 64
aafa78			stub_7f0d36aafa78_1:
aafa78 83c104			add	ecx,byte 4
aafa7b 90			nop
aafa7c			stub_7f0d36aafa78_0:
aafa7c e8bceb48ff		call	do_callback_fn_handler
aafa81 e15e730100000000
------------------------------------------------------------------------
aafa60				bits 64
aafa60			stub_7f0d36aafa60_1:
aafa60 83c104			add	ecx,byte 4
aafa63 90			nop
aafa64			stub_7f0d36aafa60_0:
aafa64 e8d4eb48ff		call	do_callback_fn_handler
aafa69 8172730100000000
------------------------------------------------------------------------
aafa48				bits 64
aafa48			stub_7f0d36aafa48_1:
aafa48 83c104			add	ecx,byte 4
aafa4b 90			nop
aafa4c			stub_7f0d36aafa48_0:
aafa4c e8eceb48ff		call	do_callback_fn_handler
aafa51 2186730100000000
------------------------------------------------------------------------
aafa30				bits 64
aafa30			stub_7f0d36aafa30_1:
aafa30 83c104			add	ecx,byte 4
aafa33 90			nop
aafa34			stub_7f0d36aafa30_0:
aafa34 e804ec48ff		call	do_callback_fn_handler
aafa39 c199730100000000
------------------------------------------------------------------------
aafa18				bits 64
aafa18			stub_7f0d36aafa18_1:
aafa18 83c104			add	ecx,byte 4
aafa1b 90			nop
aafa1c			stub_7f0d36aafa18_0:
aafa1c e81cec48ff		call	do_callback_fn_handler
aafa21 61ad730100000000
------------------------------------------------------------------------
aafa00				bits 64
aafa00			stub_7f0d36aafa00_1:
aafa00 83c104			add	ecx,byte 4
aafa03 90			nop
aafa04			stub_7f0d36aafa00_0:
aafa04 e834ec48ff		call	do_callback_fn_handler
aafa09 01c1730100000000
------------------------------------------------------------------------
aaf9e8				bits 64
aaf9e8			stub_7f0d36aaf9e8_1:
aaf9e8 83c104			add	ecx,byte 4
aaf9eb 90			nop
aaf9ec			stub_7f0d36aaf9e8_0:
aaf9ec e84cec48ff		call	do_callback_fn_handler
aaf9f1 8141740100000000
------------------------------------------------------------------------
aaf9d0				bits 64
aaf9d0			stub_7f0d36aaf9d0_1:
aaf9d0 83c104			add	ecx,byte 4
aaf9d3 90			nop
aaf9d4			stub_7f0d36aaf9d0_0:
aaf9d4 e864ec48ff		call	do_callback_fn_handler
aaf9d9 e141740100000000
------------------------------------------------------------------------
aaf9b8				bits 64
aaf9b8			stub_7f0d36aaf9b8_1:
aaf9b8 83c104			add	ecx,byte 4
aaf9bb 90			nop
aaf9bc			stub_7f0d36aaf9b8_0:
aaf9bc e87cec48ff		call	do_callback_fn_handler
aaf9c1 4142740100000000
------------------------------------------------------------------------
aaf9a0				bits 64
aaf9a0			stub_7f0d36aaf9a0_1:
aaf9a0 83c104			add	ecx,byte 4
aaf9a3 90			nop
aaf9a4			stub_7f0d36aaf9a0_0:
aaf9a4 e894ec48ff		call	do_callback_fn_handler
aaf9a9 a142740100000000
------------------------------------------------------------------------
aaf988				bits 64
aaf988			stub_7f0d36aaf988_1:
aaf988 83c104			add	ecx,byte 4
aaf98b 90			nop
aaf98c			stub_7f0d36aaf988_0:
aaf98c e8acec48ff		call	do_callback_fn_handler
aaf991 0143740100000000
------------------------------------------------------------------------
aaf970				bits 64
aaf970			stub_7f0d36aaf970_1:
aaf970 83c104			add	ecx,byte 4
aaf973 90			nop
aaf974			stub_7f0d36aaf970_0:
aaf974 e8c4ec48ff		call	do_callback_fn_handler
aaf979 6143740100000000
------------------------------------------------------------------------
aaf958				bits 64
aaf958			stub_7f0d36aaf958_1:
aaf958 83c104			add	ecx,byte 4
aaf95b 90			nop
aaf95c			stub_7f0d36aaf958_0:
aaf95c e8dcec48ff		call	do_callback_fn_handler
aaf961 0157740100000000
------------------------------------------------------------------------
aaf940				bits 64
aaf940			stub_7f0d36aaf940_1:
aaf940 83c104			add	ecx,byte 4
aaf943 90			nop
aaf944			stub_7f0d36aaf940_0:
aaf944 e8f4ec48ff		call	do_callback_fn_handler
aaf949 a16a740100000000
------------------------------------------------------------------------
aaf928				bits 64
aaf928			stub_7f0d36aaf928_1:
aaf928 83c104			add	ecx,byte 4
aaf92b 90			nop
aaf92c			stub_7f0d36aaf928_0:
aaf92c e80ced48ff		call	do_callback_fn_handler
aaf931 417e740100000000
------------------------------------------------------------------------
aaf910				bits 64
aaf910			stub_7f0d36aaf910_1:
aaf910 83c104			add	ecx,byte 4
aaf913 90			nop
aaf914			stub_7f0d36aaf910_0:
aaf914 e824ed48ff		call	do_callback_fn_handler
aaf919 e191740100000000
------------------------------------------------------------------------
aaf8f8				bits 64
aaf8f8			stub_7f0d36aaf8f8_1:
aaf8f8 83c104			add	ecx,byte 4
aaf8fb 90			nop
aaf8fc			stub_7f0d36aaf8f8_0:
aaf8fc e83ced48ff		call	do_callback_fn_handler
aaf901 81a5740100000000
------------------------------------------------------------------------
aaf8e0				bits 64
aaf8e0			stub_7f0d36aaf8e0_1:
aaf8e0 83c104			add	ecx,byte 4
aaf8e3 90			nop
aaf8e4			stub_7f0d36aaf8e0_0:
aaf8e4 e854ed48ff		call	do_callback_fn_handler
aaf8e9 21b9740100000000
------------------------------------------------------------------------
aaf8c8				bits 64
aaf8c8			stub_7f0d36aaf8c8_1:
aaf8c8 83c104			add	ecx,byte 4
aaf8cb 90			nop
aaf8cc			stub_7f0d36aaf8c8_0:
aaf8cc e86ced48ff		call	do_callback_fn_handler
aaf8d1 c1cc740100000000
------------------------------------------------------------------------
aaf8b0				bits 64
aaf8b0			stub_7f0d36aaf8b0_1:
aaf8b0 83c104			add	ecx,byte 4
aaf8b3 90			nop
aaf8b4			stub_7f0d36aaf8b0_0:
aaf8b4 e884ed48ff		call	do_callback_fn_handler
aaf8b9 414d750100000000
------------------------------------------------------------------------
aaf898				bits 64
aaf898			stub_7f0d36aaf898_1:
aaf898 83c104			add	ecx,byte 4
aaf89b 90			nop
aaf89c			stub_7f0d36aaf898_0:
aaf89c e89ced48ff		call	do_callback_fn_handler
aaf8a1 a14d750100000000
------------------------------------------------------------------------
aaf880				bits 64
aaf880			stub_7f0d36aaf880_1:
aaf880 83c104			add	ecx,byte 4
aaf883 90			nop
aaf884			stub_7f0d36aaf880_0:
aaf884 e8b4ed48ff		call	do_callback_fn_handler
aaf889 014e750100000000
------------------------------------------------------------------------
aaf868				bits 64
aaf868			stub_7f0d36aaf868_1:
aaf868 83c104			add	ecx,byte 4
aaf86b 90			nop
aaf86c			stub_7f0d36aaf868_0:
aaf86c e8cced48ff		call	do_callback_fn_handler
aaf871 614e750100000000
------------------------------------------------------------------------
aaf850				bits 64
aaf850			stub_7f0d36aaf850_1:
aaf850 83c104			add	ecx,byte 4
aaf853 90			nop
aaf854			stub_7f0d36aaf850_0:
aaf854 e8e4ed48ff		call	do_callback_fn_handler
aaf859 c14e750100000000
------------------------------------------------------------------------
aaf838				bits 64
aaf838			stub_7f0d36aaf838_1:
aaf838 83c104			add	ecx,byte 4
aaf83b 90			nop
aaf83c			stub_7f0d36aaf838_0:
aaf83c e8fced48ff		call	do_callback_fn_handler
aaf841 214f750100000000
------------------------------------------------------------------------
aaf820				bits 64
aaf820			stub_7f0d36aaf820_1:
aaf820 83c104			add	ecx,byte 4
aaf823 90			nop
aaf824			stub_7f0d36aaf820_0:
aaf824 e814ee48ff		call	do_callback_fn_handler
aaf829 c162750100000000
------------------------------------------------------------------------
aaf808				bits 64
aaf808			stub_7f0d36aaf808_1:
aaf808 83c104			add	ecx,byte 4
aaf80b 90			nop
aaf80c			stub_7f0d36aaf808_0:
aaf80c e82cee48ff		call	do_callback_fn_handler
aaf811 6176750100000000
------------------------------------------------------------------------
aaf7f0				bits 64
aaf7f0			stub_7f0d36aaf7f0_1:
aaf7f0 83c104			add	ecx,byte 4
aaf7f3 90			nop
aaf7f4			stub_7f0d36aaf7f0_0:
aaf7f4 e844ee48ff		call	do_callback_fn_handler
aaf7f9 018a750100000000
------------------------------------------------------------------------
aaf7d8				bits 64
aaf7d8			stub_7f0d36aaf7d8_1:
aaf7d8 83c104			add	ecx,byte 4
aaf7db 90			nop
aaf7dc			stub_7f0d36aaf7d8_0:
aaf7dc e85cee48ff		call	do_callback_fn_handler
aaf7e1 a19d750100000000
------------------------------------------------------------------------
aaf7c0				bits 64
aaf7c0			stub_7f0d36aaf7c0_1:
aaf7c0 83c104			add	ecx,byte 4
aaf7c3 90			nop
aaf7c4			stub_7f0d36aaf7c0_0:
aaf7c4 e874ee48ff		call	do_callback_fn_handler
aaf7c9 41b1750100000000
------------------------------------------------------------------------
aaf7a8				bits 64
aaf7a8			stub_7f0d36aaf7a8_1:
aaf7a8 83c104			add	ecx,byte 4
aaf7ab 90			nop
aaf7ac			stub_7f0d36aaf7a8_0:
aaf7ac e88cee48ff		call	do_callback_fn_handler
aaf7b1 e1c4750100000000
------------------------------------------------------------------------
aaf790				bits 64
aaf790			stub_7f0d36aaf790_1:
aaf790 83c104			add	ecx,byte 4
aaf793 90			nop
aaf794			stub_7f0d36aaf790_0:
aaf794 e8a4ee48ff		call	do_callback_fn_handler
aaf799 81d8750100000000
------------------------------------------------------------------------
aaf778				bits 64
aaf778			stub_7f0d36aaf778_1:
aaf778 83c104			add	ecx,byte 4
aaf77b 90			nop
aaf77c			stub_7f0d36aaf778_0:
aaf77c e8bcee48ff		call	do_callback_fn_handler
aaf781 0159760100000000
------------------------------------------------------------------------
aaf760				bits 64
aaf760			stub_7f0d36aaf760_1:
aaf760 83c104			add	ecx,byte 4
aaf763 90			nop
aaf764			stub_7f0d36aaf760_0:
aaf764 e8d4ee48ff		call	do_callback_fn_handler
aaf769 6159760100000000
------------------------------------------------------------------------
aaf748				bits 64
aaf748			stub_7f0d36aaf748_1:
aaf748 83c104			add	ecx,byte 4
aaf74b 90			nop
aaf74c			stub_7f0d36aaf748_0:
aaf74c e8ecee48ff		call	do_callback_fn_handler
aaf751 c159760100000000
------------------------------------------------------------------------
aaf730				bits 64
aaf730			stub_7f0d36aaf730_1:
aaf730 83c104			add	ecx,byte 4
aaf733 90			nop
aaf734			stub_7f0d36aaf730_0:
aaf734 e804ef48ff		call	do_callback_fn_handler
aaf739 215a760100000000
------------------------------------------------------------------------
aaf718				bits 64
aaf718			stub_7f0d36aaf718_1:
aaf718 83c104			add	ecx,byte 4
aaf71b 90			nop
aaf71c			stub_7f0d36aaf718_0:
aaf71c e81cef48ff		call	do_callback_fn_handler
aaf721 815a760100000000
------------------------------------------------------------------------
aaf700				bits 64
aaf700			stub_7f0d36aaf700_1:
aaf700 83c104			add	ecx,byte 4
aaf703 90			nop
aaf704			stub_7f0d36aaf700_0:
aaf704 e834ef48ff		call	do_callback_fn_handler
aaf709 e15a760100000000
------------------------------------------------------------------------
aaf6e8				bits 64
aaf6e8			stub_7f0d36aaf6e8_1:
aaf6e8 83c104			add	ecx,byte 4
aaf6eb 90			nop
aaf6ec			stub_7f0d36aaf6e8_0:
aaf6ec e84cef48ff		call	do_callback_fn_handler
aaf6f1 816e760100000000
------------------------------------------------------------------------
aaf6d0				bits 64
aaf6d0			stub_7f0d36aaf6d0_1:
aaf6d0 83c104			add	ecx,byte 4
aaf6d3 90			nop
aaf6d4			stub_7f0d36aaf6d0_0:
aaf6d4 e864ef48ff		call	do_callback_fn_handler
aaf6d9 2182760100000000
------------------------------------------------------------------------
aaf6b8				bits 64
aaf6b8			stub_7f0d36aaf6b8_1:
aaf6b8 83c104			add	ecx,byte 4
aaf6bb 90			nop
aaf6bc			stub_7f0d36aaf6b8_0:
aaf6bc e87cef48ff		call	do_callback_fn_handler
aaf6c1 c195760100000000
------------------------------------------------------------------------
aaf6a0				bits 64
aaf6a0			stub_7f0d36aaf6a0_1:
aaf6a0 83c104			add	ecx,byte 4
aaf6a3 90			nop
aaf6a4			stub_7f0d36aaf6a0_0:
aaf6a4 e894ef48ff		call	do_callback_fn_handler
aaf6a9 61a9760100000000
------------------------------------------------------------------------
aaf688				bits 64
aaf688			stub_7f0d36aaf688_1:
aaf688 83c104			add	ecx,byte 4
aaf68b 90			nop
aaf68c			stub_7f0d36aaf688_0:
aaf68c e8acef48ff		call	do_callback_fn_handler
aaf691 01bd760100000000
------------------------------------------------------------------------
aaf670				bits 64
aaf670			stub_7f0d36aaf670_1:
aaf670 83c104			add	ecx,byte 4
aaf673 90			nop
aaf674			stub_7f0d36aaf670_0:
aaf674 e8c4ef48ff		call	do_callback_fn_handler
aaf679 a1d0760100000000
------------------------------------------------------------------------
aaf658				bits 64
aaf658			stub_7f0d36aaf658_1:
aaf658 83c104			add	ecx,byte 4
aaf65b 90			nop
aaf65c			stub_7f0d36aaf658_0:
aaf65c e8dcef48ff		call	do_callback_fn_handler
aaf661 41e4760100000000
------------------------------------------------------------------------
aaf640				bits 64
aaf640			stub_7f0d36aaf640_1:
aaf640 83c104			add	ecx,byte 4
aaf643 90			nop
aaf644			stub_7f0d36aaf640_0:
aaf644 e8f4ef48ff		call	do_callback_fn_handler
aaf649 c164770100000000
------------------------------------------------------------------------
aaf628				bits 64
aaf628			stub_7f0d36aaf628_1:
aaf628 83c104			add	ecx,byte 4
aaf62b 90			nop
aaf62c			stub_7f0d36aaf628_0:
aaf62c e80cf048ff		call	do_callback_fn_handler
aaf631 2165770100000000
------------------------------------------------------------------------
aaf610				bits 64
aaf610			stub_7f0d36aaf610_1:
aaf610 83c104			add	ecx,byte 4
aaf613 90			nop
aaf614			stub_7f0d36aaf610_0:
aaf614 e824f048ff		call	do_callback_fn_handler
aaf619 8165770100000000
------------------------------------------------------------------------
aaf5f8				bits 64
aaf5f8			stub_7f0d36aaf5f8_1:
aaf5f8 83c104			add	ecx,byte 4
aaf5fb 90			nop
aaf5fc			stub_7f0d36aaf5f8_0:
aaf5fc e83cf048ff		call	do_callback_fn_handler
aaf601 e165770100000000
------------------------------------------------------------------------
aaf5e0				bits 64
aaf5e0			stub_7f0d36aaf5e0_1:
aaf5e0 83c104			add	ecx,byte 4
aaf5e3 90			nop
aaf5e4			stub_7f0d36aaf5e0_0:
aaf5e4 e854f048ff		call	do_callback_fn_handler
aaf5e9 4166770100000000
------------------------------------------------------------------------
aaf5c8				bits 64
aaf5c8			stub_7f0d36aaf5c8_1:
aaf5c8 83c104			add	ecx,byte 4
aaf5cb 90			nop
aaf5cc			stub_7f0d36aaf5c8_0:
aaf5cc e86cf048ff		call	do_callback_fn_handler
aaf5d1 a166770100000000
------------------------------------------------------------------------
aaf5b0				bits 64
aaf5b0			stub_7f0d36aaf5b0_1:
aaf5b0 83c104			add	ecx,byte 4
aaf5b3 90			nop
aaf5b4			stub_7f0d36aaf5b0_0:
aaf5b4 e884f048ff		call	do_callback_fn_handler
aaf5b9 417a770100000000
------------------------------------------------------------------------
aaf598				bits 64
aaf598			stub_7f0d36aaf598_1:
aaf598 83c104			add	ecx,byte 4
aaf59b 90			nop
aaf59c			stub_7f0d36aaf598_0:
aaf59c e89cf048ff		call	do_callback_fn_handler
aaf5a1 e18d770100000000
------------------------------------------------------------------------
aaf580				bits 64
aaf580			stub_7f0d36aaf580_1:
aaf580 83c104			add	ecx,byte 4
aaf583 90			nop
aaf584			stub_7f0d36aaf580_0:
aaf584 e8b4f048ff		call	do_callback_fn_handler
aaf589 81a1770100000000
------------------------------------------------------------------------
aaf568				bits 64
aaf568			stub_7f0d36aaf568_1:
aaf568 83c104			add	ecx,byte 4
aaf56b 90			nop
aaf56c			stub_7f0d36aaf568_0:
aaf56c e8ccf048ff		call	do_callback_fn_handler
aaf571 21b5770100000000
------------------------------------------------------------------------
aaf550				bits 64
aaf550			stub_7f0d36aaf550_1:
aaf550 83c104			add	ecx,byte 4
aaf553 90			nop
aaf554			stub_7f0d36aaf550_0:
aaf554 e8e4f048ff		call	do_callback_fn_handler
aaf559 c1c8770100000000
------------------------------------------------------------------------
aaf538				bits 64
aaf538			stub_7f0d36aaf538_1:
aaf538 83c104			add	ecx,byte 4
aaf53b 90			nop
aaf53c			stub_7f0d36aaf538_0:
aaf53c e8fcf048ff		call	do_callback_fn_handler
aaf541 61dc770100000000
------------------------------------------------------------------------
aaf520				bits 64
aaf520			stub_7f0d36aaf520_1:
aaf520 83c104			add	ecx,byte 4
aaf523 90			nop
aaf524			stub_7f0d36aaf520_0:
aaf524 e814f148ff		call	do_callback_fn_handler
aaf529 01f0770100000000
------------------------------------------------------------------------
aaf508				bits 64
aaf508			stub_7f0d36aaf508_1:
aaf508 83c104			add	ecx,byte 4
aaf50b 90			nop
aaf50c			stub_7f0d36aaf508_0:
aaf50c e82cf148ff		call	do_callback_fn_handler
aaf511 8170780100000000
------------------------------------------------------------------------
aaf4f0				bits 64
aaf4f0			stub_7f0d36aaf4f0_1:
aaf4f0 83c104			add	ecx,byte 4
aaf4f3 90			nop
aaf4f4			stub_7f0d36aaf4f0_0:
aaf4f4 e844f148ff		call	do_callback_fn_handler
aaf4f9 e170780100000000
------------------------------------------------------------------------
aaf4d8				bits 64
aaf4d8			stub_7f0d36aaf4d8_1:
aaf4d8 83c104			add	ecx,byte 4
aaf4db 90			nop
aaf4dc			stub_7f0d36aaf4d8_0:
aaf4dc e85cf148ff		call	do_callback_fn_handler
aaf4e1 4171780100000000
------------------------------------------------------------------------
aaf4c0				bits 64
aaf4c0			stub_7f0d36aaf4c0_1:
aaf4c0 83c104			add	ecx,byte 4
aaf4c3 90			nop
aaf4c4			stub_7f0d36aaf4c0_0:
aaf4c4 e874f148ff		call	do_callback_fn_handler
aaf4c9 a171780100000000
------------------------------------------------------------------------
aaf4a8				bits 64
aaf4a8			stub_7f0d36aaf4a8_1:
aaf4a8 83c104			add	ecx,byte 4
aaf4ab 90			nop
aaf4ac			stub_7f0d36aaf4a8_0:
aaf4ac e88cf148ff		call	do_callback_fn_handler
aaf4b1 0172780100000000
------------------------------------------------------------------------
aaf490				bits 64
aaf490			stub_7f0d36aaf490_1:
aaf490 83c104			add	ecx,byte 4
aaf493 90			nop
aaf494			stub_7f0d36aaf490_0:
aaf494 e8a4f148ff		call	do_callback_fn_handler
aaf499 6172780100000000
------------------------------------------------------------------------
aaf478				bits 64
aaf478			stub_7f0d36aaf478_1:
aaf478 83c104			add	ecx,byte 4
aaf47b 90			nop
aaf47c			stub_7f0d36aaf478_0:
aaf47c e8bcf148ff		call	do_callback_fn_handler
aaf481 0186780100000000
------------------------------------------------------------------------
aaf460				bits 64
aaf460			stub_7f0d36aaf460_1:
aaf460 83c104			add	ecx,byte 4
aaf463 90			nop
aaf464			stub_7f0d36aaf460_0:
aaf464 e8d4f148ff		call	do_callback_fn_handler
aaf469 a199780100000000
------------------------------------------------------------------------
aaf448				bits 64
aaf448			stub_7f0d36aaf448_1:
aaf448 83c104			add	ecx,byte 4
aaf44b 90			nop
aaf44c			stub_7f0d36aaf448_0:
aaf44c e8ecf148ff		call	do_callback_fn_handler
aaf451 41ad780100000000
------------------------------------------------------------------------
aaf430				bits 64
aaf430			stub_7f0d36aaf430_1:
aaf430 83c104			add	ecx,byte 4
aaf433 90			nop
aaf434			stub_7f0d36aaf430_0:
aaf434 e804f248ff		call	do_callback_fn_handler
aaf439 e1c0780100000000
------------------------------------------------------------------------
aaf418				bits 64
aaf418			stub_7f0d36aaf418_1:
aaf418 83c104			add	ecx,byte 4
aaf41b 90			nop
aaf41c			stub_7f0d36aaf418_0:
aaf41c e81cf248ff		call	do_callback_fn_handler
aaf421 81d4780100000000
------------------------------------------------------------------------
aaf400				bits 64
aaf400			stub_7f0d36aaf400_1:
aaf400 83c104			add	ecx,byte 4
aaf403 90			nop
aaf404			stub_7f0d36aaf400_0:
aaf404 e834f248ff		call	do_callback_fn_handler
aaf409 21e8780100000000
------------------------------------------------------------------------
aaf3e8				bits 64
aaf3e8			stub_7f0d36aaf3e8_1:
aaf3e8 83c104			add	ecx,byte 4
aaf3eb 90			nop
aaf3ec			stub_7f0d36aaf3e8_0:
aaf3ec e84cf248ff		call	do_callback_fn_handler
aaf3f1 c1fb780100000000
------------------------------------------------------------------------
aaf3d0				bits 64
aaf3d0			stub_7f0d36aaf3d0_1:
aaf3d0 83c104			add	ecx,byte 4
aaf3d3 90			nop
aaf3d4			stub_7f0d36aaf3d0_0:
aaf3d4 e864f248ff		call	do_callback_fn_handler
aaf3d9 417c790100000000
------------------------------------------------------------------------
aaf3b8				bits 64
aaf3b8			stub_7f0d36aaf3b8_1:
aaf3b8 83c104			add	ecx,byte 4
aaf3bb 90			nop
aaf3bc			stub_7f0d36aaf3b8_0:
aaf3bc e87cf248ff		call	do_callback_fn_handler
aaf3c1 a17c790100000000
------------------------------------------------------------------------
aaf3a0				bits 64
aaf3a0			stub_7f0d36aaf3a0_1:
aaf3a0 83c104			add	ecx,byte 4
aaf3a3 90			nop
aaf3a4			stub_7f0d36aaf3a0_0:
aaf3a4 e894f248ff		call	do_callback_fn_handler
aaf3a9 017d790100000000
------------------------------------------------------------------------
aaf388				bits 64
aaf388			stub_7f0d36aaf388_1:
aaf388 83c104			add	ecx,byte 4
aaf38b 90			nop
aaf38c			stub_7f0d36aaf388_0:
aaf38c e8acf248ff		call	do_callback_fn_handler
aaf391 617d790100000000
------------------------------------------------------------------------
aaf370				bits 64
aaf370			stub_7f0d36aaf370_1:
aaf370 83c104			add	ecx,byte 4
aaf373 90			nop
aaf374			stub_7f0d36aaf370_0:
aaf374 e8c4f248ff		call	do_callback_fn_handler
aaf379 c17d790100000000
------------------------------------------------------------------------
aaf358				bits 64
aaf358			stub_7f0d36aaf358_1:
aaf358 83c104			add	ecx,byte 4
aaf35b 90			nop
aaf35c			stub_7f0d36aaf358_0:
aaf35c e8dcf248ff		call	do_callback_fn_handler
aaf361 217e790100000000
------------------------------------------------------------------------
aaf340				bits 64
aaf340			stub_7f0d36aaf340_1:
aaf340 83c104			add	ecx,byte 4
aaf343 90			nop
aaf344			stub_7f0d36aaf340_0:
aaf344 e8f4f248ff		call	do_callback_fn_handler
aaf349 c191790100000000
------------------------------------------------------------------------
aaf328				bits 64
aaf328			stub_7f0d36aaf328_1:
aaf328 83c104			add	ecx,byte 4
aaf32b 90			nop
aaf32c			stub_7f0d36aaf328_0:
aaf32c e80cf348ff		call	do_callback_fn_handler
aaf331 61a5790100000000
------------------------------------------------------------------------
aaf310				bits 64
aaf310			stub_7f0d36aaf310_1:
aaf310 83c104			add	ecx,byte 4
aaf313 90			nop
aaf314			stub_7f0d36aaf310_0:
aaf314 e824f348ff		call	do_callback_fn_handler
aaf319 01b9790100000000
------------------------------------------------------------------------
aaf2f8				bits 64
aaf2f8			stub_7f0d36aaf2f8_1:
aaf2f8 83c104			add	ecx,byte 4
aaf2fb 90			nop
aaf2fc			stub_7f0d36aaf2f8_0:
aaf2fc e83cf348ff		call	do_callback_fn_handler
aaf301 a1cc790100000000
------------------------------------------------------------------------
aaf2e0				bits 64
aaf2e0			stub_7f0d36aaf2e0_1:
aaf2e0 83c104			add	ecx,byte 4
aaf2e3 90			nop
aaf2e4			stub_7f0d36aaf2e0_0:
aaf2e4 e854f348ff		call	do_callback_fn_handler
aaf2e9 41e0790100000000
------------------------------------------------------------------------
aaf2c8				bits 64
aaf2c8			stub_7f0d36aaf2c8_1:
aaf2c8 83c104			add	ecx,byte 4
aaf2cb 90			nop
aaf2cc			stub_7f0d36aaf2c8_0:
aaf2cc e86cf348ff		call	do_callback_fn_handler
aaf2d1 e1f3790100000000
------------------------------------------------------------------------
aaf2b0				bits 64
aaf2b0			stub_7f0d36aaf2b0_1:
aaf2b0 83c104			add	ecx,byte 4
aaf2b3 90			nop
aaf2b4			stub_7f0d36aaf2b0_0:
aaf2b4 e884f348ff		call	do_callback_fn_handler
aaf2b9 81077a0100000000
------------------------------------------------------------------------
aaf298				bits 64
aaf298			stub_7f0d36aaf298_1:
aaf298 83c104			add	ecx,byte 4
aaf29b 90			nop
aaf29c			stub_7f0d36aaf298_0:
aaf29c e89cf348ff		call	do_callback_fn_handler
aaf2a1 01887a0100000000
------------------------------------------------------------------------
aaf280				bits 64
aaf280			stub_7f0d36aaf280_1:
aaf280 83c104			add	ecx,byte 4
aaf283 90			nop
aaf284			stub_7f0d36aaf280_0:
aaf284 e83bf548ff		call	do_callback_cont_handler
aaf289 e1f9690100000000
GEN FN INLINED VERSION >>> #<lazy-code #2
                              ast: #f
                              generator: #<procedure #3>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #4
      stack: ((intc 8) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #5
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 4>
------------------------------------------------------------------------
aaf268				bits 64
aaf268			stub_7f0d36aaf268_1:
aaf268 83c104			add	ecx,byte 4
aaf26b 90			nop
aaf26c			stub_7f0d36aaf268_0:
aaf26c e8ccf348ff		call	do_callback_fn_handler
aaf271 c1507b0100000000
GEN FN INLINED VERSION >>> #<lazy-code #6
                              ast: #f
                              generator: #<procedure #7>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #8
      stack: ((nulc ()) (intc 8) (cloc 90) (clo) (ret))
      slot-loc: ((4 . #f) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((do-temp.130
             .
             #<identifier #9
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (n1 . #<identifier #10
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (a0 . #<identifier #11
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 90>
GEN FN INLINED VERSION >>> #<lazy-code #6
                              ast: #f
                              generator: #<procedure #7>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #12
      stack: ((pai) (intc 5) (cloc 90) (clo) (ret))
      slot-loc: ((4 r . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((do-temp.130
             .
             #<identifier #13
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (n1 . #<identifier #14
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (a0 . #<identifier #15
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 90>
GEN FN INLINED VERSION >>> #<lazy-code #6
                              ast: #f
                              generator: #<procedure #7>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #16
      stack: ((pai) (intc 2) (cloc 90) (clo) (ret))
      slot-loc: ((4 r . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((do-temp.130
             .
             #<identifier #17
                kind: local
                sslots: (2)
                flags: ()
                stype: #f
                cloc: #f
                cst: #t
                thisid: #f>)
            (n1 . #<identifier #18
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (a0 . #<identifier #19
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 90>
------------------------------------------------------------------------
f3f087				bits 64
f3f087 90		version_1:
f3f088			version_2:
f3f088			version_3:
f3f088			version_4:
f3f088			version_5:
f3f088			version_6:
f3f088			version_7:
f3f088			version_8:
f3f088			version_9:
f3f088			version_10:
f3f088			version_11:
f3f088			version_12:
f3f088			version_13:
f3f088			version_14:
f3f088			version_15:
f3f088			version_16:
f3f088			version_17:
f3f088			version_18:
f3f088			version_19:
f3f088			version_20:
f3f088			version_21:
f3f088			version_22:
f3f088			version_23:
f3f088			version_24:
f3f088			version_25:
f3f088			version_26:
f3f088			version_27:
f3f088			version_28:
f3f088			version_29:
f3f088			version_30:
f3f088			version_31:
f3f088			version_32:
f3f088			version_33:
f3f088			version_34:
f3f088			version_35:
f3f088			version_36:
f3f088			version_37:
f3f088			version_38:
f3f088			version_39:
f3f088			version_40:
f3f088			version_41:
f3f088			version_42:
f3f088			version_43:
f3f088			version_44:
f3f088			version_45:
f3f088			version_46:
f3f088			version_47:
f3f088			version_48:
f3f088			version_49:
f3f088			version_50:
f3f088			version_51:
f3f088			version_52:
f3f088			version_53:
f3f088			version_54:
f3f088			version_55:
f3f088			version_56:
f3f088			version_57:
f3f088			version_58:
f3f088			version_59:
f3f088			version_60:
f3f088			version_61:
f3f088			version_62:
f3f088			version_63:
f3f088			version_64:
f3f088			version_65:
f3f088			version_66:
f3f088			version_67:
f3f088			version_68:
f3f088			version_69:
f3f088			version_70:
f3f088			version_71:
f3f088			version_72:
f3f088			version_73:
f3f088			version_74:
f3f088			version_75:
f3f088			version_76:
f3f088			version_77:
f3f088			version_78:
f3f088			version_79:
f3f088			version_80:
f3f088			version_81:
f3f088			version_82:
f3f088			version_83:
f3f088			version_84:
f3f088			version_85:
f3f088			version_86:
f3f088			version_87:
f3f088			version_88:
f3f088			version_89:
f3f088			version_90:
f3f088			version_91:
f3f088			version_92:
f3f088			version_93:
f3f088			version_94:
f3f088			version_95:
f3f088			version_96:
f3f088			version_97:
f3f088			version_98:
f3f088			version_99:
f3f088			version_100:
f3f088			version_101:
f3f088			version_102:
f3f088			version_103:
f3f088			version_104:
f3f088			version_105:
f3f088			version_106:
f3f088			version_107:
f3f088			version_108:
f3f088			version_109:
f3f088			version_110:
f3f088			version_111:
f3f088			version_112:
f3f088			version_113:
f3f088			version_114:
f3f088			version_115:
f3f088			version_116:
f3f088			version_117:
f3f088			version_118:
f3f088			version_119:
f3f088			version_120:
f3f088			version_121:
f3f088			version_122:
f3f088			version_123:
f3f088			version_124:
f3f088			version_125:
f3f088			version_126:
f3f088			version_127:
f3f088			version_128:
f3f088			version_129:
f3f088			version_130:
f3f088			version_131:
f3f088			version_132:
f3f088			version_133:
f3f088			version_134:
f3f088			version_135:
f3f088			version_136:
f3f088			version_137:
f3f088			version_138:
f3f088			version_139:
f3f088			version_140:
f3f088			version_141:
f3f088			version_142:
f3f088			version_143:
f3f088			version_144:
f3f088			version_145:
f3f088			version_146:
f3f088			version_147:
f3f088			version_148:
f3f088			version_149:
f3f088			version_150:
f3f088			version_151:
f3f088			version_152:
f3f088			version_153:
f3f088			version_154:
f3f088			version_155:
f3f088			version_156:
f3f088			version_157:
f3f088			version_158:
f3f088			version_159:
f3f088			version_160:
f3f088			version_161:
f3f088			version_162:
f3f088			version_163:
f3f088			version_164:
f3f088			version_165:
f3f088			version_166:
f3f088			version_167:
f3f088			version_168:
f3f088			version_169:
f3f088			version_170:
f3f088			version_171:
f3f088			version_172:
f3f088			version_173:
f3f088			version_174:
f3f088			version_175:
f3f088 4883ed08			sub	rbp,byte 8
f3f08c 48c7c0685b7a01		mov	rax,dword 24796008
f3f093 48894500			mov	[rbp],rax
f3f097			inlined_call_1:
f3f097			version_176:
f3f097			version_177:
f3f097			version_178:
f3f097			version_179:
f3f097			version_180:
f3f097			version_181:
f3f097			inlined_call_2:
f3f097			version_182:
f3f097			version_183:
f3f097			version_184:
f3f097			version_185:
f3f097			version_186:
f3f097			version_187:
f3f097			version_188:
f3f097			version_189:
f3f097			version_190:
f3f097			version_191:
f3f097			version_192:
f3f097			version_193:
f3f097			version_194:
f3f097			alloc_begin_1:
f3f097 4983c118			add	r9,byte 24
f3f09b 48b830301e5d0d7f
f3f0a3 0000			mov	rax,139695373561904
f3f0a5 4c3b08			cmp	r9,[rax]
f3f0a8 7e09			jle	short alloc_end_1
f3f0aa e85eefffff		call	heap_limit_handler
f3f0af 4983c118			add	r9,byte 24
f3f0b3			alloc_end_1:
f3f0b3 49c741e808100000		mov	qword [r9-24],dword 4104
f3f0bb 48c7c0f6ffffff		mov	rax,dword -10
f3f0c2 498941f8			mov	[r9-8],rax
f3f0c6 49c741f0f6ffffff		mov	qword [r9-16],dword -10
f3f0ce 498d59eb			lea	rbx,[r9-21]
f3f0d2			version_195:
f3f0d2			version_196:
f3f0d2			version_197:
f3f0d2			version_198:
f3f0d2			version_199:
f3f0d2			version_200:
f3f0d2			version_201:
f3f0d2			version_202:
f3f0d2			version_203:
f3f0d2			version_204:
f3f0d2			version_205:
f3f0d2			version_206:
f3f0d2			version_207:
f3f0d2			version_208:
f3f0d2			version_209:
f3f0d2			version_210:
f3f0d2			version_211:
f3f0d2			version_212:
f3f0d2			version_213:
f3f0d2			version_214:
f3f0d2			version_215:
f3f0d2			version_216:
f3f0d2 4989df			mov	r15,rbx
f3f0d5			version_217:
f3f0d5			version_218:
f3f0d5			version_219:
f3f0d5			version_220:
f3f0d5			alloc_begin_2:
f3f0d5 4983c118			add	r9,byte 24
f3f0d9 48b830301e5d0d7f
f3f0e1 0000			mov	rax,139695373561904
f3f0e3 4c3b08			cmp	r9,[rax]
f3f0e6 7e09			jle	short alloc_end_2
f3f0e8 e820efffff		call	heap_limit_handler
f3f0ed 4983c118			add	r9,byte 24
f3f0f1			alloc_end_2:
f3f0f1 49c741e808100000		mov	qword [r9-24],dword 4104
f3f0f9 48c7c0f6ffffff		mov	rax,dword -10
f3f100 498941f8			mov	[r9-8],rax
f3f104 4d8979f0			mov	[r9-16],r15
f3f108 4d8d79eb			lea	r15,[r9-21]
f3f10c			version_221:
f3f10c			version_222:
f3f10c			version_223:
f3f10c			version_224:
f3f10c			version_225:
f3f10c			version_226:
f3f10c			version_227:
f3f10c			version_228:
f3f10c			version_229:
f3f10c			version_230:
f3f10c			version_231:
f3f10c			version_232:
f3f10c			version_233:
f3f10c			version_234:
f3f10c			version_235:
f3f10c			version_236:
f3f10c 4c89fe			mov	rsi,r15
f3f10f			version_237:
f3f10f			version_238:
f3f10f			version_239:
f3f10f			version_240:
f3f10f			alloc_begin_3:
f3f10f 4983c118			add	r9,byte 24
f3f113 48b830301e5d0d7f
f3f11b 0000			mov	rax,139695373561904
f3f11d 4c3b08			cmp	r9,[rax]
f3f120 7e09			jle	short alloc_end_3
f3f122 e8e6eeffff		call	heap_limit_handler
f3f127 4983c118			add	r9,byte 24
f3f12b			alloc_end_3:
f3f12b 49c741e808100000		mov	qword [r9-24],dword 4104
f3f133 48c7c0f6ffffff		mov	rax,dword -10
f3f13a 498941f8			mov	[r9-8],rax
f3f13e 498971f0			mov	[r9-16],rsi
f3f142 498d71eb			lea	rsi,[r9-21]
f3f146			version_241:
f3f146 4889f3			mov	rbx,rsi
f3f149			inlined_call_3:
f3f149			version_242:
f3f149			version_243:
f3f149			version_244:
f3f149			version_245:
f3f149			version_246:
f3f149			version_247:
f3f149			version_248:
f3f149			version_249:
f3f149			version_250:
f3f149 4989df			mov	r15,rbx
f3f14c			version_251:
f3f14c			version_252:
f3f14c			version_253:
f3f14c			version_254:
f3f14c			alloc_begin_4:
f3f14c 4983c118			add	r9,byte 24
f3f150 48b830301e5d0d7f
f3f158 0000			mov	rax,139695373561904
f3f15a 4c3b08			cmp	r9,[rax]
f3f15d 7e09			jle	short alloc_end_4
f3f15f e8a9eeffff		call	heap_limit_handler
f3f164 4983c118			add	r9,byte 24
f3f168			alloc_end_4:
f3f168 49c741e808100000		mov	qword [r9-24],dword 4104
f3f170 48c7c0f6ffffff		mov	rax,dword -10
f3f177 498941f8			mov	[r9-8],rax
f3f17b 4d8979f0			mov	[r9-16],r15
f3f17f 4d8d79eb			lea	r15,[r9-21]
f3f183			version_255:
f3f183			version_256:
f3f183			version_257:
f3f183			version_258:
f3f183			version_259:
f3f183			version_260:
f3f183			version_261:
f3f183			version_262:
f3f183			version_263:
f3f183			version_264:
f3f183			version_265:
f3f183			version_266:
f3f183			version_267:
f3f183			version_268:
f3f183			version_269:
f3f183			version_270:
f3f183			version_271:
f3f183			version_272:
f3f183			version_273:
f3f183			version_274:
f3f183			version_275:
f3f183			version_276:
f3f183 4c89fe			mov	rsi,r15
f3f186			version_277:
f3f186			version_278:
f3f186			version_279:
f3f186			version_280:
f3f186			alloc_begin_5:
f3f186 4983c118			add	r9,byte 24
f3f18a 48b830301e5d0d7f
f3f192 0000			mov	rax,139695373561904
f3f194 4c3b08			cmp	r9,[rax]
f3f197 7e09			jle	short alloc_end_5
f3f199 e86feeffff		call	heap_limit_handler
f3f19e 4983c118			add	r9,byte 24
f3f1a2			alloc_end_5:
f3f1a2 49c741e808100000		mov	qword [r9-24],dword 4104
f3f1aa 48c7c0f6ffffff		mov	rax,dword -10
f3f1b1 498941f8			mov	[r9-8],rax
f3f1b5 498971f0			mov	[r9-16],rsi
f3f1b9 498d71eb			lea	rsi,[r9-21]
f3f1bd			version_281:
f3f1bd			version_282:
f3f1bd			version_283:
f3f1bd			version_284:
f3f1bd			version_285:
f3f1bd			version_286:
f3f1bd			version_287:
f3f1bd			version_288:
f3f1bd			version_289:
f3f1bd			version_290:
f3f1bd			version_291:
f3f1bd			version_292:
f3f1bd			version_293:
f3f1bd			version_294:
f3f1bd			version_295:
f3f1bd			version_296:
f3f1bd 4889f7			mov	rdi,rsi
f3f1c0			version_297:
f3f1c0			version_298:
f3f1c0			version_299:
f3f1c0			version_300:
f3f1c0			alloc_begin_6:
f3f1c0 4983c118			add	r9,byte 24
f3f1c4 48b830301e5d0d7f
f3f1cc 0000			mov	rax,139695373561904
f3f1ce 4c3b08			cmp	r9,[rax]
f3f1d1 7e09			jle	short alloc_end_6
f3f1d3 e835eeffff		call	heap_limit_handler
f3f1d8 4983c118			add	r9,byte 24
f3f1dc			alloc_end_6:
f3f1dc 49c741e808100000		mov	qword [r9-24],dword 4104
f3f1e4 48c7c0f6ffffff		mov	rax,dword -10
f3f1eb 498941f8			mov	[r9-8],rax
f3f1ef 498979f0			mov	[r9-16],rdi
f3f1f3 498d79eb			lea	rdi,[r9-21]
f3f1f7			version_301:
f3f1f7 4889fb			mov	rbx,rdi
f3f1fa			inlined_call_4:
f3f1fa			version_302:
f3f1fa			version_303:
f3f1fa			version_304:
f3f1fa			version_305:
f3f1fa			version_306:
f3f1fa			version_307:
f3f1fa			version_308:
f3f1fa			version_309:
f3f1fa			version_310:
f3f1fa 4989df			mov	r15,rbx
f3f1fd			version_311:
f3f1fd			version_312:
f3f1fd			version_313:
f3f1fd			version_314:
f3f1fd			alloc_begin_7:
f3f1fd 4983c118			add	r9,byte 24
f3f201 48b830301e5d0d7f
f3f209 0000			mov	rax,139695373561904
f3f20b 4c3b08			cmp	r9,[rax]
f3f20e 7e09			jle	short alloc_end_7
f3f210 e8f8edffff		call	heap_limit_handler
f3f215 4983c118			add	r9,byte 24
f3f219			alloc_end_7:
f3f219 49c741e808100000		mov	qword [r9-24],dword 4104
f3f221 48c7c0f6ffffff		mov	rax,dword -10
f3f228 498941f8			mov	[r9-8],rax
f3f22c 4d8979f0			mov	[r9-16],r15
f3f230 4d8d79eb			lea	r15,[r9-21]
f3f234			version_315:
f3f234			version_316:
f3f234			version_317:
f3f234			version_318:
f3f234			version_319:
f3f234			version_320:
f3f234			version_321:
f3f234			version_322:
f3f234			version_323:
f3f234			version_324:
f3f234			version_325:
f3f234			version_326:
f3f234			version_327:
f3f234			version_328:
f3f234			version_329:
f3f234			version_330:
f3f234			version_331:
f3f234			version_332:
f3f234			version_333:
f3f234			version_334:
f3f234			version_335:
f3f234			version_336:
f3f234 4c89fe			mov	rsi,r15
f3f237			version_337:
f3f237			version_338:
f3f237			version_339:
f3f237			version_340:
f3f237			alloc_begin_8:
f3f237 4983c118			add	r9,byte 24
f3f23b 48b830301e5d0d7f
f3f243 0000			mov	rax,139695373561904
f3f245 4c3b08			cmp	r9,[rax]
f3f248 7e09			jle	short alloc_end_8
f3f24a e8beedffff		call	heap_limit_handler
f3f24f 4983c118			add	r9,byte 24
f3f253			alloc_end_8:
f3f253 49c741e808100000		mov	qword [r9-24],dword 4104
f3f25b 48c7c0f6ffffff		mov	rax,dword -10
f3f262 498941f8			mov	[r9-8],rax
f3f266 498971f0			mov	[r9-16],rsi
f3f26a 498d71eb			lea	rsi,[r9-21]
f3f26e			version_341:
f3f26e			version_342:
f3f26e			version_343:
f3f26e			version_344:
f3f26e			version_345:
f3f26e			version_346:
f3f26e			version_347:
f3f26e			version_348:
f3f26e 4989f6			mov	r14,rsi
f3f271			version_349:
f3f271 488b5500			mov	rdx,[rbp]
f3f275 4883c508			add	rbp,byte 8
f3f279 488b4210			mov	rax,[rdx+16]
f3f27d 49c7c300000000		mov	r11,dword 0
f3f284 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #20
      stack: ((pai))
      slot-loc: ((0 r . 8))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
aaf250				bits 64
aaf250			stub_7f0d36aaf250_1:
aaf250 83c104			add	ecx,byte 4
aaf253 90			nop
aaf254			stub_7f0d36aaf250_0:
aaf254 e86bf548ff		call	do_callback_cont_handler
aaf259 11057c0100000000
------------------------------------------------------------------------
f3f286				bits 64
f3f286 9090		continuation_1:
f3f288			version_350:
f3f288 4d89b0b0020000		mov	[r8+688],r14
f3f28f 49c7c6eeffffff		mov	r14,dword -18
f3f296			version_351:
f3f296			version_352:
f3f296			version_353:
f3f296			version_354:
f3f296			version_355:
f3f296			version_356:
f3f296			version_357:
f3f296			version_358:
f3f296			version_359:
f3f296			version_360:
f3f296			version_361:
f3f296			version_362:
f3f296 4883ed08			sub	rbp,byte 8
f3f29a 48c7c050947b01		mov	rax,dword 24876112
f3f2a1 48894500			mov	[rbp],rax
f3f2a5 49c7c300000000		mov	r11,dword 0
f3f2ac 48c7c700000000		mov	rdi,dword 0
f3f2b3			stub_load_1:
f3f2b3 e90c08b700		jmp	dest_7f0d36aafac4_1
GEN VERSION FN#<lazy-code #21
                 ast: #f
                 generator: #<procedure #22>
                 flags: (rest entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #23
           stack: ((clo) (ret))
           slot-loc: ((1 . #f) (0 m . 0))
           free-regs:
            ((r . 0)
             (r . 1)
             (r . 2)
             (r . 3)
             (r . 4)
             (r . 5)
             (r . 6)
             (r . 7)
             (r . 8)
             (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((args0 . #<identifier #24
                             kind: local
                             sslots: (2)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 0
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 2>
------------------------------------------------------------------------
aaf238				bits 64
aaf238			stub_7f0d36aaf238_1:
aaf238 83c104			add	ecx,byte 4
aaf23b 90			nop
aaf23c			stub_7f0d36aaf238_0:
aaf23c e875f248ff		call	do_callback_handler
aaf241 b1057c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f2b8				bits 64
f3f2b8			fn_entry_1:
f3f2b8			version_363:
f3f2b8			version_364:
f3f2b8 498b98b0020000		mov	rbx,[r8+688]
f3f2bf			version_365:
f3f2bf 48c7c0f6ffffff		mov	rax,dword -10
f3f2c6 4839d8			cmp	rax,rbx
f3f2c9			patchable_jump1:
f3f2c9 0f846dffb600		je	stub_7f0d36aaf238_0
f3f2cf e964ffb600		jmp	stub_7f0d36aaf238_1
Patch direct stub jump at 7f0d35f3f2b3
  > now jump to 7f0d35f3f2b8
------------------------------------------------------------------------
f3f2b3				bits 64
f3f2b3 eb03			jmp	short fn_entry_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #25
                   ast: #f
                   generator: #<procedure #26>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #27
      stack: ((unk) (nulc ()) (clo) (ret))
      slot-loc: ((3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((args0 . #<identifier #24
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf220				bits 64
aaf220			stub_7f0d36aaf220_1:
aaf220 83c104			add	ecx,byte 4
aaf223 90			nop
aaf224			stub_7f0d36aaf220_0:
aaf224 e88df248ff		call	do_callback_handler
aaf229 51067c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f2cf				bits 64
f3f2cf 90		version_366:
f3f2d0			version_367:
f3f2d0 498b98b0020000		mov	rbx,[r8+688]
f3f2d7			version_368:
f3f2d7 48c7c003000000		mov	rax,dword 3
f3f2de 4821d8			and	rax,rbx
f3f2e1 4883f803			cmp	rax,byte 3
f3f2e5			patchable_jump2:
f3f2e5 0f8439ffb600		je	stub_7f0d36aaf220_0
f3f2eb e930ffb600		jmp	stub_7f0d36aaf220_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f2e5 -> 7f0d36aaf220
GEN VERSION >>> #<lazy-code #28
                   ast: #f
                   generator: #<procedure #29>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #30
      stack: ((pai) (nulc ()) (clo) (ret))
      slot-loc: ((3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((args0 . #<identifier #24
                        kind: local
                        sslots: (2)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf208				bits 64
aaf208			stub_7f0d36aaf208_1:
aaf208 83c104			add	ecx,byte 4
aaf20b 90			nop
aaf20c			stub_7f0d36aaf208_0:
aaf20c e8a5f248ff		call	do_callback_handler
aaf211 f1067c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f2eb				bits 64
f3f2eb 90		version_369:
f3f2ec			version_370:
f3f2ec			version_371:
f3f2ec 488b5b0d			mov	rbx,[rbx+13]
f3f2f0			version_372:
f3f2f0			version_373:
f3f2f0 4d8bb8b0020000		mov	r15,[r8+688]
f3f2f7			version_374:
f3f2f7 48c7c003000000		mov	rax,dword 3
f3f2fe 4c21f8			and	rax,r15
f3f301 4883f803			cmp	rax,byte 3
f3f305			patchable_jump3:
f3f305 0f8401ffb600		je	stub_7f0d36aaf208_0
f3f30b e9f8feb600		jmp	stub_7f0d36aaf208_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f305 -> 7f0d36aaf208
GEN VERSION >>> #<lazy-code #31
                   ast: #f
                   generator: #<procedure #32>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #33
      stack: ((pai) (unk) (nulc ()) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf1f0				bits 64
aaf1f0			stub_7f0d36aaf1f0_1:
aaf1f0 83c104			add	ecx,byte 4
aaf1f3 90			nop
aaf1f4			stub_7f0d36aaf1f0_0:
aaf1f4 e8bdf248ff		call	do_callback_handler
aaf1f9 91077c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f30b				bits 64
f3f30b 90		version_375:
f3f30c			version_376:
f3f30c			version_377:
f3f30c 4d8b7f05			mov	r15,[r15+5]
f3f310			version_378:
f3f310 48c7c003000000		mov	rax,dword 3
f3f317 4c21f8			and	rax,r15
f3f31a 4883f803			cmp	rax,byte 3
f3f31e			patchable_jump4:
f3f31e 0f84d0feb600		je	stub_7f0d36aaf1f0_0
f3f324 e9c7feb600		jmp	stub_7f0d36aaf1f0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f31e -> 7f0d36aaf1f0
GEN VERSION >>> #<lazy-code #34
                   ast: #f
                   generator: #<procedure #35>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #36
      stack: ((pai) (unk) (nulc ()) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf1d8				bits 64
aaf1d8			stub_7f0d36aaf1d8_1:
aaf1d8 83c104			add	ecx,byte 4
aaf1db 90			nop
aaf1dc			stub_7f0d36aaf1d8_0:
aaf1dc e8d5f248ff		call	do_callback_handler
aaf1e1 31087c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f324				bits 64
f3f324			version_379:
f3f324			version_380:
f3f324			version_381:
f3f324 4d8b7f05			mov	r15,[r15+5]
f3f328			version_382:
f3f328			version_383:
f3f328			version_384:
f3f328 4c89fe			mov	rsi,r15
f3f32b			version_385:
f3f32b 48c7c0f6ffffff		mov	rax,dword -10
f3f332 4839f0			cmp	rax,rsi
f3f335			patchable_jump5:
f3f335 0f84a1feb600		je	stub_7f0d36aaf1d8_0
f3f33b e998feb600		jmp	stub_7f0d36aaf1d8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #37
                   ast: #f
                   generator: #<procedure #38>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #39
      stack: ((unk) (unk) (unk) (nulc ()) (clo) (ret))
      slot-loc: ((5 r . 2) (4 r . 1) (3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #40
                     kind: local
                     sslots: (5 4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf1c0				bits 64
aaf1c0			stub_7f0d36aaf1c0_1:
aaf1c0 83c104			add	ecx,byte 4
aaf1c3 90			nop
aaf1c4			stub_7f0d36aaf1c0_0:
aaf1c4 e8edf248ff		call	do_callback_handler
aaf1c9 d1087c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f33b				bits 64
f3f33b 90		version_386:
f3f33c			version_387:
f3f33c 4c89fe			mov	rsi,r15
f3f33f			version_388:
f3f33f 48c7c003000000		mov	rax,dword 3
f3f346 4821f0			and	rax,rsi
f3f349 4883f803			cmp	rax,byte 3
f3f34d			patchable_jump6:
f3f34d 0f8471feb600		je	stub_7f0d36aaf1c0_0
f3f353 e968feb600		jmp	stub_7f0d36aaf1c0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f34d -> 7f0d36aaf1c0
GEN VERSION >>> #<lazy-code #41
                   ast: #f
                   generator: #<procedure #42>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #43
      stack: ((pai) (pai) (unk) (nulc ()) (clo) (ret))
      slot-loc: ((5 r . 2) (4 r . 1) (3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #44
                     kind: local
                     sslots: (5 4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf1a8				bits 64
aaf1a8			stub_7f0d36aaf1a8_1:
aaf1a8 83c104			add	ecx,byte 4
aaf1ab 90			nop
aaf1ac			stub_7f0d36aaf1a8_0:
aaf1ac e805f348ff		call	do_callback_handler
aaf1b1 71097c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f353				bits 64
f3f353 90		version_389:
f3f354			version_390:
f3f354			version_391:
f3f354 488b760d			mov	rsi,[rsi+13]
f3f358			version_392:
f3f358			version_393:
f3f358 4c89ff			mov	rdi,r15
f3f35b			version_394:
f3f35b			version_395:
f3f35b			version_396:
f3f35b			version_397:
f3f35b 488b7f05			mov	rdi,[rdi+5]
f3f35f			version_398:
f3f35f 48c7c003000000		mov	rax,dword 3
f3f366 4821f8			and	rax,rdi
f3f369 4883f803			cmp	rax,byte 3
f3f36d			patchable_jump7:
f3f36d 0f8439feb600		je	stub_7f0d36aaf1a8_0
f3f373 e930feb600		jmp	stub_7f0d36aaf1a8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f36d -> 7f0d36aaf1a8
GEN VERSION >>> #<lazy-code #45
                   ast: #f
                   generator: #<procedure #46>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #47
      stack: ((pai) (cloc 3) (unk) (pai) (unk) (nulc ()) (clo) (ret))
      slot-loc:
       ((7 r . 3)
        (6 . #f)
        (5 r . 2)
        (4 r . 1)
        (3 r . 0)
        (2 . #f)
        (1 . #f)
        (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #48
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 2>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf190				bits 64
aaf190			stub_7f0d36aaf190_1:
aaf190 83c104			add	ecx,byte 4
aaf193 90			nop
aaf194			stub_7f0d36aaf190_0:
aaf194 e82bf648ff		call	do_callback_cont_handler
aaf199 110a7c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #49
                              ast: #f
                              generator: #<procedure #50>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #51
      stack: ((unk) (clo) (ret))
      slot-loc: ((2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #52
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
------------------------------------------------------------------------
aaf178				bits 64
aaf178			stub_7f0d36aaf178_1:
aaf178 83c104			add	ecx,byte 4
aaf17b 90			nop
aaf17c			stub_7f0d36aaf178_0:
aaf17c e835f348ff		call	do_callback_handler
aaf181 610a7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f373				bits 64
f3f373 90		version_399:
f3f374			version_400:
f3f374			version_401:
f3f374 488b7f05			mov	rdi,[rdi+5]
f3f378			version_402:
f3f378 4883ed20			sub	rbp,byte 32
f3f37c 48897518			mov	[rbp+24],rsi
f3f380 4c897d10			mov	[rbp+16],r15
f3f384 48895d08			mov	[rbp+8],rbx
f3f388 48c7c038b77b01		mov	rax,dword 24885048
f3f38f 48894500			mov	[rbp],rax
f3f393 4889fb			mov	rbx,rdi
f3f396			inlined_call_5:
f3f396			version_403:
f3f396			version_404:
f3f396 4989df			mov	r15,rbx
f3f399			version_405:
f3f399 48c7c0f6ffffff		mov	rax,dword -10
f3f3a0 4c39f8			cmp	rax,r15
f3f3a3			patchable_jump8:
f3f3a3 0f84d3fdb600		je	stub_7f0d36aaf178_0
f3f3a9 e9cafdb600		jmp	stub_7f0d36aaf178_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #53
                   ast: #f
                   generator: #<procedure #54>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #55
      stack: ((unk) (unk) (clo) (ret))
      slot-loc: ((3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #56
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf160				bits 64
aaf160			stub_7f0d36aaf160_1:
aaf160 83c104			add	ecx,byte 4
aaf163 90			nop
aaf164			stub_7f0d36aaf160_0:
aaf164 e84df348ff		call	do_callback_handler
aaf169 010b7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f3a9				bits 64
f3f3a9 909090		version_406:
f3f3ac			version_407:
f3f3ac 4989df			mov	r15,rbx
f3f3af			version_408:
f3f3af 48c7c003000000		mov	rax,dword 3
f3f3b6 4c21f8			and	rax,r15
f3f3b9 4883f803			cmp	rax,byte 3
f3f3bd			patchable_jump9:
f3f3bd 0f84a1fdb600		je	stub_7f0d36aaf160_0
f3f3c3 e998fdb600		jmp	stub_7f0d36aaf160_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f3bd -> 7f0d36aaf160
GEN VERSION >>> #<lazy-code #57
                   ast: #f
                   generator: #<procedure #58>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #59
      stack: ((pai) (pai) (clo) (ret))
      slot-loc: ((3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #60
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf148				bits 64
aaf148			stub_7f0d36aaf148_1:
aaf148 83c104			add	ecx,byte 4
aaf14b 90			nop
aaf14c			stub_7f0d36aaf148_0:
aaf14c e865f348ff		call	do_callback_handler
aaf151 a10b7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f3c3				bits 64
f3f3c3 90		version_409:
f3f3c4			version_410:
f3f3c4			version_411:
f3f3c4 4d8b7f0d			mov	r15,[r15+13]
f3f3c8			version_412:
f3f3c8			version_413:
f3f3c8 4889de			mov	rsi,rbx
f3f3cb			version_414:
f3f3cb			version_415:
f3f3cb			version_416:
f3f3cb			version_417:
f3f3cb 488b7605			mov	rsi,[rsi+5]
f3f3cf			version_418:
f3f3cf 48c7c003000000		mov	rax,dword 3
f3f3d6 4821f0			and	rax,rsi
f3f3d9 4883f803			cmp	rax,byte 3
f3f3dd			patchable_jump10:
f3f3dd 0f8469fdb600		je	stub_7f0d36aaf148_0
f3f3e3 e960fdb600		jmp	stub_7f0d36aaf148_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f3dd -> 7f0d36aaf148
GEN VERSION >>> #<lazy-code #61
                   ast: #f
                   generator: #<procedure #62>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #63
      stack: ((pai) (unk) (pai) (clo) (ret))
      slot-loc: ((4 r . 2) (3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs: ((r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #64
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf130				bits 64
aaf130			stub_7f0d36aaf130_1:
aaf130 83c104			add	ecx,byte 4
aaf133 90			nop
aaf134			stub_7f0d36aaf130_0:
aaf134 e87df348ff		call	do_callback_handler
aaf139 410c7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f3e3				bits 64
f3f3e3 90		version_419:
f3f3e4			version_420:
f3f3e4			version_421:
f3f3e4 488b7605			mov	rsi,[rsi+5]
f3f3e8			version_422:
f3f3e8			version_423:
f3f3e8			version_424:
f3f3e8 4889f7			mov	rdi,rsi
f3f3eb			version_425:
f3f3eb 48c7c0f6ffffff		mov	rax,dword -10
f3f3f2 4839f8			cmp	rax,rdi
f3f3f5			patchable_jump11:
f3f3f5 0f8439fdb600		je	stub_7f0d36aaf130_0
f3f3fb e930fdb600		jmp	stub_7f0d36aaf130_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #65
                   ast: #f
                   generator: #<procedure #66>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #67
      stack: ((unk) (unk) (unk) (pai) (clo) (ret))
      slot-loc: ((5 r . 3) (4 r . 2) (3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l1 . #<identifier #68
                     kind: local
                     sslots: (5 4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (l0 . #<identifier #69
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf118				bits 64
aaf118			stub_7f0d36aaf118_1:
aaf118 83c104			add	ecx,byte 4
aaf11b 90			nop
aaf11c			stub_7f0d36aaf118_0:
aaf11c e895f348ff		call	do_callback_handler
aaf121 e10c7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f3fb				bits 64
f3f3fb 90		version_426:
f3f3fc			version_427:
f3f3fc 4889f7			mov	rdi,rsi
f3f3ff			version_428:
f3f3ff 48c7c003000000		mov	rax,dword 3
f3f406 4821f8			and	rax,rdi
f3f409 4883f803			cmp	rax,byte 3
f3f40d			patchable_jump12:
f3f40d 0f8409fdb600		je	stub_7f0d36aaf118_0
f3f413 e900fdb600		jmp	stub_7f0d36aaf118_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f40d -> 7f0d36aaf118
GEN VERSION >>> #<lazy-code #70
                   ast: #f
                   generator: #<procedure #71>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #72
      stack: ((pai) (pai) (unk) (pai) (clo) (ret))
      slot-loc: ((5 r . 3) (4 r . 2) (3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs: ((r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l1 . #<identifier #73
                     kind: local
                     sslots: (5 4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (l0 . #<identifier #69
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf100				bits 64
aaf100			stub_7f0d36aaf100_1:
aaf100 83c104			add	ecx,byte 4
aaf103 90			nop
aaf104			stub_7f0d36aaf100_0:
aaf104 e8adf348ff		call	do_callback_handler
aaf109 a18d7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f413				bits 64
f3f413 90		version_429:
f3f414			version_430:
f3f414			version_431:
f3f414 488b7f0d			mov	rdi,[rdi+13]
f3f418			version_432:
f3f418			version_433:
f3f418 4989f2			mov	r10,rsi
f3f41b			version_434:
f3f41b			version_435:
f3f41b			version_436:
f3f41b			version_437:
f3f41b 4d8b5205			mov	r10,[r10+5]
f3f41f			version_438:
f3f41f 48c7c003000000		mov	rax,dword 3
f3f426 4c21d0			and	rax,r10
f3f429 4883f803			cmp	rax,byte 3
f3f42d			patchable_jump13:
f3f42d 0f84d1fcb600		je	stub_7f0d36aaf100_0
f3f433 e9c8fcb600		jmp	stub_7f0d36aaf100_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f42d -> 7f0d36aaf100
GEN VERSION >>> #<lazy-code #74
                   ast: #f
                   generator: #<procedure #75>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #76
      stack: ((pai) (cloc 3) (unk) (pai) (unk) (pai) (clo) (ret))
      slot-loc:
       ((7 r . 4)
        (6 . #f)
        (5 r . 3)
        (4 r . 2)
        (3 r . 1)
        (2 r . 0)
        (1 . #f)
        (0 m . 0))
      free-regs: ((r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l1 . #<identifier #77
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf0e8				bits 64
aaf0e8			stub_7f0d36aaf0e8_1:
aaf0e8 83c104			add	ecx,byte 4
aaf0eb 90			nop
aaf0ec			stub_7f0d36aaf0e8_0:
aaf0ec e8d3f648ff		call	do_callback_cont_handler
aaf0f1 418e7c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #49
                              ast: #f
                              generator: #<procedure #50>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #78
      stack: ((unk) (clo) (ret))
      slot-loc: ((2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #79
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
------------------------------------------------------------------------
f3f433				bits 64
f3f433 90		version_439:
f3f434			version_440:
f3f434			version_441:
f3f434 4d8b5205			mov	r10,[r10+5]
f3f438			version_442:
f3f438 4883ed28			sub	rbp,byte 40
f3f43c 48897d20			mov	[rbp+32],rdi
f3f440 48897518			mov	[rbp+24],rsi
f3f444 4c897d10			mov	[rbp+16],r15
f3f448 48895d08			mov	[rbp+8],rbx
f3f44c 48c7c0f8127c01		mov	rax,dword 24908536
f3f453 48894500			mov	[rbp],rax
f3f457 4c89d3			mov	rbx,r10
f3f45a			inlined_call_6:
f3f45a e937ffffff		jmp	version_403
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #80
                   ast: #f
                   generator: #<procedure #81>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #82
      stack: ((nul) (nul) (clo) (ret))
      slot-loc: ((3 r . 1) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #56
                     kind: local
                     sslots: (3 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 3>
------------------------------------------------------------------------
f3f45f				bits 64
f3f45f 90		version_443:
f3f460			version_444:
f3f460			version_445:
f3f460 488b5500			mov	rdx,[rbp]
f3f464 4883c508			add	rbp,byte 8
f3f468 488b4218			mov	rax,[rdx+24]
f3f46c 49c7c304000000		mov	r11,dword 4
f3f473 ffe0			jmp	rax
>>> patching jump at 7f0d35f3f3a3 -> 7f0d35f3f460
GEN VERSION CONTINUATION (CR) >>> Patch table with type nulc and ctx:
#<ctx #83
      stack: ((nulc ()) (unk) (pai) (unk) (pai) (clo) (ret))
      slot-loc:
       ((6 . #f) (5 m . 1) (4 m . 2) (3 m . 3) (2 m . 4) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 4)
        (r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l1 . #<identifier #77
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 5
      ffs: 0
      fn-num: 3>
------------------------------------------------------------------------
f3f475				bits 64
f3f475 909090		continuation_2:
f3f478			version_446:
f3f478			version_447:
f3f478			version_448:
f3f478			alloc_begin_9:
f3f478 4983c118			add	r9,byte 24
f3f47c 48b830301e5d0d7f
f3f484 0000			mov	rax,139695373561904
f3f486 4c3b08			cmp	r9,[rax]
f3f489 7e09			jle	short alloc_end_9
f3f48b e87debffff		call	heap_limit_handler
f3f490 4983c118			add	r9,byte 24
f3f494			alloc_end_9:
f3f494 49c741e808100000		mov	qword [r9-24],dword 4104
f3f49c 488b4518			mov	rax,[rbp+24]
f3f4a0 498941f8			mov	[r9-8],rax
f3f4a4 49c741f0f6ffffff		mov	qword [r9-16],dword -10
f3f4ac 4d8d51eb			lea	r10,[r9-21]
f3f4b0			version_449:
f3f4b0			version_450:
f3f4b0			version_451:
f3f4b0			version_452:
f3f4b0			version_453:
f3f4b0			alloc_begin_10:
f3f4b0 4983c118			add	r9,byte 24
f3f4b4 48b830301e5d0d7f
f3f4bc 0000			mov	rax,139695373561904
f3f4be 4c3b08			cmp	r9,[rax]
f3f4c1 7e09			jle	short alloc_end_10
f3f4c3 e845ebffff		call	heap_limit_handler
f3f4c8 4983c118			add	r9,byte 24
f3f4cc			alloc_end_10:
f3f4cc 49c741e808100000		mov	qword [r9-24],dword 4104
f3f4d4 488b4508			mov	rax,[rbp+8]
f3f4d8 498941f8			mov	[r9-8],rax
f3f4dc 4d8951f0			mov	[r9-16],r10
f3f4e0 4d8d51eb			lea	r10,[r9-21]
f3f4e4			version_454:
f3f4e4 4d89d6			mov	r14,r10
f3f4e7 488b5520			mov	rdx,[rbp+32]
f3f4eb 4883c528			add	rbp,byte 40
f3f4ef 488b4210			mov	rax,[rdx+16]
f3f4f3 49c7c300000000		mov	r11,dword 0
f3f4fa ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type pai and ctx:
#<ctx #84
      stack: ((pai) (unk) (pai) (unk) (nulc ()) (clo) (ret))
      slot-loc:
       ((6 r . 8) (5 m . 1) (4 m . 2) (3 m . 3) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 3)
        (r . 0)
        (r . 1)
        (r . 2)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((l0 . #<identifier #48
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 0
      fn-num: 2>
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #87
      stack: ((paic (() () () ())) (pai) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #88
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #89
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaf178				bits 64
aaf178			stub_7f0d36aaf178_1:
aaf178 83c104			add	ecx,byte 4
aaf17b 90			nop
aaf17c			stub_7f0d36aaf178_0:
aaf17c e843f648ff		call	do_callback_cont_handler
aaf181 a1ba7c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #90
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #91
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaf0d0				bits 64
aaf0d0			stub_7f0d36aaf0d0_1:
aaf0d0 83c104			add	ecx,byte 4
aaf0d3 90			nop
aaf0d4			stub_7f0d36aaf0d0_0:
aaf0d4 e8ddf348ff		call	do_callback_handler
aaf0d9 f1ba7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f4fc				bits 64
f3f4fc			continuation_3:
f3f4fc			version_455:
f3f4fc			version_456:
f3f4fc			version_457:
f3f4fc			alloc_begin_11:
f3f4fc 4983c118			add	r9,byte 24
f3f500 48b830301e5d0d7f
f3f508 0000			mov	rax,139695373561904
f3f50a 4c3b08			cmp	r9,[rax]
f3f50d 7e09			jle	short alloc_end_11
f3f50f e8f9eaffff		call	heap_limit_handler
f3f514 4983c118			add	r9,byte 24
f3f518			alloc_end_11:
f3f518 49c741e808100000		mov	qword [r9-24],dword 4104
f3f520 488b4510			mov	rax,[rbp+16]
f3f524 498941f8			mov	[r9-8],rax
f3f528 4d8971f0			mov	[r9-16],r14
f3f52c 4d8d71eb			lea	r14,[r9-21]
f3f530			version_458:
f3f530			version_459:
f3f530			version_460:
f3f530			version_461:
f3f530			version_462:
f3f530			alloc_begin_12:
f3f530 4983c118			add	r9,byte 24
f3f534 48b830301e5d0d7f
f3f53c 0000			mov	rax,139695373561904
f3f53e 4c3b08			cmp	r9,[rax]
f3f541 7e09			jle	short alloc_end_12
f3f543 e8c5eaffff		call	heap_limit_handler
f3f548 4983c118			add	r9,byte 24
f3f54c			alloc_end_12:
f3f54c 49c741e808100000		mov	qword [r9-24],dword 4104
f3f554 488b4500			mov	rax,[rbp]
f3f558 498941f8			mov	[r9-8],rax
f3f55c 4d8971f0			mov	[r9-16],r14
f3f560 4d8d71eb			lea	r14,[r9-21]
f3f564			version_463:
f3f564			version_464:
f3f564			version_465:
f3f564 4c89f7			mov	rdi,r14
f3f567			version_466:
f3f567			version_467:
f3f567 4889fb			mov	rbx,rdi
f3f56a 4883c518			add	rbp,byte 24
f3f56e			inlined_call_7:
f3f56e			version_468:
f3f56e			version_469:
f3f56e			version_470:
f3f56e			version_471:
f3f56e 4989df			mov	r15,rbx
f3f571			version_472:
f3f571			version_473:
f3f571			version_474:
f3f571			version_475:
f3f571 4d8b7f0d			mov	r15,[r15+13]
f3f575			version_476:
f3f575			version_477:
f3f575			version_478:
f3f575			version_479:
f3f575 4883ed10			sub	rbp,byte 16
f3f579 48895d08			mov	[rbp+8],rbx
f3f57d 48c7c0482c7c01		mov	rax,dword 24915016
f3f584 48894500			mov	[rbp],rax
f3f588 4c89fb			mov	rbx,r15
f3f58b			inlined_call_8:
f3f58b			version_480:
f3f58b			version_481:
f3f58b 4989df			mov	r15,rbx
f3f58e			version_482:
f3f58e 48c7c003000000		mov	rax,dword 3
f3f595 4c21f8			and	rax,r15
f3f598 4883f803			cmp	rax,byte 3
f3f59c			patchable_jump14:
f3f59c 0f8432fbb600		je	stub_7f0d36aaf0d0_0
f3f5a2 e929fbb600		jmp	stub_7f0d36aaf0d0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #93
                   ast: #f
                   generator: #<procedure #94>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #95
      stack: ((unk) (nulc ()) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #96
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf0b8				bits 64
aaf0b8			stub_7f0d36aaf0b8_1:
aaf0b8 83c104			add	ecx,byte 4
aaf0bb 90			nop
aaf0bc			stub_7f0d36aaf0b8_0:
aaf0bc e8f5f348ff		call	do_callback_handler
aaf0c1 91bb7c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f5a2				bits 64
f3f5a2 9090		version_483:
f3f5a4			version_484:
f3f5a4			version_485:
f3f5a4 4989df			mov	r15,rbx
f3f5a7			version_486:
f3f5a7 4c89f8			mov	rax,r15
f3f5aa 4883e003			and	rax,byte 3
f3f5ae 4883f801			cmp	rax,byte 1
f3f5b2 7510			jne	short patchable_jump15
f3f5b4 498b47ff			mov	rax,[r15-1]
f3f5b8 4825f8000000		and	rax,248
f3f5be 483d98000000		cmp	rax,152
f3f5c4			patchable_jump15:
f3f5c4 0f84f2fab600		je	stub_7f0d36aaf0b8_0
f3f5ca e9e9fab600		jmp	stub_7f0d36aaf0b8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #97
                   ast: #f
                   generator: #<procedure #98>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #99
      stack: ((unk) (nulc ()) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #100
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf0a0				bits 64
aaf0a0			stub_7f0d36aaf0a0_1:
aaf0a0 83c104			add	ecx,byte 4
aaf0a3 90			nop
aaf0a4			stub_7f0d36aaf0a0_0:
aaf0a4 e80df448ff		call	do_callback_handler
aaf0a9 b1d07c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f5ca				bits 64
f3f5ca 9090		version_487:
f3f5cc			version_488:
f3f5cc			version_489:
f3f5cc 4989df			mov	r15,rbx
f3f5cf			version_490:
f3f5cf 4c89f8			mov	rax,r15
f3f5d2 4883e003			and	rax,byte 3
f3f5d6 4883f801			cmp	rax,byte 1
f3f5da 750e			jne	short patchable_jump16
f3f5dc 498b47ff			mov	rax,[r15-1]
f3f5e0 4825f8000000		and	rax,248
f3f5e6 4883f800			cmp	rax,byte 0
f3f5ea			patchable_jump16:
f3f5ea 0f84b4fab600		je	stub_7f0d36aaf0a0_0
f3f5f0 e9abfab600		jmp	stub_7f0d36aaf0a0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #101
                   ast: #f
                   generator: #<procedure #102>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #103
      stack: ((unk) (nulc ()) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #104
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf088				bits 64
aaf088			stub_7f0d36aaf088_1:
aaf088 83c104			add	ecx,byte 4
aaf08b 90			nop
aaf08c			stub_7f0d36aaf088_0:
aaf08c e825f448ff		call	do_callback_handler
aaf091 51d17c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f5f0				bits 64
f3f5f0			version_491:
f3f5f0			version_492:
f3f5f0 4989df			mov	r15,rbx
f3f5f3			version_493:
f3f5f3			version_494:
f3f5f3			version_495:
f3f5f3 48c7c003000000		mov	rax,dword 3
f3f5fa 4c21f8			and	rax,r15
f3f5fd			patchable_jump17:
f3f5fd 0f8489fab600		je	stub_7f0d36aaf088_0
f3f603 e980fab600		jmp	stub_7f0d36aaf088_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #105
                   ast: #f
                   generator: #<procedure #106>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #107
      stack: ((unk) (nulc ()) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #108
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf070				bits 64
aaf070			stub_7f0d36aaf070_1:
aaf070 83c104			add	ecx,byte 4
aaf073 90			nop
aaf074			stub_7f0d36aaf070_0:
aaf074 e83df448ff		call	do_callback_handler
aaf079 f1d17c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f603				bits 64
f3f603 90		version_496:
f3f604 4c89f8			mov	rax,r15
f3f607 4883e003			and	rax,byte 3
f3f60b 4883f801			cmp	rax,byte 1
f3f60f 7518			jne	short patchable_jump18
f3f611 498b47ff			mov	rax,[r15-1]
f3f615 4825f8000000		and	rax,248
f3f61b 483df0000000		cmp	rax,240
f3f621 7506			jne	short patchable_jump18
f3f623 f2410f105707		movsd	xmm2,[r15+7]
f3f629			patchable_jump18:
f3f629 0f8445fab600		je	stub_7f0d36aaf070_0
f3f62f e93cfab600		jmp	stub_7f0d36aaf070_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #109
                   ast: (($$atom number?) ($$atom x0))
                   generator: #<procedure #110>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #107
      stack: ((unk) (nulc ()) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #108
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf058				bits 64
aaf058			stub_7f0d36aaf058_1:
aaf058 83c104			add	ecx,byte 4
aaf05b 90			nop
aaf05c			stub_7f0d36aaf058_0:
aaf05c e855f448ff		call	do_callback_handler
aaf061 91d27c0100000000
------------------------------------------------------------------------
f3f62f				bits 64
f3f62f 90		version_497:
f3f630 49c7c7feffffff		mov	r15,dword -2
f3f637			version_498:
f3f637 4983fffe			cmp	r15,byte -2
f3f63b			patchable_jump19:
f3f63b 0f841bfab600		je	stub_7f0d36aaf058_0
f3f641 e912fab600		jmp	stub_7f0d36aaf058_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f63b -> 7f0d36aaf058
GEN VERSION >>> #<lazy-code #111
                   ast: #f
                   generator: #<procedure #112>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #113
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #114
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #92
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
f3f641				bits 64
f3f641 909090		version_499:
f3f644 4989df			mov	r15,rbx
f3f647			version_500:
f3f647			version_501:
f3f647			version_502:
f3f647			version_503:
f3f647 4983fff6			cmp	r15,byte -10
f3f64b 49c7c7faffffff		mov	r15,dword -6
f3f652 7407			je	short eq?_end_1
f3f654 49c7c7feffffff		mov	r15,dword -2
f3f65b			eq?_end_1:
f3f65b			version_504:
f3f65b 4d89fe			mov	r14,r15
f3f65e 488b5500			mov	rdx,[rbp]
f3f662 4883c508			add	rbp,byte 8
f3f666 488b4220			mov	rax,[rdx+32]
f3f66a 49c7c308000000		mov	r11,dword 8
f3f671 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #115
      stack: ((boo) (paic (() () () ())) (pai) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #116
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #117
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaf040				bits 64
aaf040			stub_7f0d36aaf040_1:
aaf040 83c104			add	ecx,byte 4
aaf043 90			nop
aaf044			stub_7f0d36aaf040_0:
aaf044 e86df448ff		call	do_callback_handler
aaf049 81d37c0100000000
------------------------------------------------------------------------
f3f673				bits 64
f3f673 90		continuation_4:
f3f674 4983fefe			cmp	r14,byte -2
f3f678			patchable_jump20:
f3f678 0f84c6f9b600		je	stub_7f0d36aaf040_0
f3f67e e9bdf9b600		jmp	stub_7f0d36aaf040_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #118
                   ast: (($$atom equal?)
                         (($$atom cdr) ($$atom x0))
                         (($$atom cdr) ($$atom y0)))
                   generator: #<procedure #119>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #120
      stack: ((paic (() () () ())) (pai) (clo) (ret))
      slot-loc: ((3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #116
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #117
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #121
      stack: ((paic (() () ())) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #122
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #123
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaf028				bits 64
aaf028			stub_7f0d36aaf028_1:
aaf028 83c104			add	ecx,byte 4
aaf02b 90			nop
aaf02c			stub_7f0d36aaf028_0:
aaf02c e885f448ff		call	do_callback_handler
aaf031 21d47c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f67e				bits 64
f3f67e 9090		version_505:
f3f680			version_506:
f3f680 4c8b7500			mov	r14,[rbp]
f3f684			version_507:
f3f684			version_508:
f3f684			version_509:
f3f684			version_510:
f3f684 4d8b7605			mov	r14,[r14+5]
f3f688			version_511:
f3f688			version_512:
f3f688			version_513:
f3f688			version_514:
f3f688 4c89f3			mov	rbx,r14
f3f68b 4883c508			add	rbp,byte 8
f3f68f			inlined_call_9:
f3f68f			version_515:
f3f68f			version_516:
f3f68f 4989df			mov	r15,rbx
f3f692			version_517:
f3f692 48c7c003000000		mov	rax,dword 3
f3f699 4c21f8			and	rax,r15
f3f69c 4883f803			cmp	rax,byte 3
f3f6a0			patchable_jump21:
f3f6a0 0f8486f9b600		je	stub_7f0d36aaf028_0
f3f6a6 e97df9b600		jmp	stub_7f0d36aaf028_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f6a0 -> 7f0d36aaf028
GEN VERSION >>> #<lazy-code #124
                   ast: #f
                   generator: #<procedure #125>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #126
      stack: ((pai) (paic (() () ())) (pai) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #127
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #123
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaf010				bits 64
aaf010			stub_7f0d36aaf010_1:
aaf010 83c104			add	ecx,byte 4
aaf013 90			nop
aaf014			stub_7f0d36aaf010_0:
aaf014 e8abf748ff		call	do_callback_cont_handler
aaf019 c1d47c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #128
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #129
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #130
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
f3f6a6				bits 64
f3f6a6 9090		version_518:
f3f6a8			version_519:
f3f6a8			version_520:
f3f6a8			version_521:
f3f6a8 4989df			mov	r15,rbx
f3f6ab			version_522:
f3f6ab			version_523:
f3f6ab			version_524:
f3f6ab			version_525:
f3f6ab 4d8b7f0d			mov	r15,[r15+13]
f3f6af			version_526:
f3f6af			version_527:
f3f6af			version_528:
f3f6af			version_529:
f3f6af 4883ed10			sub	rbp,byte 16
f3f6b3 48895d08			mov	[rbp+8],rbx
f3f6b7 48c7c068537c01		mov	rax,dword 24925032
f3f6be 48894500			mov	[rbp],rax
f3f6c2 4c89fb			mov	rbx,r15
f3f6c5			inlined_call_10:
f3f6c5 e9c1feffff		jmp	version_480
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #131
      stack: ((boo) (paic (() () ())) (pai) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #132
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #133
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaeff8				bits 64
aaeff8			stub_7f0d36aaeff8_1:
aaeff8 83c104			add	ecx,byte 4
aaeffb 90			nop
aaeffc			stub_7f0d36aaeff8_0:
aaeffc e8b5f448ff		call	do_callback_handler
aaf001 61d57c0100000000
------------------------------------------------------------------------
f3f6ca				bits 64
f3f6ca 9090		continuation_5:
f3f6cc 4983fefe			cmp	r14,byte -2
f3f6d0			patchable_jump22:
f3f6d0 0f8426f9b600		je	stub_7f0d36aaeff8_0
f3f6d6 e91df9b600		jmp	stub_7f0d36aaeff8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #118
                   ast: (($$atom equal?)
                         (($$atom cdr) ($$atom x0))
                         (($$atom cdr) ($$atom y0)))
                   generator: #<procedure #119>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #134
      stack: ((paic (() () ())) (pai) (clo) (ret))
      slot-loc: ((3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #132
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #133
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #135
      stack: ((paic (() ())) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #136
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #137
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaefe0				bits 64
aaefe0			stub_7f0d36aaefe0_1:
aaefe0 83c104			add	ecx,byte 4
aaefe3 90			nop
aaefe4			stub_7f0d36aaefe0_0:
aaefe4 e8cdf448ff		call	do_callback_handler
aaefe9 01d67c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f6d6				bits 64
f3f6d6 9090		version_530:
f3f6d8			version_531:
f3f6d8 4c8b7500			mov	r14,[rbp]
f3f6dc			version_532:
f3f6dc			version_533:
f3f6dc			version_534:
f3f6dc			version_535:
f3f6dc 4d8b7605			mov	r14,[r14+5]
f3f6e0			version_536:
f3f6e0			version_537:
f3f6e0			version_538:
f3f6e0			version_539:
f3f6e0 4c89f3			mov	rbx,r14
f3f6e3 4883c508			add	rbp,byte 8
f3f6e7			inlined_call_11:
f3f6e7			version_540:
f3f6e7			version_541:
f3f6e7 4989df			mov	r15,rbx
f3f6ea			version_542:
f3f6ea 48c7c003000000		mov	rax,dword 3
f3f6f1 4c21f8			and	rax,r15
f3f6f4 4883f803			cmp	rax,byte 3
f3f6f8			patchable_jump23:
f3f6f8 0f84e6f8b600		je	stub_7f0d36aaefe0_0
f3f6fe e9ddf8b600		jmp	stub_7f0d36aaefe0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f6f8 -> 7f0d36aaefe0
GEN VERSION >>> #<lazy-code #124
                   ast: #f
                   generator: #<procedure #125>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #138
      stack: ((pai) (paic (() ())) (pai) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #139
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #137
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaefc8				bits 64
aaefc8			stub_7f0d36aaefc8_1:
aaefc8 83c104			add	ecx,byte 4
aaefcb 90			nop
aaefcc			stub_7f0d36aaefc8_0:
aaefcc e8f3f748ff		call	do_callback_cont_handler
aaefd1 a1d67c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #140
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #141
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #142
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
f3f6fe				bits 64
f3f6fe 9090		version_543:
f3f700			version_544:
f3f700			version_545:
f3f700			version_546:
f3f700 4989df			mov	r15,rbx
f3f703			version_547:
f3f703			version_548:
f3f703			version_549:
f3f703			version_550:
f3f703 4d8b7f0d			mov	r15,[r15+13]
f3f707			version_551:
f3f707			version_552:
f3f707			version_553:
f3f707			version_554:
f3f707 4883ed10			sub	rbp,byte 16
f3f70b 48895d08			mov	[rbp+8],rbx
f3f70f 48c7c040687c01		mov	rax,dword 24930368
f3f716 48894500			mov	[rbp],rax
f3f71a 4c89fb			mov	rbx,r15
f3f71d			inlined_call_12:
f3f71d e969feffff		jmp	version_480
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #143
      stack: ((boo) (paic (() ())) (pai) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #144
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #145
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaefb0				bits 64
aaefb0			stub_7f0d36aaefb0_1:
aaefb0 83c104			add	ecx,byte 4
aaefb3 90			nop
aaefb4			stub_7f0d36aaefb0_0:
aaefb4 e8fdf448ff		call	do_callback_handler
aaefb9 81f47c0100000000
------------------------------------------------------------------------
f3f722				bits 64
f3f722 9090		continuation_6:
f3f724 4983fefe			cmp	r14,byte -2
f3f728			patchable_jump24:
f3f728 0f8486f8b600		je	stub_7f0d36aaefb0_0
f3f72e e97df8b600		jmp	stub_7f0d36aaefb0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #118
                   ast: (($$atom equal?)
                         (($$atom cdr) ($$atom x0))
                         (($$atom cdr) ($$atom y0)))
                   generator: #<procedure #119>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #146
      stack: ((paic (() ())) (pai) (clo) (ret))
      slot-loc: ((3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #144
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #145
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #147
      stack: ((paic (())) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #148
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #149
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaef98				bits 64
aaef98			stub_7f0d36aaef98_1:
aaef98 83c104			add	ecx,byte 4
aaef9b 90			nop
aaef9c			stub_7f0d36aaef98_0:
aaef9c e815f548ff		call	do_callback_handler
aaefa1 21f57c0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3f72e				bits 64
f3f72e 9090		version_555:
f3f730			version_556:
f3f730 4c8b7500			mov	r14,[rbp]
f3f734			version_557:
f3f734			version_558:
f3f734			version_559:
f3f734			version_560:
f3f734 4d8b7605			mov	r14,[r14+5]
f3f738			version_561:
f3f738			version_562:
f3f738			version_563:
f3f738			version_564:
f3f738 4c89f3			mov	rbx,r14
f3f73b 4883c508			add	rbp,byte 8
f3f73f			inlined_call_13:
f3f73f			version_565:
f3f73f			version_566:
f3f73f 4989df			mov	r15,rbx
f3f742			version_567:
f3f742 48c7c003000000		mov	rax,dword 3
f3f749 4c21f8			and	rax,r15
f3f74c 4883f803			cmp	rax,byte 3
f3f750			patchable_jump25:
f3f750 0f8446f8b600		je	stub_7f0d36aaef98_0
f3f756 e93df8b600		jmp	stub_7f0d36aaef98_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f750 -> 7f0d36aaef98
GEN VERSION >>> #<lazy-code #124
                   ast: #f
                   generator: #<procedure #125>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #150
      stack: ((pai) (paic (())) (pai) (clo) (ret))
      slot-loc: ((4 r . 1) (3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #151
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #149
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaef80				bits 64
aaef80			stub_7f0d36aaef80_1:
aaef80 83c104			add	ecx,byte 4
aaef83 90			nop
aaef84			stub_7f0d36aaef80_0:
aaef84 e83bf848ff		call	do_callback_cont_handler
aaef89 c1f57c0100000000
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #152
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #153
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #154
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
f3f756				bits 64
f3f756 9090		version_568:
f3f758			version_569:
f3f758			version_570:
f3f758			version_571:
f3f758 4989df			mov	r15,rbx
f3f75b			version_572:
f3f75b			version_573:
f3f75b			version_574:
f3f75b			version_575:
f3f75b 4d8b7f0d			mov	r15,[r15+13]
f3f75f			version_576:
f3f75f			version_577:
f3f75f			version_578:
f3f75f			version_579:
f3f75f 4883ed10			sub	rbp,byte 16
f3f763 48895d08			mov	[rbp+8],rbx
f3f767 48c7c0187d7c01		mov	rax,dword 24935704
f3f76e 48894500			mov	[rbp],rax
f3f772 4c89fb			mov	rbx,r15
f3f775			inlined_call_14:
f3f775 e911feffff		jmp	version_480
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #155
      stack: ((boo) (paic (())) (pai) (clo) (ret))
      slot-loc: ((4 r . 8) (3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #156
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #157
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
aaef68				bits 64
aaef68			stub_7f0d36aaef68_1:
aaef68 83c104			add	ecx,byte 4
aaef6b 90			nop
aaef6c			stub_7f0d36aaef68_0:
aaef6c e845f548ff		call	do_callback_handler
aaef71 61f67c0100000000
------------------------------------------------------------------------
f3f77a				bits 64
f3f77a 9090		continuation_7:
f3f77c 4983fefe			cmp	r14,byte -2
f3f780			patchable_jump26:
f3f780 0f84e6f7b600		je	stub_7f0d36aaef68_0
f3f786 e9ddf7b600		jmp	stub_7f0d36aaef68_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #118
                   ast: (($$atom equal?)
                         (($$atom cdr) ($$atom x0))
                         (($$atom cdr) ($$atom y0)))
                   generator: #<procedure #119>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #158
      stack: ((paic (())) (pai) (clo) (ret))
      slot-loc: ((3 . #f) (2 m . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #156
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #157
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #159
      stack: ((nulc ()) (unk) (clo) (ret))
      slot-loc: ((3 . #f) (2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #160
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #161
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
------------------------------------------------------------------------
f3f786				bits 64
f3f786 9090		version_580:
f3f788			version_581:
f3f788 4c8b7500			mov	r14,[rbp]
f3f78c			version_582:
f3f78c			version_583:
f3f78c			version_584:
f3f78c			version_585:
f3f78c 4d8b7605			mov	r14,[r14+5]
f3f790			version_586:
f3f790			version_587:
f3f790			version_588:
f3f790			version_589:
f3f790 4c89f3			mov	rbx,r14
f3f793 4883c508			add	rbp,byte 8
f3f797			inlined_call_15:
f3f797 e9effdffff		jmp	version_480
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #162
      stack: ((boo))
      slot-loc: ((0 r . 8))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
aaef50				bits 64
aaef50			stub_7f0d36aaef50_1:
aaef50 83c104			add	ecx,byte 4
aaef53 90			nop
aaef54			stub_7f0d36aaef50_0:
aaef54 e86bf848ff		call	do_callback_cont_handler
aaef59 71777d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #165
      stack: ((floc 30.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #166
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaef38				bits 64
aaef38			stub_7f0d36aaef38_1:
aaef38 83c104			add	ecx,byte 4
aaef3b 90			nop
aaef3c			stub_7f0d36aaef38_0:
aaef3c e883f848ff		call	do_callback_cont_handler
aaef41 c1777d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #167
      stack: ((floc 28.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #168
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaef20				bits 64
aaef20			stub_7f0d36aaef20_1:
aaef20 83c104			add	ecx,byte 4
aaef23 90			nop
aaef24			stub_7f0d36aaef20_0:
aaef24 e89bf848ff		call	do_callback_cont_handler
aaef29 31b57d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #169
      stack: ((floc 26.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #170
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaef08				bits 64
aaef08			stub_7f0d36aaef08_1:
aaef08 83c104			add	ecx,byte 4
aaef0b 90			nop
aaef0c			stub_7f0d36aaef08_0:
aaef0c e8b3f848ff		call	do_callback_cont_handler
aaef11 81b57d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #171
      stack: ((floc 24.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #172
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaeef0				bits 64
aaeef0			stub_7f0d36aaeef0_1:
aaeef0 83c104			add	ecx,byte 4
aaeef3 90			nop
aaeef4			stub_7f0d36aaeef0_0:
aaeef4 e8cbf848ff		call	do_callback_cont_handler
aaeef9 d1b57d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #173
      stack: ((floc 22.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #174
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaeed8				bits 64
aaeed8			stub_7f0d36aaeed8_1:
aaeed8 83c104			add	ecx,byte 4
aaeedb 90			nop
aaeedc			stub_7f0d36aaeed8_0:
aaeedc e8e3f848ff		call	do_callback_cont_handler
aaeee1 21b67d0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #175
      stack: ((floc 20.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #176
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 4"
"----------------------------------"
#<ctx #175
      stack: ((floc 20.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #176
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #177
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #176
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 20.) fr . 0))
#(label #f prologue_merge_1)
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
------------------------------------------------------------------------
aaeec0				bits 64
aaeec0			stub_7f0d36aaeec0_1:
aaeec0 83c104			add	ecx,byte 4
aaeec3 90			nop
aaeec4			stub_7f0d36aaeec0_0:
aaeec4 e8edf548ff		call	do_callback_handler
aaeec9 c1b67d0100000000
------------------------------------------------------------------------
f3f79c				bits 64
f3f79c			continuation_8:
f3f79c			version_590:
f3f79c 4c89f3			mov	rbx,r14
f3f79f			version_591:
f3f79f			version_592:
f3f79f 4889d8			mov	rax,rbx
f3f7a2 4883ed08			sub	rbp,byte 8
f3f7a6 48894500			mov	[rbp],rax
f3f7aa 48c7c004000000		mov	rax,dword 4
f3f7b1 4883ed08			sub	rbp,byte 8
f3f7b5 48894500			mov	[rbp],rax
f3f7b9 48c7c0c122bc00		mov	rax,dword 12329665
f3f7c0 4883ed08			sub	rbp,byte 8
f3f7c4 48894500			mov	[rbp],rax
f3f7c8 e862ebffff		call	gambit_call_handler
f3f7cd 488b5d00			mov	rbx,[rbp]
f3f7d1 4883c508			add	rbp,byte 8
f3f7d5 4883c510			add	rbp,byte 16
f3f7d9			version_593:
f3f7d9			version_594:
f3f7d9			version_595:
f3f7d9			version_596:
f3f7d9			version_597:
f3f7d9			version_598:
f3f7d9			version_599:
f3f7d9 4883ed08			sub	rbp,byte 8
f3f7dd 48c7c000f97c01		mov	rax,dword 24967424
f3f7e4 48894500			mov	[rbp],rax
f3f7e8			inlined_call_16:
f3f7e8			version_600:
f3f7e8			version_601:
f3f7e8			version_602:
f3f7e8			version_603:
f3f7e8			version_604:
f3f7e8			version_605:
f3f7e8			version_606:
f3f7e8			version_607:
f3f7e8			version_608:
f3f7e8			version_609:
f3f7e8			version_610:
f3f7e8			version_611:
f3f7e8			version_612:
f3f7e8			version_613:
f3f7e8			version_614:
f3f7e8			version_615:
f3f7e8			version_616:
f3f7e8			version_617:
f3f7e8			version_618:
f3f7e8			version_619:
f3f7e8			version_620:
f3f7e8			version_621:
f3f7e8			version_622:
f3f7e8			version_623:
f3f7e8			version_624:
f3f7e8			version_625:
f3f7e8			version_626:
f3f7e8			version_627:
f3f7e8			version_628:
f3f7e8			version_629:
f3f7e8			version_630:
f3f7e8			version_631:
f3f7e8			version_632:
f3f7e8			version_633:
f3f7e8			version_634:
f3f7e8			version_635:
f3f7e8 4883ed08			sub	rbp,byte 8
f3f7ec 48c7c0800e7d01		mov	rax,dword 24972928
f3f7f3 48894500			mov	[rbp],rax
f3f7f7			inlined_call_17:
f3f7f7			version_636:
f3f7f7			version_637:
f3f7f7			version_638:
f3f7f7			version_639:
f3f7f7			version_640:
f3f7f7			version_641:
f3f7f7			version_642:
f3f7f7			version_643:
f3f7f7			version_644:
f3f7f7			version_645:
f3f7f7			version_646:
f3f7f7			version_647:
f3f7f7			version_648:
f3f7f7			version_649:
f3f7f7			version_650:
f3f7f7			version_651:
f3f7f7			version_652:
f3f7f7			version_653:
f3f7f7			version_654:
f3f7f7			version_655:
f3f7f7			version_656:
f3f7f7			version_657:
f3f7f7			version_658:
f3f7f7			version_659:
f3f7f7			version_660:
f3f7f7			version_661:
f3f7f7			version_662:
f3f7f7			version_663:
f3f7f7			version_664:
f3f7f7			version_665:
f3f7f7			version_666:
f3f7f7			version_667:
f3f7f7			version_668:
f3f7f7			version_669:
f3f7f7			version_670:
f3f7f7			version_671:
f3f7f7 4883ed08			sub	rbp,byte 8
f3f7fb 48c7c0e0237d01		mov	rax,dword 24978400
f3f802 48894500			mov	[rbp],rax
f3f806			inlined_call_18:
f3f806			version_672:
f3f806			version_673:
f3f806			version_674:
f3f806			version_675:
f3f806			version_676:
f3f806			version_677:
f3f806			version_678:
f3f806			version_679:
f3f806			version_680:
f3f806			version_681:
f3f806			version_682:
f3f806			version_683:
f3f806			version_684:
f3f806			version_685:
f3f806			version_686:
f3f806			version_687:
f3f806			version_688:
f3f806			version_689:
f3f806			version_690:
f3f806			version_691:
f3f806			version_692:
f3f806			version_693:
f3f806			version_694:
f3f806			version_695:
f3f806			version_696:
f3f806			version_697:
f3f806			version_698:
f3f806			version_699:
f3f806			version_700:
f3f806			version_701:
f3f806			version_702:
f3f806			version_703:
f3f806			version_704:
f3f806			version_705:
f3f806			version_706:
f3f806			version_707:
f3f806 4883ed08			sub	rbp,byte 8
f3f80a 48c7c040397d01		mov	rax,dword 24983872
f3f811 48894500			mov	[rbp],rax
f3f815			inlined_call_19:
f3f815			version_708:
f3f815			version_709:
f3f815			version_710:
f3f815			version_711:
f3f815			version_712:
f3f815			version_713:
f3f815			version_714:
f3f815			version_715:
f3f815			version_716:
f3f815			version_717:
f3f815			version_718:
f3f815			version_719:
f3f815			version_720:
f3f815			version_721:
f3f815			version_722:
f3f815			version_723:
f3f815			version_724:
f3f815			version_725:
f3f815			version_726:
f3f815			version_727:
f3f815			version_728:
f3f815			version_729:
f3f815			version_730:
f3f815			version_731:
f3f815			version_732:
f3f815			version_733:
f3f815			version_734:
f3f815			version_735:
f3f815			version_736:
f3f815			version_737:
f3f815			version_738:
f3f815			version_739:
f3f815			version_740:
f3f815			version_741:
f3f815			version_742:
f3f815			version_743:
f3f815 4883ed08			sub	rbp,byte 8
f3f819 48c7c0a04e7d01		mov	rax,dword 24989344
f3f820 48894500			mov	[rbp],rax
f3f824			inlined_call_20:
f3f824			version_744:
f3f824			version_745:
f3f824			version_746:
f3f824			version_747:
f3f824			version_748:
f3f824			version_749:
f3f824			version_750:
f3f824			version_751:
f3f824			version_752:
f3f824			version_753:
f3f824			version_754:
f3f824			version_755:
f3f824			version_756:
f3f824			version_757:
f3f824			version_758:
f3f824			version_759:
f3f824			version_760:
f3f824			version_761:
f3f824			version_762:
f3f824			version_763:
f3f824			version_764:
f3f824			version_765:
f3f824			version_766:
f3f824			version_767:
f3f824			version_768:
f3f824			version_769:
f3f824			version_770:
f3f824			version_771:
f3f824			version_772:
f3f824			version_773:
f3f824			version_774:
f3f824			version_775:
f3f824			version_776:
f3f824			version_777:
f3f824			version_778:
f3f824			version_779:
f3f824 4883ed08			sub	rbp,byte 8
f3f828 48c7c000647d01		mov	rax,dword 24994816
f3f82f 48894500			mov	[rbp],rax
f3f833			inlined_call_21:
f3f833			prologue_merge_1:
f3f833 48b8000000000000
f3f83b 3440			mov	rax,4626322717216342016
f3f83d 66480f6ed0		movq	xmm2,rax
f3f842			version_780:
f3f842 f20f10da			movsd	xmm3,xmm2
f3f846			version_781:
f3f846			version_782:
f3f846			version_783:
f3f846			version_784:
f3f846			version_785:
f3f846			version_786:
f3f846			version_787:
f3f846 48b8000000000000
f3f84e 0040			mov	rax,4611686018427387904
f3f850 66480f6ec8		movq	xmm1,rax
f3f855 660f2fd9			comisd	xmm3,xmm1
f3f859			patchable_jump27:
f3f859 0f8365f6b600		jae	stub_7f0d36aaeec0_0
f3f85f e95cf6b600		jmp	stub_7f0d36aaeec0_1
#t
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f859 -> 7f0d36aaeec0
GEN VERSION >>> #<lazy-code #178
                   ast: #f
                   generator: #<procedure #179>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #180
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #181
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 4"
>>> fall-through-optimization
------------------------------------------------------------------------
aaeea8				bits 64
aaeea8			stub_7f0d36aaeea8_1:
aaeea8 83c104			add	ecx,byte 4
aaeeab 90			nop
aaeeac			stub_7f0d36aaeea8_0:
aaeeac e805f648ff		call	do_callback_handler
aaeeb1 11b87d0100000000
------------------------------------------------------------------------
f3f85f				bits 64
f3f85f 90		version_788:
f3f860			version_789:
f3f860 f20f10da			movsd	xmm3,xmm2
f3f864			version_790:
f3f864			version_791:
f3f864			version_792:
f3f864			version_793:
f3f864			version_794:
f3f864			version_795:
f3f864			version_796:
f3f864 f20f10e3			movsd	xmm4,xmm3
f3f868 48b8000000000000
f3f870 f03f			mov	rax,4607182418800017408
f3f872 66480f6ec0		movq	xmm0,rax
f3f877 f20f5ce0			subsd	xmm4,xmm0
f3f87b			version_797:
f3f87b			version_798:
f3f87b f20f10dc			movsd	xmm3,xmm4
f3f87f			version_799:
f3f87f			version_800:
f3f87f			version_801:
f3f87f			version_802:
f3f87f			version_803:
f3f87f			version_804:
f3f87f			version_805:
f3f87f 48b8000000000000
f3f887 0040			mov	rax,4611686018427387904
f3f889 66480f6ec8		movq	xmm1,rax
f3f88e 660f2fd9			comisd	xmm3,xmm1
f3f892			patchable_jump28:
f3f892 0f8314f6b600		jae	stub_7f0d36aaeea8_0
f3f898 e90bf6b600		jmp	stub_7f0d36aaeea8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f892 -> 7f0d36aaeea8
GEN VERSION >>> #<lazy-code #182
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #183>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #184
      stack: ((flo) (flo) (clo) (ret))
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #185
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #186
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
aaee90				bits 64
aaee90			stub_7f0d36aaee90_1:
aaee90 83c104			add	ecx,byte 4
aaee93 90			nop
aaee94			stub_7f0d36aaee90_0:
aaee94 e82bf948ff		call	do_callback_cont_handler
aaee99 d1387e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #187
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #188
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3f898				bits 64
f3f898			version_806:
f3f898			version_807:
f3f898 f20f10dc			movsd	xmm3,xmm4
f3f89c			version_808:
f3f89c			version_809:
f3f89c			version_810:
f3f89c			version_811:
f3f89c			version_812:
f3f89c			version_813:
f3f89c			version_814:
f3f89c f20f10eb			movsd	xmm5,xmm3
f3f8a0 48b8000000000000
f3f8a8 f03f			mov	rax,4607182418800017408
f3f8aa 66480f6ec0		movq	xmm0,rax
f3f8af f20f5ce8			subsd	xmm5,xmm0
f3f8b3			version_815:
f3f8b3 4883ed08			sub	rbp,byte 8
f3f8b7 4883ec10			sub	rsp,byte 16
f3f8bb f20f11642408		movsd	[rsp+8],xmm4
f3f8c1 f20f111424		movsd	[rsp],xmm2
f3f8c6 48c7c0a8bd7d01		mov	rax,dword 25017768
f3f8cd 48894500			mov	[rbp],rax
f3f8d1 f20f10d5			movsd	xmm2,xmm5
f3f8d5			inlined_call_22:
f3f8d5 e968ffffff		jmp	version_780
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #189
                   ast: #f
                   generator: #<procedure #190>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #184
      stack: ((flo) (flo) (clo) (ret))
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #185
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #186
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaeea8				bits 64
aaeea8			stub_7f0d36aaeea8_1:
aaeea8 83c104			add	ecx,byte 4
aaeeab 90			nop
aaeeac			stub_7f0d36aaeea8_0:
aaeeac e805f648ff		call	do_callback_handler
aaeeb1 71397e0100000000
------------------------------------------------------------------------
f3f8da				bits 64
f3f8da 9090		version_816:
f3f8dc f20f10dc			movsd	xmm3,xmm4
f3f8e0			version_817:
f3f8e0			version_818:
f3f8e0			version_819:
f3f8e0 f20f10e2			movsd	xmm4,xmm2
f3f8e4			version_820:
f3f8e4			version_821:
f3f8e4			version_822:
f3f8e4			version_823:
f3f8e4			version_824:
f3f8e4			version_825:
f3f8e4			version_826:
f3f8e4 f20f10ec			movsd	xmm5,xmm4
f3f8e8 48b8000000000000
f3f8f0 0040			mov	rax,4611686018427387904
f3f8f2 66480f6ec0		movq	xmm0,rax
f3f8f7 f20f5ce8			subsd	xmm5,xmm0
f3f8fb			version_827:
f3f8fb			version_828:
f3f8fb f20f10e5			movsd	xmm4,xmm5
f3f8ff			version_829:
f3f8ff			version_830:
f3f8ff			version_831:
f3f8ff			version_832:
f3f8ff			version_833:
f3f8ff			version_834:
f3f8ff			version_835:
f3f8ff 48b8000000000000
f3f907 0040			mov	rax,4611686018427387904
f3f909 66480f6ec8		movq	xmm1,rax
f3f90e 660f2fe1			comisd	xmm4,xmm1
f3f912			patchable_jump29:
f3f912 0f8394f5b600		jae	stub_7f0d36aaeea8_0
f3f918 e98bf5b600		jmp	stub_7f0d36aaeea8_1
>>> patching jump at 7f0d35f3f892 -> 7f0d35f3f8dc
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #191
                   ast: #f
                   generator: #<procedure #192>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #193
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 3) (3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #194
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
f3f918				bits 64
f3f918			version_836:
f3f918 f20f10e5			movsd	xmm4,xmm5
f3f91c			version_837:
f3f91c			version_838:
f3f91c			version_839:
f3f91c			version_840:
f3f91c			version_841:
f3f91c			version_842:
f3f91c			version_843:
f3f91c f20f10eb			movsd	xmm5,xmm3
f3f920 f20f58ec			addsd	xmm5,xmm4
f3f924			version_844:
f3f924 f20f10d5			movsd	xmm2,xmm5
f3f928 488b5500			mov	rdx,[rbp]
f3f92c 4883c508			add	rbp,byte 8
f3f930 488b4228			mov	rax,[rdx+40]
f3f934 49c7c30c000000		mov	r11,dword 12
f3f93b ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #195
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 fm . 0) (2 fm . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #196
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #186
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
------------------------------------------------------------------------
aaee78				bits 64
aaee78			stub_7f0d36aaee78_1:
aaee78 83c104			add	ecx,byte 4
aaee7b 90			nop
aaee7c			stub_7f0d36aaee78_0:
aaee7c e843f948ff		call	do_callback_cont_handler
aaee81 613a7e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #197
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #198
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3f93d				bits 64
f3f93d 909090		continuation_9:
f3f940			version_845:
f3f940 f20f106c2408		movsd	xmm5,[rsp+8]
f3f946			version_846:
f3f946			version_847:
f3f946			version_848:
f3f946			version_849:
f3f946			version_850:
f3f946			version_851:
f3f946			version_852:
f3f946 f20f10e5			movsd	xmm4,xmm5
f3f94a 48b8000000000000
f3f952 0040			mov	rax,4611686018427387904
f3f954 66480f6ec0		movq	xmm0,rax
f3f959 f20f5ce0			subsd	xmm4,xmm0
f3f95d			version_853:
f3f95d 4883ed08			sub	rbp,byte 8
f3f961 4883ec08			sub	rsp,byte 8
f3f965 f20f111424		movsd	[rsp],xmm2
f3f96a 48c7c090d47d01		mov	rax,dword 25023632
f3f971 48894500			mov	[rbp],rax
f3f975 f20f10d4			movsd	xmm2,xmm4
f3f979			inlined_call_23:
f3f979 e9c4feffff		jmp	version_780
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #199
                   ast: #f
                   generator: #<procedure #200>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #180
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #181
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3f97e				bits 64
f3f97e 9090		version_854:
f3f980 f20f10da			movsd	xmm3,xmm2
f3f984			version_855:
f3f984 f20f10d3			movsd	xmm2,xmm3
f3f988 488b5500			mov	rdx,[rbp]
f3f98c 4883c508			add	rbp,byte 8
f3f990 488b4228			mov	rax,[rdx+40]
f3f994 49c7c30c000000		mov	r11,dword 12
f3f99b ffe0			jmp	rax
>>> patching jump at 7f0d35f3f859 -> 7f0d35f3f980
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #201
      stack: ((flo) (flo) (flo) (flo) (clo) (ret))
      slot-loc:
       ((5 fr . 0) (4 fm . 2) (3 fm . 0) (2 fm . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #202
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #186
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 3
      fn-num: 1>
------------------------------------------------------------------------
aaeec0				bits 64
aaeec0			stub_7f0d36aaeec0_1:
aaeec0 83c104			add	ecx,byte 4
aaeec3 90			nop
aaeec4			stub_7f0d36aaeec0_0:
aaeec4 e8edf548ff		call	do_callback_handler
aaeec9 513b7e0100000000
------------------------------------------------------------------------
f3f99d				bits 64
f3f99d 909090		continuation_10:
f3f9a0			version_856:
f3f9a0			version_857:
f3f9a0			version_858:
f3f9a0			version_859:
f3f9a0			version_860:
f3f9a0 f20f102424		movsd	xmm4,[rsp]
f3f9a5 f20f58e2			addsd	xmm4,xmm2
f3f9a9			version_861:
f3f9a9			version_862:
f3f9a9			version_863:
f3f9a9 f20f10542408		movsd	xmm2,[rsp+8]
f3f9af			version_864:
f3f9af			version_865:
f3f9af			version_866:
f3f9af			version_867:
f3f9af			version_868:
f3f9af			version_869:
f3f9af			version_870:
f3f9af f20f10ea			movsd	xmm5,xmm2
f3f9b3 48b8000000000000
f3f9bb 0040			mov	rax,4611686018427387904
f3f9bd 66480f6ec0		movq	xmm0,rax
f3f9c2 f20f5ce8			subsd	xmm5,xmm0
f3f9c6			version_871:
f3f9c6			version_872:
f3f9c6 f20f10d5			movsd	xmm2,xmm5
f3f9ca			version_873:
f3f9ca			version_874:
f3f9ca			version_875:
f3f9ca			version_876:
f3f9ca			version_877:
f3f9ca			version_878:
f3f9ca			version_879:
f3f9ca 48b8000000000000
f3f9d2 0040			mov	rax,4611686018427387904
f3f9d4 66480f6ec8		movq	xmm1,rax
f3f9d9 660f2fd1			comisd	xmm2,xmm1
f3f9dd			patchable_jump30:
f3f9dd 0f83e1f4b600		jae	stub_7f0d36aaeec0_0
f3f9e3 e9d8f4b600		jmp	stub_7f0d36aaeec0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3f9dd -> 7f0d36aaeec0
GEN VERSION >>> #<lazy-code #203
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #204>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #205
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 3) (3 fr . 2) (2 fm . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0) (fm . 2))
      env: ((n1 . #<identifier #206
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 3
      fn-num: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
aaee60				bits 64
aaee60			stub_7f0d36aaee60_1:
aaee60 83c104			add	ecx,byte 4
aaee63 90			nop
aaee64			stub_7f0d36aaee60_0:
aaee64 e85bf948ff		call	do_callback_cont_handler
aaee69 31667e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #207
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #208
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3f9e3				bits 64
f3f9e3 90		version_880:
f3f9e4			version_881:
f3f9e4 f20f10d5			movsd	xmm2,xmm5
f3f9e8			version_882:
f3f9e8			version_883:
f3f9e8			version_884:
f3f9e8			version_885:
f3f9e8			version_886:
f3f9e8			version_887:
f3f9e8			version_888:
f3f9e8 f20f10da			movsd	xmm3,xmm2
f3f9ec 48b8000000000000
f3f9f4 f03f			mov	rax,4607182418800017408
f3f9f6 66480f6ec0		movq	xmm0,rax
f3f9fb f20f5cd8			subsd	xmm3,xmm0
f3f9ff			version_889:
f3f9ff 4883ed08			sub	rbp,byte 8
f3fa03 f20f116c2410		movsd	[rsp+16],xmm5
f3fa09 f20f112424		movsd	[rsp],xmm4
f3fa0e 48c7c0b0ea7d01		mov	rax,dword 25029296
f3fa15 48894500			mov	[rbp],rax
f3fa19 f20f10d3			movsd	xmm2,xmm3
f3fa1d			inlined_call_24:
f3fa1d e920feffff		jmp	version_780
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #209
      stack: ((flo) (flo) (flo) (flo) (clo) (ret))
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 fm . 2) (2 fm . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #210
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 3
      fn-num: 1>
------------------------------------------------------------------------
aaee48				bits 64
aaee48			stub_7f0d36aaee48_1:
aaee48 83c104			add	ecx,byte 4
aaee4b 90			nop
aaee4c			stub_7f0d36aaee48_0:
aaee4c e873f948ff		call	do_callback_cont_handler
aaee51 d1667e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #211
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #212
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3fa22				bits 64
f3fa22 9090		continuation_11:
f3fa24			version_890:
f3fa24 f20f105c2410		movsd	xmm3,[rsp+16]
f3fa2a			version_891:
f3fa2a			version_892:
f3fa2a			version_893:
f3fa2a			version_894:
f3fa2a			version_895:
f3fa2a			version_896:
f3fa2a			version_897:
f3fa2a f20f10e3			movsd	xmm4,xmm3
f3fa2e 48b8000000000000
f3fa36 0040			mov	rax,4611686018427387904
f3fa38 66480f6ec0		movq	xmm0,rax
f3fa3d f20f5ce0			subsd	xmm4,xmm0
f3fa41			version_898:
f3fa41 4883ed08			sub	rbp,byte 8
f3fa45 4883ec08			sub	rsp,byte 8
f3fa49 f20f111424		movsd	[rsp],xmm2
f3fa4e 48c7c040f67d01		mov	rax,dword 25032256
f3fa55 48894500			mov	[rbp],rax
f3fa59 f20f10d4			movsd	xmm2,xmm4
f3fa5d			inlined_call_25:
f3fa5d e9e0fdffff		jmp	version_780
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #213
      stack: ((flo) (flo) (flo) (flo) (flo) (clo) (ret))
      slot-loc:
       ((6 fr . 0)
        (5 fm . 3)
        (4 fm . 0)
        (3 fm . 2)
        (2 fm . 1)
        (1 . #f)
        (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #214
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 4
      fn-num: 1>
------------------------------------------------------------------------
f3fa62				bits 64
f3fa62 9090		continuation_12:
f3fa64			version_899:
f3fa64			version_900:
f3fa64			version_901:
f3fa64			version_902:
f3fa64			version_903:
f3fa64 f20f102424		movsd	xmm4,[rsp]
f3fa69 f20f58e2			addsd	xmm4,xmm2
f3fa6d			version_904:
f3fa6d			version_905:
f3fa6d			version_906:
f3fa6d			version_907:
f3fa6d			version_908:
f3fa6d			version_909:
f3fa6d			version_910:
f3fa6d f20f10542408		movsd	xmm2,[rsp+8]
f3fa73 f20f58d4			addsd	xmm2,xmm4
f3fa77			version_911:
f3fa77 488b5500			mov	rdx,[rbp]
f3fa7b 4883c508			add	rbp,byte 8
f3fa7f 4883c420			add	rsp,byte 32
f3fa83 488b4228			mov	rax,[rdx+40]
f3fa87 49c7c30c000000		mov	r11,dword 12
f3fa8e ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #215
                   ast: #f
                   generator: #<procedure #216>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #205
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 3) (3 fr . 2) (2 fm . 1) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0) (fm . 2))
      env: ((n1 . #<identifier #206
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 3
      fn-num: 1>
------------------------------------------------------------------------
f3fa90				bits 64
f3fa90			version_912:
f3fa90 f20f10d5			movsd	xmm2,xmm5
f3fa94			version_913:
f3fa94			version_914:
f3fa94			version_915:
f3fa94			version_916:
f3fa94			version_917:
f3fa94			version_918:
f3fa94			version_919:
f3fa94 f20f10ec			movsd	xmm5,xmm4
f3fa98 f20f58ea			addsd	xmm5,xmm2
f3fa9c			version_920:
f3fa9c f20f10d5			movsd	xmm2,xmm5
f3faa0 488b5500			mov	rdx,[rbp]
f3faa4 4883c508			add	rbp,byte 8
f3faa8 4883c418			add	rsp,byte 24
f3faac 488b4228			mov	rax,[rdx+40]
f3fab0 49c7c30c000000		mov	r11,dword 12
f3fab7 ffe0			jmp	rax
>>> patching jump at 7f0d35f3f9dd -> 7f0d35f3fa90
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #217
      stack: ((flo) (floc 21.) (floc 22.) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #218
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #219
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaeec0				bits 64
aaeec0			stub_7f0d36aaeec0_1:
aaeec0 83c104			add	ecx,byte 4
aaeec3 90			nop
aaeec4			stub_7f0d36aaeec0_0:
aaeec4 e8fbf848ff		call	do_callback_cont_handler
aaeec9 11687e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #220
      stack: ((floc 19.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #221
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #220
      stack: ((floc 19.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #221
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #222
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #221
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 19.) fr . 0))
#(label #f prologue_merge_2)
------------------------------------------------------------------------
f3fab9				bits 64
f3fab9 909090		continuation_13:
f3fabc			version_921:
f3fabc			version_922:
f3fabc			version_923:
f3fabc			version_924:
f3fabc			version_925:
f3fabc			version_926:
f3fabc			version_927:
f3fabc			version_928:
f3fabc			version_929:
f3fabc 4883ed08			sub	rbp,byte 8
f3fac0 4883ec08			sub	rsp,byte 8
f3fac4 f20f111424		movsd	[rsp],xmm2
f3fac9 48c7c090097e01		mov	rax,dword 25037200
f3fad0 48894500			mov	[rbp],rax
f3fad4			inlined_call_26:
f3fad4			prologue_merge_2:
f3fad4 48b8000000000000
f3fadc 3340			mov	rax,4626041242239631360
f3fade 66480f6ed0		movq	xmm2,rax
f3fae3			version_930:
f3fae3 f20f10da			movsd	xmm3,xmm2
f3fae7 e95afdffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #223
      stack: ((flo) (flo) (floc 21.) (floc 22.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 fm . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #224
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #219
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaee30				bits 64
aaee30			stub_7f0d36aaee30_1:
aaee30 83c104			add	ecx,byte 4
aaee33 90			nop
aaee34			stub_7f0d36aaee30_0:
aaee34 e88bf948ff		call	do_callback_cont_handler
aaee39 01697e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #225
      stack: ((floc 19.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #226
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #225
      stack: ((floc 19.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #226
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #227
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #226
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 19.) fr . 0))
#(label #f prologue_merge_3)
------------------------------------------------------------------------
f3faec				bits 64
f3faec			continuation_14:
f3faec			version_931:
f3faec			version_932:
f3faec			version_933:
f3faec			version_934:
f3faec			version_935:
f3faec f20f101c24		movsd	xmm3,[rsp]
f3faf1 f20f58da			addsd	xmm3,xmm2
f3faf5			version_936:
f3faf5			version_937:
f3faf5			version_938:
f3faf5			version_939:
f3faf5			version_940:
f3faf5			version_941:
f3faf5			version_942:
f3faf5			version_943:
f3faf5			version_944:
f3faf5			version_945:
f3faf5			version_946:
f3faf5			version_947:
f3faf5			version_948:
f3faf5			version_949:
f3faf5			version_950:
f3faf5			version_951:
f3faf5			version_952:
f3faf5			version_953:
f3faf5			version_954:
f3faf5			version_955:
f3faf5			version_956:
f3faf5			version_957:
f3faf5			version_958:
f3faf5			version_959:
f3faf5			version_960:
f3faf5			version_961:
f3faf5			version_962:
f3faf5			version_963:
f3faf5			version_964:
f3faf5 4883ed08			sub	rbp,byte 8
f3faf9 f20f111c24		movsd	[rsp],xmm3
f3fafe 48c7c0701f7e01		mov	rax,dword 25042800
f3fb05 48894500			mov	[rbp],rax
f3fb09			inlined_call_27:
f3fb09			prologue_merge_3:
f3fb09 48b8000000000000
f3fb11 3340			mov	rax,4626041242239631360
f3fb13 66480f6ed0		movq	xmm2,rax
f3fb18			version_965:
f3fb18 f20f10da			movsd	xmm3,xmm2
f3fb1c e925fdffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #228
      stack: ((flo) (floc 20.) (flo) (floc 22.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #229
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaee18				bits 64
aaee18			stub_7f0d36aaee18_1:
aaee18 83c104			add	ecx,byte 4
aaee1b 90			nop
aaee1c			stub_7f0d36aaee18_0:
aaee1c e8a3f948ff		call	do_callback_cont_handler
aaee21 b1c07e0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #230
      stack: ((floc 18.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #231
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #230
      stack: ((floc 18.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #231
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #232
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #231
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 18.) fr . 0))
#(label #f prologue_merge_4)
------------------------------------------------------------------------
f3fb21				bits 64
f3fb21 909090		continuation_15:
f3fb24			version_966:
f3fb24			version_967:
f3fb24			version_968:
f3fb24			version_969:
f3fb24			version_970:
f3fb24			version_971:
f3fb24			version_972:
f3fb24			version_973:
f3fb24			version_974:
f3fb24 4883ed08			sub	rbp,byte 8
f3fb28 4883ec08			sub	rsp,byte 8
f3fb2c f20f111424		movsd	[rsp],xmm2
f3fb31 48c7c0e02b7e01		mov	rax,dword 25045984
f3fb38 48894500			mov	[rbp],rax
f3fb3c			inlined_call_28:
f3fb3c			prologue_merge_4:
f3fb3c 48b8000000000000
f3fb44 3240			mov	rax,4625759767262920704
f3fb46 66480f6ed0		movq	xmm2,rax
f3fb4b			version_975:
f3fb4b f20f10da			movsd	xmm3,xmm2
f3fb4f e9f2fcffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #233
      stack: ((flo) (flo) (floc 20.) (flo) (floc 22.) (clo) (ret))
      slot-loc:
       ((6 fr . 0) (5 fm . 1) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #234
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
------------------------------------------------------------------------
f3fb54				bits 64
f3fb54			continuation_16:
f3fb54			version_976:
f3fb54			version_977:
f3fb54			version_978:
f3fb54			version_979:
f3fb54			version_980:
f3fb54 f20f101c24		movsd	xmm3,[rsp]
f3fb59 f20f58da			addsd	xmm3,xmm2
f3fb5d			version_981:
f3fb5d			version_982:
f3fb5d			version_983:
f3fb5d			version_984:
f3fb5d			version_985:
f3fb5d			version_986:
f3fb5d			version_987:
f3fb5d f20f10542408		movsd	xmm2,[rsp+8]
f3fb63 f20f58d3			addsd	xmm2,xmm3
f3fb67			version_988:
f3fb67 488b5500			mov	rdx,[rbp]
f3fb6b 4883c508			add	rbp,byte 8
f3fb6f 4883c410			add	rsp,byte 16
f3fb73 488b4228			mov	rax,[rdx+40]
f3fb77 49c7c30c000000		mov	r11,dword 12
f3fb7e ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #235
      stack: ((flo) (floc 23.) (floc 24.) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #236
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #237
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaee00				bits 64
aaee00			stub_7f0d36aaee00_1:
aaee00 83c104			add	ecx,byte 4
aaee03 90			nop
aaee04			stub_7f0d36aaee00_0:
aaee04 e8bbf948ff		call	do_callback_cont_handler
aaee09 11427f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #238
      stack: ((floc 21.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #239
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #238
      stack: ((floc 21.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #239
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #240
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #239
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 21.) fr . 0))
#(label #f prologue_merge_5)
------------------------------------------------------------------------
f3fb80				bits 64
f3fb80			continuation_17:
f3fb80			version_989:
f3fb80			version_990:
f3fb80			version_991:
f3fb80			version_992:
f3fb80			version_993:
f3fb80			version_994:
f3fb80			version_995:
f3fb80			version_996:
f3fb80			version_997:
f3fb80 4883ed08			sub	rbp,byte 8
f3fb84 4883ec08			sub	rsp,byte 8
f3fb88 f20f111424		movsd	[rsp],xmm2
f3fb8d 48c7c0e8c67e01		mov	rax,dword 25085672
f3fb94 48894500			mov	[rbp],rax
f3fb98			inlined_call_29:
f3fb98			prologue_merge_5:
f3fb98 48b8000000000000
f3fba0 3540			mov	rax,4626604192193052672
f3fba2 66480f6ed0		movq	xmm2,rax
f3fba7			version_998:
f3fba7 f20f10da			movsd	xmm3,xmm2
f3fbab e996fcffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #241
      stack: ((flo) (flo) (floc 23.) (floc 24.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 fm . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #242
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #237
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaede8				bits 64
aaede8			stub_7f0d36aaede8_1:
aaede8 83c104			add	ecx,byte 4
aaedeb 90			nop
aaedec			stub_7f0d36aaede8_0:
aaedec e8d3f948ff		call	do_callback_cont_handler
aaedf1 01437f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #243
      stack: ((floc 21.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #244
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #243
      stack: ((floc 21.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #244
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #245
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #244
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 21.) fr . 0))
#(label #f prologue_merge_6)
------------------------------------------------------------------------
f3fbb0				bits 64
f3fbb0			continuation_18:
f3fbb0			version_999:
f3fbb0			version_1000:
f3fbb0			version_1001:
f3fbb0			version_1002:
f3fbb0			version_1003:
f3fbb0 f20f101c24		movsd	xmm3,[rsp]
f3fbb5 f20f58da			addsd	xmm3,xmm2
f3fbb9			version_1004:
f3fbb9			version_1005:
f3fbb9			version_1006:
f3fbb9			version_1007:
f3fbb9			version_1008:
f3fbb9			version_1009:
f3fbb9			version_1010:
f3fbb9			version_1011:
f3fbb9			version_1012:
f3fbb9			version_1013:
f3fbb9			version_1014:
f3fbb9			version_1015:
f3fbb9			version_1016:
f3fbb9			version_1017:
f3fbb9			version_1018:
f3fbb9			version_1019:
f3fbb9			version_1020:
f3fbb9			version_1021:
f3fbb9			version_1022:
f3fbb9			version_1023:
f3fbb9			version_1024:
f3fbb9			version_1025:
f3fbb9			version_1026:
f3fbb9			version_1027:
f3fbb9			version_1028:
f3fbb9			version_1029:
f3fbb9			version_1030:
f3fbb9			version_1031:
f3fbb9			version_1032:
f3fbb9 4883ed08			sub	rbp,byte 8
f3fbbd f20f111c24		movsd	[rsp],xmm3
f3fbc2 48c7c0c8dc7e01		mov	rax,dword 25091272
f3fbc9 48894500			mov	[rbp],rax
f3fbcd			inlined_call_30:
f3fbcd			prologue_merge_6:
f3fbcd 48b8000000000000
f3fbd5 3540			mov	rax,4626604192193052672
f3fbd7 66480f6ed0		movq	xmm2,rax
f3fbdc			version_1033:
f3fbdc f20f10da			movsd	xmm3,xmm2
f3fbe0 e961fcffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #246
      stack: ((flo) (floc 22.) (flo) (floc 24.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #247
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaedd0				bits 64
aaedd0			stub_7f0d36aaedd0_1:
aaedd0 83c104			add	ecx,byte 4
aaedd3 90			nop
aaedd4			stub_7f0d36aaedd0_0:
aaedd4 e8ebf948ff		call	do_callback_cont_handler
aaedd9 f1437f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #248
      stack: ((floc 20.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #249
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #248
      stack: ((floc 20.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #249
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #250
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #249
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 20.) fr . 0))
#(label #f prologue_merge_7)
------------------------------------------------------------------------
f3fbe5				bits 64
f3fbe5 909090		continuation_19:
f3fbe8			version_1034:
f3fbe8			version_1035:
f3fbe8			version_1036:
f3fbe8			version_1037:
f3fbe8			version_1038:
f3fbe8			version_1039:
f3fbe8			version_1040:
f3fbe8			version_1041:
f3fbe8			version_1042:
f3fbe8 4883ed08			sub	rbp,byte 8
f3fbec 4883ec08			sub	rsp,byte 8
f3fbf0 f20f111424		movsd	[rsp],xmm2
f3fbf5 48c7c038e97e01		mov	rax,dword 25094456
f3fbfc 48894500			mov	[rbp],rax
f3fc00			inlined_call_31:
f3fc00			prologue_merge_7:
f3fc00 48b8000000000000
f3fc08 3440			mov	rax,4626322717216342016
f3fc0a 66480f6ed0		movq	xmm2,rax
f3fc0f			version_1043:
f3fc0f f20f10da			movsd	xmm3,xmm2
f3fc13 e92efcffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #251
      stack: ((flo) (flo) (floc 22.) (flo) (floc 24.) (clo) (ret))
      slot-loc:
       ((6 fr . 0) (5 fm . 1) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #252
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
------------------------------------------------------------------------
f3fc18				bits 64
f3fc18			continuation_20:
f3fc18			version_1044:
f3fc18			version_1045:
f3fc18			version_1046:
f3fc18			version_1047:
f3fc18			version_1048:
f3fc18 f20f101c24		movsd	xmm3,[rsp]
f3fc1d f20f58da			addsd	xmm3,xmm2
f3fc21			version_1049:
f3fc21			version_1050:
f3fc21			version_1051:
f3fc21			version_1052:
f3fc21			version_1053:
f3fc21			version_1054:
f3fc21			version_1055:
f3fc21 f20f10542408		movsd	xmm2,[rsp+8]
f3fc27 f20f58d3			addsd	xmm2,xmm3
f3fc2b			version_1056:
f3fc2b 488b5500			mov	rdx,[rbp]
f3fc2f 4883c508			add	rbp,byte 8
f3fc33 4883c410			add	rsp,byte 16
f3fc37 488b4228			mov	rax,[rdx+40]
f3fc3b 49c7c30c000000		mov	r11,dword 12
f3fc42 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #253
      stack: ((flo) (floc 25.) (floc 26.) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #254
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaedb8				bits 64
aaedb8			stub_7f0d36aaedb8_1:
aaedb8 83c104			add	ecx,byte 4
aaedbb 90			nop
aaedbc			stub_7f0d36aaedb8_0:
aaedbc e803fa48ff		call	do_callback_cont_handler
aaedc1 31457f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #256
      stack: ((floc 23.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #257
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #256
      stack: ((floc 23.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #257
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #258
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #257
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 23.) fr . 0))
#(label #f prologue_merge_8)
------------------------------------------------------------------------
f3fc44				bits 64
f3fc44			continuation_21:
f3fc44			version_1057:
f3fc44			version_1058:
f3fc44			version_1059:
f3fc44			version_1060:
f3fc44			version_1061:
f3fc44			version_1062:
f3fc44			version_1063:
f3fc44			version_1064:
f3fc44			version_1065:
f3fc44 4883ed08			sub	rbp,byte 8
f3fc48 4883ec08			sub	rsp,byte 8
f3fc4c f20f111424		movsd	[rsp],xmm2
f3fc51 48c7c0f8fa7e01		mov	rax,dword 25099000
f3fc58 48894500			mov	[rbp],rax
f3fc5c			inlined_call_32:
f3fc5c			prologue_merge_8:
f3fc5c 48b8000000000000
f3fc64 3740			mov	rax,4627167142146473984
f3fc66 66480f6ed0		movq	xmm2,rax
f3fc6b			version_1066:
f3fc6b f20f10da			movsd	xmm3,xmm2
f3fc6f e9d2fbffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #259
      stack: ((flo) (flo) (floc 25.) (floc 26.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 fm . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #260
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #255
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaeda0				bits 64
aaeda0			stub_7f0d36aaeda0_1:
aaeda0 83c104			add	ecx,byte 4
aaeda3 90			nop
aaeda4			stub_7f0d36aaeda0_0:
aaeda4 e81bfa48ff		call	do_callback_cont_handler
aaeda9 21467f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #261
      stack: ((floc 23.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #262
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #261
      stack: ((floc 23.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #262
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #263
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #262
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 23.) fr . 0))
#(label #f prologue_merge_9)
------------------------------------------------------------------------
f3fc74				bits 64
f3fc74			continuation_22:
f3fc74			version_1067:
f3fc74			version_1068:
f3fc74			version_1069:
f3fc74			version_1070:
f3fc74			version_1071:
f3fc74 f20f101c24		movsd	xmm3,[rsp]
f3fc79 f20f58da			addsd	xmm3,xmm2
f3fc7d			version_1072:
f3fc7d			version_1073:
f3fc7d			version_1074:
f3fc7d			version_1075:
f3fc7d			version_1076:
f3fc7d			version_1077:
f3fc7d			version_1078:
f3fc7d			version_1079:
f3fc7d			version_1080:
f3fc7d			version_1081:
f3fc7d			version_1082:
f3fc7d			version_1083:
f3fc7d			version_1084:
f3fc7d			version_1085:
f3fc7d			version_1086:
f3fc7d			version_1087:
f3fc7d			version_1088:
f3fc7d			version_1089:
f3fc7d			version_1090:
f3fc7d			version_1091:
f3fc7d			version_1092:
f3fc7d			version_1093:
f3fc7d			version_1094:
f3fc7d			version_1095:
f3fc7d			version_1096:
f3fc7d			version_1097:
f3fc7d			version_1098:
f3fc7d			version_1099:
f3fc7d			version_1100:
f3fc7d 4883ed08			sub	rbp,byte 8
f3fc81 f20f111c24		movsd	[rsp],xmm3
f3fc86 48c7c0d8107f01		mov	rax,dword 25104600
f3fc8d 48894500			mov	[rbp],rax
f3fc91			inlined_call_33:
f3fc91			prologue_merge_9:
f3fc91 48b8000000000000
f3fc99 3740			mov	rax,4627167142146473984
f3fc9b 66480f6ed0		movq	xmm2,rax
f3fca0			version_1101:
f3fca0 f20f10da			movsd	xmm3,xmm2
f3fca4 e99dfbffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #264
      stack: ((flo) (floc 24.) (flo) (floc 26.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #265
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
------------------------------------------------------------------------
aaed88				bits 64
aaed88			stub_7f0d36aaed88_1:
aaed88 83c104			add	ecx,byte 4
aaed8b 90			nop
aaed8c			stub_7f0d36aaed88_0:
aaed8c e833fa48ff		call	do_callback_cont_handler
aaed91 11477f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #266
      stack: ((floc 22.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #267
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3fca9				bits 64
f3fca9 909090		continuation_23:
f3fcac			version_1102:
f3fcac			version_1103:
f3fcac			version_1104:
f3fcac			version_1105:
f3fcac			version_1106:
f3fcac			version_1107:
f3fcac			version_1108:
f3fcac			version_1109:
f3fcac			version_1110:
f3fcac 4883ed08			sub	rbp,byte 8
f3fcb0 4883ec08			sub	rsp,byte 8
f3fcb4 f20f111424		movsd	[rsp],xmm2
f3fcb9 48c7c0481d7f01		mov	rax,dword 25107784
f3fcc0 48894500			mov	[rbp],rax
f3fcc4			inlined_call_34:
f3fcc4 e95bfbffff		jmp	version_744
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #268
      stack: ((flo) (flo) (floc 24.) (flo) (floc 26.) (clo) (ret))
      slot-loc:
       ((6 fr . 0) (5 fm . 1) (4 . #f) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #269
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
"-ccc 4"
"----------------------------------"
#<ctx #270
      stack: ((flo) (flo) (floc 26.) (clo) (ret))
      slot-loc: ((4 fr . 1) (3 fm . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 1))
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
#<ctx #271
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 1) (3 fm . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 1))
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 2
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 26.) fr . 0))
#(label #f prologue_merge_10)
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
"-ccc 4"
------------------------------------------------------------------------
f3fcc9				bits 64
f3fcc9 909090		continuation_24:
f3fccc			version_1111:
f3fccc			version_1112:
f3fccc			version_1113:
f3fccc			version_1114:
f3fccc			version_1115:
f3fccc f20f101c24		movsd	xmm3,[rsp]
f3fcd1 f20f58da			addsd	xmm3,xmm2
f3fcd5			version_1116:
f3fcd5			prologue_merge_10:
f3fcd5 48b8000000000000
f3fcdd 3a40			mov	rax,4628011567076605952
f3fcdf 66480f6ed0		movq	xmm2,rax
f3fce4			version_1117:
f3fce4			version_1118:
f3fce4			version_1119:
f3fce4			version_1120:
f3fce4			version_1121:
f3fce4			version_1122:
f3fce4 f20f10642408		movsd	xmm4,[rsp+8]
f3fcea f20f58e3			addsd	xmm4,xmm3
f3fcee			version_1123:
f3fcee f20f10d4			movsd	xmm2,xmm4
f3fcf2 488b5500			mov	rdx,[rbp]
f3fcf6 4883c508			add	rbp,byte 8
f3fcfa 4883c410			add	rsp,byte 16
f3fcfe 488b4228			mov	rax,[rdx+40]
f3fd02 49c7c30c000000		mov	r11,dword 12
f3fd09 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #272
      stack: ((flo) (floc 27.) (floc 28.) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #273
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #274
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaed70				bits 64
aaed70			stub_7f0d36aaed70_1:
aaed70 83c104			add	ecx,byte 4
aaed73 90			nop
aaed74			stub_7f0d36aaed70_0:
aaed74 e84bfa48ff		call	do_callback_cont_handler
aaed79 51487f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #275
      stack: ((floc 25.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #276
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #275
      stack: ((floc 25.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #276
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #277
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #276
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 25.) fr . 0))
#(label #f prologue_merge_11)
------------------------------------------------------------------------
f3fd0b				bits 64
f3fd0b 90		continuation_25:
f3fd0c			version_1124:
f3fd0c			version_1125:
f3fd0c			version_1126:
f3fd0c			version_1127:
f3fd0c			version_1128:
f3fd0c			version_1129:
f3fd0c			version_1130:
f3fd0c			version_1131:
f3fd0c			version_1132:
f3fd0c 4883ed08			sub	rbp,byte 8
f3fd10 4883ec08			sub	rsp,byte 8
f3fd14 f20f111424		movsd	[rsp],xmm2
f3fd19 48c7c0b02e7f01		mov	rax,dword 25112240
f3fd20 48894500			mov	[rbp],rax
f3fd24			inlined_call_35:
f3fd24			prologue_merge_11:
f3fd24 48b8000000000000
f3fd2c 3940			mov	rax,4627730092099895296
f3fd2e 66480f6ed0		movq	xmm2,rax
f3fd33			version_1133:
f3fd33 f20f10da			movsd	xmm3,xmm2
f3fd37 e90afbffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #278
      stack: ((flo) (flo) (floc 27.) (floc 28.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 fm . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #279
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #274
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
"-ccc 4"
"----------------------------------"
#<ctx #280
      stack: ((flo) (floc 28.) (clo) (ret))
      slot-loc: ((3 fr . 1) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n0 . #<identifier #274
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
#<ctx #281
      stack: ((flo) (flo) (clo) (ret))
      slot-loc: ((3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n0 . #<identifier #274
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 28.) fr . 0))
#(label #f prologue_merge_12)
------------------------------------------------------------------------
aaed58				bits 64
aaed58			stub_7f0d36aaed58_1:
aaed58 83c104			add	ecx,byte 4
aaed5b 90			nop
aaed5c			stub_7f0d36aaed58_0:
aaed5c e855f748ff		call	do_callback_handler
aaed61 91497f0100000000
------------------------------------------------------------------------
f3fd3c				bits 64
f3fd3c			continuation_26:
f3fd3c			version_1134:
f3fd3c			version_1135:
f3fd3c			version_1136:
f3fd3c			version_1137:
f3fd3c			version_1138:
f3fd3c f20f101c24		movsd	xmm3,[rsp]
f3fd41 f20f58da			addsd	xmm3,xmm2
f3fd45			version_1139:
f3fd45			prologue_merge_12:
f3fd45 48b8000000000000
f3fd4d 3c40			mov	rax,4628574517030027264
f3fd4f 66480f6ed0		movq	xmm2,rax
f3fd54			version_1140:
f3fd54			version_1141:
f3fd54 f20f10e2			movsd	xmm4,xmm2
f3fd58			version_1142:
f3fd58			version_1143:
f3fd58			version_1144:
f3fd58			version_1145:
f3fd58			version_1146:
f3fd58			version_1147:
f3fd58			version_1148:
f3fd58 f20f10ec			movsd	xmm5,xmm4
f3fd5c 48b8000000000000
f3fd64 0040			mov	rax,4611686018427387904
f3fd66 66480f6ec0		movq	xmm0,rax
f3fd6b f20f5ce8			subsd	xmm5,xmm0
f3fd6f			version_1149:
f3fd6f			version_1150:
f3fd6f f20f10e5			movsd	xmm4,xmm5
f3fd73			version_1151:
f3fd73			version_1152:
f3fd73			version_1153:
f3fd73			version_1154:
f3fd73			version_1155:
f3fd73			version_1156:
f3fd73			version_1157:
f3fd73 48b8000000000000
f3fd7b 0040			mov	rax,4611686018427387904
f3fd7d 66480f6ec8		movq	xmm1,rax
f3fd82 660f2fe1			comisd	xmm4,xmm1
f3fd86			patchable_jump31:
f3fd86 0f83d0efb600		jae	stub_7f0d36aaed58_0
f3fd8c e9c7efb600		jmp	stub_7f0d36aaed58_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3fd86 -> 7f0d36aaed58
GEN VERSION >>> #<lazy-code #282
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #283>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #284
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 3) (3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n1 . #<identifier #285
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
aaed40				bits 64
aaed40			stub_7f0d36aaed40_1:
aaed40 83c104			add	ecx,byte 4
aaed43 90			nop
aaed44			stub_7f0d36aaed40_0:
aaed44 e87bfa48ff		call	do_callback_cont_handler
aaed49 51ca7f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #286
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #287
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3fd8c				bits 64
f3fd8c			version_1158:
f3fd8c			version_1159:
f3fd8c f20f10e5			movsd	xmm4,xmm5
f3fd90			version_1160:
f3fd90			version_1161:
f3fd90			version_1162:
f3fd90			version_1163:
f3fd90			version_1164:
f3fd90			version_1165:
f3fd90			version_1166:
f3fd90 f20f10f4			movsd	xmm6,xmm4
f3fd94 48b8000000000000
f3fd9c f03f			mov	rax,4607182418800017408
f3fd9e 66480f6ec0		movq	xmm0,rax
f3fda3 f20f5cf0			subsd	xmm6,xmm0
f3fda7			version_1167:
f3fda7 4883ed08			sub	rbp,byte 8
f3fdab 4883ec10			sub	rsp,byte 16
f3fdaf f20f116c2410		movsd	[rsp+16],xmm5
f3fdb5 f20f115c2408		movsd	[rsp+8],xmm3
f3fdbb f20f111424		movsd	[rsp],xmm2
f3fdc0 48c7c0a84e7f01		mov	rax,dword 25120424
f3fdc7 48894500			mov	[rbp],rax
f3fdcb f20f10d6			movsd	xmm2,xmm6
f3fdcf			inlined_call_36:
f3fdcf e95fffffff		jmp	version_1133
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #288
      stack: ((flo) (flo) (flo) (flo) (clo) (ret))
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 fm . 1) (2 fm . 2) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 4)
        (fr . 1)
        (fr . 3)
        (fr . 2)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #289
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 3
      fn-num: 1>
------------------------------------------------------------------------
aaed28				bits 64
aaed28			stub_7f0d36aaed28_1:
aaed28 83c104			add	ecx,byte 4
aaed2b 90			nop
aaed2c			stub_7f0d36aaed28_0:
aaed2c e893fa48ff		call	do_callback_cont_handler
aaed31 f1ca7f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #290
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #291
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3fdd4				bits 64
f3fdd4			continuation_27:
f3fdd4			version_1168:
f3fdd4 f20f10742410		movsd	xmm6,[rsp+16]
f3fdda			version_1169:
f3fdda			version_1170:
f3fdda			version_1171:
f3fdda			version_1172:
f3fdda			version_1173:
f3fdda			version_1174:
f3fdda			version_1175:
f3fdda f20f10de			movsd	xmm3,xmm6
f3fdde 48b8000000000000
f3fde6 0040			mov	rax,4611686018427387904
f3fde8 66480f6ec0		movq	xmm0,rax
f3fded f20f5cd8			subsd	xmm3,xmm0
f3fdf1			version_1176:
f3fdf1 4883ed08			sub	rbp,byte 8
f3fdf5 4883ec08			sub	rsp,byte 8
f3fdf9 f20f111424		movsd	[rsp],xmm2
f3fdfe 48c7c0385a7f01		mov	rax,dword 25123384
f3fe05 48894500			mov	[rbp],rax
f3fe09 f20f10d3			movsd	xmm2,xmm3
f3fe0d			inlined_call_37:
f3fe0d e921ffffff		jmp	version_1133
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #292
      stack: ((flo) (flo) (flo) (flo) (flo) (clo) (ret))
      slot-loc:
       ((6 fr . 0)
        (5 fm . 3)
        (4 fm . 0)
        (3 fm . 1)
        (2 fm . 2)
        (1 . #f)
        (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 4)
        (fr . 3)
        (fr . 2)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #293
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 4
      fn-num: 1>
------------------------------------------------------------------------
f3fe12				bits 64
f3fe12 9090		continuation_28:
f3fe14			version_1177:
f3fe14			version_1178:
f3fe14			version_1179:
f3fe14			version_1180:
f3fe14			version_1181:
f3fe14 f20f101c24		movsd	xmm3,[rsp]
f3fe19 f20f58da			addsd	xmm3,xmm2
f3fe1d			version_1182:
f3fe1d			version_1183:
f3fe1d			version_1184:
f3fe1d			version_1185:
f3fe1d			version_1186:
f3fe1d			version_1187:
f3fe1d			version_1188:
f3fe1d f20f10542410		movsd	xmm2,[rsp+16]
f3fe23 f20f58d3			addsd	xmm2,xmm3
f3fe27			version_1189:
f3fe27 488b5500			mov	rdx,[rbp]
f3fe2b 4883c508			add	rbp,byte 8
f3fe2f 4883c420			add	rsp,byte 32
f3fe33 488b4228			mov	rax,[rdx+40]
f3fe37 49c7c30c000000		mov	r11,dword 12
f3fe3e ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #294
      stack: ((flo) (floc 29.) (floc 30.) (clo) (ret))
      slot-loc: ((4 fr . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #295
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #296
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
aaed10				bits 64
aaed10			stub_7f0d36aaed10_1:
aaed10 83c104			add	ecx,byte 4
aaed13 90			nop
aaed14			stub_7f0d36aaed10_0:
aaed14 e8abfa48ff		call	do_callback_cont_handler
aaed19 e1cb7f0100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #297
      stack: ((floc 27.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #298
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #297
      stack: ((floc 27.) (clo) (ret))
      slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #298
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
#<ctx #299
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #298
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 27.) fr . 0))
#(label #f prologue_merge_13)
------------------------------------------------------------------------
f3fe40				bits 64
f3fe40			continuation_29:
f3fe40			version_1190:
f3fe40			version_1191:
f3fe40			version_1192:
f3fe40			version_1193:
f3fe40			version_1194:
f3fe40			version_1195:
f3fe40			version_1196:
f3fe40			version_1197:
f3fe40			version_1198:
f3fe40 4883ed08			sub	rbp,byte 8
f3fe44 4883ec08			sub	rsp,byte 8
f3fe48 f20f111424		movsd	[rsp],xmm2
f3fe4d 48c7c0286b7f01		mov	rax,dword 25127720
f3fe54 48894500			mov	[rbp],rax
f3fe58			inlined_call_38:
f3fe58			prologue_merge_13:
f3fe58 48b8000000000000
f3fe60 3b40			mov	rax,4628293042053316608
f3fe62 66480f6ed0		movq	xmm2,rax
f3fe67			version_1199:
f3fe67 f20f10da			movsd	xmm3,xmm2
f3fe6b e9d6f9ffff		jmp	version_781
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #300
      stack: ((flo) (flo) (floc 29.) (floc 30.) (clo) (ret))
      slot-loc: ((5 fr . 0) (4 fm . 0) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #301
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #296
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
"-ccc 5"
"----------------------------------"
#<ctx #302
      stack: ((flo) (floc 30.) (clo) (ret))
      slot-loc: ((3 fr . 1) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n0 . #<identifier #296
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
#<ctx #303
      stack: ((flo) (flo) (clo) (ret))
      slot-loc: ((3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n0 . #<identifier #296
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
((fs . 0) (ffs . 0) ((const . 30.) fr . 0))
#(label #f prologue_merge_14)
------------------------------------------------------------------------
aaecf8				bits 64
aaecf8			stub_7f0d36aaecf8_1:
aaecf8 83c104			add	ecx,byte 4
aaecfb 90			nop
aaecfc			stub_7f0d36aaecf8_0:
aaecfc e8b5f748ff		call	do_callback_handler
aaed01 e109800100000000
------------------------------------------------------------------------
f3fe70				bits 64
f3fe70			continuation_30:
f3fe70			version_1200:
f3fe70			version_1201:
f3fe70			version_1202:
f3fe70			version_1203:
f3fe70			version_1204:
f3fe70 f20f101c24		movsd	xmm3,[rsp]
f3fe75 f20f58da			addsd	xmm3,xmm2
f3fe79			version_1205:
f3fe79			prologue_merge_14:
f3fe79 48b8000000000000
f3fe81 3e40			mov	rax,4629137466983448576
f3fe83 66480f6ed0		movq	xmm2,rax
f3fe88			version_1206:
f3fe88			version_1207:
f3fe88 f20f10e2			movsd	xmm4,xmm2
f3fe8c			version_1208:
f3fe8c			version_1209:
f3fe8c			version_1210:
f3fe8c			version_1211:
f3fe8c			version_1212:
f3fe8c			version_1213:
f3fe8c			version_1214:
f3fe8c f20f10ec			movsd	xmm5,xmm4
f3fe90 48b8000000000000
f3fe98 0040			mov	rax,4611686018427387904
f3fe9a 66480f6ec0		movq	xmm0,rax
f3fe9f f20f5ce8			subsd	xmm5,xmm0
f3fea3			version_1215:
f3fea3			version_1216:
f3fea3 f20f10e5			movsd	xmm4,xmm5
f3fea7			version_1217:
f3fea7			version_1218:
f3fea7			version_1219:
f3fea7			version_1220:
f3fea7			version_1221:
f3fea7			version_1222:
f3fea7			version_1223:
f3fea7 48b8000000000000
f3feaf 0040			mov	rax,4611686018427387904
f3feb1 66480f6ec8		movq	xmm1,rax
f3feb6 660f2fe1			comisd	xmm4,xmm1
f3feba			patchable_jump32:
f3feba 0f833ceeb600		jae	stub_7f0d36aaecf8_0
f3fec0 e933eeb600		jmp	stub_7f0d36aaecf8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3feba -> 7f0d36aaecf8
GEN VERSION >>> #<lazy-code #304
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #305>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #306
      stack: ((flo) (flo) (flo) (clo) (ret))
      slot-loc: ((4 fr . 3) (3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0))
      env: ((n1 . #<identifier #307
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 1
      fn-num: 1>
>>> fall-through-optimization
------------------------------------------------------------------------
aaece0				bits 64
aaece0			stub_7f0d36aaece0_1:
aaece0 83c104			add	ecx,byte 4
aaece3 90			nop
aaece4			stub_7f0d36aaece0_0:
aaece4 e8dbfa48ff		call	do_callback_cont_handler
aaece9 810a800100000000
GEN FN INLINED VERSION >>> #<lazy-code #163
                              ast: #f
                              generator: #<procedure #164>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #308
      stack: ((flo) (clo) (ret))
      slot-loc: ((2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #309
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 1>
------------------------------------------------------------------------
f3fec0				bits 64
f3fec0			version_1224:
f3fec0			version_1225:
f3fec0 f20f10e5			movsd	xmm4,xmm5
f3fec4			version_1226:
f3fec4			version_1227:
f3fec4			version_1228:
f3fec4			version_1229:
f3fec4			version_1230:
f3fec4			version_1231:
f3fec4			version_1232:
f3fec4 f20f10f4			movsd	xmm6,xmm4
f3fec8 48b8000000000000
f3fed0 f03f			mov	rax,4607182418800017408
f3fed2 66480f6ec0		movq	xmm0,rax
f3fed7 f20f5cf0			subsd	xmm6,xmm0
f3fedb			version_1233:
f3fedb 4883ed08			sub	rbp,byte 8
f3fedf 4883ec10			sub	rsp,byte 16
f3fee3 f20f116c2410		movsd	[rsp+16],xmm5
f3fee9 f20f115c2408		movsd	[rsp+8],xmm3
f3feef f20f111424		movsd	[rsp],xmm2
f3fef4 48c7c0a84e7f01		mov	rax,dword 25120424
f3fefb 48894500			mov	[rbp],rax
f3feff f20f10d6			movsd	xmm2,xmm6
f3ff03			inlined_call_39:
f3ff03 e95fffffff		jmp	version_1199
GEN VERSION CONTINUATION (CR) >>> Patch table with type flo and ctx:
#<ctx #310
      stack: ((flo))
      slot-loc: ((0 fr . 0))
      free-regs:
       ((r . 0)
        (r . 8)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
aaecc8				bits 64
aaecc8			stub_7f0d36aaecc8_1:
aaecc8 83c104			add	ecx,byte 4
aaeccb 90			nop
aaeccc			stub_7f0d36aaecc8_0:
aaeccc e8f3fa48ff		call	do_callback_cont_handler
aaecd1 210b800100000000
GEN FN INLINED VERSION >>> #<lazy-code #85
                              ast: #f
                              generator: #<procedure #86>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #311
      stack: ((floc 832040.) (flo) (clo) (ret))
      slot-loc: ((3 . #f) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #312
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
"-ccc 4"
"----------------------------------"
#<ctx #311
      stack: ((floc 832040.) (flo) (clo) (ret))
      slot-loc: ((3 . #f) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #312
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
#<ctx #314
      stack: ((unk) (unk) (clo) (ret))
      slot-loc: ((3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #312
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
((fs . 0) (ffs . 0) ((flbox const . 832040.) r . 0))
#(label #f prologue_merge_15)
------------------------------------------------------------------------
aaecb0				bits 64
aaecb0			stub_7f0d36aaecb0_1:
aaecb0 83c104			add	ecx,byte 4
aaecb3 90			nop
aaecb4			stub_7f0d36aaecb0_0:
aaecb4 e8fdf748ff		call	do_callback_handler
aaecb9 710b800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ff08				bits 64
f3ff08			continuation_31:
f3ff08			version_1234:
f3ff08			version_1235:
f3ff08 f20f10da			movsd	xmm3,xmm2
f3ff0c			version_1236:
f3ff0c			version_1237:
f3ff0c 4883ed08			sub	rbp,byte 8
f3ff10 4883ec08			sub	rsp,byte 8
f3ff14 f20f111424		movsd	[rsp],xmm2
f3ff19 48c7c048867f01		mov	rax,dword 25134664
f3ff20 48894500			mov	[rbp],rax
f3ff24 f20f10d3			movsd	xmm2,xmm3
f3ff28			inlined_call_40:
f3ff28			prologue_merge_15:
f3ff28 48c7c3d9847f01		mov	rbx,dword 25134297
f3ff2f			version_1238:
f3ff2f			version_1239:
f3ff2f 66490f7ed7		movq	xmm2,r15
f3ff34			version_1240:
f3ff34 48c7c003000000		mov	rax,dword 3
f3ff3b 4c21f8			and	rax,r15
f3ff3e 4883f803			cmp	rax,byte 3
f3ff42			patchable_jump33:
f3ff42 0f846cedb600		je	stub_7f0d36aaecb0_0
f3ff48 e963edb600		jmp	stub_7f0d36aaecb0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #93
                   ast: #f
                   generator: #<procedure #94>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #315
      stack: ((unk) (unk) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #316
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec98				bits 64
aaec98			stub_7f0d36aaec98_1:
aaec98 83c104			add	ecx,byte 4
aaec9b 90			nop
aaec9c			stub_7f0d36aaec98_0:
aaec9c e815f848ff		call	do_callback_handler
aaeca1 110c800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ff48				bits 64
f3ff48			version_1241:
f3ff48			version_1242:
f3ff48			version_1243:
f3ff48 66490f7ed7		movq	xmm2,r15
f3ff4d			version_1244:
f3ff4d 4c89f8			mov	rax,r15
f3ff50 4883e003			and	rax,byte 3
f3ff54 4883f801			cmp	rax,byte 1
f3ff58 7510			jne	short patchable_jump34
f3ff5a 498b47ff			mov	rax,[r15-1]
f3ff5e 4825f8000000		and	rax,248
f3ff64 483d98000000		cmp	rax,152
f3ff6a			patchable_jump34:
f3ff6a 0f842cedb600		je	stub_7f0d36aaec98_0
f3ff70 e923edb600		jmp	stub_7f0d36aaec98_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #97
                   ast: #f
                   generator: #<procedure #98>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #317
      stack: ((unk) (unk) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #318
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec80				bits 64
aaec80			stub_7f0d36aaec80_1:
aaec80 83c104			add	ecx,byte 4
aaec83 90			nop
aaec84			stub_7f0d36aaec80_0:
aaec84 e82df848ff		call	do_callback_handler
aaec89 b10c800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ff70				bits 64
f3ff70			version_1245:
f3ff70			version_1246:
f3ff70			version_1247:
f3ff70 66490f7ed7		movq	xmm2,r15
f3ff75			version_1248:
f3ff75 4c89f8			mov	rax,r15
f3ff78 4883e003			and	rax,byte 3
f3ff7c 4883f801			cmp	rax,byte 1
f3ff80 750e			jne	short patchable_jump35
f3ff82 498b47ff			mov	rax,[r15-1]
f3ff86 4825f8000000		and	rax,248
f3ff8c 4883f800			cmp	rax,byte 0
f3ff90			patchable_jump35:
f3ff90 0f84eeecb600		je	stub_7f0d36aaec80_0
f3ff96 e9e5ecb600		jmp	stub_7f0d36aaec80_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #101
                   ast: #f
                   generator: #<procedure #102>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #319
      stack: ((unk) (unk) (unk) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #320
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec68				bits 64
aaec68			stub_7f0d36aaec68_1:
aaec68 83c104			add	ecx,byte 4
aaec6b 90			nop
aaec6c			stub_7f0d36aaec68_0:
aaec6c e845f848ff		call	do_callback_handler
aaec71 510d800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ff96				bits 64
f3ff96 9090		version_1249:
f3ff98			version_1250:
f3ff98 66490f7ed7		movq	xmm2,r15
f3ff9d			version_1251:
f3ff9d			version_1252:
f3ff9d			version_1253:
f3ff9d 48c7c003000000		mov	rax,dword 3
f3ffa4 4c21f8			and	rax,r15
f3ffa7			patchable_jump36:
f3ffa7 0f84bfecb600		je	stub_7f0d36aaec68_0
f3ffad e9b6ecb600		jmp	stub_7f0d36aaec68_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3ffa7 -> 7f0d36aaec68
GEN VERSION >>> #<lazy-code #321
                   ast: (($$atom number?) ($$atom x0))
                   generator: #<procedure #322>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #323
      stack: ((int) (unk) (int) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #324
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec50				bits 64
aaec50			stub_7f0d36aaec50_1:
aaec50 83c104			add	ecx,byte 4
aaec53 90			nop
aaec54			stub_7f0d36aaec50_0:
aaec54 e85df848ff		call	do_callback_handler
aaec59 f10d800100000000
------------------------------------------------------------------------
f3ffad				bits 64
f3ffad 909090		version_1254:
f3ffb0 49c7c7faffffff		mov	r15,dword -6
f3ffb7			version_1255:
f3ffb7 4983fffe			cmp	r15,byte -2
f3ffbb			patchable_jump37:
f3ffbb 0f8493ecb600		je	stub_7f0d36aaec50_0
f3ffc1 e98aecb600		jmp	stub_7f0d36aaec50_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #325
                   ast: #f
                   generator: #<procedure #326>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #327
      stack: ((unk) (int) (clo) (ret))
      slot-loc: ((3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #328
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #313
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec38				bits 64
aaec38			stub_7f0d36aaec38_1:
aaec38 83c104			add	ecx,byte 4
aaec3b 90			nop
aaec3c			stub_7f0d36aaec38_0:
aaec3c e875f848ff		call	do_callback_handler
aaec41 910e800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ffc1				bits 64
f3ffc1 909090		version_1256:
f3ffc4 4989df			mov	r15,rbx
f3ffc7			version_1257:
f3ffc7			version_1258:
f3ffc7			version_1259:
f3ffc7 48c7c003000000		mov	rax,dword 3
f3ffce 4c21f8			and	rax,r15
f3ffd1			patchable_jump38:
f3ffd1 0f8465ecb600		je	stub_7f0d36aaec38_0
f3ffd7 e95cecb600		jmp	stub_7f0d36aaec38_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #329
                   ast: #f
                   generator: #<procedure #330>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #331
      stack: ((unk) (unk) (int) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #328
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #332
                     kind: local
                     sslots: (4 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec20				bits 64
aaec20			stub_7f0d36aaec20_1:
aaec20 83c104			add	ecx,byte 4
aaec23 90			nop
aaec24			stub_7f0d36aaec20_0:
aaec24 e88df848ff		call	do_callback_handler
aaec29 310f800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f3ffd7				bits 64
f3ffd7 90		version_1260:
f3ffd8 4c89f8			mov	rax,r15
f3ffdb 4883e003			and	rax,byte 3
f3ffdf 4883f801			cmp	rax,byte 1
f3ffe3 7518			jne	short patchable_jump39
f3ffe5 498b47ff			mov	rax,[r15-1]
f3ffe9 4825f8000000		and	rax,248
f3ffef 483df0000000		cmp	rax,240
f3fff5 7506			jne	short patchable_jump39
f3fff7 f2410f105f07		movsd	xmm3,[r15+7]
f3fffd			patchable_jump39:
f3fffd 0f8421ecb600		je	stub_7f0d36aaec20_0
f40003 e918ecb600		jmp	stub_7f0d36aaec20_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f3fffd -> 7f0d36aaec20
GEN VERSION >>> #<lazy-code #333
                   ast: (($$atom number?) ($$atom y0))
                   generator: #<procedure #334>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #335
      stack: ((flo) (flo) (int) (clo) (ret))
      slot-loc: ((4 fr . 1) (3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #328
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #332
                     kind: local
                     sslots: (4 3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
aaec08				bits 64
aaec08			stub_7f0d36aaec08_1:
aaec08 83c104			add	ecx,byte 4
aaec0b 90			nop
aaec0c			stub_7f0d36aaec08_0:
aaec0c e8a5f848ff		call	do_callback_handler
aaec11 d10f800100000000
------------------------------------------------------------------------
f40003				bits 64
f40003 90		version_1261:
f40004 49c7c7faffffff		mov	r15,dword -6
f4000b			version_1262:
f4000b 4983fffe			cmp	r15,byte -2
f4000f			patchable_jump40:
f4000f 0f84f7ebb600		je	stub_7f0d36aaec08_0
f40015 e9eeebb600		jmp	stub_7f0d36aaec08_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #336
                   ast: #f
                   generator: #<procedure #337>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #338
      stack: ((flo) (int) (clo) (ret))
      slot-loc: ((3 fr . 1) (2 fr . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((x0 . #<identifier #328
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (y0 . #<identifier #339
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 89>
>>> fall-through-optimization
------------------------------------------------------------------------
f40015				bits 64
f40015 909090		version_1263:
f40018 66490f7ed7		movq	xmm2,r15
f4001d			version_1264:
f4001d f20f10e3			movsd	xmm4,xmm3
f40021			version_1265:
f40021			version_1266:
f40021			version_1267:
f40021			version_1268:
f40021			version_1269:
f40021 4c89f8			mov	rax,r15
f40024 48c1e802			shr	rax,2
f40028 f2480f2ac0		cvtsi2sd	xmm0,rax
f4002d 660f2fc4			comisd	xmm0,xmm4
f40031 49c7c7feffffff		mov	r15,dword -2
f40038 7507			jne	short label-end1
f4003a 49c7c7faffffff		mov	r15,dword -6
f40041			label-end1:
f40041			version_1270:
f40041 4d89fe			mov	r14,r15
f40044 488b5500			mov	rdx,[rbp]
f40048 4883c508			add	rbp,byte 8
f4004c 488b4220			mov	rax,[rdx+32]
f40050 49c7c308000000		mov	r11,dword 8
f40057 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type boo and ctx:
#<ctx #340
      stack: ((boo) (flo))
      slot-loc: ((1 r . 8) (0 fm . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 0)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((result0 . #<identifier #341
                          kind: local
                          sslots: (0)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 1
      fn-num: #f>
------------------------------------------------------------------------
aaebf0				bits 64
aaebf0			stub_7f0d36aaebf0_1:
aaebf0 83c104			add	ecx,byte 4
aaebf3 90			nop
aaebf4			stub_7f0d36aaebf0_0:
aaebf4 e8cbfb48ff		call	do_callback_cont_handler
aaebf9 c110800100000000
------------------------------------------------------------------------
f40059				bits 64
f40059 909090		continuation_32:
f4005c			version_1271:
f4005c			version_1272:
f4005c 4c89f3			mov	rbx,r14
f4005f			version_1273:
f4005f			version_1274:
f4005f 4889d8			mov	rax,rbx
f40062 4883ed08			sub	rbp,byte 8
f40066 48894500			mov	[rbp],rax
f4006a 48c7c004000000		mov	rax,dword 4
f40071 4883ed08			sub	rbp,byte 8
f40075 48894500			mov	[rbp],rax
f40079 48c7c0c122bc00		mov	rax,dword 12329665
f40080 4883ed08			sub	rbp,byte 8
f40084 48894500			mov	[rbp],rax
f40088 e8a2e2ffff		call	gambit_call_handler
f4008d 488b5d00			mov	rbx,[rbp]
f40091 4883c508			add	rbp,byte 8
f40095 4883c510			add	rbp,byte 16
f40099			version_1275:
f40099			version_1276:
f40099			version_1277:
f40099			version_1278:
f40099			version_1279:
f40099 4883ed08			sub	rbp,byte 8
f4009d 48c7c098aa7f01		mov	rax,dword 25143960
f400a4 48894500			mov	[rbp],rax
f400a8 49c7c304000000		mov	r11,dword 4
f400af 48c7c704000000		mov	rdi,dword 4
f400b6			stub_load_2:
f400b6 e929f8b600		jmp	dest_7f0d36aaf8e4_1
#f
GEN VERSION FN#<lazy-code #342
                 ast: #f
                 generator: #<procedure #343>
                 flags: (rest entry)
                 lco-true: #f
                 lco-false: #f>
 >>> #<ctx #344
           stack: ((strc "A") (clo) (ret))
           slot-loc: ((2 . #f) (1 . #f) (0 m . 0))
           free-regs:
            ((r . 0)
             (r . 1)
             (r . 2)
             (r . 3)
             (r . 4)
             (r . 5)
             (r . 6)
             (r . 7)
             (r . 8)
             (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((msg0 . #<identifier #345
                            kind: local
                            sslots: (2)
                            flags: ()
                            stype: #f
                            cloc: #f
                            cst: #f
                            thisid: #f>)
                 (msgs0 . #<identifier #346
                             kind: local
                             sslots: (3)
                             flags: ()
                             stype: #f
                             cloc: #f
                             cst: #f
                             thisid: #f>))
           nb-actual: 1
           nb-args: 2
           fs: 1
           ffs: 0
           fn-num: 22>
------------------------------------------------------------------------
aaebd8				bits 64
aaebd8			stub_7f0d36aaebd8_1:
aaebd8 83c104			add	ecx,byte 4
aaebdb 90			nop
aaebdc			stub_7f0d36aaebd8_0:
aaebdc e8e3fb48ff		call	do_callback_cont_handler
aaebe1 1112800100000000
GEN FN INLINED VERSION >>> #<lazy-code #347
                              ast: #f
                              generator: #<procedure #348>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #349
      stack: ((pai) (cloc 64) (clo) (ret))
      slot-loc: ((3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((f0 . #<identifier #350
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lst0 . #<identifier #351
                       kind: local
                       sslots: (3)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 30>
------------------------------------------------------------------------
aaebc0				bits 64
aaebc0			stub_7f0d36aaebc0_1:
aaebc0 83c104			add	ecx,byte 4
aaebc3 90			nop
aaebc4			stub_7f0d36aaebc0_0:
aaebc4 e8fbfb48ff		call	do_callback_cont_handler
aaebc9 6112800100000000
GEN FN INLINED VERSION >>> #<lazy-code #352
                              ast: #f
                              generator: #<procedure #353>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #354
      stack: ((unk) (clo) (ret))
      slot-loc: ((2 r . 0) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #355
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 64>
------------------------------------------------------------------------
f400bb				bits 64
f400bb 90		fn_entry_2:
f400bc			version_1280:
f400bc 48c7c371b37f01		mov	rbx,dword 25146225
f400c3			version_1281:
f400c3 4889d8			mov	rax,rbx
f400c6 4883ed08			sub	rbp,byte 8
f400ca 48894500			mov	[rbp],rax
f400ce 48c7c004000000		mov	rax,dword 4
f400d5 4883ed08			sub	rbp,byte 8
f400d9 48894500			mov	[rbp],rax
f400dd 48c7c08120bc00		mov	rax,dword 12329089
f400e4 4883ed08			sub	rbp,byte 8
f400e8 48894500			mov	[rbp],rax
f400ec e83ee2ffff		call	gambit_call_handler
f400f1 488b5d00			mov	rbx,[rbp]
f400f5 4883c508			add	rbp,byte 8
f400f9 4883c510			add	rbp,byte 16
f400fd			version_1282:
f400fd			version_1283:
f400fd			version_1284:
f400fd			version_1285:
f400fd			version_1286:
f400fd			version_1287:
f400fd			version_1288:
f400fd			version_1289:
f400fd			version_1290:
f400fd			alloc_begin_13:
f400fd 4983c118			add	r9,byte 24
f40101 48b830301e5d0d7f
f40109 0000			mov	rax,139695373561904
f4010b 4c3b08			cmp	r9,[rax]
f4010e 7e09			jle	short alloc_end_13
f40110 e8f8deffff		call	heap_limit_handler
f40115 4983c118			add	r9,byte 24
f40119			alloc_end_13:
f40119 49c741e808100000		mov	qword [r9-24],dword 4104
f40121 48c7c029a97f01		mov	rax,dword 25143593
f40128 498941f8			mov	[r9-8],rax
f4012c 49c741f0f6ffffff		mov	qword [r9-16],dword -10
f40134 498d59eb			lea	rbx,[r9-21]
f40138			version_1291:
f40138 4883ed08			sub	rbp,byte 8
f4013c 48c7c0f0b97f01		mov	rax,dword 25147888
f40143 48894500			mov	[rbp],rax
f40147			inlined_call_41:
f40147			version_1292:
f40147			version_1293:
f40147			version_1294:
f40147 4989df			mov	r15,rbx
f4014a			version_1295:
f4014a			version_1296:
f4014a			version_1297:
f4014a			version_1298:
f4014a 4d8b7f0d			mov	r15,[r15+13]
f4014e			version_1299:
f4014e 4883ed10			sub	rbp,byte 16
f40152 48895d08			mov	[rbp+8],rbx
f40156 48c7c090128001		mov	rax,dword 25170576
f4015d 48894500			mov	[rbp],rax
f40161 4c89fb			mov	rbx,r15
f40164			inlined_call_42:
f40164			version_1300:
f40164 4989df			mov	r15,rbx
f40167			version_1301:
f40167			version_1302:
f40167 4c89f8			mov	rax,r15
f4016a 4883ed08			sub	rbp,byte 8
f4016e 48894500			mov	[rbp],rax
f40172 48c7c004000000		mov	rax,dword 4
f40179 4883ed08			sub	rbp,byte 8
f4017d 48894500			mov	[rbp],rax
f40181 48c7c0c122bc00		mov	rax,dword 12329665
f40188 4883ed08			sub	rbp,byte 8
f4018c 48894500			mov	[rbp],rax
f40190 e89ae1ffff		call	gambit_call_handler
f40195 4c8b7d00			mov	r15,[rbp]
f40199 4883c508			add	rbp,byte 8
f4019d 4883c510			add	rbp,byte 16
f401a1			version_1303:
f401a1 4d89fe			mov	r14,r15
f401a4 488b5500			mov	rdx,[rbp]
f401a8 4883c508			add	rbp,byte 8
f401ac 488b4230			mov	rax,[rdx+48]
f401b0 49c7c310000000		mov	r11,dword 16
f401b7 ffe0			jmp	rax
Patch direct stub jump at 7f0d35f400b6
  > now jump to 7f0d35f400bc
------------------------------------------------------------------------
f400b6				bits 64
f400b6 eb04			jmp	short fn_entry_2
!!! ERROR - "A"
GEN VERSION CONTINUATION (CR) >>> Patch table with type unk and ctx:
#<ctx #356
      stack: ((unk) (pai) (cloc 64) (clo) (ret))
      slot-loc: ((4 r . 8) (3 m . 1) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 0)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((f0 . #<identifier #357
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lst0 . #<identifier #358
                       kind: local
                       sslots: (3)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 2
      ffs: 0
      fn-num: 30>
GEN FN INLINED VERSION >>> #<lazy-code #347
                              ast: #f
                              generator: #<procedure #348>
                              flags: (entry)
                              lco-true: #f
                              lco-false: #f>
#<ctx #359
      stack: ((unk) (cloc 64) (clo) (ret))
      slot-loc: ((3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((f0 . #<identifier #360
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lst0 . #<identifier #361
                       kind: local
                       sslots: (3)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 30>
------------------------------------------------------------------------
aaeba8				bits 64
aaeba8			stub_7f0d36aaeba8_1:
aaeba8 83c104			add	ecx,byte 4
aaebab 90			nop
aaebac			stub_7f0d36aaeba8_0:
aaebac e805f948ff		call	do_callback_handler
aaebb1 319a800100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
f401b9				bits 64
f401b9 909090		continuation_33:
f401bc			version_1304:
f401bc			version_1305:
f401bc			version_1306:
f401bc 4c8b7500			mov	r14,[rbp]
f401c0			version_1307:
f401c0			version_1308:
f401c0			version_1309:
f401c0			version_1310:
f401c0 4d8b7605			mov	r14,[r14+5]
f401c4			version_1311:
f401c4 4c89f3			mov	rbx,r14
f401c7 4883c508			add	rbp,byte 8
f401cb			inlined_call_43:
f401cb			version_1312:
f401cb			version_1313:
f401cb 4989df			mov	r15,rbx
f401ce			version_1314:
f401ce 48c7c0f6ffffff		mov	rax,dword -10
f401d5 4c39f8			cmp	rax,r15
f401d8			patchable_jump41:
f401d8 0f84cee9b600		je	stub_7f0d36aaeba8_0
f401de e9c5e9b600		jmp	stub_7f0d36aaeba8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f0d35f401d8 -> 7f0d36aaeba8
GEN VERSION >>> #<lazy-code #362
                   ast: #f
                   generator: #<procedure #363>
                   flags: ()
                   lco-true: #f
                   lco-false: #f>
#<ctx #364
      stack: ((nul) (nul) (cloc 64) (clo) (ret))
      slot-loc: ((4 r . 1) (3 r . 0) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 2) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((f0 . #<identifier #360
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (lst0 . #<identifier #365
                       kind: local
                       sslots: (4 3)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 30>
>>> fall-through-optimization
------------------------------------------------------------------------
f401de				bits 64
f401de 9090		version_1315:
f401e0			version_1316:
f401e0			version_1317:
f401e0 488b5500			mov	rdx,[rbp]
f401e4 4883c508			add	rbp,byte 8
f401e8 488b4238			mov	rax,[rdx+56]
f401ec 49c7c314000000		mov	r11,dword 20
f401f3 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type booc#f and ctx:
#<ctx #366
      stack: ((booc #f) (nulc ()) (strc "A") (clo) (ret))
      slot-loc: ((4 . #f) (3 . #f) (2 . #f) (1 . #f) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((msg0 . #<identifier #367
                       kind: local
                       sslots: (2)
                       flags: ()
                       stype: #f
                       cloc: #f
                       cst: #f
                       thisid: #f>)
            (msgs0 . #<identifier #368
                        kind: local
                        sslots: (3)
                        flags: ()
                        stype: #f
                        cloc: #f
                        cst: #f
                        thisid: #f>))
      nb-actual: 2
      nb-args: 2
      fs: 1
      ffs: 0
      fn-num: 22>
------------------------------------------------------------------------
f401f5				bits 64
f401f5 909090		continuation_34:
f401f8			version_1318:
f401f8 4883ed08			sub	rbp,byte 8
f401fc 48895d00			mov	[rbp],rbx
f40200 48bb097a3b370d7f
f40208 0000			mov	rbx,139694737947145
f4020a e83ce7ffff		call	rt_error_handler
f4020f 488b5d00			mov	rbx,[rbp]
f40213 4883c508			add	rbp,byte 8
