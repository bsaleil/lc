------------------------------------------------------------------------
67f008				bits 64
67f008 e9790f0000		jmp	rtlib_skip
67f00d			heap_limit_handler:
67f00d 4883ed58			sub	rbp,byte 88
67f011 48894d50			mov	[rbp+80],rcx
67f015 48895d48			mov	[rbp+72],rbx
67f019 4c897d40			mov	[rbp+64],r15
67f01d 48897538			mov	[rbp+56],rsi
67f021 48897d30			mov	[rbp+48],rdi
67f025 4c895528			mov	[rbp+40],r10
67f029 4c895d20			mov	[rbp+32],r11
67f02d 4c896518			mov	[rbp+24],r12
67f031 4c896d10			mov	[rbp+16],r13
67f035 4c897508			mov	[rbp+8],r14
67f039 48895500			mov	[rbp],rdx
67f03d 4c890c2530defa00		mov	[+16440880],r9
67f045 4889ef			mov	rdi,rbp
67f048 55			push	rbp
67f049 51			push	rcx
67f04a 4150			push	r8
67f04c 4151			push	r9
67f04e 4881ec80000000		sub	rsp,128
67f055 f20f110424		movsd	[rsp],xmm0
67f05a f20f114c2408		movsd	[rsp+8],xmm1
67f060 f20f11542410		movsd	[rsp+16],xmm2
67f066 f20f115c2418		movsd	[rsp+24],xmm3
67f06c f20f11642420		movsd	[rsp+32],xmm4
67f072 f20f116c2428		movsd	[rsp+40],xmm5
67f078 f20f11742430		movsd	[rsp+48],xmm6
67f07e f20f117c2438		movsd	[rsp+56],xmm7
67f084 f2440f11442440		movsd	[rsp+64],xmm8
67f08b f2440f114c2448		movsd	[rsp+72],xmm9
67f092 f2440f11542450		movsd	[rsp+80],xmm10
67f099 f2440f115c2458		movsd	[rsp+88],xmm11
67f0a0 f2440f11642460		movsd	[rsp+96],xmm12
67f0a7 f2440f116c2468		movsd	[rsp+104],xmm13
67f0ae f2440f11742470		movsd	[rsp+112],xmm14
67f0b5 f2440f117c2478		movsd	[rsp+120],xmm15
67f0bc 4889e0			mov	rax,rsp
67f0bf 4883e4f0			and	rsp,byte -16
67f0c3 4883ec08			sub	rsp,byte 8
67f0c7 50			push	rax
67f0c8 48b804a9fad91d7f
67f0d0 0000			mov	rax,139766187862276
67f0d2 ffd0			call	rax
67f0d4 5c			pop	rsp
67f0d5 f20f100424		movsd	xmm0,[rsp]
67f0da f20f104c2408		movsd	xmm1,[rsp+8]
67f0e0 f20f10542410		movsd	xmm2,[rsp+16]
67f0e6 f20f105c2418		movsd	xmm3,[rsp+24]
67f0ec f20f10642420		movsd	xmm4,[rsp+32]
67f0f2 f20f106c2428		movsd	xmm5,[rsp+40]
67f0f8 f20f10742430		movsd	xmm6,[rsp+48]
67f0fe f20f107c2438		movsd	xmm7,[rsp+56]
67f104 f2440f10442440		movsd	xmm8,[rsp+64]
67f10b f2440f104c2448		movsd	xmm9,[rsp+72]
67f112 f2440f10542450		movsd	xmm10,[rsp+80]
67f119 f2440f105c2458		movsd	xmm11,[rsp+88]
67f120 f2440f10642460		movsd	xmm12,[rsp+96]
67f127 f2440f106c2468		movsd	xmm13,[rsp+104]
67f12e f2440f10742470		movsd	xmm14,[rsp+112]
67f135 f2440f107c2478		movsd	xmm15,[rsp+120]
67f13c 4881c480000000		add	rsp,128
67f143 4159			pop	r9
67f145 4158			pop	r8
67f147 59			pop	rcx
67f148 488b0c2528defa00		mov	rcx,[+16440872]
67f150 49b908e06bdc1d7f
67f158 0000			mov	r9,139766228836360
67f15a 49894928			mov	[r9+40],rcx
67f15e 4c8b0c2530defa00		mov	r9,[+16440880]
67f166 5d			pop	rbp
67f167 488b5500			mov	rdx,[rbp]
67f16b 4c8b7508			mov	r14,[rbp+8]
67f16f 4c8b6d10			mov	r13,[rbp+16]
67f173 4c8b6518			mov	r12,[rbp+24]
67f177 4c8b5d20			mov	r11,[rbp+32]
67f17b 4c8b5528			mov	r10,[rbp+40]
67f17f 488b7d30			mov	rdi,[rbp+48]
67f183 488b7538			mov	rsi,[rbp+56]
67f187 4c8b7d40			mov	r15,[rbp+64]
67f18b 488b5d48			mov	rbx,[rbp+72]
67f18f 488b4d50			mov	rcx,[rbp+80]
67f193 4883c558			add	rbp,byte 88
67f197 c3			ret
67f198			alloc_still_handler:
67f198 4883ed58			sub	rbp,byte 88
67f19c 48894d50			mov	[rbp+80],rcx
67f1a0 48895d48			mov	[rbp+72],rbx
67f1a4 4c897d40			mov	[rbp+64],r15
67f1a8 48897538			mov	[rbp+56],rsi
67f1ac 48897d30			mov	[rbp+48],rdi
67f1b0 4c895528			mov	[rbp+40],r10
67f1b4 4c895d20			mov	[rbp+32],r11
67f1b8 4c896518			mov	[rbp+24],r12
67f1bc 4c896d10			mov	[rbp+16],r13
67f1c0 4c897508			mov	[rbp+8],r14
67f1c4 48895500			mov	[rbp],rdx
67f1c8 4c890c2530defa00		mov	[+16440880],r9
67f1d0 4889ef			mov	rdi,rbp
67f1d3 55			push	rbp
67f1d4 51			push	rcx
67f1d5 4150			push	r8
67f1d7 4151			push	r9
67f1d9 4881ec80000000		sub	rsp,128
67f1e0 f20f110424		movsd	[rsp],xmm0
67f1e5 f20f114c2408		movsd	[rsp+8],xmm1
67f1eb f20f11542410		movsd	[rsp+16],xmm2
67f1f1 f20f115c2418		movsd	[rsp+24],xmm3
67f1f7 f20f11642420		movsd	[rsp+32],xmm4
67f1fd f20f116c2428		movsd	[rsp+40],xmm5
67f203 f20f11742430		movsd	[rsp+48],xmm6
67f209 f20f117c2438		movsd	[rsp+56],xmm7
67f20f f2440f11442440		movsd	[rsp+64],xmm8
67f216 f2440f114c2448		movsd	[rsp+72],xmm9
67f21d f2440f11542450		movsd	[rsp+80],xmm10
67f224 f2440f115c2458		movsd	[rsp+88],xmm11
67f22b f2440f11642460		movsd	[rsp+96],xmm12
67f232 f2440f116c2468		movsd	[rsp+104],xmm13
67f239 f2440f11742470		movsd	[rsp+112],xmm14
67f240 f2440f117c2478		movsd	[rsp+120],xmm15
67f247 488bbc24a8000000		mov	rdi,[rsp+168]
67f24f 488b7560			mov	rsi,[rbp+96]
67f253 4889e0			mov	rax,rsp
67f256 4883e4f0			and	rsp,byte -16
67f25a 4883ec08			sub	rsp,byte 8
67f25e 50			push	rax
67f25f 48b8d0a8fad91d7f
67f267 0000			mov	rax,139766187862224
67f269 ffd0			call	rax
67f26b 5c			pop	rsp
67f26c f20f100424		movsd	xmm0,[rsp]
67f271 f20f104c2408		movsd	xmm1,[rsp+8]
67f277 f20f10542410		movsd	xmm2,[rsp+16]
67f27d f20f105c2418		movsd	xmm3,[rsp+24]
67f283 f20f10642420		movsd	xmm4,[rsp+32]
67f289 f20f106c2428		movsd	xmm5,[rsp+40]
67f28f f20f10742430		movsd	xmm6,[rsp+48]
67f295 f20f107c2438		movsd	xmm7,[rsp+56]
67f29b f2440f10442440		movsd	xmm8,[rsp+64]
67f2a2 f2440f104c2448		movsd	xmm9,[rsp+72]
67f2a9 f2440f10542450		movsd	xmm10,[rsp+80]
67f2b0 f2440f105c2458		movsd	xmm11,[rsp+88]
67f2b7 f2440f10642460		movsd	xmm12,[rsp+96]
67f2be f2440f106c2468		movsd	xmm13,[rsp+104]
67f2c5 f2440f10742470		movsd	xmm14,[rsp+112]
67f2cc f2440f107c2478		movsd	xmm15,[rsp+120]
67f2d3 4881c480000000		add	rsp,128
67f2da 4159			pop	r9
67f2dc 4158			pop	r8
67f2de 59			pop	rcx
67f2df 488b0c2528defa00		mov	rcx,[+16440872]
67f2e7 49b908e06bdc1d7f
67f2ef 0000			mov	r9,139766228836360
67f2f1 49894928			mov	[r9+40],rcx
67f2f5 4c8b0c2530defa00		mov	r9,[+16440880]
67f2fd 5d			pop	rbp
67f2fe 488b5500			mov	rdx,[rbp]
67f302 4c8b7508			mov	r14,[rbp+8]
67f306 4c8b6d10			mov	r13,[rbp+16]
67f30a 4c8b6518			mov	r12,[rbp+24]
67f30e 4c8b5d20			mov	r11,[rbp+32]
67f312 4c8b5528			mov	r10,[rbp+40]
67f316 488b7d30			mov	rdi,[rbp+48]
67f31a 488b7538			mov	rsi,[rbp+56]
67f31e 4c8b7d40			mov	r15,[rbp+64]
67f322 488b5d48			mov	rbx,[rbp+72]
67f326 488b4d50			mov	rcx,[rbp+80]
67f32a 4883c558			add	rbp,byte 88
67f32e c3			ret
67f32f			gambit_call_handler:
67f32f 4883ed58			sub	rbp,byte 88
67f333 48894d50			mov	[rbp+80],rcx
67f337 48895d48			mov	[rbp+72],rbx
67f33b 4c897d40			mov	[rbp+64],r15
67f33f 48897538			mov	[rbp+56],rsi
67f343 48897d30			mov	[rbp+48],rdi
67f347 4c895528			mov	[rbp+40],r10
67f34b 4c895d20			mov	[rbp+32],r11
67f34f 4c896518			mov	[rbp+24],r12
67f353 4c896d10			mov	[rbp+16],r13
67f357 4c897508			mov	[rbp+8],r14
67f35b 48895500			mov	[rbp],rdx
67f35f 4c890c2530defa00		mov	[+16440880],r9
67f367 4889ef			mov	rdi,rbp
67f36a 4889e6			mov	rsi,rsp
67f36d 55			push	rbp
67f36e 51			push	rcx
67f36f 4150			push	r8
67f371 4151			push	r9
67f373 4881ec80000000		sub	rsp,128
67f37a f20f110424		movsd	[rsp],xmm0
67f37f f20f114c2408		movsd	[rsp+8],xmm1
67f385 f20f11542410		movsd	[rsp+16],xmm2
67f38b f20f115c2418		movsd	[rsp+24],xmm3
67f391 f20f11642420		movsd	[rsp+32],xmm4
67f397 f20f116c2428		movsd	[rsp+40],xmm5
67f39d f20f11742430		movsd	[rsp+48],xmm6
67f3a3 f20f117c2438		movsd	[rsp+56],xmm7
67f3a9 f2440f11442440		movsd	[rsp+64],xmm8
67f3b0 f2440f114c2448		movsd	[rsp+72],xmm9
67f3b7 f2440f11542450		movsd	[rsp+80],xmm10
67f3be f2440f115c2458		movsd	[rsp+88],xmm11
67f3c5 f2440f11642460		movsd	[rsp+96],xmm12
67f3cc f2440f116c2468		movsd	[rsp+104],xmm13
67f3d3 f2440f11742470		movsd	[rsp+112],xmm14
67f3da f2440f117c2478		movsd	[rsp+120],xmm15
67f3e1 4889e0			mov	rax,rsp
67f3e4 4883e4f0			and	rsp,byte -16
67f3e8 4883ec08			sub	rsp,byte 8
67f3ec 50			push	rax
67f3ed e85ca7d501		call	gambit_call
67f3f2 5c			pop	rsp
67f3f3 f20f100424		movsd	xmm0,[rsp]
67f3f8 f20f104c2408		movsd	xmm1,[rsp+8]
67f3fe f20f10542410		movsd	xmm2,[rsp+16]
67f404 f20f105c2418		movsd	xmm3,[rsp+24]
67f40a f20f10642420		movsd	xmm4,[rsp+32]
67f410 f20f106c2428		movsd	xmm5,[rsp+40]
67f416 f20f10742430		movsd	xmm6,[rsp+48]
67f41c f20f107c2438		movsd	xmm7,[rsp+56]
67f422 f2440f10442440		movsd	xmm8,[rsp+64]
67f429 f2440f104c2448		movsd	xmm9,[rsp+72]
67f430 f2440f10542450		movsd	xmm10,[rsp+80]
67f437 f2440f105c2458		movsd	xmm11,[rsp+88]
67f43e f2440f10642460		movsd	xmm12,[rsp+96]
67f445 f2440f106c2468		movsd	xmm13,[rsp+104]
67f44c f2440f10742470		movsd	xmm14,[rsp+112]
67f453 f2440f107c2478		movsd	xmm15,[rsp+120]
67f45a 4881c480000000		add	rsp,128
67f461 4159			pop	r9
67f463 4158			pop	r8
67f465 59			pop	rcx
67f466 488b0c2528defa00		mov	rcx,[+16440872]
67f46e 49b908e06bdc1d7f
67f476 0000			mov	r9,139766228836360
67f478 49894928			mov	[r9+40],rcx
67f47c 4c8b0c2530defa00		mov	r9,[+16440880]
67f484 5d			pop	rbp
67f485 488b5500			mov	rdx,[rbp]
67f489 4c8b7508			mov	r14,[rbp+8]
67f48d 4c8b6d10			mov	r13,[rbp+16]
67f491 4c8b6518			mov	r12,[rbp+24]
67f495 4c8b5d20			mov	r11,[rbp+32]
67f499 4c8b5528			mov	r10,[rbp+40]
67f49d 488b7d30			mov	rdi,[rbp+48]
67f4a1 488b7538			mov	rsi,[rbp+56]
67f4a5 4c8b7d40			mov	r15,[rbp+64]
67f4a9 488b5d48			mov	rbx,[rbp+72]
67f4ad 488b4d50			mov	rcx,[rbp+80]
67f4b1 4883c558			add	rbp,byte 88
67f4b5 c3			ret
67f4b6			do_callback_handler:
67f4b6 4883ed58			sub	rbp,byte 88
67f4ba 48894d50			mov	[rbp+80],rcx
67f4be 48895d48			mov	[rbp+72],rbx
67f4c2 4c897d40			mov	[rbp+64],r15
67f4c6 48897538			mov	[rbp+56],rsi
67f4ca 48897d30			mov	[rbp+48],rdi
67f4ce 4c895528			mov	[rbp+40],r10
67f4d2 4c895d20			mov	[rbp+32],r11
67f4d6 4c896518			mov	[rbp+24],r12
67f4da 4c896d10			mov	[rbp+16],r13
67f4de 4c897508			mov	[rbp+8],r14
67f4e2 48895500			mov	[rbp],rdx
67f4e6 4c890c2530defa00		mov	[+16440880],r9
67f4ee 4889ef			mov	rdi,rbp
67f4f1 4889e6			mov	rsi,rsp
67f4f4 55			push	rbp
67f4f5 51			push	rcx
67f4f6 4150			push	r8
67f4f8 4151			push	r9
67f4fa 4881ec80000000		sub	rsp,128
67f501 f20f110424		movsd	[rsp],xmm0
67f506 f20f114c2408		movsd	[rsp+8],xmm1
67f50c f20f11542410		movsd	[rsp+16],xmm2
67f512 f20f115c2418		movsd	[rsp+24],xmm3
67f518 f20f11642420		movsd	[rsp+32],xmm4
67f51e f20f116c2428		movsd	[rsp+40],xmm5
67f524 f20f11742430		movsd	[rsp+48],xmm6
67f52a f20f117c2438		movsd	[rsp+56],xmm7
67f530 f2440f11442440		movsd	[rsp+64],xmm8
67f537 f2440f114c2448		movsd	[rsp+72],xmm9
67f53e f2440f11542450		movsd	[rsp+80],xmm10
67f545 f2440f115c2458		movsd	[rsp+88],xmm11
67f54c f2440f11642460		movsd	[rsp+96],xmm12
67f553 f2440f116c2468		movsd	[rsp+104],xmm13
67f55a f2440f11742470		movsd	[rsp+112],xmm14
67f561 f2440f117c2478		movsd	[rsp+120],xmm15
67f568 4889e0			mov	rax,rsp
67f56b 4883e4f0			and	rsp,byte -16
67f56f 4883ec08			sub	rsp,byte 8
67f573 50			push	rax
67f574 e844a7d501		call	do_callback
67f579 5c			pop	rsp
67f57a f20f100424		movsd	xmm0,[rsp]
67f57f f20f104c2408		movsd	xmm1,[rsp+8]
67f585 f20f10542410		movsd	xmm2,[rsp+16]
67f58b f20f105c2418		movsd	xmm3,[rsp+24]
67f591 f20f10642420		movsd	xmm4,[rsp+32]
67f597 f20f106c2428		movsd	xmm5,[rsp+40]
67f59d f20f10742430		movsd	xmm6,[rsp+48]
67f5a3 f20f107c2438		movsd	xmm7,[rsp+56]
67f5a9 f2440f10442440		movsd	xmm8,[rsp+64]
67f5b0 f2440f104c2448		movsd	xmm9,[rsp+72]
67f5b7 f2440f10542450		movsd	xmm10,[rsp+80]
67f5be f2440f105c2458		movsd	xmm11,[rsp+88]
67f5c5 f2440f10642460		movsd	xmm12,[rsp+96]
67f5cc f2440f106c2468		movsd	xmm13,[rsp+104]
67f5d3 f2440f10742470		movsd	xmm14,[rsp+112]
67f5da f2440f107c2478		movsd	xmm15,[rsp+120]
67f5e1 4881c480000000		add	rsp,128
67f5e8 4159			pop	r9
67f5ea 4158			pop	r8
67f5ec 59			pop	rcx
67f5ed 488b0c2528defa00		mov	rcx,[+16440872]
67f5f5 49b908e06bdc1d7f
67f5fd 0000			mov	r9,139766228836360
67f5ff 49894928			mov	[r9+40],rcx
67f603 4c8b0c2530defa00		mov	r9,[+16440880]
67f60b 5d			pop	rbp
67f60c 488b5500			mov	rdx,[rbp]
67f610 4c8b7508			mov	r14,[rbp+8]
67f614 4c8b6d10			mov	r13,[rbp+16]
67f618 4c8b6518			mov	r12,[rbp+24]
67f61c 4c8b5d20			mov	r11,[rbp+32]
67f620 4c8b5528			mov	r10,[rbp+40]
67f624 488b7d30			mov	rdi,[rbp+48]
67f628 488b7538			mov	rsi,[rbp+56]
67f62c 4c8b7d40			mov	r15,[rbp+64]
67f630 488b5d48			mov	rbx,[rbp+72]
67f634 488b4d50			mov	rcx,[rbp+80]
67f638 4883c558			add	rbp,byte 88
67f63c c3			ret
67f63d			do_callback_fn_handler:
67f63d 4883ed58			sub	rbp,byte 88
67f641 48894d50			mov	[rbp+80],rcx
67f645 48895d48			mov	[rbp+72],rbx
67f649 4c897d40			mov	[rbp+64],r15
67f64d 48897538			mov	[rbp+56],rsi
67f651 48897d30			mov	[rbp+48],rdi
67f655 4c895528			mov	[rbp+40],r10
67f659 4c895d20			mov	[rbp+32],r11
67f65d 4c896518			mov	[rbp+24],r12
67f661 4c896d10			mov	[rbp+16],r13
67f665 4c897508			mov	[rbp+8],r14
67f669 48895500			mov	[rbp],rdx
67f66d 4c890c2530defa00		mov	[+16440880],r9
67f675 4889ef			mov	rdi,rbp
67f678 4889e6			mov	rsi,rsp
67f67b 55			push	rbp
67f67c 51			push	rcx
67f67d 4150			push	r8
67f67f 4151			push	r9
67f681 4881ec80000000		sub	rsp,128
67f688 f20f110424		movsd	[rsp],xmm0
67f68d f20f114c2408		movsd	[rsp+8],xmm1
67f693 f20f11542410		movsd	[rsp+16],xmm2
67f699 f20f115c2418		movsd	[rsp+24],xmm3
67f69f f20f11642420		movsd	[rsp+32],xmm4
67f6a5 f20f116c2428		movsd	[rsp+40],xmm5
67f6ab f20f11742430		movsd	[rsp+48],xmm6
67f6b1 f20f117c2438		movsd	[rsp+56],xmm7
67f6b7 f2440f11442440		movsd	[rsp+64],xmm8
67f6be f2440f114c2448		movsd	[rsp+72],xmm9
67f6c5 f2440f11542450		movsd	[rsp+80],xmm10
67f6cc f2440f115c2458		movsd	[rsp+88],xmm11
67f6d3 f2440f11642460		movsd	[rsp+96],xmm12
67f6da f2440f116c2468		movsd	[rsp+104],xmm13
67f6e1 f2440f11742470		movsd	[rsp+112],xmm14
67f6e8 f2440f117c2478		movsd	[rsp+120],xmm15
67f6ef 4889e0			mov	rax,rsp
67f6f2 4883e4f0			and	rsp,byte -16
67f6f6 4883ec08			sub	rsp,byte 8
67f6fa 50			push	rax
67f6fb e82ca7d501		call	do_callback_fn
67f700 5c			pop	rsp
67f701 f20f100424		movsd	xmm0,[rsp]
67f706 f20f104c2408		movsd	xmm1,[rsp+8]
67f70c f20f10542410		movsd	xmm2,[rsp+16]
67f712 f20f105c2418		movsd	xmm3,[rsp+24]
67f718 f20f10642420		movsd	xmm4,[rsp+32]
67f71e f20f106c2428		movsd	xmm5,[rsp+40]
67f724 f20f10742430		movsd	xmm6,[rsp+48]
67f72a f20f107c2438		movsd	xmm7,[rsp+56]
67f730 f2440f10442440		movsd	xmm8,[rsp+64]
67f737 f2440f104c2448		movsd	xmm9,[rsp+72]
67f73e f2440f10542450		movsd	xmm10,[rsp+80]
67f745 f2440f105c2458		movsd	xmm11,[rsp+88]
67f74c f2440f10642460		movsd	xmm12,[rsp+96]
67f753 f2440f106c2468		movsd	xmm13,[rsp+104]
67f75a f2440f10742470		movsd	xmm14,[rsp+112]
67f761 f2440f107c2478		movsd	xmm15,[rsp+120]
67f768 4881c480000000		add	rsp,128
67f76f 4159			pop	r9
67f771 4158			pop	r8
67f773 59			pop	rcx
67f774 488b0c2528defa00		mov	rcx,[+16440872]
67f77c 49b908e06bdc1d7f
67f784 0000			mov	r9,139766228836360
67f786 49894928			mov	[r9+40],rcx
67f78a 4c8b0c2530defa00		mov	r9,[+16440880]
67f792 5d			pop	rbp
67f793 488b5500			mov	rdx,[rbp]
67f797 4c8b7508			mov	r14,[rbp+8]
67f79b 4c8b6d10			mov	r13,[rbp+16]
67f79f 4c8b6518			mov	r12,[rbp+24]
67f7a3 4c8b5d20			mov	r11,[rbp+32]
67f7a7 4c8b5528			mov	r10,[rbp+40]
67f7ab 488b7d30			mov	rdi,[rbp+48]
67f7af 488b7538			mov	rsi,[rbp+56]
67f7b3 4c8b7d40			mov	r15,[rbp+64]
67f7b7 488b5d48			mov	rbx,[rbp+72]
67f7bb 488b4d50			mov	rcx,[rbp+80]
67f7bf 4883c558			add	rbp,byte 88
67f7c3 c3			ret
67f7c4			do_callback_cont_handler:
67f7c4 4883ed58			sub	rbp,byte 88
67f7c8 48894d50			mov	[rbp+80],rcx
67f7cc 48895d48			mov	[rbp+72],rbx
67f7d0 4c897d40			mov	[rbp+64],r15
67f7d4 48897538			mov	[rbp+56],rsi
67f7d8 48897d30			mov	[rbp+48],rdi
67f7dc 4c895528			mov	[rbp+40],r10
67f7e0 4c895d20			mov	[rbp+32],r11
67f7e4 4c896518			mov	[rbp+24],r12
67f7e8 4c896d10			mov	[rbp+16],r13
67f7ec 4c897508			mov	[rbp+8],r14
67f7f0 48895500			mov	[rbp],rdx
67f7f4 4c890c2530defa00		mov	[+16440880],r9
67f7fc 4889ef			mov	rdi,rbp
67f7ff 4889e6			mov	rsi,rsp
67f802 55			push	rbp
67f803 51			push	rcx
67f804 4150			push	r8
67f806 4151			push	r9
67f808 4881ec80000000		sub	rsp,128
67f80f f20f110424		movsd	[rsp],xmm0
67f814 f20f114c2408		movsd	[rsp+8],xmm1
67f81a f20f11542410		movsd	[rsp+16],xmm2
67f820 f20f115c2418		movsd	[rsp+24],xmm3
67f826 f20f11642420		movsd	[rsp+32],xmm4
67f82c f20f116c2428		movsd	[rsp+40],xmm5
67f832 f20f11742430		movsd	[rsp+48],xmm6
67f838 f20f117c2438		movsd	[rsp+56],xmm7
67f83e f2440f11442440		movsd	[rsp+64],xmm8
67f845 f2440f114c2448		movsd	[rsp+72],xmm9
67f84c f2440f11542450		movsd	[rsp+80],xmm10
67f853 f2440f115c2458		movsd	[rsp+88],xmm11
67f85a f2440f11642460		movsd	[rsp+96],xmm12
67f861 f2440f116c2468		movsd	[rsp+104],xmm13
67f868 f2440f11742470		movsd	[rsp+112],xmm14
67f86f f2440f117c2478		movsd	[rsp+120],xmm15
67f876 4889e0			mov	rax,rsp
67f879 4883e4f0			and	rsp,byte -16
67f87d 4883ec08			sub	rsp,byte 8
67f881 50			push	rax
67f882 e814a7d501		call	do_callback_cont
67f887 5c			pop	rsp
67f888 f20f100424		movsd	xmm0,[rsp]
67f88d f20f104c2408		movsd	xmm1,[rsp+8]
67f893 f20f10542410		movsd	xmm2,[rsp+16]
67f899 f20f105c2418		movsd	xmm3,[rsp+24]
67f89f f20f10642420		movsd	xmm4,[rsp+32]
67f8a5 f20f106c2428		movsd	xmm5,[rsp+40]
67f8ab f20f10742430		movsd	xmm6,[rsp+48]
67f8b1 f20f107c2438		movsd	xmm7,[rsp+56]
67f8b7 f2440f10442440		movsd	xmm8,[rsp+64]
67f8be f2440f104c2448		movsd	xmm9,[rsp+72]
67f8c5 f2440f10542450		movsd	xmm10,[rsp+80]
67f8cc f2440f105c2458		movsd	xmm11,[rsp+88]
67f8d3 f2440f10642460		movsd	xmm12,[rsp+96]
67f8da f2440f106c2468		movsd	xmm13,[rsp+104]
67f8e1 f2440f10742470		movsd	xmm14,[rsp+112]
67f8e8 f2440f107c2478		movsd	xmm15,[rsp+120]
67f8ef 4881c480000000		add	rsp,128
67f8f6 4159			pop	r9
67f8f8 4158			pop	r8
67f8fa 59			pop	rcx
67f8fb 488b0c2528defa00		mov	rcx,[+16440872]
67f903 49b908e06bdc1d7f
67f90b 0000			mov	r9,139766228836360
67f90d 49894928			mov	[r9+40],rcx
67f911 4c8b0c2530defa00		mov	r9,[+16440880]
67f919 5d			pop	rbp
67f91a 488b5500			mov	rdx,[rbp]
67f91e 4c8b7508			mov	r14,[rbp+8]
67f922 4c8b6d10			mov	r13,[rbp+16]
67f926 4c8b6518			mov	r12,[rbp+24]
67f92a 4c8b5d20			mov	r11,[rbp+32]
67f92e 4c8b5528			mov	r10,[rbp+40]
67f932 488b7d30			mov	rdi,[rbp+48]
67f936 488b7538			mov	rsi,[rbp+56]
67f93a 4c8b7d40			mov	r15,[rbp+64]
67f93e 488b5d48			mov	rbx,[rbp+72]
67f942 488b4d50			mov	rcx,[rbp+80]
67f946 4883c558			add	rbp,byte 88
67f94a c3			ret
67f94b			rt_error_handler:
67f94b 4883ed58			sub	rbp,byte 88
67f94f 48894d50			mov	[rbp+80],rcx
67f953 48895d48			mov	[rbp+72],rbx
67f957 4c897d40			mov	[rbp+64],r15
67f95b 48897538			mov	[rbp+56],rsi
67f95f 48897d30			mov	[rbp+48],rdi
67f963 4c895528			mov	[rbp+40],r10
67f967 4c895d20			mov	[rbp+32],r11
67f96b 4c896518			mov	[rbp+24],r12
67f96f 4c896d10			mov	[rbp+16],r13
67f973 4c897508			mov	[rbp+8],r14
67f977 48895500			mov	[rbp],rdx
67f97b 4c890c2530defa00		mov	[+16440880],r9
67f983 4889ef			mov	rdi,rbp
67f986 4889e6			mov	rsi,rsp
67f989 55			push	rbp
67f98a 51			push	rcx
67f98b 4150			push	r8
67f98d 4151			push	r9
67f98f 4881ec80000000		sub	rsp,128
67f996 f20f110424		movsd	[rsp],xmm0
67f99b f20f114c2408		movsd	[rsp+8],xmm1
67f9a1 f20f11542410		movsd	[rsp+16],xmm2
67f9a7 f20f115c2418		movsd	[rsp+24],xmm3
67f9ad f20f11642420		movsd	[rsp+32],xmm4
67f9b3 f20f116c2428		movsd	[rsp+40],xmm5
67f9b9 f20f11742430		movsd	[rsp+48],xmm6
67f9bf f20f117c2438		movsd	[rsp+56],xmm7
67f9c5 f2440f11442440		movsd	[rsp+64],xmm8
67f9cc f2440f114c2448		movsd	[rsp+72],xmm9
67f9d3 f2440f11542450		movsd	[rsp+80],xmm10
67f9da f2440f115c2458		movsd	[rsp+88],xmm11
67f9e1 f2440f11642460		movsd	[rsp+96],xmm12
67f9e8 f2440f116c2468		movsd	[rsp+104],xmm13
67f9ef f2440f11742470		movsd	[rsp+112],xmm14
67f9f6 f2440f117c2478		movsd	[rsp+120],xmm15
67f9fd 4889e0			mov	rax,rsp
67fa00 4883e4f0			and	rsp,byte -16
67fa04 4883ec08			sub	rsp,byte 8
67fa08 50			push	rax
67fa09 e8229cd501		call	rt_error
67fa0e 5c			pop	rsp
67fa0f f20f100424		movsd	xmm0,[rsp]
67fa14 f20f104c2408		movsd	xmm1,[rsp+8]
67fa1a f20f10542410		movsd	xmm2,[rsp+16]
67fa20 f20f105c2418		movsd	xmm3,[rsp+24]
67fa26 f20f10642420		movsd	xmm4,[rsp+32]
67fa2c f20f106c2428		movsd	xmm5,[rsp+40]
67fa32 f20f10742430		movsd	xmm6,[rsp+48]
67fa38 f20f107c2438		movsd	xmm7,[rsp+56]
67fa3e f2440f10442440		movsd	xmm8,[rsp+64]
67fa45 f2440f104c2448		movsd	xmm9,[rsp+72]
67fa4c f2440f10542450		movsd	xmm10,[rsp+80]
67fa53 f2440f105c2458		movsd	xmm11,[rsp+88]
67fa5a f2440f10642460		movsd	xmm12,[rsp+96]
67fa61 f2440f106c2468		movsd	xmm13,[rsp+104]
67fa68 f2440f10742470		movsd	xmm14,[rsp+112]
67fa6f f2440f107c2478		movsd	xmm15,[rsp+120]
67fa76 4881c480000000		add	rsp,128
67fa7d 4159			pop	r9
67fa7f 4158			pop	r8
67fa81 59			pop	rcx
67fa82 488b0c2528defa00		mov	rcx,[+16440872]
67fa8a 49b908e06bdc1d7f
67fa92 0000			mov	r9,139766228836360
67fa94 49894928			mov	[r9+40],rcx
67fa98 4c8b0c2530defa00		mov	r9,[+16440880]
67faa0 5d			pop	rbp
67faa1 488b5500			mov	rdx,[rbp]
67faa5 4c8b7508			mov	r14,[rbp+8]
67faa9 4c8b6d10			mov	r13,[rbp+16]
67faad 4c8b6518			mov	r12,[rbp+24]
67fab1 4c8b5d20			mov	r11,[rbp+32]
67fab5 4c8b5528			mov	r10,[rbp+40]
67fab9 488b7d30			mov	rdi,[rbp+48]
67fabd 488b7538			mov	rsi,[rbp+56]
67fac1 4c8b7d40			mov	r15,[rbp+64]
67fac5 488b5d48			mov	rbx,[rbp+72]
67fac9 488b4d50			mov	rcx,[rbp+80]
67facd 4883c558			add	rbp,byte 88
67fad1 c3			ret
67fad2			print_msg_handler:
67fad2 4883ed58			sub	rbp,byte 88
67fad6 48894d50			mov	[rbp+80],rcx
67fada 48895d48			mov	[rbp+72],rbx
67fade 4c897d40			mov	[rbp+64],r15
67fae2 48897538			mov	[rbp+56],rsi
67fae6 48897d30			mov	[rbp+48],rdi
67faea 4c895528			mov	[rbp+40],r10
67faee 4c895d20			mov	[rbp+32],r11
67faf2 4c896518			mov	[rbp+24],r12
67faf6 4c896d10			mov	[rbp+16],r13
67fafa 4c897508			mov	[rbp+8],r14
67fafe 48895500			mov	[rbp],rdx
67fb02 4c890c2530defa00		mov	[+16440880],r9
67fb0a 4889ef			mov	rdi,rbp
67fb0d 4889e6			mov	rsi,rsp
67fb10 55			push	rbp
67fb11 51			push	rcx
67fb12 4150			push	r8
67fb14 4151			push	r9
67fb16 4881ec80000000		sub	rsp,128
67fb1d f20f110424		movsd	[rsp],xmm0
67fb22 f20f114c2408		movsd	[rsp+8],xmm1
67fb28 f20f11542410		movsd	[rsp+16],xmm2
67fb2e f20f115c2418		movsd	[rsp+24],xmm3
67fb34 f20f11642420		movsd	[rsp+32],xmm4
67fb3a f20f116c2428		movsd	[rsp+40],xmm5
67fb40 f20f11742430		movsd	[rsp+48],xmm6
67fb46 f20f117c2438		movsd	[rsp+56],xmm7
67fb4c f2440f11442440		movsd	[rsp+64],xmm8
67fb53 f2440f114c2448		movsd	[rsp+72],xmm9
67fb5a f2440f11542450		movsd	[rsp+80],xmm10
67fb61 f2440f115c2458		movsd	[rsp+88],xmm11
67fb68 f2440f11642460		movsd	[rsp+96],xmm12
67fb6f f2440f116c2468		movsd	[rsp+104],xmm13
67fb76 f2440f11742470		movsd	[rsp+112],xmm14
67fb7d f2440f117c2478		movsd	[rsp+120],xmm15
67fb84 4889e0			mov	rax,rsp
67fb87 4883e4f0			and	rsp,byte -16
67fb8b 4883ec08			sub	rsp,byte 8
67fb8f 50			push	rax
67fb90 e8289dd501		call	print-msg
67fb95 5c			pop	rsp
67fb96 f20f100424		movsd	xmm0,[rsp]
67fb9b f20f104c2408		movsd	xmm1,[rsp+8]
67fba1 f20f10542410		movsd	xmm2,[rsp+16]
67fba7 f20f105c2418		movsd	xmm3,[rsp+24]
67fbad f20f10642420		movsd	xmm4,[rsp+32]
67fbb3 f20f106c2428		movsd	xmm5,[rsp+40]
67fbb9 f20f10742430		movsd	xmm6,[rsp+48]
67fbbf f20f107c2438		movsd	xmm7,[rsp+56]
67fbc5 f2440f10442440		movsd	xmm8,[rsp+64]
67fbcc f2440f104c2448		movsd	xmm9,[rsp+72]
67fbd3 f2440f10542450		movsd	xmm10,[rsp+80]
67fbda f2440f105c2458		movsd	xmm11,[rsp+88]
67fbe1 f2440f10642460		movsd	xmm12,[rsp+96]
67fbe8 f2440f106c2468		movsd	xmm13,[rsp+104]
67fbef f2440f10742470		movsd	xmm14,[rsp+112]
67fbf6 f2440f107c2478		movsd	xmm15,[rsp+120]
67fbfd 4881c480000000		add	rsp,128
67fc04 4159			pop	r9
67fc06 4158			pop	r8
67fc08 59			pop	rcx
67fc09 488b0c2528defa00		mov	rcx,[+16440872]
67fc11 49b908e06bdc1d7f
67fc19 0000			mov	r9,139766228836360
67fc1b 49894928			mov	[r9+40],rcx
67fc1f 4c8b0c2530defa00		mov	r9,[+16440880]
67fc27 5d			pop	rbp
67fc28 488b5500			mov	rdx,[rbp]
67fc2c 4c8b7508			mov	r14,[rbp+8]
67fc30 4c8b6d10			mov	r13,[rbp+16]
67fc34 4c8b6518			mov	r12,[rbp+24]
67fc38 4c8b5d20			mov	r11,[rbp+32]
67fc3c 4c8b5528			mov	r10,[rbp+40]
67fc40 488b7d30			mov	rdi,[rbp+48]
67fc44 488b7538			mov	rsi,[rbp+56]
67fc48 4c8b7d40			mov	r15,[rbp+64]
67fc4c 488b5d48			mov	rbx,[rbp+72]
67fc50 488b4d50			mov	rcx,[rbp+80]
67fc54 4883c558			add	rbp,byte 88
67fc58 c3			ret
67fc59			print_msg_val_handler:
67fc59 4883ed58			sub	rbp,byte 88
67fc5d 48894d50			mov	[rbp+80],rcx
67fc61 48895d48			mov	[rbp+72],rbx
67fc65 4c897d40			mov	[rbp+64],r15
67fc69 48897538			mov	[rbp+56],rsi
67fc6d 48897d30			mov	[rbp+48],rdi
67fc71 4c895528			mov	[rbp+40],r10
67fc75 4c895d20			mov	[rbp+32],r11
67fc79 4c896518			mov	[rbp+24],r12
67fc7d 4c896d10			mov	[rbp+16],r13
67fc81 4c897508			mov	[rbp+8],r14
67fc85 48895500			mov	[rbp],rdx
67fc89 4c890c2530defa00		mov	[+16440880],r9
67fc91 4889ef			mov	rdi,rbp
67fc94 4889e6			mov	rsi,rsp
67fc97 55			push	rbp
67fc98 51			push	rcx
67fc99 4150			push	r8
67fc9b 4151			push	r9
67fc9d 4881ec80000000		sub	rsp,128
67fca4 f20f110424		movsd	[rsp],xmm0
67fca9 f20f114c2408		movsd	[rsp+8],xmm1
67fcaf f20f11542410		movsd	[rsp+16],xmm2
67fcb5 f20f115c2418		movsd	[rsp+24],xmm3
67fcbb f20f11642420		movsd	[rsp+32],xmm4
67fcc1 f20f116c2428		movsd	[rsp+40],xmm5
67fcc7 f20f11742430		movsd	[rsp+48],xmm6
67fccd f20f117c2438		movsd	[rsp+56],xmm7
67fcd3 f2440f11442440		movsd	[rsp+64],xmm8
67fcda f2440f114c2448		movsd	[rsp+72],xmm9
67fce1 f2440f11542450		movsd	[rsp+80],xmm10
67fce8 f2440f115c2458		movsd	[rsp+88],xmm11
67fcef f2440f11642460		movsd	[rsp+96],xmm12
67fcf6 f2440f116c2468		movsd	[rsp+104],xmm13
67fcfd f2440f11742470		movsd	[rsp+112],xmm14
67fd04 f2440f117c2478		movsd	[rsp+120],xmm15
67fd0b 4889e0			mov	rax,rsp
67fd0e 4883e4f0			and	rsp,byte -16
67fd12 4883ec08			sub	rsp,byte 8
67fd16 50			push	rax
67fd17 e8839ad501		call	print-msg-val
67fd1c 5c			pop	rsp
67fd1d f20f100424		movsd	xmm0,[rsp]
67fd22 f20f104c2408		movsd	xmm1,[rsp+8]
67fd28 f20f10542410		movsd	xmm2,[rsp+16]
67fd2e f20f105c2418		movsd	xmm3,[rsp+24]
67fd34 f20f10642420		movsd	xmm4,[rsp+32]
67fd3a f20f106c2428		movsd	xmm5,[rsp+40]
67fd40 f20f10742430		movsd	xmm6,[rsp+48]
67fd46 f20f107c2438		movsd	xmm7,[rsp+56]
67fd4c f2440f10442440		movsd	xmm8,[rsp+64]
67fd53 f2440f104c2448		movsd	xmm9,[rsp+72]
67fd5a f2440f10542450		movsd	xmm10,[rsp+80]
67fd61 f2440f105c2458		movsd	xmm11,[rsp+88]
67fd68 f2440f10642460		movsd	xmm12,[rsp+96]
67fd6f f2440f106c2468		movsd	xmm13,[rsp+104]
67fd76 f2440f10742470		movsd	xmm14,[rsp+112]
67fd7d f2440f107c2478		movsd	xmm15,[rsp+120]
67fd84 4881c480000000		add	rsp,128
67fd8b 4159			pop	r9
67fd8d 4158			pop	r8
67fd8f 59			pop	rcx
67fd90 488b0c2528defa00		mov	rcx,[+16440872]
67fd98 49b908e06bdc1d7f
67fda0 0000			mov	r9,139766228836360
67fda2 49894928			mov	[r9+40],rcx
67fda6 4c8b0c2530defa00		mov	r9,[+16440880]
67fdae 5d			pop	rbp
67fdaf 488b5500			mov	rdx,[rbp]
67fdb3 4c8b7508			mov	r14,[rbp+8]
67fdb7 4c8b6d10			mov	r13,[rbp+16]
67fdbb 4c8b6518			mov	r12,[rbp+24]
67fdbf 4c8b5d20			mov	r11,[rbp+32]
67fdc3 4c8b5528			mov	r10,[rbp+40]
67fdc7 488b7d30			mov	rdi,[rbp+48]
67fdcb 488b7538			mov	rsi,[rbp+56]
67fdcf 4c8b7d40			mov	r15,[rbp+64]
67fdd3 488b5d48			mov	rbx,[rbp+72]
67fdd7 488b4d50			mov	rcx,[rbp+80]
67fddb 4883c558			add	rbp,byte 88
67fddf c3			ret
67fde0			repl:
67fde0 4883ed58			sub	rbp,byte 88
67fde4 48894d50			mov	[rbp+80],rcx
67fde8 48895d48			mov	[rbp+72],rbx
67fdec 4c897d40			mov	[rbp+64],r15
67fdf0 48897538			mov	[rbp+56],rsi
67fdf4 48897d30			mov	[rbp+48],rdi
67fdf8 4c895528			mov	[rbp+40],r10
67fdfc 4c895d20			mov	[rbp+32],r11
67fe00 4c896518			mov	[rbp+24],r12
67fe04 4c896d10			mov	[rbp+16],r13
67fe08 4c897508			mov	[rbp+8],r14
67fe0c 48895500			mov	[rbp],rdx
67fe10 4c890c2530defa00		mov	[+16440880],r9
67fe18 4889ef			mov	rdi,rbp
67fe1b 4889e6			mov	rsi,rsp
67fe1e 55			push	rbp
67fe1f 51			push	rcx
67fe20 4150			push	r8
67fe22 4151			push	r9
67fe24 4881ec80000000		sub	rsp,128
67fe2b f20f110424		movsd	[rsp],xmm0
67fe30 f20f114c2408		movsd	[rsp+8],xmm1
67fe36 f20f11542410		movsd	[rsp+16],xmm2
67fe3c f20f115c2418		movsd	[rsp+24],xmm3
67fe42 f20f11642420		movsd	[rsp+32],xmm4
67fe48 f20f116c2428		movsd	[rsp+40],xmm5
67fe4e f20f11742430		movsd	[rsp+48],xmm6
67fe54 f20f117c2438		movsd	[rsp+56],xmm7
67fe5a f2440f11442440		movsd	[rsp+64],xmm8
67fe61 f2440f114c2448		movsd	[rsp+72],xmm9
67fe68 f2440f11542450		movsd	[rsp+80],xmm10
67fe6f f2440f115c2458		movsd	[rsp+88],xmm11
67fe76 f2440f11642460		movsd	[rsp+96],xmm12
67fe7d f2440f116c2468		movsd	[rsp+104],xmm13
67fe84 f2440f11742470		movsd	[rsp+112],xmm14
67fe8b f2440f117c2478		movsd	[rsp+120],xmm15
67fe92 4889e0			mov	rax,rsp
67fe95 4883e4f0			and	rsp,byte -16
67fe99 4883ec08			sub	rsp,byte 8
67fe9d 50			push	rax
67fe9e e8389bd501		call	repl
67fea3 5c			pop	rsp
67fea4 f20f100424		movsd	xmm0,[rsp]
67fea9 f20f104c2408		movsd	xmm1,[rsp+8]
67feaf f20f10542410		movsd	xmm2,[rsp+16]
67feb5 f20f105c2418		movsd	xmm3,[rsp+24]
67febb f20f10642420		movsd	xmm4,[rsp+32]
67fec1 f20f106c2428		movsd	xmm5,[rsp+40]
67fec7 f20f10742430		movsd	xmm6,[rsp+48]
67fecd f20f107c2438		movsd	xmm7,[rsp+56]
67fed3 f2440f10442440		movsd	xmm8,[rsp+64]
67feda f2440f104c2448		movsd	xmm9,[rsp+72]
67fee1 f2440f10542450		movsd	xmm10,[rsp+80]
67fee8 f2440f105c2458		movsd	xmm11,[rsp+88]
67feef f2440f10642460		movsd	xmm12,[rsp+96]
67fef6 f2440f106c2468		movsd	xmm13,[rsp+104]
67fefd f2440f10742470		movsd	xmm14,[rsp+112]
67ff04 f2440f107c2478		movsd	xmm15,[rsp+120]
67ff0b 4881c480000000		add	rsp,128
67ff12 4159			pop	r9
67ff14 4158			pop	r8
67ff16 59			pop	rcx
67ff17 488b0c2528defa00		mov	rcx,[+16440872]
67ff1f 49b908e06bdc1d7f
67ff27 0000			mov	r9,139766228836360
67ff29 49894928			mov	[r9+40],rcx
67ff2d 4c8b0c2530defa00		mov	r9,[+16440880]
67ff35 5d			pop	rbp
67ff36 488b5500			mov	rdx,[rbp]
67ff3a 4c8b7508			mov	r14,[rbp+8]
67ff3e 4c8b6d10			mov	r13,[rbp+16]
67ff42 4c8b6518			mov	r12,[rbp+24]
67ff46 4c8b5d20			mov	r11,[rbp+32]
67ff4a 4c8b5528			mov	r10,[rbp+40]
67ff4e 488b7d30			mov	rdi,[rbp+48]
67ff52 488b7538			mov	rsi,[rbp+56]
67ff56 4c8b7d40			mov	r15,[rbp+64]
67ff5a 488b5d48			mov	rbx,[rbp+72]
67ff5e 488b4d50			mov	rcx,[rbp+80]
67ff62 4883c558			add	rbp,byte 88
67ff66 c3			ret
67ff67			err_wrong_num_args:
67ff67 4883ed08			sub	rbp,byte 8
67ff6b 48895d00			mov	[rbp],rbx
67ff6f 48bb617d60da1d7f
67ff77 0000			mov	rbx,139766194535777
67ff79 e8cdf9ffff		call	rt_error_handler
67ff7e 488b5d00			mov	rbx,[rbp]
67ff82 4883c508			add	rbp,byte 8
67ff86			rtlib_skip:
67ff86 4881ec80000000		sub	rsp,128
67ff8d f20f110424		movsd	[rsp],xmm0
67ff92 f20f114c2408		movsd	[rsp+8],xmm1
67ff98 f20f11542410		movsd	[rsp+16],xmm2
67ff9e f20f115c2418		movsd	[rsp+24],xmm3
67ffa4 f20f11642420		movsd	[rsp+32],xmm4
67ffaa f20f116c2428		movsd	[rsp+40],xmm5
67ffb0 f20f11742430		movsd	[rsp+48],xmm6
67ffb6 f20f117c2438		movsd	[rsp+56],xmm7
67ffbc f2440f11442440		movsd	[rsp+64],xmm8
67ffc3 f2440f114c2448		movsd	[rsp+72],xmm9
67ffca f2440f11542450		movsd	[rsp+80],xmm10
67ffd1 f2440f115c2458		movsd	[rsp+88],xmm11
67ffd8 f2440f11642460		movsd	[rsp+96],xmm12
67ffdf f2440f116c2468		movsd	[rsp+104],xmm13
67ffe6 f2440f11742470		movsd	[rsp+112],xmm14
67ffed f2440f117c2478		movsd	[rsp+120],xmm15
67fff4 50			push	rax
67fff5 53			push	rbx
67fff6 51			push	rcx
67fff7 52			push	rdx
67fff8 55			push	rbp
67fff9 56			push	rsi
67fffa 57			push	rdi
67fffb 4150			push	r8
67fffd 4151			push	r9
67ffff 4152			push	r10
680001 4153			push	r11
680003 4154			push	r12
680005 4155			push	r13
680007 4156			push	r14
680009 4157			push	r15
68000b 48bd88e267d81d7f
680013 0000			mov	rbp,139766161465992
680015 48b808e06bdc1d7f
68001d 0000			mov	rax,139766228836360
68001f 488b0c2528defa00		mov	rcx,[+16440872]
680027 48894828			mov	[rax+40],rcx
68002b 48c7c100000000		mov	rcx,dword 0
680032 4c8b0c2530defa00		mov	r9,[+16440880]
68003a 49c7c0c89b7a01		mov	r8,dword 24812488
680041 48c7c300000000		mov	rbx,dword 0
680048 49c7c700000000		mov	r15,dword 0
68004f 48c7c600000000		mov	rsi,dword 0
680056 48c7c700000000		mov	rdi,dword 0
68005d 49c7c200000000		mov	r10,dword 0
680064 49c7c300000000		mov	r11,dword 0
68006b 49c7c400000000		mov	r12,dword 0
680072 49c7c500000000		mov	r13,dword 0
680079 49c7c600000000		mov	r14,dword 0
680080 48c7c200000000		mov	rdx,dword 0
680087			prog_begin1:
------------------------------------------------------------------------
1f0af0				bits 64
1f0af0			stub_7f1dd91f0af0_1:
1f0af0 83c104			add	ecx,byte 4
1f0af3 90			nop
1f0af4			stub_7f1dd91f0af0_0:
1f0af4 e844eb48ff		call	do_callback_fn_handler
1f0af9 f1bd760100000000
------------------------------------------------------------------------
1f0ad8				bits 64
1f0ad8			stub_7f1dd91f0ad8_0:
1f0ad8 e8e7ec48ff		call	do_callback_cont_handler
1f0add d1807a0100000000
------------------------------------------------------------------------
680087				bits 64
680087 90		version_1:
680088			version_2:
680088			version_3:
680088			version_4:
680088			version_5:
680088 4883ed08			sub	rbp,byte 8
68008c 48c7c050bb7601		mov	rax,dword 24558416
680093 48894500			mov	[rbp],rax
680097 48b8000000000000
68009f 1c40			mov	rax,4619567317775286272
6800a1 66480f6ed0		movq	xmm2,rax
6800a6 49c7c300000000		mov	r11,dword 0
6800ad 48c7c704000000		mov	rdi,dword 4
6800b4			stub_load_1:
6800b4 e93b0ab700		jmp	dest_7f1dd91f0af4_1
GEN VERSION FN#<lazy-code #2
                 ast: #f
                 generator: #<procedure #3>
                 versions: #<table #4>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f
                 generic-ctx: #f
                 generic-vers: #f>
 >>> #<ctx #5
           stack: (#<ctx-tflo #6
                      sym: float
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tclo #7
                      sym: closure
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tret #8
                      sym: retaddr
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>)
           slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 0)
             (r . 1)
             (r . 3)
             (r . 4)
             (r . 5)
             (r . 6)
             (r . 7)
             (r . 8)
             (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((n0 . #<identifier #9
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 0>
(#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>)
------------------------------------------------------------------------
1f0ac0				bits 64
1f0ac0			stub_7f1dd91f0ac0_1:
1f0ac0 83c104			add	ecx,byte 4
1f0ac3 90			nop
1f0ac4			stub_7f1dd91f0ac0_0:
1f0ac4 e8ede948ff		call	do_callback_handler
1f0ac9 b1bc760100000000
------------------------------------------------------------------------
6800b9				bits 64
6800b9 909090		fn_entry_1:
6800bc			version_6:
6800bc f20f10da			movsd	xmm3,xmm2
6800c0			version_7:
6800c0			version_8:
6800c0			version_9:
6800c0			version_10:
6800c0			version_11:
6800c0			version_12:
6800c0			version_13:
6800c0 48b8000000000000
6800c8 0040			mov	rax,4611686018427387904
6800ca 66480f6ec8		movq	xmm1,rax
6800cf 660f2fd9			comisd	xmm3,xmm1
6800d3			patchable_jump1:
6800d3 0f83eb09b700		jae	stub_7f1dd91f0ac0_0
6800d9 e9e209b700		jmp	stub_7f1dd91f0ac0_1
Patch direct stub jump at 7f1dd86800b4
  > now jump to 7f1dd86800bc
------------------------------------------------------------------------
6800b4				bits 64
6800b4 eb06			jmp	short fn_entry_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd86800d3 -> 7f1dd91f0ac0
GEN VERSION >>> #<lazy-code #10
                   ast: #f
                   generator: #<procedure #11>
                   versions: #<table #12>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #13
      stack: (#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #14
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0aa8				bits 64
1f0aa8			stub_7f1dd91f0aa8_1:
1f0aa8 83c104			add	ecx,byte 4
1f0aab 90			nop
1f0aac			stub_7f1dd91f0aa8_0:
1f0aac e805ea48ff		call	do_callback_handler
1f0ab1 21817a0100000000
------------------------------------------------------------------------
6800d9				bits 64
6800d9 909090		version_14:
6800dc			version_15:
6800dc f20f10da			movsd	xmm3,xmm2
6800e0			version_16:
6800e0			version_17:
6800e0			version_18:
6800e0			version_19:
6800e0			version_20:
6800e0			version_21:
6800e0			version_22:
6800e0 f20f10e3			movsd	xmm4,xmm3
6800e4 48b8000000000000
6800ec f03f			mov	rax,4607182418800017408
6800ee 66480f6ec0		movq	xmm0,rax
6800f3 f20f5ce0			subsd	xmm4,xmm0
6800f7			version_23:
6800f7			version_24:
6800f7 f20f10dc			movsd	xmm3,xmm4
6800fb			version_25:
6800fb			version_26:
6800fb			version_27:
6800fb			version_28:
6800fb			version_29:
6800fb			version_30:
6800fb			version_31:
6800fb 48b8000000000000
680103 0040			mov	rax,4611686018427387904
680105 66480f6ec8		movq	xmm1,rax
68010a 660f2fd9			comisd	xmm3,xmm1
68010e			patchable_jump2:
68010e 0f839809b700		jae	stub_7f1dd91f0aa8_0
680114 e98f09b700		jmp	stub_7f1dd91f0aa8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd868010e -> 7f1dd91f0aa8
GEN VERSION >>> #<lazy-code #15
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #16>
                   versions: #<table #17>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #18
      stack: (#<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #20
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0a90				bits 64
1f0a90			stub_7f1dd91f0a90_0:
1f0a90 e82fed48ff		call	do_callback_cont_handler
1f0a95 a1b6750100000000
------------------------------------------------------------------------
680114				bits 64
680114			version_32:
680114			version_33:
680114 f20f10dc			movsd	xmm3,xmm4
680118			version_34:
680118			version_35:
680118			version_36:
680118			version_37:
680118			version_38:
680118			version_39:
680118			version_40:
680118 f20f10eb			movsd	xmm5,xmm3
68011c 48b8000000000000
680124 f03f			mov	rax,4607182418800017408
680126 66480f6ec0		movq	xmm0,rax
68012b f20f5ce8			subsd	xmm5,xmm0
68012f			version_41:
68012f 4883ed10			sub	rbp,byte 16
680133 4883ec10			sub	rsp,byte 16
680137 f20f11642408		movsd	[rsp+8],xmm4
68013d f20f111424		movsd	[rsp],xmm2
680142 48897508			mov	[rbp+8],rsi
680146 48c7c0f0b67501		mov	rax,dword 24491760
68014d 48894500			mov	[rbp],rax
680151 f20f10d5			movsd	xmm2,xmm5
680155 48c7c704000000		mov	rdi,dword 4
68015c e95bffffff		jmp	dest_7f1dd86800bc_1
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #22
                   ast: #f
                   generator: #<procedure #23>
                   versions: #<table #24>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #13
      stack: (#<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #14
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
680161				bits 64
680161 909090		version_42:
680164 f20f10da			movsd	xmm3,xmm2
680168			version_43:
680168			version_44:
680168 f20f10d3			movsd	xmm2,xmm3
68016c 488b5500			mov	rdx,[rbp]
680170 4883c508			add	rbp,byte 8
680174 488b4268			mov	rax,[rdx+104]
680178 49c7c3a0010000		mov	r11,dword 416
68017f ffe0			jmp	rax
>>> patching jump at 7f1dd86800d3 -> 7f1dd8680164
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #26
      stack: (#<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 0) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #27
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
1f0ac0				bits 64
1f0ac0			stub_7f1dd91f0ac0_0:
1f0ac0 e8ffec48ff		call	do_callback_cont_handler
1f0ac5 51b8750100000000
------------------------------------------------------------------------
680181				bits 64
680181 909090		continuation_1:
680184			version_45:
680184			version_46:
680184 f20f106c2408		movsd	xmm5,[rsp+8]
68018a			version_47:
68018a			version_48:
68018a			version_49:
68018a			version_50:
68018a			version_51:
68018a			version_52:
68018a			version_53:
68018a f20f10e5			movsd	xmm4,xmm5
68018e 48b8000000000000
680196 0040			mov	rax,4611686018427387904
680198 66480f6ec0		movq	xmm0,rax
68019d f20f5ce0			subsd	xmm4,xmm0
6801a1			version_54:
6801a1 4883ed08			sub	rbp,byte 8
6801a5 4883ec08			sub	rsp,byte 8
6801a9 f20f111424		movsd	[rsp],xmm2
6801ae 48c7c090d47b01		mov	rax,dword 24892560
6801b5 48894500			mov	[rbp],rax
6801b9 f20f10d4			movsd	xmm2,xmm4
6801bd 48c7c704000000		mov	rdi,dword 4
6801c4 e9f3feffff		jmp	dest_7f1dd86800bc_2
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #28 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #29
      stack: (#<ctx-tflo #28 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #25 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #30
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
------------------------------------------------------------------------
1f0a78				bits 64
1f0a78			stub_7f1dd91f0a78_1:
1f0a78 83c104			add	ecx,byte 4
1f0a7b 90			nop
1f0a7c			stub_7f1dd91f0a78_0:
1f0a7c e835ea48ff		call	do_callback_handler
1f0a81 a1d57b0100000000
------------------------------------------------------------------------
6801c9				bits 64
6801c9 909090		continuation_2:
6801cc			version_55:
6801cc			version_56:
6801cc			version_57:
6801cc			version_58:
6801cc			version_59:
6801cc			version_60:
6801cc f20f102424		movsd	xmm4,[rsp]
6801d1 f20f58e2			addsd	xmm4,xmm2
6801d5			version_61:
6801d5			version_62:
6801d5			version_63:
6801d5 f20f10542408		movsd	xmm2,[rsp+8]
6801db			version_64:
6801db			version_65:
6801db			version_66:
6801db			version_67:
6801db			version_68:
6801db			version_69:
6801db			version_70:
6801db f20f10ea			movsd	xmm5,xmm2
6801df 48b8000000000000
6801e7 0040			mov	rax,4611686018427387904
6801e9 66480f6ec0		movq	xmm0,rax
6801ee f20f5ce8			subsd	xmm5,xmm0
6801f2			version_71:
6801f2			version_72:
6801f2 f20f10d5			movsd	xmm2,xmm5
6801f6			version_73:
6801f6			version_74:
6801f6			version_75:
6801f6			version_76:
6801f6			version_77:
6801f6			version_78:
6801f6			version_79:
6801f6 48b8000000000000
6801fe 0040			mov	rax,4611686018427387904
680200 66480f6ec8		movq	xmm1,rax
680205 660f2fd1			comisd	xmm2,xmm1
680209			patchable_jump3:
680209 0f836d08b700		jae	stub_7f1dd91f0a78_0
68020f e96408b700		jmp	stub_7f1dd91f0a78_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #31
                   ast: #f
                   generator: #<procedure #32>
                   versions: #<table #33>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #34
      stack: (#<ctx-tflo #35 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #36 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 3) (3 fr . 2) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0) (fm . 2))
      env: ((n1 . #<identifier #37
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
68020f				bits 64
68020f 90		version_80:
680210 f20f10d5			movsd	xmm2,xmm5
680214			version_81:
680214			version_82:
680214			version_83:
680214			version_84:
680214			version_85:
680214			version_86:
680214			version_87:
680214 f20f10ec			movsd	xmm5,xmm4
680218 f20f58ea			addsd	xmm5,xmm2
68021c			version_88:
68021c			version_89:
68021c f20f10d5			movsd	xmm2,xmm5
680220 488b5508			mov	rdx,[rbp+8]
680224 4883c510			add	rbp,byte 16
680228 4883c418			add	rsp,byte 24
68022c 488b4268			mov	rax,[rdx+104]
680230 49c7c3a0010000		mov	r11,dword 416
680237 ffe0			jmp	rax
>>> selector= 1
>>> prev-action= swap
GEN VERSION >>> #<lazy-code #38
                   ast: #f
                   generator: #<procedure #39>
                   versions: #<table #40>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #18
      stack: (#<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((3 fr . 2) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #20
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
------------------------------------------------------------------------
1f0aa8				bits 64
1f0aa8			stub_7f1dd91f0aa8_1:
1f0aa8 83c104			add	ecx,byte 4
1f0aab 90			nop
1f0aac			stub_7f1dd91f0aa8_0:
1f0aac e805ea48ff		call	do_callback_handler
1f0ab1 91d67b0100000000
------------------------------------------------------------------------
680239				bits 64
680239 909090		version_90:
68023c f20f10dc			movsd	xmm3,xmm4
680240			version_91:
680240			version_92:
680240			version_93:
680240 f20f10e2			movsd	xmm4,xmm2
680244			version_94:
680244			version_95:
680244			version_96:
680244			version_97:
680244			version_98:
680244			version_99:
680244			version_100:
680244 f20f10ec			movsd	xmm5,xmm4
680248 48b8000000000000
680250 0040			mov	rax,4611686018427387904
680252 66480f6ec0		movq	xmm0,rax
680257 f20f5ce8			subsd	xmm5,xmm0
68025b			version_101:
68025b			version_102:
68025b f20f10e5			movsd	xmm4,xmm5
68025f			version_103:
68025f			version_104:
68025f			version_105:
68025f			version_106:
68025f			version_107:
68025f			version_108:
68025f			version_109:
68025f 48b8000000000000
680267 0040			mov	rax,4611686018427387904
680269 66480f6ec8		movq	xmm1,rax
68026e 660f2fe1			comisd	xmm4,xmm1
680272			patchable_jump4:
680272 0f833408b700		jae	stub_7f1dd91f0aa8_0
680278 e92b08b700		jmp	stub_7f1dd91f0aa8_1
>>> patching jump at 7f1dd868010e -> 7f1dd868023c
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #41
                   ast: #f
                   generator: #<procedure #42>
                   versions: #<table #43>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #44
      stack: (#<ctx-tflo #45 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 3) (3 fr . 1) (2 fr . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #46
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
680278				bits 64
680278			version_110:
680278 f20f10e5			movsd	xmm4,xmm5
68027c			version_111:
68027c			version_112:
68027c			version_113:
68027c			version_114:
68027c			version_115:
68027c			version_116:
68027c			version_117:
68027c f20f10eb			movsd	xmm5,xmm3
680280 f20f58ec			addsd	xmm5,xmm4
680284			version_118:
680284			version_119:
680284 f20f10d5			movsd	xmm2,xmm5
680288 488b5500			mov	rdx,[rbp]
68028c 4883c508			add	rbp,byte 8
680290 488b4268			mov	rax,[rdx+104]
680294 49c7c3a0010000		mov	r11,dword 416
68029b ffe0			jmp	rax
>>> selector= 0
>>> prev-action= no-swap
GEN VERSION >>> #<lazy-code #47
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #48>
                   versions: #<table #49>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #34
      stack: (#<ctx-tflo #35 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #36 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 3) (3 fr . 2) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ((fm . 0) (fm . 2))
      env: ((n1 . #<identifier #37
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
------------------------------------------------------------------------
1f0a78				bits 64
1f0a78			stub_7f1dd91f0a78_0:
1f0a78 e847ed48ff		call	do_callback_cont_handler
1f0a7d b1bc760100000000
------------------------------------------------------------------------
68029d				bits 64
68029d 909090		version_120:
6802a0			version_121:
6802a0 f20f10d5			movsd	xmm2,xmm5
6802a4			version_122:
6802a4			version_123:
6802a4			version_124:
6802a4			version_125:
6802a4			version_126:
6802a4			version_127:
6802a4			version_128:
6802a4 f20f10da			movsd	xmm3,xmm2
6802a8 48b8000000000000
6802b0 f03f			mov	rax,4607182418800017408
6802b2 66480f6ec0		movq	xmm0,rax
6802b7 f20f5cd8			subsd	xmm3,xmm0
6802bb			version_129:
6802bb 4883ed08			sub	rbp,byte 8
6802bf f20f116c2410		movsd	[rsp+16],xmm5
6802c5 f20f112424		movsd	[rsp],xmm4
6802ca 48c7c0e0d67b01		mov	rax,dword 24893152
6802d1 48894500			mov	[rbp],rax
6802d5 f20f10d3			movsd	xmm2,xmm3
6802d9 48c7c704000000		mov	rdi,dword 4
6802e0 e9d7fdffff		jmp	dest_7f1dd86800bc_3
>>> patching jump at 7f1dd8680209 -> 7f1dd86802a0
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tflo #50 sym: float mem-allocated?: #t is-cst: #f cst: #f> and ctx:
#<ctx #51
      stack: (#<ctx-tflo #50 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #35 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #36 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 0) (4 fm . 0) (3 fm . 2) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 8)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #52
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 3
      fn-num: 0>
------------------------------------------------------------------------
1f0a60				bits 64
1f0a60			stub_7f1dd91f0a60_0:
1f0a60 e85fed48ff		call	do_callback_cont_handler
1f0a65 51b6750100000000
------------------------------------------------------------------------
6802e5				bits 64
6802e5 909090		continuation_3:
6802e8			version_130:
6802e8			version_131:
6802e8			version_132:
6802e8 4883ed08			sub	rbp,byte 8
6802ec 4883ec08			sub	rsp,byte 8
6802f0 f20f111424		movsd	[rsp],xmm2
6802f5 48c7c0a0d77b01		mov	rax,dword 24893344
6802fc 48894500			mov	[rbp],rax
680300 48c7c300000000		mov	rbx,dword 0
680307 49c7c304000000		mov	r11,dword 4
68030e 48c7c704000000		mov	rdi,dword 4
680315			stub_load_2:
680315 e9da07b700		jmp	dest_7f1dd91f0af4_2
GEN VERSION FN#<lazy-code #2
                 ast: #f
                 generator: #<procedure #3>
                 versions: #<table #4>
                 flags: (entry)
                 lco-true: #f
                 lco-false: #f
                 generic-ctx: #f
                 generic-vers: #f>
 >>> #<ctx #53
           stack: (#<ctx-tint #54
                      sym: integer
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>
                   #<ctx-tclo #55
                      sym: closure
                      mem-allocated?: #t
                      is-cst: #f
                      cst: #f>
                   #<ctx-tret #56
                      sym: retaddr
                      mem-allocated?: #f
                      is-cst: #f
                      cst: #f>)
           slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
           free-regs:
            ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
           free-mems: ()
           free-fregs:
            ((fr . 0)
             (fr . 1)
             (fr . 2)
             (fr . 3)
             (fr . 4)
             (fr . 5)
             (fr . 6)
             (fr . 7)
             (fr . 8)
             (fr . 9)
             (fr . 10)
             (fr . 11)
             (fr . 12)
             (fr . 13))
           free-fmems: ()
           env: ((n0 . #<identifier #57
                          kind: local
                          sslots: (2)
                          flags: ()
                          stype: #f
                          cloc: #f
                          cst: #f
                          thisid: #f>))
           nb-actual: 1
           nb-args: 1
           fs: 1
           ffs: 0
           fn-num: 0>
(#<ctx-tint #54 sym: integer mem-allocated?: #f is-cst: #f cst: #f>)
------------------------------------------------------------------------
1f0a48				bits 64
1f0a48			stub_7f1dd91f0a48_1:
1f0a48 83c104			add	ecx,byte 4
1f0a4b 90			nop
1f0a4c			stub_7f1dd91f0a48_0:
1f0a4c e865ea48ff		call	do_callback_handler
1f0a51 01b8750100000000
------------------------------------------------------------------------
68031a				bits 64
68031a 9090		fn_entry_2:
68031c			version_133:
68031c 4989df			mov	r15,rbx
68031f			version_134:
68031f			version_135:
68031f			version_136:
68031f			version_137:
68031f			version_138:
68031f			version_139:
68031f 4c89f8			mov	rax,r15
680322 48c1e802			shr	rax,2
680326 f2480f2ac0		cvtsi2sd	xmm0,rax
68032b 48b8000000000000
680333 0040			mov	rax,4611686018427387904
680335 66480f6ec8		movq	xmm1,rax
68033a 660f2fc1			comisd	xmm0,xmm1
68033e			patchable_jump5:
68033e 0f830807b700		jae	stub_7f1dd91f0a48_0
680344 e9ff06b700		jmp	stub_7f1dd91f0a48_1
Patch direct stub jump at 7f1dd8680315
  > now jump to 7f1dd868031c
------------------------------------------------------------------------
680315				bits 64
680315 eb05			jmp	short fn_entry_2
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #22
                   ast: #f
                   generator: #<procedure #23>
                   versions: #<table #24>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #58
      stack: (#<ctx-tint #54
                 sym: integer
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tclo #55
                 sym: closure
                 mem-allocated?: #t
                 is-cst: #f
                 cst: #f>
              #<ctx-tret #56
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((2 r . 0) (1 r . 2) (0 m . 0))
      free-regs:
       ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 8) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #59
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 1
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
680344				bits 64
680344			version_140:
680344 4989de			mov	r14,rbx
680347			version_141:
680347			version_142:
680347 488b5500			mov	rdx,[rbp]
68034b 4883c508			add	rbp,byte 8
68034f 488b4208			mov	rax,[rdx+8]
680353 49c7c320000000		mov	r11,dword 32
68035a ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tint #60 sym: integer mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #61
      stack: (#<ctx-tint #60
                 sym: integer
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #50 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #35 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #36 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 8)
        (5 fm . 3)
        (4 fm . 0)
        (3 fm . 2)
        (2 fm . 1)
        (1 m . 1)
        (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #52
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 4
      fn-num: 0>
------------------------------------------------------------------------
1f0a30				bits 64
1f0a30			stub_7f1dd91f0a30_1:
1f0a30 83c104			add	ecx,byte 4
1f0a33 90			nop
1f0a34			stub_7f1dd91f0a30_0:
1f0a34 e87dea48ff		call	do_callback_handler
1f0a39 61d87b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
68035c				bits 64
68035c			continuation_4:
68035c			version_143:
68035c			version_144:
68035c			version_145:
68035c			version_146:
68035c			version_147:
68035c f20f101424		movsd	xmm2,[rsp]
680361 4c89f0			mov	rax,r14
680364 48c1f802			sar	rax,2
680368 f2480f2ac0		cvtsi2sd	xmm0,rax
68036d f20f58d0			addsd	xmm2,xmm0
680371			version_148:
680371			merge_1:
680371			alloc_begin_1:
680371 4983c110			add	r9,byte 16
680375 48b830e06bdc1d7f
68037d 0000			mov	rax,139766228836400
68037f 4c3b08			cmp	r9,[rax]
680382 49c741f0f0080000		mov	qword [r9-16],dword 2288
68038a f2410f1151f8		movsd	[r9-8],xmm2
680390 498d41f1			lea	rax,[r9-15]
680394 4989c6			mov	r14,rax
680397			alloc_begin_2:
680397 4983c110			add	r9,byte 16
68039b 48b830e06bdc1d7f
6803a3 0000			mov	rax,139766228836400
6803a5 4c3b08			cmp	r9,[rax]
6803a8 49c741f0f0080000		mov	qword [r9-16],dword 2288
6803b0 488b442408		mov	rax,[rsp+8]
6803b5 498941f8			mov	[r9-8],rax
6803b9 498d41f1			lea	rax,[r9-15]
6803bd 4889c6			mov	rsi,rax
6803c0			alloc_begin_3:
6803c0 4983c110			add	r9,byte 16
6803c4 48b830e06bdc1d7f
6803cc 0000			mov	rax,139766228836400
6803ce 4c3b08			cmp	r9,[rax]
6803d1 49c741f0f0080000		mov	qword [r9-16],dword 2288
6803d9 488b442410		mov	rax,[rsp+16]
6803de 498941f8			mov	[r9-8],rax
6803e2 498d41f1			lea	rax,[r9-15]
6803e6 4889c3			mov	rbx,rax
6803e9 4883c420			add	rsp,byte 32
6803ed			version_149:
6803ed			version_150:
6803ed 48c7c003000000		mov	rax,dword 3
6803f4 4821f0			and	rax,rsi
6803f7			patchable_jump6:
6803f7 0f843706b700		je	stub_7f1dd91f0a30_0
6803fd e92e06b700		jmp	stub_7f1dd91f0a30_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #62
                   ast: #f
                   generator: #<procedure #63>
                   versions: #<table #64>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #65
      stack: (#<ctx-tunk #66
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #67
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #68
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #69
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #70
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 r . 2) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0a18				bits 64
1f0a18			stub_7f1dd91f0a18_1:
1f0a18 83c104			add	ecx,byte 4
1f0a1b 90			nop
1f0a1c			stub_7f1dd91f0a18_0:
1f0a1c e895ea48ff		call	do_callback_handler
1f0a21 01d97b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
6803fd				bits 64
6803fd 909090		version_151:
680400 4889f0			mov	rax,rsi
680403 4883e003			and	rax,byte 3
680407 4883f801			cmp	rax,byte 1
68040b 7517			jne	short patchable_jump7
68040d 488b46ff			mov	rax,[rsi-1]
680411 4825f8000000		and	rax,248
680417 483df0000000		cmp	rax,240
68041d 7505			jne	short patchable_jump7
68041f f20f105607		movsd	xmm2,[rsi+7]
680424			patchable_jump7:
680424 0f84f205b700		je	stub_7f1dd91f0a18_0
68042a e9e905b700		jmp	stub_7f1dd91f0a18_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd8680424 -> 7f1dd91f0a18
GEN VERSION >>> #<lazy-code #71
                   ast: #f
                   generator: #<procedure #72>
                   versions: #<table #73>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #74
      stack: (#<ctx-tunk #66
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #75 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #68
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #69
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #70
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fr . 0) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2) (r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0a00				bits 64
1f0a00			stub_7f1dd91f0a00_1:
1f0a00 83c104			add	ecx,byte 4
1f0a03 90			nop
1f0a04			stub_7f1dd91f0a00_0:
1f0a04 e8adea48ff		call	do_callback_handler
1f0a09 a1d97b0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
68042a				bits 64
68042a 9090		version_152:
68042c 48c7c003000000		mov	rax,dword 3
680433 4c21f0			and	rax,r14
680436			patchable_jump8:
680436 0f84c805b700		je	stub_7f1dd91f0a00_0
68043c e9bf05b700		jmp	stub_7f1dd91f0a00_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #76
                   ast: #f
                   generator: #<procedure #77>
                   versions: #<table #78>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #74
      stack: (#<ctx-tunk #66
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #75 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #68
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #69
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #70
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fr . 0) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2) (r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f09e8				bits 64
1f09e8			stub_7f1dd91f09e8_1:
1f09e8 83c104			add	ecx,byte 4
1f09eb 90			nop
1f09ec			stub_7f1dd91f09e8_0:
1f09ec e8c5ea48ff		call	do_callback_handler
1f09f1 41da7b0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
68043c				bits 64
68043c			version_153:
68043c 4c89f0			mov	rax,r14
68043f 4883e003			and	rax,byte 3
680443 4883f801			cmp	rax,byte 1
680447 7518			jne	short patchable_jump9
680449 498b46ff			mov	rax,[r14-1]
68044d 4825f8000000		and	rax,248
680453 483df0000000		cmp	rax,240
680459 7506			jne	short patchable_jump9
68045b f2410f105e07		movsd	xmm3,[r14+7]
680461			patchable_jump9:
680461 0f848505b700		je	stub_7f1dd91f09e8_0
680467 e97c05b700		jmp	stub_7f1dd91f09e8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd8680461 -> 7f1dd91f09e8
GEN VERSION >>> #<lazy-code #79
                   ast: #f
                   generator: #<procedure #80>
                   versions: #<table #81>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #82
      stack: (#<ctx-tflo #83 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #75 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #68
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #69
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #70
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 fr . 0) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
680467				bits 64
680467 90		version_154:
680468 f20f10e2			movsd	xmm4,xmm2
68046c f20f58e3			addsd	xmm4,xmm3
680470			merge_2:
680470			alloc_begin_4:
680470 4983c110			add	r9,byte 16
680474 48b830e06bdc1d7f
68047c 0000			mov	rax,139766228836400
68047e 4c3b08			cmp	r9,[rax]
680481 49c741f0f0080000		mov	qword [r9-16],dword 2288
680489 f2410f1161f8		movsd	[r9-8],xmm4
68048f 498d41f1			lea	rax,[r9-15]
680493 4989c6			mov	r14,rax
680496			version_155:
680496			merge_3:
680496			version_156:
680496 488b5508			mov	rdx,[rbp+8]
68049a 4883c510			add	rbp,byte 16
68049e 488b4270			mov	rax,[rdx+112]
6804a2 49c7c3c0010000		mov	r11,dword 448
6804a9 ffe0			jmp	rax
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #84 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #85
      stack: (#<ctx-tunk #84
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 r . 8) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #27
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 2
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
1f09d0				bits 64
1f09d0			stub_7f1dd91f09d0_0:
1f09d0 e8efed48ff		call	do_callback_cont_handler
1f09d5 31db7b0100000000
------------------------------------------------------------------------
6804ab				bits 64
6804ab 90		continuation_5:
6804ac			version_157:
6804ac			version_158:
6804ac f20f106c2408		movsd	xmm5,[rsp+8]
6804b2			version_159:
6804b2			version_160:
6804b2			version_161:
6804b2			version_162:
6804b2			version_163:
6804b2			version_164:
6804b2			version_165:
6804b2 f20f10d5			movsd	xmm2,xmm5
6804b6 48b8000000000000
6804be 0040			mov	rax,4611686018427387904
6804c0 66480f6ec0		movq	xmm0,rax
6804c5 f20f5cd0			subsd	xmm2,xmm0
6804c9			version_166:
6804c9 4883ed10			sub	rbp,byte 16
6804cd 4c897508			mov	[rbp+8],r14
6804d1 48c7c080db7b01		mov	rax,dword 24894336
6804d8 48894500			mov	[rbp],rax
6804dc 48c7c704000000		mov	rdi,dword 4
6804e3 e9d4fbffff		jmp	dest_7f1dd86800bc_4
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #86 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #87
      stack: (#<ctx-tunk #86
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #84
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 m . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #88
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
1f09b8				bits 64
1f09b8			stub_7f1dd91f09b8_1:
1f09b8 83c104			add	ecx,byte 4
1f09bb 90			nop
1f09bc			stub_7f1dd91f09b8_0:
1f09bc e8f5ea48ff		call	do_callback_handler
1f09c1 91dc7b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
6804e8				bits 64
6804e8			continuation_6:
6804e8			version_167:
6804e8			version_168:
6804e8 48c7c003000000		mov	rax,dword 3
6804ef 48234500			and	rax,[rbp]
6804f3			patchable_jump10:
6804f3 0f84c304b700		je	stub_7f1dd91f09b8_0
6804f9 e9ba04b700		jmp	stub_7f1dd91f09b8_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #89
                   ast: #f
                   generator: #<procedure #90>
                   versions: #<table #91>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #87
      stack: (#<ctx-tunk #86
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #84
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 m . 2) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #88
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f09a0				bits 64
1f09a0			stub_7f1dd91f09a0_1:
1f09a0 83c104			add	ecx,byte 4
1f09a3 90			nop
1f09a4			stub_7f1dd91f09a0_0:
1f09a4 e80deb48ff		call	do_callback_handler
1f09a9 31dd7b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
6804f9				bits 64
6804f9 909090		version_169:
6804fc 488b4500			mov	rax,[rbp]
680500 4883e003			and	rax,byte 3
680504 4883f801			cmp	rax,byte 1
680508 751f			jne	short patchable_jump11
68050a 488b4500			mov	rax,[rbp]
68050e 488b40ff			mov	rax,[rax-1]
680512 4825f8000000		and	rax,248
680518 483df0000000		cmp	rax,240
68051e 7509			jne	short patchable_jump11
680520 488b4500			mov	rax,[rbp]
680524 f20f105007		movsd	xmm2,[rax+7]
680529			patchable_jump11:
680529 0f847504b700		je	stub_7f1dd91f09a0_0
68052f e96c04b700		jmp	stub_7f1dd91f09a0_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd8680529 -> 7f1dd91f09a0
GEN VERSION >>> #<lazy-code #92
                   ast: #f
                   generator: #<procedure #93>
                   versions: #<table #94>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #95
      stack: (#<ctx-tunk #86
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #96 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 r . 8) (4 fr . 0) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #88
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0988				bits 64
1f0988			stub_7f1dd91f0988_1:
1f0988 83c104			add	ecx,byte 4
1f098b 90			nop
1f098c			stub_7f1dd91f0988_0:
1f098c e825eb48ff		call	do_callback_handler
1f0991 d1dd7b0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
68052f				bits 64
68052f 90		version_170:
680530 48c7c003000000		mov	rax,dword 3
680537 4c21f0			and	rax,r14
68053a			patchable_jump12:
68053a 0f844c04b700		je	stub_7f1dd91f0988_0
680540 e94304b700		jmp	stub_7f1dd91f0988_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #97
                   ast: #f
                   generator: #<procedure #98>
                   versions: #<table #99>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #95
      stack: (#<ctx-tunk #86
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #96 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 r . 8) (4 fr . 0) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 3)
        (fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #88
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0970				bits 64
1f0970			stub_7f1dd91f0970_1:
1f0970 83c104			add	ecx,byte 4
1f0973 90			nop
1f0974			stub_7f1dd91f0970_0:
1f0974 e83deb48ff		call	do_callback_handler
1f0979 21817a0100000000
>>> Gen dynamic type test at index 0
------------------------------------------------------------------------
680540				bits 64
680540			version_171:
680540 4c89f0			mov	rax,r14
680543 4883e003			and	rax,byte 3
680547 4883f801			cmp	rax,byte 1
68054b 7518			jne	short patchable_jump13
68054d 498b46ff			mov	rax,[r14-1]
680551 4825f8000000		and	rax,248
680557 483df0000000		cmp	rax,240
68055d 7506			jne	short patchable_jump13
68055f f2410f106e07		movsd	xmm5,[r14+7]
680565			patchable_jump13:
680565 0f840904b700		je	stub_7f1dd91f0970_0
68056b e90004b700		jmp	stub_7f1dd91f0970_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd8680565 -> 7f1dd91f0970
GEN VERSION >>> #<lazy-code #100
                   ast: #f
                   generator: #<procedure #101>
                   versions: #<table #102>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #103
      stack: (#<ctx-tflo #104 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #96 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #19 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #6 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tclo #7 sym: closure mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tret #8
                 sym: retaddr
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((5 fr . 3) (4 fr . 0) (3 fm . 0) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 8)
        (r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 2)
        (fr . 1)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #88
                     kind: local
                     sslots: (3)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>)
            (n0 . #<identifier #21
                     kind: local
                     sslots: (2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0958				bits 64
1f0958			stub_7f1dd91f0958_1:
1f0958 83c104			add	ecx,byte 4
1f095b 90			nop
1f095c			stub_7f1dd91f0958_0:
1f095c e855eb48ff		call	do_callback_handler
1f0961 319a7a0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
68056b				bits 64
68056b 90		version_172:
68056c f20f10e2			movsd	xmm4,xmm2
680570 f20f58e5			addsd	xmm4,xmm5
680574			merge_4:
680574			alloc_begin_5:
680574 4983c110			add	r9,byte 16
680578 48b830e06bdc1d7f
680580 0000			mov	rax,139766228836400
680582 4c3b08			cmp	r9,[rax]
680585 49c741f0f0080000		mov	qword [r9-16],dword 2288
68058d f2410f1161f8		movsd	[r9-8],xmm4
680593 498d41f1			lea	rax,[r9-15]
680597 4989c6			mov	r14,rax
68059a			alloc_begin_6:
68059a 4983c110			add	r9,byte 16
68059e 48b830e06bdc1d7f
6805a6 0000			mov	rax,139766228836400
6805a8 4c3b08			cmp	r9,[rax]
6805ab 49c741f0f0080000		mov	qword [r9-16],dword 2288
6805b3 488b442408		mov	rax,[rsp+8]
6805b8 498941f8			mov	[r9-8],rax
6805bc 498d41f1			lea	rax,[r9-15]
6805c0 4889c6			mov	rsi,rax
6805c3			alloc_begin_7:
6805c3 4983c110			add	r9,byte 16
6805c7 48b830e06bdc1d7f
6805cf 0000			mov	rax,139766228836400
6805d1 4c3b08			cmp	r9,[rax]
6805d4 49c741f0f0080000		mov	qword [r9-16],dword 2288
6805dc 488b0424			mov	rax,[rsp]
6805e0 498941f8			mov	[r9-8],rax
6805e4 498d41f1			lea	rax,[r9-15]
6805e8 4889c3			mov	rbx,rax
6805eb 4883c410			add	rsp,byte 16
6805ef			version_173:
6805ef			merge_5:
6805ef			version_174:
6805ef			version_175:
6805ef 4889de			mov	rsi,rbx
6805f2			version_176:
6805f2			version_177:
6805f2			version_178:
6805f2 48c7c003000000		mov	rax,dword 3
6805f9 4821f0			and	rax,rsi
6805fc			patchable_jump14:
6805fc 0f845a03b700		je	stub_7f1dd91f0958_0
680602 e95103b700		jmp	stub_7f1dd91f0958_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #105
                   ast: #f
                   generator: #<procedure #106>
                   versions: #<table #107>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #108
      stack: (#<ctx-tflo #109 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tunk #110
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #110
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 . #f) (4 r . 2) (3 r . 8) (2 r . 0) (1 m . 1) (0 m . 0))
      free-regs: ((r . 1) (r . 3) (r . 4) (r . 5) (r . 6) (r . 7) (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #114
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0940				bits 64
1f0940			stub_7f1dd91f0940_1:
1f0940 83c104			add	ecx,byte 4
1f0943 90			nop
1f0944			stub_7f1dd91f0940_0:
1f0944 e86deb48ff		call	do_callback_handler
1f0949 d19a7a0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
680602				bits 64
680602 9090		version_179:
680604 4889f0			mov	rax,rsi
680607 4883e003			and	rax,byte 3
68060b 4883f801			cmp	rax,byte 1
68060f 7517			jne	short patchable_jump15
680611 488b46ff			mov	rax,[rsi-1]
680615 4825f8000000		and	rax,248
68061b 483df0000000		cmp	rax,240
680621 7505			jne	short patchable_jump15
680623 f20f105607		movsd	xmm2,[rsi+7]
680628			patchable_jump15:
680628 0f841603b700		je	stub_7f1dd91f0940_0
68062e e90d03b700		jmp	stub_7f1dd91f0940_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd8680628 -> 7f1dd91f0940
GEN VERSION >>> #<lazy-code #115
                   ast: #f
                   generator: #<procedure #116>
                   versions: #<table #117>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #118
      stack: (#<ctx-tflo #109 sym: float mem-allocated?: #t is-cst: #t cst: 2.>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 . #f) (4 fr . 0) (3 r . 8) (2 fr . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n0 . #<identifier #114
                     kind: local
                     sslots: (4 2)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0928				bits 64
1f0928			stub_7f1dd91f0928_1:
1f0928 83c104			add	ecx,byte 4
1f092b 90			nop
1f092c			stub_7f1dd91f0928_0:
1f092c e885eb48ff		call	do_callback_handler
1f0931 a1d57b0100000000
------------------------------------------------------------------------
68062e				bits 64
68062e 9090		version_180:
680630			version_181:
680630			version_182:
680630 f20f10da			movsd	xmm3,xmm2
680634 48b8000000000000
68063c 0040			mov	rax,4611686018427387904
68063e 66480f6ec0		movq	xmm0,rax
680643 f20f5cd8			subsd	xmm3,xmm0
680647			version_183:
680647			version_184:
680647 f20f10e3			movsd	xmm4,xmm3
68064b			version_185:
68064b			version_186:
68064b			version_187:
68064b			version_188:
68064b			version_189:
68064b			version_190:
68064b			version_191:
68064b 48b8000000000000
680653 0040			mov	rax,4611686018427387904
680655 66480f6ec8		movq	xmm1,rax
68065a 660f2fe1			comisd	xmm4,xmm1
68065e			patchable_jump16:
68065e 0f83c802b700		jae	stub_7f1dd91f0928_0
680664 e9bf02b700		jmp	stub_7f1dd91f0928_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd868065e -> 7f1dd91f0928
GEN VERSION >>> #<lazy-code #120
                   ast: (($$atom fibfp) (($$atom -) ($$atom n1) ($$atom 1.)))
                   generator: #<procedure #121>
                   versions: #<table #122>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #123
      stack: (#<ctx-tflo #124 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((4 fr . 1) (3 r . 8) (2 fr . 0) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 2))
      free-fregs:
       ((fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #125
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 0
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f0910				bits 64
1f0910			stub_7f1dd91f0910_0:
1f0910 e8afee48ff		call	do_callback_cont_handler
1f0915 11bc760100000000
------------------------------------------------------------------------
680664				bits 64
680664			version_192:
680664			version_193:
680664 f20f10e3			movsd	xmm4,xmm3
680668			version_194:
680668			version_195:
680668			version_196:
680668			version_197:
680668			version_198:
680668			version_199:
680668			version_200:
680668 f20f10ec			movsd	xmm5,xmm4
68066c 48b8000000000000
680674 f03f			mov	rax,4607182418800017408
680676 66480f6ec0		movq	xmm0,rax
68067b f20f5ce8			subsd	xmm5,xmm0
68067f			version_201:
68067f 4883ed08			sub	rbp,byte 8
680683 4883ec10			sub	rsp,byte 16
680687 f20f115c2408		movsd	[rsp+8],xmm3
68068d 4c897508			mov	[rbp+8],r14
680691 f20f111424		movsd	[rsp],xmm2
680696 48c7c070de7b01		mov	rax,dword 24895088
68069d 48894500			mov	[rbp],rax
6806a1 f20f10d5			movsd	xmm2,xmm5
6806a5 48c7c704000000		mov	rdi,dword 4
6806ac e90bfaffff		jmp	dest_7f1dd86800bc_5
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #126 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #127
      stack: (#<ctx-tunk #126
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #124 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((5 r . 8) (4 fm . 0) (3 m . 2) (2 fm . 1) (1 m . 1) (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #128
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 3
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
1f08f8				bits 64
1f08f8			stub_7f1dd91f08f8_0:
1f08f8 e8c7ee48ff		call	do_callback_cont_handler
1f08fd 01bd760100000000
------------------------------------------------------------------------
6806b1				bits 64
6806b1 909090		continuation_7:
6806b4			version_202:
6806b4			version_203:
6806b4			version_204:
6806b4 4883ed10			sub	rbp,byte 16
6806b8 4c897508			mov	[rbp+8],r14
6806bc 48c7c030df7b01		mov	rax,dword 24895280
6806c3 48894500			mov	[rbp],rax
6806c7 48c7c300000000		mov	rbx,dword 0
6806ce 48c7c704000000		mov	rdi,dword 4
6806d5 e942fcffff		jmp	dest_7f1dd868031c_1
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tint #129 sym: integer mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #130
      stack: (#<ctx-tint #129
                 sym: integer
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #126
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #124 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 8)
        (5 m . 3)
        (4 fm . 0)
        (3 m . 2)
        (2 fm . 1)
        (1 m . 1)
        (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #128
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 2
      fn-num: 0>
------------------------------------------------------------------------
1f08e0				bits 64
1f08e0			stub_7f1dd91f08e0_1:
1f08e0 83c104			add	ecx,byte 4
1f08e3 90			nop
1f08e4			stub_7f1dd91f08e0_0:
1f08e4 e8cdeb48ff		call	do_callback_handler
1f08e9 51d57b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
6806da				bits 64
6806da 9090		continuation_8:
6806dc			version_205:
6806dc			version_206:
6806dc 48c7c003000000		mov	rax,dword 3
6806e3 48234500			and	rax,[rbp]
6806e7			patchable_jump17:
6806e7 0f84f701b700		je	stub_7f1dd91f08e0_0
6806ed e9ee01b700		jmp	stub_7f1dd91f08e0_1
>>> selector= 1
>>> prev-action= #f
GEN VERSION >>> #<lazy-code #131
                   ast: #f
                   generator: #<procedure #132>
                   versions: #<table #133>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #130
      stack: (#<ctx-tint #129
                 sym: integer
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #126
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #124 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 8)
        (5 m . 3)
        (4 fm . 0)
        (3 m . 2)
        (2 fm . 1)
        (1 m . 1)
        (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 3)
        (fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #128
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
1f08c8				bits 64
1f08c8			stub_7f1dd91f08c8_1:
1f08c8 83c104			add	ecx,byte 4
1f08cb 90			nop
1f08cc			stub_7f1dd91f08c8_0:
1f08cc e8e5eb48ff		call	do_callback_handler
1f08d1 b1d87b0100000000
>>> Gen dynamic type test at index 1
------------------------------------------------------------------------
6806ed				bits 64
6806ed 909090		version_207:
6806f0 488b4500			mov	rax,[rbp]
6806f4 4883e003			and	rax,byte 3
6806f8 4883f801			cmp	rax,byte 1
6806fc 751f			jne	short patchable_jump18
6806fe 488b4500			mov	rax,[rbp]
680702 488b40ff			mov	rax,[rax-1]
680706 4825f8000000		and	rax,248
68070c 483df0000000		cmp	rax,240
680712 7509			jne	short patchable_jump18
680714 488b4500			mov	rax,[rbp]
680718 f20f106807		movsd	xmm5,[rax+7]
68071d			patchable_jump18:
68071d 0f84a901b700		je	stub_7f1dd91f08c8_0
680723 e9a001b700		jmp	stub_7f1dd91f08c8_1
>>> selector= 0
>>> prev-action= #f
>>> swapping-branches
>>> patching jump at 7f1dd868071d -> 7f1dd91f08c8
GEN VERSION >>> #<lazy-code #134
                   ast: #f
                   generator: #<procedure #135>
                   versions: #<table #136>
                   flags: ()
                   lco-true: #f
                   lco-false: #f
                   generic-ctx: #f
                   generic-vers: #f>
#<ctx #137
      stack: (#<ctx-tint #129
                 sym: integer
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #138 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tflo #124 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #111
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tflo #119 sym: float mem-allocated?: #t is-cst: #f cst: #f>
              #<ctx-tunk #112
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>
              #<ctx-tunk #113
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc:
       ((6 r . 8)
        (5 fr . 3)
        (4 fm . 0)
        (3 m . 2)
        (2 fm . 1)
        (1 m . 1)
        (0 m . 0))
      free-regs:
       ((r . 2)
        (r . 0)
        (r . 1)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ((m . 3))
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ((n1 . #<identifier #128
                     kind: local
                     sslots: (4)
                     flags: ()
                     stype: #f
                     cloc: #f
                     cst: #f
                     thisid: #f>))
      nb-actual: 1
      nb-args: 1
      fs: 4
      ffs: 2
      fn-num: 0>
>>> fall-through-optimization
------------------------------------------------------------------------
680723				bits 64
680723 90		version_208:
680724			version_209:
680724 f20f10d5			movsd	xmm2,xmm5
680728 4c89f0			mov	rax,r14
68072b 48c1f802			sar	rax,2
68072f f2480f2ac0		cvtsi2sd	xmm0,rax
680734 f20f58d0			addsd	xmm2,xmm0
680738			version_210:
680738			merge_6:
680738			alloc_begin_8:
680738 4983c110			add	r9,byte 16
68073c 48b830e06bdc1d7f
680744 0000			mov	rax,139766228836400
680746 4c3b08			cmp	r9,[rax]
680749 49c741f0f0080000		mov	qword [r9-16],dword 2288
680751 f2410f1151f8		movsd	[r9-8],xmm2
680757 498d41f1			lea	rax,[r9-15]
68075b 4989c6			mov	r14,rax
68075e 488b7508			mov	rsi,[rbp+8]
680762			alloc_begin_9:
680762 4983c110			add	r9,byte 16
680766 48b830e06bdc1d7f
68076e 0000			mov	rax,139766228836400
680770 4c3b08			cmp	r9,[rax]
680773 49c741f0f0080000		mov	qword [r9-16],dword 2288
68077b 488b0424			mov	rax,[rsp]
68077f 498941f8			mov	[r9-8],rax
680783 498d41f1			lea	rax,[r9-15]
680787 4889c3			mov	rbx,rax
68078a 4883c510			add	rbp,byte 16
68078e 4883c410			add	rsp,byte 16
680792 e956fcffff		jmp	version_149
GEN VERSION CONTINUATION (CR) >>> Patch table with type #<ctx-tunk #139 sym: unknown mem-allocated?: #f is-cst: #f cst: #f> and ctx:
#<ctx #140
      stack: (#<ctx-tunk #139
                 sym: unknown
                 mem-allocated?: #f
                 is-cst: #f
                 cst: #f>)
      slot-loc: ((0 r . 8))
      free-regs:
       ((r . 0)
        (r . 1)
        (r . 2)
        (r . 3)
        (r . 4)
        (r . 5)
        (r . 6)
        (r . 7)
        (r . 9))
      free-mems: ()
      free-fregs:
       ((fr . 0)
        (fr . 1)
        (fr . 2)
        (fr . 3)
        (fr . 4)
        (fr . 5)
        (fr . 6)
        (fr . 7)
        (fr . 8)
        (fr . 9)
        (fr . 10)
        (fr . 11)
        (fr . 12)
        (fr . 13))
      free-fmems: ()
      env: ()
      nb-actual: #f
      nb-args: -1
      fs: 0
      ffs: 0
      fn-num: #f>
------------------------------------------------------------------------
680797				bits 64
680797 90		continuation_9:
680798			version_211:
680798			version_212:
680798 4c89f0			mov	rax,r14
68079b 4883ed08			sub	rbp,byte 8
68079f 48894500			mov	[rbp],rax
6807a3 48c7c004000000		mov	rax,dword 4
6807aa 4883ed08			sub	rbp,byte 8
6807ae 48894500			mov	[rbp],rax
6807b2 48c7c0410cbb00		mov	rax,dword 12258369
6807b9 4883ed08			sub	rbp,byte 8
6807bd 48894500			mov	[rbp],rax
6807c1 e869ebffff		call	gambit_call_handler
6807c6 4c8b7500			mov	r14,[rbp]
6807ca 4883c508			add	rbp,byte 8
6807ce 4883c510			add	rbp,byte 16
6807d2			version_213:
6807d2 4c890c2530defa00		mov	[+16440880],r9
6807da 4c89f0			mov	rax,r14
6807dd 415f			pop	r15
6807df 415e			pop	r14
6807e1 415d			pop	r13
6807e3 415c			pop	r12
6807e5 415b			pop	r11
6807e7 415a			pop	r10
6807e9 4159			pop	r9
6807eb 4158			pop	r8
6807ed 5f			pop	rdi
6807ee 5e			pop	rsi
6807ef 5d			pop	rbp
6807f0 5a			pop	rdx
6807f1 59			pop	rcx
6807f2 5b			pop	rbx
6807f3 58			pop	rax
6807f4 f20f100424		movsd	xmm0,[rsp]
6807f9 f20f104c2408		movsd	xmm1,[rsp+8]
6807ff f20f10542410		movsd	xmm2,[rsp+16]
680805 f20f105c2418		movsd	xmm3,[rsp+24]
68080b f20f10642420		movsd	xmm4,[rsp+32]
680811 f20f106c2428		movsd	xmm5,[rsp+40]
680817 f20f10742430		movsd	xmm6,[rsp+48]
68081d f20f107c2438		movsd	xmm7,[rsp+56]
680823 f2440f10442440		movsd	xmm8,[rsp+64]
68082a f2440f104c2448		movsd	xmm9,[rsp+72]
680831 f2440f10542450		movsd	xmm10,[rsp+80]
680838 f2440f105c2458		movsd	xmm11,[rsp+88]
68083f f2440f10642460		movsd	xmm12,[rsp+96]
680846 f2440f106c2468		movsd	xmm13,[rsp+104]
68084d f2440f10742470		movsd	xmm14,[rsp+112]
680854 f2440f107c2478		movsd	xmm15,[rsp+120]
68085b 4881c480000000		add	rsp,128
680862 c3			ret
10.
